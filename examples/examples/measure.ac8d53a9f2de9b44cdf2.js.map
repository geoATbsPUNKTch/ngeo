{"version":3,"sources":["webpack:///./src/filters.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./src/misc/btnComponent.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/misc/decorate.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./examples/measure.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/interaction/Measure.js"],"names":["__webpack_require__","olMath","_index2","default","Scalify","$filter","numberFilter","filterFn","scale","text","module","filter","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","undefined","Infinity","sign","Math","abs","nb_decimal","floor","log","factor","pow","round","decimal","unit","str_number","length","substring","groups","str_unit","index","unshift","join","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","opt_type","divisor","prefix","index_max","postfix","space","NumberCoordinates","coordinates","opt_fractionDigits","opt_template","template","x","y","fractionDigits","parseInt","replace","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","modulo","dms","d","m","s","_string2","padNumber","charAt","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","__webpack_exports__","_index","exports","angular","requires","push","name","btnGroupComponent_","$parse","restrict","controller","link","scope","element","attrs","setActive","assign","$watch","buttons_","some","buttonModel","newValue","directive","BtnGroupController","$scope","this","scope_","prototype","activate","forEach","expressionFn","i","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","on","$apply","$setViewValue","$viewValue","$render","toggleClass","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","interaction","_asserts2","assertInstanceof","_Interaction2","Object","defineProperty","get","getActive","set","val","layer","_Base2","configurable","getVisible","setVisible","getOpacity","setOpacity","source","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","parent","decrementLoadCount_","decrement_","getLayers","olEvent","getSource","fail","$applyAsync","unitPrefixFormat","numberFormat","opt_options","options","_Measure2","call","continueMsg","document","createElement","textContent","assert","ol","inherits","createDrawInteraction","style","_DrawAzimut2","handleMeasure","callback","geom","sketchFeature","getGeometry","_GeometryCollection2","line","getGeometries","_LineString2","getFormattedAzimutRadius","getMap","getView","getProjection","proj","Projection","decimals","precision","getLastCoordinate","projection","formatLength","formatAzimut","output","getFormattedAzimut","getFormattedLength","format","getAzimut","coords","getCoordinates","dx","dy","rad","acos","sqrt","PI","olFunctions","_Pointer2","handleDownEvent","handleDownEvent_","handleEvent","handleEvent_","handleUpEvent","handleUpEvent_","downPx_","source_","started_","sketchFeature_","sketchPoint_","squaredClickTolerance_","sketchLayer_","_Vector2","_Vector4","useSpatialIndex","wrapX","_Draw2","getDefaultStyleFunction","_events2","listen","updateState_","event","pixel","downPx","clickPx","pass","handlePointerMove_","finishDrawing_","startDrawing_","mapBrowserEvent","type","modifyDrawing_","createOrUpdateSketchPoint_","coordinate","slice","_Feature2","_Point2","updateSketchFeatures_","sketchPointGeom","setCoordinates","sketchFeatures","clear","addFeatures","start","circle","_Circle2","geometry","setGeometry","dispatchEvent","Event","geometries","getGeometriesArray","last","setRadius","getLength","abortDrawing_","shouldStopEvent","FALSE","map","active","setMap","addFeature","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","unlistenByKey","ol_Image","ImageWMS","source_Image","attributions","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","axisOrientation","getAxisOrientation","bbox","substr","uri","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","br","appendChild","goog","_Polygon2","getFormattedArea","coord","getInteriorPoint","olBase","_Event","detail","arguments","_Event2","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","res","key","fixedTileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__string_js__","value","_Collection2","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","olObj","featureUidToGroupIndex_","groups_","layer_","styleFunction_","bind","updateWhileAnimating","updateWhileInteracting","feature","groupIndex","featureUid","getUid","toString","features","removeFeature","group","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","setStyle","createFunction","service","defaultMessage","defaultArgs","givenMessage","givenArgs","message","args","e","AssertionError","errorHandler_","errorHandler","ENABLE_ASSERTS","condition","opt_message","var_args","doAssertFailure_","Array","isNumber","typeOf","isString","isFunction","isObject","isArray","isBoolean","nodeType","dom","NodeType","ELEMENT","getType_","Function","displayName","constructor","_typeof","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","item","mapUid","previous","setAt","removeAt","insertAt","_CustomEvent2","current","updateDimensions","dimensions","baseBgLayer","layers","getArray","_Layer2","hasUpdates","updatedDimensions","refresh","_SyncDataSourcesMap2","directive_","$window","ngeoSyncDataSourcesMap","prop","$eval","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","view","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","evt","target","_View2","_this","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","_DataSources2","manager","manager_","features_","index_","setFeatures","unlisten","handleFeatureAdd_","handleFeatureRemove_","ngeo","_module2","_btnComponent2","measuretoolsComponent","bindings","lang","controllerAs","templateUrl","component","MeasuretoolsController","$compile","measureStartMsg","measureLengthContinueMsg","measureAreaContinueMsg","measureAzimutContinueMsg","measureStartMsgs","en","fr","measureLengthContinueMsgs","measureAreaContinueMsgs","measureAzimutContinueMsgs","newVal","fill","_Fill2","color","stroke","_Stroke2","lineDash","width","radius","measureLength","_MeasureLength2","sketchStyle","startMsg","_decorate2","measureArea","_MeasureArea2","measureAzimut","_MeasureAzimut2","getTooltipElement","innerHTML","$onInit","addInteraction","MainController","_Tile2","_OSM2","zoom","addControl","_ScaleLine2","$element","$attrs","mapExpr","recenter","attr","getSize","fit","setZoom","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","oldVal","cancelAnimationFrame","olArray","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","keys","newLength","sort","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","_this2","__WEBPACK_IMPORTED_MODULE_9__math_js__","MultiPoint","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","__WEBPACK_IMPORTED_MODULE_0__index_js__","appendPoint","point","flatCoordinates","__WEBPACK_IMPORTED_MODULE_1__array_js__","getFlatCoordinates","clone","multiPoint","setFlatCoordinates","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","stride","ii","j","squaredDistance","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","points","getType","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_POINT","intersectsExtent","setLayout","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XY","setFlatCoordinatesInternal","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","MultiLineString","ends_","maxDelta_","maxDeltaRevision_","appendLineString","lineString","multiLineString","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","ends","lineStrings","offset","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","MULTI_LINE_STRING","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","MultiPolygon","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","polygon","multiPolygon","len","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","endss","polygons","jj","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","__WEBPACK_IMPORTED_MODULE_6__obj_js__","GeometryCollection","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","GEOMETRY_COLLECTION","rotate","angle","anchor","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","DrawEventType","Draw","Pointer","shouldHandle_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","POLYGON","maxPoints_","maxPoints","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","CIRCLE","opt_geometry","Circle","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","POINT","Point","LINE_STRING","LineString","Polygon","concat","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchCoords_","sketchLine_","sketchLineCoords_","clickTolerance","overlay_","Vector","source_Vector","geometryName_","geometryName","condition_","noModifierKeys","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","ol_Object","getChangeEventType","Property","ACTIVE","styles","Style","createDefaultEditing","originalEvent","CONTEXTMENU","preventDefault","move","MapBrowserEventType","POINTERMOVE","POINTERDRAG","clearTimeout","addToDrawing_","POINTERDOWN","pointerEvent","pointerType","MouseSource","POINTER_TYPE","DBLCLICK","setTimeout","MapBrowserPointerEvent","frameState","circleMode","finishDrawing","atFinish_","stopPropagation","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","getPixelFromCoordinate","Feature","setGeometryName","sketchLineGeom","ring","getLinearRing","done","pop","removeLastPoint","splice","extend","overlaySource","createRegularPolygon","opt_sides","opt_angle","atan","createBox","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","delta","getRadius","getRadiusSquared_","getCenter","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","circleExtent","intersectsCoordinate","setCenter","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","transform","olDom","olSphere","MeasureBaseOptions","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","displayHelpTooltip_","displayHelpTooltip","changeEventKey_","postcomposeEventKey_","vectorLayer_","drawInteraction_","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","SPHERE_WGS84","_EPSG2","RADIUS","geodesicArea","getFormattedCircleArea","c1","c2","haversineDistance","getFormattedPoint","dragging","helpMsg","removeChildren","setPosition","getDrawInteraction","prevMap","removeInteraction","createMeasureTooltip_","measure","classList","add","setOffset","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","_Overlay2","positioning","addOverlay","removeOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent"],"mappings":"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","file":"measure.ac8d53a9f2de9b44cdf2.js","sourcesContent":["/**\n * @module ngeo.filters\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport * as olMath from 'ol/math.js';\nimport olString from 'ol/string.js';\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nngeoBase.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoScalify', ngeoBase.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nngeoBase.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoNumber', ngeoBase.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nngeoBase.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoUnitPrefix', ngeoBase.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nngeoBase.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoNumberCoordinates', ngeoBase.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nngeoBase.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoDMSCoordinates', ngeoBase.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * @return {function(?):string} The filter function.\n *//* @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nngeoBase.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nngeoBase.module.filter('ngeoTrustHtml', ngeoBase.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filters.js","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.misc.btnComponent\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n *//* @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach(function(expressionFn, i) {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  }, this);\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/btnComponent.js","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.misc.decorate\n*/\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module ngeo.interaction.MeasureAzimut\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, opt_options) {\n\n  const options = opt_options || {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nol.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), ol.proj.Projection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureAzimut.js","/**\n * @module ngeo.interaction.DrawAzimut\n*/\nimport googAsserts from 'goog/asserts.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style !== undefined ?\n      options.style : olInteractionDraw.getDefaultStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nol.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), sketchFeature));\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/DrawAzimut.js","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.interaction.MeasureArea\n*/\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the polygon.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click starting point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nol.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = goog.asserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  goog.asserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureArea.js","/**\n * @module ngeo.interaction.MeasureLength\n*/\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the line.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click last point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nol.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = goog.asserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  goog.asserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureLength.js","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.value('ngeoDataSources', new olCollection());\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/* eslint valid-jsdoc: 0, prefer-rest-params: 0,  */\n// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Utilities to check the preconditions, postconditions and\n * invariants runtime.\n *\n * Methods in this package should be given special treatment by the compiler\n * for type-inference. For example, <code>goog.asserts.assert(foo)</code>\n * will restrict <code>foo</code> to a truthy value.\n *\n * The compiler has an option to disable asserts. So code like:\n * <code>\n * var x = goog.asserts.assert(foo()); goog.asserts.assert(bar());\n * </code>\n * will be transformed into:\n * <code>\n * var x = foo();\n * </code>\n * The compiler will leave in foo() (because its return value is used),\n * but it will remove bar() because it assumes it does not have side-effects.\n *\n * @author agrieve@google.com (Andrew Grieve)\n */\n\nconst exports = {};\n\n/**\n * Throws an exception with the given message and \"Assertion failed\" prefixed\n * onto it.\n * @param {string} defaultMessage The message to use if givenMessage is empty.\n * @param {Array<*>} defaultArgs The substitution arguments for defaultMessage.\n * @param {string|undefined} givenMessage Message supplied by the caller.\n * @param {Array<*>} givenArgs The substitution arguments for givenMessage.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n * @private\n */\nexports.doAssertFailure_ = function(\n  defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  let message = 'Assertion failed';\n  let args;\n  if (givenMessage) {\n    message += `: ${givenMessage}`;\n    args = givenArgs;\n  } else if (defaultMessage) {\n    message += `: ${defaultMessage}`;\n    args = defaultArgs;\n  }\n  // The '' + works around an Opera 10 bug in the unit tests. Without it,\n  // a stack trace is added to var message above. With this, a stack trace is\n  // not added until this line (it causes the extra garbage to be added after\n  // the assertion message instead of in the middle of it).\n  const e = new exports.AssertionError(`${message}`, args || []);\n  exports.errorHandler_(e);\n};\n\n\n/**\n * Sets a custom error handler that can be used to customize the behavior of\n * assertion failures, for example by turning all assertion failures into log\n * messages.\n * @param {function(!goog.asserts.AssertionError)} errorHandler\n */\nexports.setErrorHandler = function(errorHandler) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_ = errorHandler;\n  }\n};\n\n\n/**\n * Checks if the condition evaluates to true if goog.asserts.ENABLE_ASSERTS is\n * true.\n * @template T\n * @param {T} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {T} The value of the condition.\n * @throws {goog.asserts.AssertionError} When the condition evaluates to false.\n */\nexports.assert = function(condition, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !condition) {\n    exports.doAssertFailure_(\n      '', null, opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return condition;\n};\n\n\n/**\n * Fails if goog.asserts.ENABLE_ASSERTS is true. This function is useful in case\n * when we want to add a check in the unreachable area like switch-case\n * statement:\n *\n * <pre>\n *  switch(type) {\n *    case FOO: doSomething(); break;\n *    case BAR: doSomethingElse(); break;\n *    default: goog.asserts.fail('Unrecognized type: ' + type);\n *      // We have only 2 types - \"default:\" section is unreachable code.\n *  }\n * </pre>\n *\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} Failure.\n */\nexports.fail = function(opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_(\n      new exports.AssertionError(\n        `Failure${opt_message ? `: ${opt_message}` : ''}`,\n        Array.prototype.slice.call(arguments, 1)));\n  }\n};\n\n\n/**\n * Checks if the value is a number if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {number} The value, guaranteed to be a number when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n */\nexports.assertNumber = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isNumber(value)) {\n    exports.doAssertFailure_(\n      'Expected number but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n\n/**\n * Checks if the value is a string if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {string} The value, guaranteed to be a string when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a string.\n */\nexports.assertString = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isString(value)) {\n    exports.doAssertFailure_(\n      'Expected string but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {string} */ (value);\n};\n\n\n/**\n * Checks if the value is a function if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Function} The value, guaranteed to be a function when asserts\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a function.\n */\nexports.assertFunction = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isFunction(value)) {\n    exports.doAssertFailure_(\n      'Expected function but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Function} */ (value);\n};\n\n\n/**\n * Checks if the value is an Object if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Object} The value, guaranteed to be a non-null object.\n * @throws {goog.asserts.AssertionError} When the value is not an object.\n */\nexports.assertObject = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isObject(value)) {\n    exports.doAssertFailure_(\n      'Expected object but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Object} */ (value);\n};\n\n\n/**\n * Checks if the value is an Array if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Array<?>} The value, guaranteed to be a non-null array.\n * @throws {goog.asserts.AssertionError} When the value is not an array.\n */\nexports.assertArray = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isArray(value)) {\n    exports.doAssertFailure_(\n      'Expected array but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Array<?>} */ (value);\n};\n\n\n/**\n * Checks if the value is a boolean if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {boolean} The value, guaranteed to be a boolean when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a boolean.\n */\nexports.assertBoolean = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isBoolean(value)) {\n    exports.doAssertFailure_(\n      'Expected boolean but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {boolean} */ (value);\n};\n\n\n/**\n * Checks if the value is a DOM Element if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Element} The value, likely to be a DOM Element when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not an Element.\n */\nexports.assertElement = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS &&\n      (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {\n    exports.doAssertFailure_(\n      'Expected Element but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Element} */ (value);\n};\n\n\n/**\n * Checks if the value is an instance of the user-defined type if\n * goog.asserts.ENABLE_ASSERTS is true.\n *\n * The compiler may tighten the type returned by this function.\n *\n * @param {?} value The value to check.\n * @param {function(new: T, ...)} type A user-defined constructor.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} When the value is not an instance of\n *     type.\n * @return {T}\n * @template T\n */\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !(value instanceof type)) {\n    exports.doAssertFailure_(\n      'Expected instanceof %s but got %s.',\n      [exports.getType_(type), exports.getType_(value)],\n      opt_message, Array.prototype.slice.call(arguments, 3));\n  }\n  return value;\n};\n\n\n/**\n * Checks that no enumerable keys are present in Object.prototype. Such keys\n * would break most code that use {@code for (var ... in ...)} loops.\n */\nexports.assertObjectPrototypeIsIntact = function() {\n  for (const key in Object.prototype) {\n    exports.fail(`${key} should not be enumerable in Object.prototype.`);\n  }\n};\n\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n * @param {*} value A constructor, object, or primitive.\n * @return {string} The best display name for the value, or 'unknown type name'.\n * @private\n */\nexports.getType_ = function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || 'unknown type name';\n  } else if (value instanceof Object) {\n    return value.constructor.displayName || value.constructor.name ||\n        Object.prototype.toString.call(value);\n  } else {\n    return value === null ? 'null' : typeof value;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapDirective from 'ngeo/map/directive.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap.js';\n\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', [\n  ngeoDatasourceSyncDataSourcesMap.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\nimport googAsserts from 'goog/asserts.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSyncDataSourcesMap', [\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('ngeoSyncDataSourcesMap', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module app.measure\n*/\nconst exports = {};\n\nimport './measure.css';\nimport './common_dependencies.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\n\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilters from 'ngeo/filters.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olControlScaleLine from 'ol/control/ScaleLine.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleFill from 'ol/style/Fill.js';\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name,\n  ngeoMiscBtnComponent.name,\n]);\n\n\n/**\n * App-specific component wrapping the measure tools. The component's\n * controller has a property \"map\" including a reference to the OpenLayers\n * map.\n *\n * @type {!angular.Component}\n */\nexports.measuretoolsComponent = {\n  bindings: {\n    'map': '=appMeasuretoolsMap',\n    'lang': '=appMeasuretoolsLang'\n  },\n  controller: 'AppMeasuretoolsController',\n  controllerAs: 'ctrl',\n  templateUrl: 'partials/measuretools.html'\n};\n\nexports.module.component('appMeasuretools', exports.measuretoolsComponent);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$filter} $filter Angular filter service.\n * @constructor\n *//* @ngInject\n */\nexports.MeasuretoolsController = function($scope, $compile, $sce,\n  $filter) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.lang;\n\n  /**\n   * @type {Object}\n   * @export\n   */\n  this.measureStartMsg = null;\n\n  /**\n   * @type {Object}\n   * @export\n   */\n  this.measureLengthContinueMsg = null;\n\n\n  /**\n   * @type {Object}\n   * @export\n   */\n  this.measureAreaContinueMsg = null;\n\n  /**\n   * @type {Object}\n   * @export\n   */\n  this.measureAzimutContinueMsg = null;\n\n  // Translations for the measure tools' tooltips.\n  const measureStartMsgs = {\n    'en': $sce.trustAsHtml('Click to start drawing.'),\n    'fr': $sce.trustAsHtml('Cliquer pour commencer à dessiner.')\n  };\n  const measureLengthContinueMsgs = {\n    'en': $sce.trustAsHtml('Click to continue drawing.<br>' +\n        'Double-click or click last point to finish.'),\n    'fr': $sce.trustAsHtml('Cliquer pour continuer le dessin.<br>' +\n        'Double-cliquer ou cliquer sur dernier point pour finir.')\n  };\n  const measureAreaContinueMsgs = {\n    'en': $sce.trustAsHtml('Click to continue drawing.<br>' +\n        'Double-click or click starting point to finish.'),\n    'fr': $sce.trustAsHtml('Cliquer pour continuer le dessin.<br>' +\n        'Double-cliquer ou cliquer sur point de départ pour finir.')\n  };\n  const measureAzimutContinueMsgs = {\n    'en': $sce.trustAsHtml('Click to finish.'),\n    'fr': $sce.trustAsHtml('Cliquer pour finir.')\n  };\n\n  // Create elements for the measure tools' tooltips.\n  let measureStartMsg = angular.element(\n    '<span ng-bind-html=\"ctrl.measureStartMsg\"></span>');\n  measureStartMsg = $compile(measureStartMsg)($scope);\n  let measureLengthContinueMsg = angular.element(\n    '<span ng-bind-html=\"ctrl.measureLengthContinueMsg\"></span>');\n  measureLengthContinueMsg = $compile(measureLengthContinueMsg)($scope);\n  let measureAreaContinueMsg = angular.element(\n    '<span ng-bind-html=\"ctrl.measureAreaContinueMsg\"></span>');\n  measureAreaContinueMsg = $compile(measureAreaContinueMsg)($scope);\n  let measureAzimutContinueMsg = angular.element(\n    '<span ng-bind-html=\"ctrl.measureAzimutContinueMsg\"></span>');\n  measureAzimutContinueMsg = $compile(measureAzimutContinueMsg)($scope);\n\n  // Watch the \"lang\" property and update the toolip messages\n  // based on the selected language.\n  $scope.$watch(() => this.lang, (newVal) => {\n    this.measureStartMsg = measureStartMsgs[newVal];\n    this.measureLengthContinueMsg = measureLengthContinueMsgs[newVal];\n    this.measureAreaContinueMsg = measureAreaContinueMsgs[newVal];\n    this.measureAzimutContinueMsg = measureAzimutContinueMsgs[newVal];\n  });\n\n  const style = new olStyleStyle({\n    fill: new olStyleFill({\n      color: 'rgba(255, 255, 255, 0.2)'\n    }),\n    stroke: new olStyleStroke({\n      color: 'rgba(0, 0, 0, 0.5)',\n      lineDash: [10, 10],\n      width: 2\n    }),\n    image: new olStyleCircle({\n      radius: 5,\n      stroke: new olStyleStroke({\n        color: 'rgba(0, 0, 0, 0.7)'\n      }),\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    })\n  });\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), {\n    sketchStyle: style,\n    startMsg: measureStartMsg[0],\n    continueMsg: measureLengthContinueMsg[0]\n  });\n\n  this.measureLength.setActive(false);\n  ngeoMiscDecorate.interaction(this.measureLength);\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), {\n    sketchStyle: style,\n    startMsg: measureStartMsg[0],\n    continueMsg: measureAreaContinueMsg[0]\n  });\n\n  this.measureArea.setActive(false);\n  ngeoMiscDecorate.interaction(this.measureArea);\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut = new ngeoInteractionMeasureAzimut(\n    $filter('ngeoUnitPrefix'), $filter('ngeoNumber'), {\n      sketchStyle: style,\n      startMsg: measureStartMsg[0],\n      continueMsg: measureAzimutContinueMsg[0]\n    });\n\n  this.measureAzimut.setActive(false);\n  ngeoMiscDecorate.interaction(this.measureAzimut);\n\n\n  // the following code shows how one can add additional information to the\n  // tooltip. This can be useful to display the elevation offset from the\n  // 2 points of an azimut measurement.\n  this.measureAzimut.on('measureend', (evt) => {\n    const el = evt.target.getTooltipElement();\n    el.innerHTML += '<br>Additional info';\n  });\n};\n\nexports.module.controller('AppMeasuretoolsController', exports.MeasuretoolsController);\n\nexports.MeasuretoolsController.prototype.$onInit = function() {\n  this.map.addInteraction(this.measureLength);\n  this.map.addInteraction(this.measureArea);\n  this.map.addInteraction(this.measureAzimut);\n};\n\n/**\n * @constructor\n *//* @ngInject\n */\nexports.MainController = function() {\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.lang = 'en';\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [692114.718759744, 5743119.914347709],\n      zoom: 15\n    })\n  });\n\n  this.map.addControl(new olControlScaleLine());\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/measure.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 72\n// module chunks = 0 1 2 3 4 5 7 9 10","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = _ol_coordinate_.squaredDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  const styles = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == MouseSource.POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      const center = coordinates[0];\n      const end = coordinates[1];\n      const radius = Math.sqrt(\n        _ol_coordinate_.squaredDistance(center, end));\n      const geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      const angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = _ol_geom_flat_deflate_.coordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 81\n// module chunks = 0 1 2 6 7 8 9 11 14","/**\n * @module ngeo.interaction.Measure\n*/\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olDom from 'ol/dom.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nngeo.interaction.MeasureBaseOptions;\n\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ?\n    options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nol.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\nexports.SPHERE_WGS84 = new olSphere(olProjEPSG4326.RADIUS);\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(\n  polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (\n    polygon.clone().transform(projection, 'EPSG:4326'));\n  const coordinates = geom.getLinearRing(0).getCoordinates();\n  const area = Math.abs(exports.SPHERE_WGS84.geodesicArea(coordinates));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(\n  circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection,\n  precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = ol.proj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = ol.proj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += exports.SPHERE_WGS84.haversineDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(\n  point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js"],"sourceRoot":""}