{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./src/utils.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/format/JSONFeature.js","webpack:///./node_modules/openlayers/src/ol/format/GeoJSON.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/map/LayerHelper.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./examples/mapfishprint.js","webpack:///./src/print/Service.js","webpack:///./src/print/VectorEncoder.js","webpack:///./src/print/Utils.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json"],"names":["__WEBPACK_IMPORTED_MODULE_0__xml_js__","__webpack_require__","XML","prototype","read","source","isDocument","this","readFromDocument","isNode","readFromNode","doc","parse","node","__webpack_exports__","exports","geometry","multiGeom","_MultiPoint2","default","appendPoint","_MultiLineString2","appendLineString","_MultiPolygon2","appendPolygon","navigator","userAgent","indexOf","hex","length","rgb","r","g","b","Error","colorZeroPadding","toString","queryString","queryData","pairs","substring","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","pair","value","indexOfEquals","name","decodeURIComponent","err","return","queryItem","key","push","encodeURIComponent","join","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","XLink","readHref","getAttributeNS","JSONFeature","format_Feature","call","getObject","object","JSON","Object","ol","getType","FormatType","readFeature","opt_options","readFeatureFromObject","getReadOptions","readFeatures","readFeaturesFromObject","readGeometry","readGeometryFromObject","readProjection","readProjectionFromObject","writeFeature","feature","stringify","writeFeatureObject","writeFeatures","features","writeFeaturesObject","writeGeometry","writeGeometryObject","format_JSONFeature","GeoJSON","options","defaultDataProjection","proj","featureProjection","defaultFeatureProjection","geometryName_","geometryName","extractGeometryName_","extractGeometryName","GEOMETRY_READERS","Point","coordinates","LineString","Polygon","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","geometries","map","GEOMETRY_WRITERS","type","getCoordinates","right","rightHanded","getGeometriesArray","obj","Circle","geometryReader","geometryWriter","geoJSONFeature","Feature","setGeometryName","geometry_name","setGeometry","id","setId","properties","setProperties","geoJSONFeatures","i","ii","crs","projection","asserts","adaptOptions","getId","getGeometry","getProperties","getGeometryName","objects","OWS","n","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","owsObject","xml","pushParseAndPop","PARSERS_","readAddress_","objectStack","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","getAttribute","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","XSD","readString","NAMESPACE_URIS_","makeStructureNS","ServiceIdentification","makeObjectPropertySetter","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","version","trim","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","style","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","format","template","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","extent","readLegendUrl_","legend","readCoordinates_","x","y","isNaN","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","makeArrayPusher","TileMatrix","MinTileRow","readNonNegativeInteger","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","readDecimal","TileWidth","TileHeight","MatrixWidth","MatrixHeight","_ol_Image_","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","forEach","unlistenByKey","ol_Image","ImageWMS","source_Image","attributions","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","Math","floor","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","listen","CHANGE","handleImageChange","getImageLoadFunction","size","getCode","WMSServerType","dpi","axisOrientation","getAxisOrientation","bbox","substr","uri","getUrl","setImageLoadFunction","setUrl","updateParams","string","compareVersions","olArray","olObj","olUri","$q","$http","$q_","$http_","GROUP_KEY","REFRESH_PARAM","createBasicWMSLayer","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","LAYERS","olServerType","replace","_ImageWMS2","serverType","_Image2","createBasicWMSLayerFromDataSource","dataSource","wmsUrl","_asserts2","assert","layerNames","getOGCLayerNames","ogcServerType","imageType","ogcImageType","layer","setVisible","visible","set","createWMTSLayerFromCapabilitites","capabilitiesURL","layerName","opt_dimensions","parser","_WMTSCapabilities2","_Tile2","preload","Infinity","get","cache","then","response","result","data","_WMTS2","optionsFromCapabilities","isEmpty","updateDimensions","setSource","layers","l","find","elt","index","array","resolve","reject","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","createBasicGroup","opt_layers","group","_Group2","setLayers","getGroupFromMap","groupName","getLayerGroup","getLayers","getArray","some","existingGroup","addLayer","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","styles","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getView","getMinResolution","getMaxResolution","refreshWMSLayer","source_","getSource","random","updateWMSLayerState","names","TIME","getQuerySourceIds","module","angular","service","_index2","requires","olBase","_Event","detail","arguments","_Event2","inherits","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","res","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","_Collection2","_index","_classCallCheck","inRange_","inRange","visible_","attributes","id_","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","featureUidToGroupIndex_","groups_","_Vector4","useSpatialIndex","layer_","_Vector2","styleFunction_","bind","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","featureUid","getUid","removeFeature","clear","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","setMap","setStyle","createFunction","defaultMessage","defaultArgs","givenMessage","givenArgs","message","args","e","AssertionError","errorHandler_","errorHandler","ENABLE_ASSERTS","condition","opt_message","var_args","doAssertFailure_","Array","slice","goog","isNumber","typeOf","isString","isFunction","isObject","isArray","isBoolean","dom","NodeType","ELEMENT","getType_","fail","Function","displayName","constructor","_typeof","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","item","mapUid","previous","setAt","removeAt","insertAt","event","_CustomEvent2","current","dispatchEvent","dimensions","baseBgLayer","assertInstanceof","_Layer2","hasUpdates","updatedDimensions","refresh","_SyncDataSourcesMap2","directive_","$window","ngeoSyncDataSourcesMap","restrict","link","scope","element","attrs","prop","$eval","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","_events2","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","view","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","evt","target","_View2","_this","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","_DataSources2","ngeo","_module3","app","WMS_URL_","PRINT_URL_","PRINT_SCALES_","PRINT_FORMAT_","PRINT_LAYOUT_","PRINT_DPI_","PRINT_PAPER_SIZE_","MainController","$timeout","ngeoCreatePrint","ngeoPrintUtils","_GeoJSON2","zoom","printState","$timeout_","print_","printUtils_","postcomposeListener","createPrintMaskPostcompose","frameState","mapSize","mapResolution","viewState","getOptimalScale","on","print","getSize","viewResolution","layout","spec","createSpec","datasource","debug","comments","title","createReport","handleCreateReportSuccess_","handleCreateReportError_","resp","mfResp","getStatus_","ref","getStatus","handleGetStatusSuccess_","handleGetStatusError_","window","location","getReportUrl","that","controller","olMath","ngeoLayerHelper","ngeoLayerHelper_","vectorEncoder_","_VectorEncoder2","cancel","opt_httpConfig","httpConfig","customAttributes","specMap","rotation","encodeMap_","assign","viewCenter","getCenter","viewProjection","viewRotation","toDegrees","getRotation","mapLayerGroup","reverse","encodeLayer","arr","encodeImageLayer_","encodeTileLayer_","encodeVectorLayer","encodeImageWmsLayer_","encodeWmsLayer_","getOpacity","opacity","startsWith","protocol","url_url","URL","customParams","searchParams","baseURL","getAbsoluteUrl_","origin","pathname","imageFormat","a","document","createElement","encodeURI","decodeURI","encodeTileWmtsLayer_","encodeTileWmsLayer_","_WMTS4","matrixIds","getMatrixIds","matrices","tileRange","getFullTileRange","identifier","scaleDenominator","getMetersPerUnit","_size2","topLeftCorner","getOrigin","matrixSize","maxX","minX","maxY","minY","getDimensions","dimensionKeys","keys","getWmtsUrl_","dimensionParams","getFormat","matrixSet","getMatrixSet","requestEncoding","getRequestEncoding","getStyle","getVersion","_TileWMS2","getUrls","printSpec","headers","Content-Type","post","getCapabilities","withCredentials","createPrintServiceFactory","_LayerHelper2","factory","olColor","geojsonFormat","PrintStyleTypes_","PrintStyleType","LINE_STRING","POINT","POLYGON","getFeatures","geojsonFeatures","mapfishStyleObject","originalFeature","styleData","getStyleFunction","origGeojsonFeature","isOriginalFeatureAdded","j","jj","styleId","geojsonFeature","styledFeature","clone","geometryType","featureStyleProp","encodeVectorStyle","geoJson","styleType","styleObject","symbolizers","fillStyle","getFill","imageStyle","strokeStyle","getStroke","textStyle","getText","encodeVectorStylePolygon","encodeVectorStyleLine","encodeVectorStylePoint","encodeTextStyle","encodeVectorStyleFill","symbolizer","fillColor","getColor","asArray","_utils2","rgbArrayToHex","fillOpacity","encodeVectorStyleStroke","pointRadius","getRadius","getSrc","externalGraphic","graphicOpacity","getScale","graphicWidth","graphicHeight","points","getPoints","graphicName","sizeShape","rotationShape","opacityShape","strokeShape","fillShape","strokeColor","strokeColorRgba","strokeOpacity","strokeDashstyle","getLineDash","strokeWidth","getWidth","getLineCap","strokeLinecap","label","xAlign","yAlign","olTextAlign","getTextAlign","olTextBaseline","getTextBaseline","labelAlign","labelRotation","PI","fontStyle","getFont","font","fontWeight","fontSize","fontFamily","splice","haloColor","haloOpacity","width","haloRadius","fillColorRgba","fontColor","labelXOffset","getOffsetX","labelYOffset","getOffsetY","extentHalfHorizontalDistance_","extentHalfVerticalDistance_","INCHES_PER_METER_","DOTS_PER_INCH_","opt_rotation","self","context","viewportWidth","viewportHeight","_has2","DEVICE_PIXEL_RATIO","ppi","ipm","extentHalfWidth","extentHalfHeight","beginPath","moveTo","lineTo","closePath","toRadians","drawPrintZoneWithRotation_","drawPrintZone_","fill","minx","miny","maxx","maxy","diagonal","sqrt","pow","gamma","atan","omega","x1","cos","y1","sin","x2","y2","x3","y3","x4","y4","printMapSize","printMapScales","mapWidth","mapHeight","scaleWidth","scaleHeight","min","optimal","getOptimalResolution","printMapScale","dotsPerMeter","resolutionX","resolutionY","max","getBottomLeftCorner","mapCenter","getBottomRightCorner","getUpLeftCorner","getUpRightCorner","manager","manager_","features_","index_","setFeatures","unlisten","handleFeatureAdd_","handleFeatureRemove_","$scope","$element","$attrs","mapExpr","recenter","attr","fit","setZoom","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","$watch","newVal","oldVal","cancelAnimationFrame","templateUrl","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","newLength","Number","sort","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","_this2","$applyAsync","__WEBPACK_IMPORTED_MODULE_9__math_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","setCoordinates","__WEBPACK_IMPORTED_MODULE_0__index_js__","point","flatCoordinates","__WEBPACK_IMPORTED_MODULE_1__array_js__","getFlatCoordinates","multiPoint","setFlatCoordinates","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","stride","squaredDistance","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_POINT","intersectsExtent","setLayout","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XY","setFlatCoordinatesInternal","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","ends_","maxDelta_","maxDeltaRevision_","lineString","multiLineString","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","m","opt_extrapolate","opt_interpolate","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","ends","lineStrings","offset","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","MULTI_LINE_STRING","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","polygon","multiPolygon","len","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","endss","polygons","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","__WEBPACK_IMPORTED_MODULE_6__obj_js__","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getGeometries","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","GEOMETRY_COLLECTION","rotate","angle","anchor","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","proj4","projCodes","defs","code","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","transform","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","ft","us-ft","ignoredChar","match","testkey","lkey","toLowerCase","projString","defData","paramName","paramVal","paramOutname","paramObj","v","filter","reduce","p","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","legalAxis","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","text","level","place","root","stack","currentObject","mapit","unshift","thing","out","newObj","sExpr","shift","convert","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","wkt_parser_D2R","d2r","input","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","charAt","apply","EPSG","ESRI","IAU2000","console","log","WGS84","GOOGLE","lib_defs","codeWords","parseCode","extend","destination","property","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","abs","tsfnz","phi","com","tan","phi2z","ts","dphi","eccnth","identity","pt","projs","es","lon","lat","exp","projections_names","projStore","add","projections","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","callback","error","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","Proj","checkParams","datum_transform","dest","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","X","Y","Z","atan2","geocentricToGeodetic","adjust_axis","denorm","t","xin","yin","zin","toPoint","checkSanity","checkCoord","num","TypeError","core_wgs84","transformer","from","to","coords","transformedArray","checkProj","oProj","core","fromProj","toProj","coord","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","top","mgrs_toPoint","ll","accuracy","utm","eccPrimeSquared","N","T","C","A","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","northing","easting","zoneNumber","zoneLetter","LetterDesignator","getLetterDesignator","LLtoUTM","seasting","snorthing","setParm","get100kSetForZone","setColumn","setRow","column","row","colOrigin","charCodeAt","rowOrigin","rowInt","rollover","colInt","String","fromCharCode","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","warn","fromMGRS","mgrsStr","toMGRS","lib_Point","C06","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","s","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","d","ds","f","temp","h","asin","sinh","hypot","asinhy","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","APA","mode","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","somerc","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","__WEBPACK_IMPORTED_MODULE_1__string_js__","readBoolean","getAllTextContent","readBooleanString","exec","readDateTime","dateTime","readDecimalString","readNonNegativeIntegerString","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","olProj","olProjProj4","epsg21781def","_proj4","register","setExtent","_somerc2","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","homepage","license","main","repository","scripts","build","build:tmerc"],"mappings":"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","file":"mapfishprint.min.js","sourcesContent":["/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 106\n// module chunks = 0 1 5 20","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.utils\n*/\nconst exports = {};\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 125\n// module chunks = 0 1 5","/**\n * @module ol/format/JSONFeature\n */\nimport {inherits} from '../index.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst JSONFeature = function() {\n  FeatureFormat.call(this);\n};\n\ninherits(JSONFeature, FeatureFormat);\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.getType = function() {\n  return FormatType.JSON;\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeature = function(source, opt_options) {\n  return this.readFeatureFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeatures = function(source, opt_options) {\n  return this.readFeaturesFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.Feature} Feature.\n */\nJSONFeature.prototype.readFeatureFromObject = function(object, opt_options) {};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nJSONFeature.prototype.readFeaturesFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readGeometry = function(source, opt_options) {\n  return this.readGeometryFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nJSONFeature.prototype.readGeometryFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readProjection = function(source) {\n  return this.readProjectionFromObject(getObject(source));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nJSONFeature.prototype.readProjectionFromObject = function(object) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeature = function(feature, opt_options) {\n  return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeatureObject = function(feature, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeatures = function(features, opt_options) {\n  return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeaturesObject = function(features, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeGeometryObject = function(geometry, opt_options) {};\nexport default JSONFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/JSONFeature.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/GeoJSON\n */\n// TODO: serialize dataProjection as crs member when writing\n// see https://github.com/openlayers/openlayers/issues/2078\n\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @constructor\n * @extends {ol.format.JSONFeature}\n * @param {olx.format.GeoJSONOptions=} opt_options Options.\n * @api\n */\nconst GeoJSON = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  JSONFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection(\n    options.defaultDataProjection ?\n      options.defaultDataProjection : 'EPSG:4326');\n\n\n  if (options.featureProjection) {\n    this.defaultFeatureProjection = getProjection(options.featureProjection);\n  }\n\n  /**\n   * Name of the geometry attribute for features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * Look for the geometry name in the feature GeoJSON\n   * @type {boolean|undefined}\n   * @private\n   */\n  this.extractGeometryName_ = options.extractGeometryName;\n\n};\n\ninherits(GeoJSON, JSONFeature);\n\n\n/**\n * @const\n * @type {Object.<string, function(GeoJSONObject): ol.geom.Geometry>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n  'GeometryCollection': readGeometryCollectionGeometry\n};\n\n\n/**\n * @const\n * @type {Object.<string, function(ol.geom.Geometry, olx.format.WriteOptions=): (GeoJSONGeometry|GeoJSONGeometryCollection)>}\n */\nconst GEOMETRY_WRITERS = {\n  'Point': writePointGeometry,\n  'LineString': writeLineStringGeometry,\n  'Polygon': writePolygonGeometry,\n  'MultiPoint': writeMultiPointGeometry,\n  'MultiLineString': writeMultiLineStringGeometry,\n  'MultiPolygon': writeMultiPolygonGeometry,\n  'GeometryCollection': writeGeometryCollectionGeometry,\n  'Circle': writeEmptyGeometryCollectionGeometry\n};\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  const geometryReader = GEOMETRY_READERS[object.type];\n  return (\n    /** @type {ol.geom.Geometry} */ transformWithOptions(\n      geometryReader(object), false, opt_options)\n  );\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object.geometries.map(\n    /**\n       * @param {GeoJSONGeometry} geometry Geometry.\n       * @return {ol.geom.Geometry} geometry Geometry.\n       */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object.coordinates);\n}\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {ol.geom.Geometry} */ (\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {GeoJSONGeometryCollection} Empty GeoJSON geometry collection.\n */\nfunction writeEmptyGeometryCollectionGeometry(geometry) {\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: []\n  });\n}\n\n\n/**\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function(geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: geometries\n  });\n}\n\n\n/**\n * @param {ol.geom.LineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * @param {ol.geom.Point} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.Polygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * Read a feature from a GeoJSON Feature source.  Only works for Feature or\n * geometry types.  Use {@link ol.format.GeoJSON#readFeatures} to read\n * FeatureCollection source. If feature at source has an id, it will be used\n * as Feature id by calling {@link ol.Feature#setId} internally.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGeoJSON.prototype.readFeature;\n\n\n/**\n * Read all features from a GeoJSON source.  Works for all GeoJSON types.\n * If the source includes only geometries, features will be created with those\n * geometries.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGeoJSON.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeatureFromObject = function(object, opt_options) {\n  /**\n   * @type {GeoJSONFeature}\n   */\n  let geoJSONFeature = null;\n  if (object.type === 'Feature') {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n  } else {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ ({\n      type: 'Feature',\n      geometry: /** @type {GeoJSONGeometry|GeoJSONGeometryCollection} */ (object)\n    });\n  }\n\n  const geometry = readGeometry(geoJSONFeature.geometry, opt_options);\n  const feature = new Feature();\n  if (this.geometryName_) {\n    feature.setGeometryName(this.geometryName_);\n  } else if (this.extractGeometryName_ && geoJSONFeature.geometry_name !== undefined) {\n    feature.setGeometryName(geoJSONFeature.geometry_name);\n  }\n  feature.setGeometry(geometry);\n  if (geoJSONFeature.id !== undefined) {\n    feature.setId(geoJSONFeature.id);\n  }\n  if (geoJSONFeature.properties) {\n    feature.setProperties(geoJSONFeature.properties);\n  }\n  return feature;\n};\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeaturesFromObject = function(object, opt_options) {\n  const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  /** @type {Array.<ol.Feature>} */\n  let features = null;\n  if (geoJSONObject.type === 'FeatureCollection') {\n    const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */\n        (object);\n    features = [];\n    const geoJSONFeatures = geoJSONFeatureCollection.features;\n    let i, ii;\n    for (i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n      features.push(this.readFeatureFromObject(geoJSONFeatures[i],\n        opt_options));\n    }\n  } else {\n    features = [this.readFeatureFromObject(object, opt_options)];\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @api\n */\nGeoJSON.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readGeometryFromObject = function(object, opt_options) {\n  return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n};\n\n\n/**\n * Read the projection from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGeoJSON.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readProjectionFromObject = function(object) {\n  const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  const crs = geoJSONObject.crs;\n  let projection;\n  if (crs) {\n    if (crs.type == 'name') {\n      projection = getProjection(crs.properties.name);\n    } else {\n      assert(false, 36); // Unknown SRS type\n    }\n  } else {\n    projection = this.defaultDataProjection;\n  }\n  return /** @type {ol.proj.Projection} */ (projection);\n};\n\n\n/**\n * Encode a feature as a GeoJSON Feature string.\n *\n * @function\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeature;\n\n\n/**\n * Encode a feature as a GeoJSON Feature object.\n *\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeature} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeatureObject = function(feature, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n\n  const object = /** @type {GeoJSONFeature} */ ({\n    'type': 'Feature'\n  });\n  const id = feature.getId();\n  if (id !== undefined) {\n    object.id = id;\n  }\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    object.geometry = writeGeometry(geometry, opt_options);\n  } else {\n    object.geometry = null;\n  }\n  const properties = feature.getProperties();\n  delete properties[feature.getGeometryName()];\n  if (!isEmpty(properties)) {\n    object.properties = properties;\n  } else {\n    object.properties = null;\n  }\n  return object;\n};\n\n\n/**\n * Encode an array of features as GeoJSON.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features as a GeoJSON object.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeatureCollection} GeoJSON Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeaturesObject = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const objects = [];\n  let i, ii;\n  for (i = 0, ii = features.length; i < ii; ++i) {\n    objects.push(this.writeFeatureObject(features[i], opt_options));\n  }\n  return /** @type {GeoJSONFeatureCollection} */ ({\n    type: 'FeatureCollection',\n    features: objects\n  });\n};\n\n\n/**\n * Encode a geometry as a GeoJSON string.\n *\n * @function\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeGeometry;\n\n\n/**\n * Encode a geometry as a GeoJSON object.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeGeometryObject = function(geometry, opt_options) {\n  return writeGeometry(geometry, this.adaptOptions(opt_options));\n};\nexport default GeoJSON;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GeoJSON.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.map.LayerHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n *//* @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.value('ngeoDataSources', new olCollection());\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/* eslint valid-jsdoc: 0, prefer-rest-params: 0,  */\n// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Utilities to check the preconditions, postconditions and\n * invariants runtime.\n *\n * Methods in this package should be given special treatment by the compiler\n * for type-inference. For example, <code>goog.asserts.assert(foo)</code>\n * will restrict <code>foo</code> to a truthy value.\n *\n * The compiler has an option to disable asserts. So code like:\n * <code>\n * var x = goog.asserts.assert(foo()); goog.asserts.assert(bar());\n * </code>\n * will be transformed into:\n * <code>\n * var x = foo();\n * </code>\n * The compiler will leave in foo() (because its return value is used),\n * but it will remove bar() because it assumes it does not have side-effects.\n *\n * @author agrieve@google.com (Andrew Grieve)\n */\n\nconst exports = {};\n\n/**\n * Throws an exception with the given message and \"Assertion failed\" prefixed\n * onto it.\n * @param {string} defaultMessage The message to use if givenMessage is empty.\n * @param {Array<*>} defaultArgs The substitution arguments for defaultMessage.\n * @param {string|undefined} givenMessage Message supplied by the caller.\n * @param {Array<*>} givenArgs The substitution arguments for givenMessage.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n * @private\n */\nexports.doAssertFailure_ = function(\n  defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  let message = 'Assertion failed';\n  let args;\n  if (givenMessage) {\n    message += `: ${givenMessage}`;\n    args = givenArgs;\n  } else if (defaultMessage) {\n    message += `: ${defaultMessage}`;\n    args = defaultArgs;\n  }\n  // The '' + works around an Opera 10 bug in the unit tests. Without it,\n  // a stack trace is added to var message above. With this, a stack trace is\n  // not added until this line (it causes the extra garbage to be added after\n  // the assertion message instead of in the middle of it).\n  const e = new exports.AssertionError(`${message}`, args || []);\n  exports.errorHandler_(e);\n};\n\n\n/**\n * Sets a custom error handler that can be used to customize the behavior of\n * assertion failures, for example by turning all assertion failures into log\n * messages.\n * @param {function(!goog.asserts.AssertionError)} errorHandler\n */\nexports.setErrorHandler = function(errorHandler) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_ = errorHandler;\n  }\n};\n\n\n/**\n * Checks if the condition evaluates to true if goog.asserts.ENABLE_ASSERTS is\n * true.\n * @template T\n * @param {T} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {T} The value of the condition.\n * @throws {goog.asserts.AssertionError} When the condition evaluates to false.\n */\nexports.assert = function(condition, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !condition) {\n    exports.doAssertFailure_(\n      '', null, opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return condition;\n};\n\n\n/**\n * Fails if goog.asserts.ENABLE_ASSERTS is true. This function is useful in case\n * when we want to add a check in the unreachable area like switch-case\n * statement:\n *\n * <pre>\n *  switch(type) {\n *    case FOO: doSomething(); break;\n *    case BAR: doSomethingElse(); break;\n *    default: goog.asserts.fail('Unrecognized type: ' + type);\n *      // We have only 2 types - \"default:\" section is unreachable code.\n *  }\n * </pre>\n *\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} Failure.\n */\nexports.fail = function(opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_(\n      new exports.AssertionError(\n        `Failure${opt_message ? `: ${opt_message}` : ''}`,\n        Array.prototype.slice.call(arguments, 1)));\n  }\n};\n\n\n/**\n * Checks if the value is a number if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {number} The value, guaranteed to be a number when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n */\nexports.assertNumber = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isNumber(value)) {\n    exports.doAssertFailure_(\n      'Expected number but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n\n/**\n * Checks if the value is a string if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {string} The value, guaranteed to be a string when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a string.\n */\nexports.assertString = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isString(value)) {\n    exports.doAssertFailure_(\n      'Expected string but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {string} */ (value);\n};\n\n\n/**\n * Checks if the value is a function if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Function} The value, guaranteed to be a function when asserts\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a function.\n */\nexports.assertFunction = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isFunction(value)) {\n    exports.doAssertFailure_(\n      'Expected function but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Function} */ (value);\n};\n\n\n/**\n * Checks if the value is an Object if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Object} The value, guaranteed to be a non-null object.\n * @throws {goog.asserts.AssertionError} When the value is not an object.\n */\nexports.assertObject = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isObject(value)) {\n    exports.doAssertFailure_(\n      'Expected object but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Object} */ (value);\n};\n\n\n/**\n * Checks if the value is an Array if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Array<?>} The value, guaranteed to be a non-null array.\n * @throws {goog.asserts.AssertionError} When the value is not an array.\n */\nexports.assertArray = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isArray(value)) {\n    exports.doAssertFailure_(\n      'Expected array but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Array<?>} */ (value);\n};\n\n\n/**\n * Checks if the value is a boolean if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {boolean} The value, guaranteed to be a boolean when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a boolean.\n */\nexports.assertBoolean = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isBoolean(value)) {\n    exports.doAssertFailure_(\n      'Expected boolean but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {boolean} */ (value);\n};\n\n\n/**\n * Checks if the value is a DOM Element if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Element} The value, likely to be a DOM Element when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not an Element.\n */\nexports.assertElement = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS &&\n      (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {\n    exports.doAssertFailure_(\n      'Expected Element but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Element} */ (value);\n};\n\n\n/**\n * Checks if the value is an instance of the user-defined type if\n * goog.asserts.ENABLE_ASSERTS is true.\n *\n * The compiler may tighten the type returned by this function.\n *\n * @param {?} value The value to check.\n * @param {function(new: T, ...)} type A user-defined constructor.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} When the value is not an instance of\n *     type.\n * @return {T}\n * @template T\n */\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !(value instanceof type)) {\n    exports.doAssertFailure_(\n      'Expected instanceof %s but got %s.',\n      [exports.getType_(type), exports.getType_(value)],\n      opt_message, Array.prototype.slice.call(arguments, 3));\n  }\n  return value;\n};\n\n\n/**\n * Checks that no enumerable keys are present in Object.prototype. Such keys\n * would break most code that use {@code for (var ... in ...)} loops.\n */\nexports.assertObjectPrototypeIsIntact = function() {\n  for (const key in Object.prototype) {\n    exports.fail(`${key} should not be enumerable in Object.prototype.`);\n  }\n};\n\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n * @param {*} value A constructor, object, or primitive.\n * @return {string} The best display name for the value, or 'unknown type name'.\n * @private\n */\nexports.getType_ = function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || 'unknown type name';\n  } else if (value instanceof Object) {\n    return value.constructor.displayName || value.constructor.name ||\n        Object.prototype.toString.call(value);\n  } else {\n    return value === null ? 'null' : typeof value;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapDirective from 'ngeo/map/directive.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap.js';\n\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', [\n  ngeoDatasourceSyncDataSourcesMap.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\nimport googAsserts from 'goog/asserts.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSyncDataSourcesMap', [\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('ngeoSyncDataSourcesMap', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module app.mapfishprint\n*/\nconst exports = {};\n\nimport './mapfishprint.css';\nimport './common_dependencies.js';\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport ngeoPrintService from 'ngeo/print/Service.js';\nimport ngeoPrintUtils from 'ngeo/print/Utils.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n\n/** @type {!angular.Module} **/\nconst module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name\n]);\n\n\n/**\n * @const\n * @private\n */\napp.WMS_URL_ = 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/' +\n    'mapserv_proxy';\n\n\n/**\n * @const\n * @private\n */\napp.PRINT_URL_ = 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/' +\n    'printproxy';\n\n\n/**\n * @const\n * @private\n */\napp.PRINT_SCALES_ = [100, 250, 500, 2500, 5000, 10000, 25000, 50000,\n  100000, 500000];\n\n\n/**\n * @const\n * @private\n */\napp.PRINT_FORMAT_ = 'pdf';\n\n\n/**\n * @const\n * @private\n */\napp.PRINT_LAYOUT_ = 'A4 portrait';\n\n\n/**\n * @const\n * @private\n */\napp.PRINT_DPI_ = 72;\n\n\n/**\n * @const\n * @private\n */\napp.PRINT_PAPER_SIZE_ = [555, 675];\n\n\n/**\n * @constructor\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {ngeox.CreatePrint} ngeoCreatePrint The ngeo Create Print function.\n * @param {ngeo.print.Utils} ngeoPrintUtils The ngeo PrintUtils service.\n *//* @ngInject\n * @export\n */\napp.MainController = function($timeout, ngeoCreatePrint, ngeoPrintUtils) {\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerImage({\n        source: new olSourceImageWMS({\n          url: app.WMS_URL_,\n          params: {\n            'LAYERS': 'osm'\n          },\n          serverType: /** @type {ol.source.WMSServerType} */ ('mapserver')\n        })\n      }),\n      new olLayerVector({\n        source: new olSourceVector({\n          url: 'data/polygon-swizerland.json',\n          format: new olFormatGeoJSON({\n            defaultDataProjection: 'EPSG:21781'\n          })\n        })\n      })\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1],\n      center: [537635, 152640],\n      zoom: 3\n    })\n  });\n\n  /**\n   * Text to display a \"loading\" message while waiting for the report.\n   * @type {string}\n   * @export\n   */\n  this.printState = '';\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {ngeo.print.Service}\n   * @private\n   */\n  this.print_ = ngeoCreatePrint(app.PRINT_URL_);\n\n  /**\n   * @type {ngeo.print.Utils}\n   * @private\n   */\n  this.printUtils_ = ngeoPrintUtils;\n\n  /**\n   * @type {function(ol.render.Event)}\n   */\n  const postcomposeListener = ngeoPrintUtils.createPrintMaskPostcompose(\n    /**\n       * @return {ol.Size} Size in dots of the map to print.\n       */\n    () => app.PRINT_PAPER_SIZE_,\n    /**\n       * @param {olx.FrameState} frameState Frame state.\n       * @return {number} Scale of the map to print.\n       */\n    (frameState) => {\n      const mapSize = frameState.size;\n      const mapResolution = frameState.viewState.resolution;\n      // we test mapSize and mapResolution just to please the compiler\n      return mapSize !== undefined && mapResolution !== undefined ?\n        ngeoPrintUtils.getOptimalScale(mapSize, mapResolution,\n          app.PRINT_PAPER_SIZE_, app.PRINT_SCALES_) :\n        app.PRINT_SCALES_[0];\n    });\n\n  /**\n   * Draw the print window in a map postcompose listener.\n   */\n  this.map.on('postcompose', postcomposeListener);\n};\n\n\n/**\n * @export\n */\napp.MainController.prototype.print = function() {\n  const map = this.map;\n\n  const mapSize = map.getSize();\n  const viewResolution = map.getView().getResolution();\n\n  // we test mapSize and viewResolution just to please the compiler\n  const scale = mapSize !== undefined && viewResolution !== undefined ?\n    this.printUtils_.getOptimalScale(mapSize, viewResolution,\n      app.PRINT_PAPER_SIZE_, app.PRINT_SCALES_) :\n    app.PRINT_SCALES_[0];\n\n  const dpi = app.PRINT_DPI_;\n  const format = app.PRINT_FORMAT_;\n  const layout = app.PRINT_LAYOUT_;\n\n  this.printState = 'Printing...';\n\n  const spec = this.print_.createSpec(map, scale, dpi, layout, format, {\n    'datasource': [],\n    'debug': 0,\n    'comments': 'My comments',\n    'title': 'My print'\n  });\n\n  this.print_.createReport(spec).then(\n    this.handleCreateReportSuccess_.bind(this),\n    this.handleCreateReportError_.bind(this)\n  );\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\napp.MainController.prototype.handleCreateReportSuccess_ = function(resp) {\n  const mfResp = /** @type {MapFishPrintReportResponse} */ (resp.data);\n  this.getStatus_(mfResp.ref);\n};\n\n\n/**\n * @param {string} ref Ref.\n * @private\n */\napp.MainController.prototype.getStatus_ = function(ref) {\n  this.print_.getStatus(ref).then(\n    this.handleGetStatusSuccess_.bind(this, ref),\n    this.handleGetStatusError_.bind(this)\n  );\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\napp.MainController.prototype.handleCreateReportError_ = function(resp) {\n  this.printState = 'Print error';\n};\n\n\n/**\n * @param {string} ref Ref.\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\napp.MainController.prototype.handleGetStatusSuccess_ = function(ref, resp) {\n  const mfResp = /** @type {MapFishPrintStatusResponse} */ (resp.data);\n  const done = mfResp.done;\n  if (done) {\n    // The report is ready. Open it by changing the window location.\n    this.printState = '';\n    window.location.href = this.print_.getReportUrl(ref);\n  } else {\n    // The report is not ready yet. Check again in 1s.\n    const that = this;\n    this.$timeout_(() => {\n      that.getStatus_(ref);\n    }, 1000, false);\n  }\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\napp.MainController.prototype.handleGetStatusError_ = function(resp) {\n  this.printState = 'Print error';\n};\n\n\nmodule.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/mapfishprint.js","/**\n * @module ngeo.print.Service\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPrintVectorEncoder from 'ngeo/print/VectorEncoder.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olMath from 'ol/math.js';\nimport olSize from 'ol/size.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport olTilegridWMTS from 'ol/tilegrid/WMTS.js';\n\n/**\n * Provides a function to create ngeo.print.Service objects used to\n * interact with MapFish Print v3 services.\n *\n * ngeo.print.Service objects expose the following methods:\n *\n * - createSpec: create a report specification object\n * - createReport: send a create report request\n * - getStatus: get the status of a report\n * - getReportUrl: get the URL of a report\n * - getCapabilities: get the capabilities of the server\n *\n *\n *     let printBaseUrl = 'http://example.com/print';\n *     let print = new ngeo.print.Service(printBaseUrl);\n *\n *     let scale = 5000;\n *     let dpi = 72;\n *     let layout = 'A4 portrait';\n *     let format = 'pdf';\n *     let reportSpec = print.createSpec(map, scale, dpi, layout, format, {\n *       'title': 'A title for my report',\n *       'rotation': 45 // degree\n *     });\n *\n * See our live example: [../examples/mapfishprint.html](../examples/mapfishprint.html)\n *\n * TODO and limitations:\n *\n * - createSpec should also accept a bbox instead of a center and a scale.\n * - Add support for ol.style.RegularShape. MapFish Print supports symbols\n *   like crosses, stars and squares, so printing regular shapes should be\n *   possible.\n * - ol.style.Icon may use a sprite image, and offsets to define to rectangle\n *   to use within the sprite. This type of icons won't be printed correctly\n *   as MapFish Print does not support sprite icons.\n *\n * @constructor\n * @struct\n * @param {string} url URL to MapFish print web service.\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper service.\n */\nconst exports = function(url, $http, ngeoLayerHelper) {\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = url;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.print.VectorEncoder}\n   * @private\n   */\n  this.vectorEncoder_ = new ngeoPrintVectorEncoder();\n};\n\n\n/**\n * Cancel a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.cancel = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/cancel/${ref}`;\n  // \"delete\" is a reserved word, so use ['delete']\n  return this.$http_['delete'](url, httpConfig);\n};\n\n\n/**\n * Create a report specification.\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {number} dpi DPI.\n * @param {string} layout Layout.\n * @param {string} format Formats.\n * @param {Object.<string, *>} customAttributes Custom attributes.\n * @return {MapFishPrintSpec} The print spec.\n * @export\n */\nexports.prototype.createSpec = function(\n  map, scale, dpi, layout, format, customAttributes) {\n\n  const specMap = /** @type {MapFishPrintMap} */ ({\n    dpi: dpi,\n    rotation: /** number */ (customAttributes['rotation'])\n  });\n\n  this.encodeMap_(map, scale, specMap);\n\n  const attributes = /** @type {!MapFishPrintAttributes} */ ({\n    map: specMap\n  });\n  olObj.assign(attributes, customAttributes);\n\n  const spec = /** @type {MapFishPrintSpec} */ ({\n    attributes,\n    format,\n    layout\n  });\n\n  return spec;\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {MapFishPrintMap} object Object.\n * @private\n */\nexports.prototype.encodeMap_ = function(map, scale, object) {\n  const view = map.getView();\n  const viewCenter = view.getCenter();\n  const viewProjection = view.getProjection();\n  const viewResolution = view.getResolution();\n  const viewRotation = object.rotation || olMath.toDegrees(view.getRotation());\n\n  goog.asserts.assert(viewCenter !== undefined);\n  goog.asserts.assert(viewProjection !== undefined);\n\n  object.center = viewCenter;\n  object.projection = viewProjection.getCode();\n  object.rotation = viewRotation;\n  object.scale = scale;\n  object.layers = [];\n\n  const mapLayerGroup = map.getLayerGroup();\n  goog.asserts.assert(mapLayerGroup !== null);\n  let layers = this.ngeoLayerHelper_.getFlatLayers(mapLayerGroup);\n  layers = layers.slice().reverse();\n\n  layers.forEach((layer) => {\n    if (layer.getVisible()) {\n      goog.asserts.assert(viewResolution !== undefined);\n      this.encodeLayer(object.layers, layer, viewResolution);\n    }\n  });\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Base} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeLayer = function(arr, layer, resolution) {\n  if (layer instanceof olLayerImage) {\n    this.encodeImageLayer_(arr, layer);\n  } else if (layer instanceof olLayerTile) {\n    this.encodeTileLayer_(arr, layer);\n  } else if (layer instanceof olLayerVector) {\n    this.vectorEncoder_.encodeVectorLayer(arr, layer, resolution);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageLayer_ = function(arr, layer) {\n  goog.asserts.assertInstanceof(layer, olLayerImage);\n  const source = layer.getSource();\n  if (source instanceof olSourceImageWMS) {\n    this.encodeImageWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  goog.asserts.assertInstanceof(layer, olLayerImage);\n  goog.asserts.assertInstanceof(source, olSourceImageWMS);\n\n  const url = source.getUrl();\n  if (url !== undefined) {\n    this.encodeWmsLayer_(\n      arr, layer.getOpacity(), url, source.getParams());\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {number} opacity Opacity of the layer.\n * @param {string} url Url of the WMS server.\n * @param {Object} params Url parameters\n * @private\n */\nexports.prototype.encodeWmsLayer_ = function(arr, opacity, url, params) {\n  if (url.startsWith('//')) {\n    url = window.location.protocol  + url;\n  }\n  const url_url = new URL(url);\n  const customParams = {'TRANSPARENT': true};\n  if (url_url.searchParams) {\n    for (const element of url_url.searchParams) {\n      customParams[element[0]] = element[1];\n    }\n  }\n  for (const key in params) {\n    const value = params[key];\n    // remove empty params\n    if (value !== null && value !== undefined) {\n      customParams[key] = value;\n    }\n  }\n  delete customParams['LAYERS'];\n  delete customParams['FORMAT'];\n  delete customParams['SERVERTYPE'];\n  delete customParams['VERSION'];\n\n  const object = /** @type {MapFishPrintWmsLayer} */ ({\n    baseURL: exports.getAbsoluteUrl_(url_url.origin + url_url.pathname),\n    imageFormat: 'FORMAT' in params ? params['FORMAT'] : 'image/png',\n    layers: params['LAYERS'].split(','),\n    customParams: customParams,\n    serverType: params['SERVERTYPE'],\n    type: 'wms',\n    opacity: opacity,\n    version: params['VERSION']\n  });\n  arr.push(object);\n};\n\n\n/**\n * @param {string} url URL.\n * @return {string} Absolute URL.\n * @private\n */\nexports.getAbsoluteUrl_ = function(url) {\n  const a = document.createElement('a');\n  a.href = encodeURI(url);\n  return decodeURI(a.href);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileLayer_ = function(arr, layer) {\n  goog.asserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  if (source instanceof olSourceWMTS) {\n    this.encodeTileWmtsLayer_(arr, layer);\n  } else if (source instanceof olSourceTileWMS) {\n    this.encodeTileWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmtsLayer_ = function(arr, layer) {\n  goog.asserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  goog.asserts.assertInstanceof(source, olSourceWMTS);\n\n  const projection = source.getProjection();\n  const tileGrid = source.getTileGrid();\n  goog.asserts.assertInstanceof(tileGrid, olTilegridWMTS);\n  const matrixIds = tileGrid.getMatrixIds();\n\n  /** @type {Array.<MapFishPrintWmtsMatrix>} */\n  const matrices = [];\n\n  for (let i = 0, ii = matrixIds.length; i < ii; ++i) {\n    const tileRange = tileGrid.getFullTileRange(i);\n    matrices.push(/** @type {MapFishPrintWmtsMatrix} */ ({\n      identifier: matrixIds[i],\n      scaleDenominator: tileGrid.getResolution(i) *\n          projection.getMetersPerUnit() / 0.28E-3,\n      tileSize: olSize.toSize(tileGrid.getTileSize(i)),\n      topLeftCorner: tileGrid.getOrigin(i),\n      matrixSize: [\n        tileRange.maxX - tileRange.minX,\n        tileRange.maxY - tileRange.minY\n      ]\n    }));\n  }\n\n  const dimensions = source.getDimensions();\n  const dimensionKeys = Object.keys(dimensions);\n\n  const object = /** @type {MapFishPrintWmtsLayer} */ ({\n    baseURL: this.getWmtsUrl_(source),\n    dimensions: dimensionKeys,\n    dimensionParams: dimensions,\n    imageFormat: source.getFormat(),\n    layer: source.getLayer(),\n    matrices: matrices,\n    matrixSet: source.getMatrixSet(),\n    opacity: layer.getOpacity(),\n    requestEncoding: source.getRequestEncoding(),\n    style: source.getStyle(),\n    type: 'WMTS',\n    version: source.getVersion()\n  });\n\n  arr.push(object);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  goog.asserts.assertInstanceof(layer, olLayerTile);\n  goog.asserts.assertInstanceof(source, olSourceTileWMS);\n\n  this.encodeWmsLayer_(\n    arr, layer.getOpacity(), source.getUrls()[0], source.getParams());\n};\n\n\n/**\n * Return the WMTS URL to use in the print spec.\n * @param {ol.source.WMTS} source The WMTS source.\n * @return {string} URL.\n * @private\n */\nexports.prototype.getWmtsUrl_ = function(source) {\n  const urls = source.getUrls();\n  goog.asserts.assert(urls.length > 0);\n  return exports.getAbsoluteUrl_(urls[0]);\n};\n\n\n/**\n * Send a create report request to the MapFish Print service.\n * @param {MapFishPrintSpec} printSpec Print specification.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.createReport = function(printSpec, opt_httpConfig) {\n  const format = printSpec.format || 'pdf';\n  const url = `${this.url_}/report.${format}`;\n  const httpConfig = /** @type {!angular.$http.Config} */ ({\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8'\n    }\n  });\n  olObj.assign(httpConfig,\n    opt_httpConfig !== undefined ? opt_httpConfig : {});\n  return this.$http_.post(url, printSpec, httpConfig);\n};\n\n\n/**\n * Get the status of a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.getStatus = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/status/${ref}.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * Get the URL of a report.\n * @param {string} ref Print report reference.\n * @return {string} The report URL for this ref.\n * @export\n */\nexports.prototype.getReportUrl = function(ref) {\n  return `${this.url_}/report/${ref}`;\n};\n\n\n/**\n * Get the print capabilities from MapFish Print.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n */\nexports.prototype.getCapabilities = function(opt_httpConfig) {\n  const httpConfig =\n    opt_httpConfig !== undefined ? opt_httpConfig : /** @type {angular.$http.Config} */ ({\n      withCredentials: true\n    });\n  const url = `${this.url_}/capabilities.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @return {ngeox.CreatePrint} The function to create a print service.\n *//* @ngInject\n * @ngdoc service\n * @ngname ngeoCreatePrint\n */\nexports.createPrintServiceFactory = function($http, ngeoLayerHelper) {\n  return (\n    /**\n     * @param {string} url URL to MapFish print service.\n     */\n    function(url) {\n      return new exports(url, $http, ngeoLayerHelper);\n    }\n  );\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrint', [\n  ngeoMapLayerHelper.module.name\n]);\nexports.module.service('ngeoPrintService', exports);\nexports.module.factory('ngeoCreatePrint', exports.createPrintServiceFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/print/Service.js","/**\n * @module ngeo.print.VectorEncoder\n*/\nimport * as olBase from 'ol/index.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport * as olMath from 'ol/math.js';\nimport olStyleIcon from 'ol/style/Icon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport * as olColor from 'ol/color.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @constructor\n */\nconst exports = function() {\n  /**\n   * @type {ol.format.GeoJSON}\n   */\n  this.geojsonFormat = new olFormatGeoJSON();\n};\n\n\n/**\n * @enum {string}\n */\nexports.PrintStyleType = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.print.VectorEncoder.PrintStyleType>}\n * @private\n */\nexports.PrintStyleTypes_ = {\n  'LineString': exports.PrintStyleType.LINE_STRING,\n  'Point': exports.PrintStyleType.POINT,\n  'Polygon': exports.PrintStyleType.POLYGON,\n  'MultiLineString': exports.PrintStyleType.LINE_STRING,\n  'MultiPoint': exports.PrintStyleType.POINT,\n  'MultiPolygon': exports.PrintStyleType.POLYGON\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Vector} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeVectorLayer = function(arr, layer, resolution) {\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceVector);\n\n  const features = source.getFeatures();\n\n  const /** @type {Array.<GeoJSONFeature>} */ geojsonFeatures = [];\n  const mapfishStyleObject = /** @type {MapFishPrintVectorStyle} */ ({\n    version: 2\n  });\n\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const originalFeature = features[i];\n\n    let styleData = null;\n    let styleFunction = originalFeature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      styleData = styleFunction.call(originalFeature, resolution);\n    } else {\n      styleFunction = layer.getStyleFunction();\n      if (styleFunction !== undefined) {\n        styleData = styleFunction.call(layer, originalFeature, resolution);\n      }\n    }\n    const origGeojsonFeature = this.geojsonFormat.writeFeatureObject(originalFeature);\n    /**\n     * @type {Array<ol.style.Style>}\n     */\n    const styles = (styleData !== null && !Array.isArray(styleData)) ? [styleData] : styleData;\n    googAsserts.assert(Array.isArray(styles));\n\n    if (styles !== null && styles.length > 0) {\n      let isOriginalFeatureAdded = false;\n      for (let j = 0, jj = styles.length; j < jj; ++j) {\n        const style = styles[j];\n        const styleId = olBase.getUid(style).toString();\n        let geometry = style.getGeometry();\n        let geojsonFeature;\n        if (!geometry) {\n          geojsonFeature = origGeojsonFeature;\n          geometry = originalFeature.getGeometry();\n          // no need to encode features with no geometry\n          if (!geometry) {\n            continue;\n          }\n          if (!isOriginalFeatureAdded) {\n            geojsonFeatures.push(geojsonFeature);\n            isOriginalFeatureAdded = true;\n          }\n        } else {\n          let styledFeature = originalFeature.clone();\n          styledFeature.setGeometry(geometry);\n          geojsonFeature = this.geojsonFormat.writeFeatureObject(styledFeature);\n          geometry = styledFeature.getGeometry();\n          styledFeature = null;\n          geojsonFeatures.push(geojsonFeature);\n        }\n\n        const geometryType = geometry.getType();\n        if (geojsonFeature.properties === null) {\n          geojsonFeature.properties = {};\n        }\n\n        const featureStyleProp = `_ngeo_style_${j}`;\n        this.encodeVectorStyle(mapfishStyleObject, geometryType, style, styleId, featureStyleProp);\n        geojsonFeature.properties[featureStyleProp] = styleId;\n      }\n    }\n  }\n\n  // MapFish Print fails if there are no style rules, even if there are no\n  // features either. To work around this we just ignore the layer if the\n  // array of GeoJSON features is empty.\n  // See https://github.com/mapfish/mapfish-print/issues/279\n\n  if (geojsonFeatures.length > 0) {\n    const geojsonFeatureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n      type: 'FeatureCollection',\n      features: geojsonFeatures\n    });\n    const object = /** @type {MapFishPrintVectorLayer} */ ({\n      geoJson: geojsonFeatureCollection,\n      opacity: layer.getOpacity(),\n      style: mapfishStyleObject,\n      type: 'geojson'\n    });\n    arr.push(object);\n  }\n};\n\n\n/**\n * @param {MapFishPrintVectorStyle} object MapFish style object.\n * @param {ol.geom.GeometryType} geometryType Type of the GeoJSON geometry\n * @param {ol.style.Style} style Style.\n * @param {string} styleId Style id.\n * @param {string} featureStyleProp Feature style property name.\n */\nexports.prototype.encodeVectorStyle = function(object, geometryType, style, styleId, featureStyleProp) {\n  if (!(geometryType in exports.PrintStyleTypes_)) {\n    // unsupported geometry type\n    return;\n  }\n  const styleType = exports.PrintStyleTypes_[geometryType];\n  const key = `[${featureStyleProp} = '${styleId}']`;\n  if (key in object) {\n    // do nothing if we already have a style object for this CQL rule\n    return;\n  }\n  const styleObject = /** @type {MapFishPrintSymbolizers} */ ({\n    symbolizers: []\n  });\n  object[key] = styleObject;\n  const fillStyle = style.getFill();\n  const imageStyle = style.getImage();\n  const strokeStyle = style.getStroke();\n  const textStyle = style.getText();\n  if (styleType === exports.PrintStyleType.POLYGON) {\n    if (fillStyle !== null) {\n      this.encodeVectorStylePolygon(\n        styleObject.symbolizers, fillStyle, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.LINE_STRING) {\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleLine(styleObject.symbolizers, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.POINT) {\n    if (imageStyle !== null) {\n      this.encodeVectorStylePoint(styleObject.symbolizers, imageStyle);\n    }\n  }\n  if (textStyle !== null) {\n    this.encodeTextStyle(styleObject.symbolizers, textStyle);\n  }\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerPolygon} symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @protected\n */\nexports.prototype.encodeVectorStyleFill = function(symbolizer, fillStyle) {\n  let fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n    fillColor = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    symbolizer.fillColor = ngeoUtils.rgbArrayToHex(fillColor);\n    symbolizer.fillOpacity = fillColor[3];\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleLine = function(symbolizers, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerLine} */ ({\n    type: 'line'\n  });\n  this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Image} imageStyle Image style.\n * @protected\n */\nexports.prototype.encodeVectorStylePoint = function(symbolizers, imageStyle) {\n  let symbolizer;\n  if (imageStyle instanceof olStyleCircle) {\n    symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n      type: 'point'\n    });\n    symbolizer.pointRadius = imageStyle.getRadius();\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      this.encodeVectorStyleFill(symbolizer, fillStyle);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n    }\n  } else if (imageStyle instanceof olStyleIcon) {\n    const src = imageStyle.getSrc();\n    if (src !== undefined) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point',\n        externalGraphic: src\n      });\n      const opacity = imageStyle.getOpacity();\n      if (opacity !== null) {\n        symbolizer.graphicOpacity = opacity;\n      }\n      const size = imageStyle.getSize();\n      if (size !== null) {\n        let scale = imageStyle.getScale();\n        if (isNaN(scale)) {\n          scale = 1;\n        }\n        symbolizer.graphicWidth = size[0] * scale;\n        symbolizer.graphicHeight = size[1] * scale;\n      }\n      let rotation = imageStyle.getRotation();\n      if (isNaN(rotation)) {\n        rotation = 0;\n      }\n      symbolizer.rotation = olMath.toDegrees(rotation);\n    }\n  } else if (imageStyle instanceof olStyleRegularShape) {\n    /**\n     * Mapfish Print does not support image defined with ol.style.RegularShape.\n     * As a workaround, I try to map the image on a well-known image name.\n     */\n    const points = /** @type {ol.style.RegularShape} */ (imageStyle).getPoints();\n    if (points !== null) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point'\n      });\n      if (points === 4) {\n        symbolizer.graphicName = 'square';\n      } else if (points === 3) {\n        symbolizer.graphicName = 'triangle';\n      } else if (points === 5) {\n        symbolizer.graphicName = 'star';\n      } else if (points === 8) {\n        symbolizer.graphicName = 'cross';\n      }\n      const sizeShape = imageStyle.getSize();\n      if (sizeShape !== null) {\n        symbolizer.graphicWidth = sizeShape[0];\n        symbolizer.graphicHeight = sizeShape[1];\n      }\n      const rotationShape = imageStyle.getRotation();\n      if (!isNaN(rotationShape) && rotationShape !== 0) {\n        symbolizer.rotation = olMath.toDegrees(rotationShape);\n      }\n      const opacityShape = imageStyle.getOpacity();\n      if (opacityShape !== null) {\n        symbolizer.graphicOpacity = opacityShape;\n      }\n      const strokeShape = imageStyle.getStroke();\n      if (strokeShape !== null) {\n        this.encodeVectorStyleStroke(symbolizer, strokeShape);\n      }\n      const fillShape = imageStyle.getFill();\n      if (fillShape !== null) {\n        this.encodeVectorStyleFill(symbolizer, fillShape);\n      }\n    }\n  }\n  if (symbolizer !== undefined) {\n    symbolizers.push(symbolizer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStylePolygon = function(symbolizers, fillStyle, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerPolygon} */ ({\n    type: 'polygon'\n  });\n  this.encodeVectorStyleFill(symbolizer, fillStyle);\n  if (strokeStyle !== null) {\n    this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  }\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerLine|MapFishPrintSymbolizerPolygon}\n *      symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleStroke = function(symbolizer, strokeStyle) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    symbolizer.strokeColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    symbolizer.strokeOpacity = strokeColorRgba[3];\n  }\n  const strokeDashstyle = strokeStyle.getLineDash();\n  if (strokeDashstyle !== null) {\n    symbolizer.strokeDashstyle = strokeDashstyle.join(' ');\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    symbolizer.strokeWidth = strokeWidth;\n  }\n  const strokeLineCap = strokeStyle.getLineCap();\n  if (strokeLineCap) {\n    symbolizer.strokeLinecap = strokeStyle.getLineCap();\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizerText>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Text} textStyle Text style.\n * @protected\n */\nexports.prototype.encodeTextStyle = function(symbolizers, textStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerText} */ ({\n    type: 'Text'\n  });\n  const label = textStyle.getText();\n  if (label !== undefined) {\n    symbolizer.label = label;\n    let xAlign = 'c';\n    let yAlign = 'm';\n\n    const olTextAlign = textStyle.getTextAlign();\n    // 'left', 'right', 'center', 'end' or 'start'.\n    if (olTextAlign === 'left' || olTextAlign === 'start') {\n      xAlign = 'l';\n    } else if (olTextAlign === 'right' || olTextAlign === 'end') {\n      xAlign = 'r';\n    }\n\n    const olTextBaseline = textStyle.getTextBaseline();\n    // 'bottom', 'top', 'middle', 'alphabetic', 'hanging' or 'ideographic'\n    if (olTextBaseline === 'bottom') {\n      yAlign = 'l';\n    } else if (olTextBaseline === 'top') {\n      yAlign = 't';\n    }\n    symbolizer.labelAlign = `${xAlign}${yAlign}`;\n\n    const labelRotation = textStyle.getRotation();\n    if (labelRotation !== undefined) {\n      // Mapfish Print expects a string, not a number to rotate text\n      symbolizer.labelRotation = (labelRotation * 180 / Math.PI).toString();\n      // rotate around the vertical/horizontal center\n      symbolizer.labelAlign = 'cm';\n    }\n\n    const fontStyle = textStyle.getFont();\n    if (fontStyle !== undefined) {\n      const font = fontStyle.split(' ');\n      if (font.length >= 3) {\n        symbolizer.fontWeight = font[0];\n        symbolizer.fontSize = font[1];\n        symbolizer.fontFamily = font.splice(2).join(' ');\n      }\n    }\n\n    const strokeStyle = textStyle.getStroke();\n    if (strokeStyle !== null) {\n      const strokeColor = strokeStyle.getColor();\n      googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n      const strokeColorRgba = olColor.asArray(strokeColor);\n      googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n      symbolizer.haloColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n      symbolizer.haloOpacity = strokeColorRgba[3];\n      const width = strokeStyle.getWidth();\n      if (width !== undefined) {\n        // Width is a stroke, radius a radius, so divide by 2\n        symbolizer.haloRadius = width / 2;\n      }\n    }\n\n    const fillStyle = textStyle.getFill();\n    if (fillStyle !== null) {\n      const fillColor = fillStyle.getColor();\n      googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n      const fillColorRgba = olColor.asArray(fillColor);\n      googAsserts.assert(Array.isArray(fillColorRgba), 'only supporting fill colors');\n      symbolizer.fontColor = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    }\n\n    // Mapfish Print allows offset only if labelAlign is defined.\n    if (symbolizer.labelAlign !== undefined) {\n      symbolizer.labelXOffset = textStyle.getOffsetX();\n      // Mapfish uses the opposite direction of OpenLayers for y axis, so the\n      // minus sign is required for the y offset to be identical.\n      symbolizer.labelYOffset = -textStyle.getOffsetY();\n    }\n\n    symbolizers.push(symbolizer);\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/print/VectorEncoder.js","/**\n * @module ngeo.print.Utils\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olHas from 'ol/has.js';\nimport * as olMath from 'ol/math.js';\n\n/**\n * Provides a service with print utility functions.\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoPrintUtils\n */\nconst exports = function() {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfHorizontalDistance_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfVerticalDistance_;\n\n};\n\n\n/**\n * @const\n * @private\n */\nexports.INCHES_PER_METER_ = 39.37;\n\n\n/**\n * @const\n * @private\n */\nexports.DOTS_PER_INCH_ = 72;\n\n\n/**\n * Return a function to use as map postcompose listener for drawing a print\n * mask on the map.\n * @param {function():ol.Size} getSize User-defined function returning the\n *     size in dots of the map to print.\n * @param {function(olx.FrameState):number} getScale User-defined function\n *     returning the scale of the map to print.\n * @param {function():number=} opt_rotation User defined function returning the\n *     inclination of the canvas in degree (-180 to 180).\n * returning the scale of the map to print.\n * @return {function(ol.render.Event)} Function to use as a map postcompose\n * listener.\n * @export\n */\nexports.prototype.createPrintMaskPostcompose = function(getSize, getScale, opt_rotation) {\n  const self = this;\n\n  return (\n  /**\n        * @param {ol.render.Event} evt Postcompose event.\n        */\n    function(evt) {\n      const context = evt.context;\n      const frameState = evt.frameState;\n\n      const resolution = frameState.viewState.resolution;\n\n      const viewportWidth = frameState.size[0] * frameState.pixelRatio;\n      const viewportHeight = frameState.size[1] * frameState.pixelRatio;\n\n      const center = [viewportWidth / 2, viewportHeight / 2];\n\n      const size = getSize();\n      const height = size[1] * olHas.DEVICE_PIXEL_RATIO;\n      const width = size[0] * olHas.DEVICE_PIXEL_RATIO;\n      const scale = getScale(frameState);\n\n      const ppi = exports.DOTS_PER_INCH_;\n      const ipm = exports.INCHES_PER_METER_;\n\n      const extentHalfWidth =\n           (((width / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfHorizontalDistance_ =\n           (((size[0] / ppi) / ipm) * scale) / 2;\n\n      const extentHalfHeight =\n           (((height / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfVerticalDistance_ =\n           (((size[1] / ppi) / ipm) * scale) / 2;\n\n      // Draw a mask on the whole map.\n      context.beginPath();\n      context.moveTo(0, 0);\n      context.lineTo(viewportWidth, 0);\n      context.lineTo(viewportWidth, viewportHeight);\n      context.lineTo(0, viewportHeight);\n      context.lineTo(0, 0);\n      context.closePath();\n\n      // Draw the print zone\n      if (!opt_rotation) {\n        self.drawPrintZone_(context, center, extentHalfWidth,\n          extentHalfHeight);\n      } else {\n        const rotation = olMath.toRadians(opt_rotation());\n        self.drawPrintZoneWithRotation_(context, center, extentHalfWidth,\n          extentHalfHeight, rotation);\n      }\n\n      // Fill the mask\n      context.fillStyle = 'rgba(0, 5, 25, 0.5)';\n      context.fill();\n    }\n  );\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @private\n */\nexports.prototype.drawPrintZone_ = function(context, center,\n  extentHalfWidth, extentHalfHeight) {\n  const minx = center[0] - extentHalfWidth;\n  const miny = center[1] - extentHalfHeight;\n  const maxx = center[0] + extentHalfWidth;\n  const maxy = center[1] + extentHalfHeight;\n\n  context.moveTo(minx, miny);\n  context.lineTo(minx, maxy);\n  context.lineTo(maxx, maxy);\n  context.lineTo(maxx, miny);\n  context.lineTo(minx, miny);\n  context.closePath();\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @param {number} rotation Rotation value in radians.\n * @private\n */\nexports.prototype.drawPrintZoneWithRotation_ = function(context, center,\n  extentHalfWidth, extentHalfHeight, rotation) {\n  // diagonal = distance p1 to center.\n  const diagonal = Math.sqrt(Math.pow(extentHalfWidth, 2) +\n      Math.pow(extentHalfHeight, 2));\n  // gamma = angle between horizontal and diagonal (with rotation).\n  const gamma = Math.atan(extentHalfHeight / extentHalfWidth) - rotation;\n  // omega = angle between diagonal and vertical (with rotation).\n  const omega = Math.atan(extentHalfWidth / extentHalfHeight) - rotation;\n  // Calculation of each corner.\n  const x1 = center[0] - Math.cos(gamma) * diagonal;\n  const y1 = center[1] + Math.sin(gamma) * diagonal;\n  const x2 = center[0] + Math.sin(omega) * diagonal;\n  const y2 = center[1] + Math.cos(omega) * diagonal;\n  const x3 = center[0] + Math.cos(gamma) * diagonal;\n  const y3 = center[1] - Math.sin(gamma) * diagonal;\n  const x4 = center[0] - Math.sin(omega) * diagonal;\n  const y4 = center[1] - Math.cos(omega) * diagonal;\n\n  context.moveTo(x1, y1);\n  context.lineTo(x2, y2);\n  context.lineTo(x3, y3);\n  context.lineTo(x4, y4);\n  context.lineTo(x1, y1);\n  context.closePath();\n};\n\n\n/**\n * Get the optimal print scale for a map, the map being defined by its\n * size (in pixels) and resolution (in map units per pixel).\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {number} mapResolution Resolution of the map on the screen.\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {Array.<number>} printMapScales Supported map scales on the paper.\n * The scales are provided as scale denominators, sorted in ascending order.\n * E.g. `[500, 1000, 2000, 4000]`.\n * @return {number} The best scale. `-1` is returned if there is no optimal\n * scale, that is the optimal scale is lower than or equal to the first value\n * in `printMapScales`.\n * @export\n */\nexports.prototype.getOptimalScale = function(\n  mapSize, mapResolution, printMapSize, printMapScales) {\n\n  const mapWidth = mapSize[0] * mapResolution;\n  const mapHeight = mapSize[1] * mapResolution;\n\n  const scaleWidth = mapWidth * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[0];\n  const scaleHeight = mapHeight * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[1];\n\n  const scale = Math.min(scaleWidth, scaleHeight);\n\n  let optimal = -1;\n  for (let i = 0, ii = printMapScales.length; i < ii; ++i) {\n    if (scale > printMapScales[i]) {\n      optimal = printMapScales[i];\n    }\n  }\n\n  return optimal;\n};\n\n\n/**\n * Get the optimal map resolution for a print scale and a map size.\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {number} printMapScale Map scale on the paper.\n * @return {number} The optimal map resolution.\n * @export\n */\nexports.prototype.getOptimalResolution = function(\n  mapSize, printMapSize, printMapScale) {\n\n  const dotsPerMeter =\n      exports.DOTS_PER_INCH_ * exports.INCHES_PER_METER_;\n\n  const resolutionX = (printMapSize[0] * printMapScale) /\n      (dotsPerMeter * mapSize[0]);\n  const resolutionY = (printMapSize[1] * printMapScale) /\n      (dotsPerMeter * mapSize[1]);\n\n  const optimalResolution = Math.max(resolutionX, resolutionY);\n\n  return optimalResolution;\n};\n\n\n/**\n * Get the coordinates of the bottom left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the bottom left corner.\n */\nexports.prototype.getBottomLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the bottom rigth corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.ç\n * @return {ol.Coordinate} The coordinates of the bottom rigth corner.\n */\nexports.prototype.getBottomRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up left corner.\n */\nexports.prototype.getUpLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up right corner.\n */\nexports.prototype.getUpRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrintUtils', []);\nexports.module.service('ngeoPrintUtils', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/print/Utils.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 72\n// module chunks = 0 1 2 3 4 5 7 9 10","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 73\n// module chunks = 0 1 3 4 5 12 13 17 18","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 75\n// module chunks = 0 1 3 4 5 12 13 17 18","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 80\n// module chunks = 0 1 2 5 10","/**\n * @module ngeo.proj.EPSG21781\n*/\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n*/\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 94\n// module chunks = 0 1 3 4 5 12 13 17 18"],"sourceRoot":""}