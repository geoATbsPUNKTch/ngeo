{"version":3,"sources":["webpack:///./src/misc/ToolActivate.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.js","webpack:///./src/map/module.js","webpack:///./examples/googlestreetview.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/googlestreetview/module.js","webpack:///./src/googlestreetview/component.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js"],"names":["_index","__webpack_require__","toolContext","activePropertyName","this","getActive","setActive","newVal","__webpack_exports__","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","exports","$rootScope","groups_","scope_","prototype","registerTool","groupName","tool","opt_defaultActivate","_this","entries","unlisten","$watch","oldVal","deactivateTools_","activateDefault_","push","defaultTool","_asserts2","default","ENABLE_ASSERTS","defaultTools","forEach","entry","assert","unregisterTool","i","length","splice","unregisterGroup","activateTool","deactivateTool","hasActiveTool","module","angular","service","_index2","requires","name","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","call","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","Object","ol","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","undefined","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","unlistenByKey","ol_Image","ImageWMS","opt_options","options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","x","Math","floor","y","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","listen","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","axisOrientation","getAxisOrientation","bbox","substr","join","uri","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","olBase","_Event","type","detail","arguments","_Event2","inherits","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","res","key","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","value","_Collection2","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","get","set","olObj","featureUidToGroupIndex_","source_","_Vector4","useSpatialIndex","layer_","_Vector2","source","style","styleFunction_","bind","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","featureUid","getUid","toString","features","removeFeature","clear","group","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","map","setMap","setStyle","createFunction","defaultMessage","defaultArgs","givenMessage","givenArgs","message","args","e","AssertionError","errorHandler_","errorHandler","condition","opt_message","var_args","doAssertFailure_","Array","slice","goog","isNumber","typeOf","isString","isFunction","isObject","isArray","isBoolean","nodeType","dom","NodeType","ELEMENT","getType_","fail","Function","displayName","constructor","_typeof","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","app","ngeo","_module4","_module2","_ToolActivateMgr2","MainController","ngeoFeatureOverlayMgr","ngeoToolActivateMgr","radius","text","_Text2","fill","_Fill2","color","font","offsetY","stroke","_Stroke2","width","_Map2","layers","_Tile2","_OSM2","view","_View2","zoom","googleStreetViewActive","googleStreetViewToolActivate","_ToolActivate2","dummyActive","dummyToolActivate","controller","_Observable2","mapUids_","getLayers","item","layer","mapUid","previous","setAt","removeAt","insertAt","event","_CustomEvent2","current","dispatchEvent","updateDimensions","dimensions","baseBgLayer","getArray","assertInstanceof","_Layer2","hasUpdates","updatedDimensions","getSource","refresh","_component2","olArray","olProj","googlestreetview","Controller_","_class","$element","$scope","active","handleActiveChange_","featureStyle","feature_","_Feature2","featureOverlay_","listenerKeys_","location","noDataAtLocation","panorama_","google","maps","StreetViewPanorama","pov","heading","pitch","panoramaListener_","point_","_Point2","setGeometry","streetViewService_","StreetViewService","panoramaPositionChanging_","_this2","handleLocationChange_","isActive","hasLocation","handleReadyChange_","hasData","show","oldShow","setVisible","addListener","handlePanoramaPositionChange_","removeListener","keys","_events2","handleMapClick_","unByKey","oldLocation","equals","setCoordinates","lonLat","toLonLat_","getPanorama","lat","lng","handleStreetViewServiceGetPanorama_","evt","$apply","ready","oldReady","data","status","panorama","StreetViewStatus","OK","setPosition","latLng","position","getPosition","fromLonLat_","fromLonLat","getView","toLonLat","component","bindings","templateUrl","baseModuleTemplateUrl","_SyncDataSourcesMap2","directive_","$window","ngeoSyncDataSourcesMap","restrict","link","scope","element","attrs","prop","$eval","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","ngeoDataSources","ngeoDataSources_","map_","handleDataSourcesAdd_","$inject","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","target","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","_DataSources2","manager","index","manager_","features_","index_","setFeatures","handleFeatureAdd_","handleFeatureRemove_","$attrs","mapExpr","recenter","attr","getSize","fit","setZoom","on","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","newLength","Number","sort","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","$applyAsync","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_0__index_js__","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","placement","POINT","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","clone","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getText","getTextAlign","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding"],"mappings":"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","file":"googlestreetview.min.js","sourcesContent":["/**\n * @module ngeo.misc.ToolActivate\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivate.js","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.misc.ToolActivateMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n *//* @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivateMgr.js","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.value('ngeoDataSources', new olCollection());\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/* eslint valid-jsdoc: 0, prefer-rest-params: 0,  */\n// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Utilities to check the preconditions, postconditions and\n * invariants runtime.\n *\n * Methods in this package should be given special treatment by the compiler\n * for type-inference. For example, <code>goog.asserts.assert(foo)</code>\n * will restrict <code>foo</code> to a truthy value.\n *\n * The compiler has an option to disable asserts. So code like:\n * <code>\n * var x = goog.asserts.assert(foo()); goog.asserts.assert(bar());\n * </code>\n * will be transformed into:\n * <code>\n * var x = foo();\n * </code>\n * The compiler will leave in foo() (because its return value is used),\n * but it will remove bar() because it assumes it does not have side-effects.\n *\n * @author agrieve@google.com (Andrew Grieve)\n */\n\nconst exports = {};\n\n/**\n * Throws an exception with the given message and \"Assertion failed\" prefixed\n * onto it.\n * @param {string} defaultMessage The message to use if givenMessage is empty.\n * @param {Array<*>} defaultArgs The substitution arguments for defaultMessage.\n * @param {string|undefined} givenMessage Message supplied by the caller.\n * @param {Array<*>} givenArgs The substitution arguments for givenMessage.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n * @private\n */\nexports.doAssertFailure_ = function(\n  defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  let message = 'Assertion failed';\n  let args;\n  if (givenMessage) {\n    message += `: ${givenMessage}`;\n    args = givenArgs;\n  } else if (defaultMessage) {\n    message += `: ${defaultMessage}`;\n    args = defaultArgs;\n  }\n  // The '' + works around an Opera 10 bug in the unit tests. Without it,\n  // a stack trace is added to var message above. With this, a stack trace is\n  // not added until this line (it causes the extra garbage to be added after\n  // the assertion message instead of in the middle of it).\n  const e = new exports.AssertionError(`${message}`, args || []);\n  exports.errorHandler_(e);\n};\n\n\n/**\n * Sets a custom error handler that can be used to customize the behavior of\n * assertion failures, for example by turning all assertion failures into log\n * messages.\n * @param {function(!goog.asserts.AssertionError)} errorHandler\n */\nexports.setErrorHandler = function(errorHandler) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_ = errorHandler;\n  }\n};\n\n\n/**\n * Checks if the condition evaluates to true if goog.asserts.ENABLE_ASSERTS is\n * true.\n * @template T\n * @param {T} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {T} The value of the condition.\n * @throws {goog.asserts.AssertionError} When the condition evaluates to false.\n */\nexports.assert = function(condition, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !condition) {\n    exports.doAssertFailure_(\n      '', null, opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return condition;\n};\n\n\n/**\n * Fails if goog.asserts.ENABLE_ASSERTS is true. This function is useful in case\n * when we want to add a check in the unreachable area like switch-case\n * statement:\n *\n * <pre>\n *  switch(type) {\n *    case FOO: doSomething(); break;\n *    case BAR: doSomethingElse(); break;\n *    default: goog.asserts.fail('Unrecognized type: ' + type);\n *      // We have only 2 types - \"default:\" section is unreachable code.\n *  }\n * </pre>\n *\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} Failure.\n */\nexports.fail = function(opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_(\n      new exports.AssertionError(\n        `Failure${opt_message ? `: ${opt_message}` : ''}`,\n        Array.prototype.slice.call(arguments, 1)));\n  }\n};\n\n\n/**\n * Checks if the value is a number if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {number} The value, guaranteed to be a number when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n */\nexports.assertNumber = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isNumber(value)) {\n    exports.doAssertFailure_(\n      'Expected number but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n\n/**\n * Checks if the value is a string if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {string} The value, guaranteed to be a string when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a string.\n */\nexports.assertString = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isString(value)) {\n    exports.doAssertFailure_(\n      'Expected string but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {string} */ (value);\n};\n\n\n/**\n * Checks if the value is a function if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Function} The value, guaranteed to be a function when asserts\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a function.\n */\nexports.assertFunction = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isFunction(value)) {\n    exports.doAssertFailure_(\n      'Expected function but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Function} */ (value);\n};\n\n\n/**\n * Checks if the value is an Object if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Object} The value, guaranteed to be a non-null object.\n * @throws {goog.asserts.AssertionError} When the value is not an object.\n */\nexports.assertObject = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isObject(value)) {\n    exports.doAssertFailure_(\n      'Expected object but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Object} */ (value);\n};\n\n\n/**\n * Checks if the value is an Array if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Array<?>} The value, guaranteed to be a non-null array.\n * @throws {goog.asserts.AssertionError} When the value is not an array.\n */\nexports.assertArray = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isArray(value)) {\n    exports.doAssertFailure_(\n      'Expected array but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Array<?>} */ (value);\n};\n\n\n/**\n * Checks if the value is a boolean if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {boolean} The value, guaranteed to be a boolean when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a boolean.\n */\nexports.assertBoolean = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isBoolean(value)) {\n    exports.doAssertFailure_(\n      'Expected boolean but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {boolean} */ (value);\n};\n\n\n/**\n * Checks if the value is a DOM Element if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Element} The value, likely to be a DOM Element when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not an Element.\n */\nexports.assertElement = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS &&\n      (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {\n    exports.doAssertFailure_(\n      'Expected Element but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Element} */ (value);\n};\n\n\n/**\n * Checks if the value is an instance of the user-defined type if\n * goog.asserts.ENABLE_ASSERTS is true.\n *\n * The compiler may tighten the type returned by this function.\n *\n * @param {?} value The value to check.\n * @param {function(new: T, ...)} type A user-defined constructor.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} When the value is not an instance of\n *     type.\n * @return {T}\n * @template T\n */\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !(value instanceof type)) {\n    exports.doAssertFailure_(\n      'Expected instanceof %s but got %s.',\n      [exports.getType_(type), exports.getType_(value)],\n      opt_message, Array.prototype.slice.call(arguments, 3));\n  }\n  return value;\n};\n\n\n/**\n * Checks that no enumerable keys are present in Object.prototype. Such keys\n * would break most code that use {@code for (var ... in ...)} loops.\n */\nexports.assertObjectPrototypeIsIntact = function() {\n  for (const key in Object.prototype) {\n    exports.fail(`${key} should not be enumerable in Object.prototype.`);\n  }\n};\n\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n * @param {*} value A constructor, object, or primitive.\n * @return {string} The best display name for the value, or 'unknown type name'.\n * @private\n */\nexports.getType_ = function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || 'unknown type name';\n  } else if (value instanceof Object) {\n    return value.constructor.displayName || value.constructor.name ||\n        Object.prototype.toString.call(value);\n  } else {\n    return value === null ? 'null' : typeof value;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapDirective from 'ngeo/map/directive.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module app.googlestreetview\n*/\nconst exports = {};\n\nimport './googlestreetview.css';\nimport './common_dependencies.js';\nimport olMap from 'ol/Map.js';\n\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\nimport ngeoGooglestreetviewModule from 'ngeo/googlestreetview/module.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\n\n\n/** @type {!angular.Module} **/\napp.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name,\n  ngeoGooglestreetviewModule.name,\n  ngeoMiscToolActivateMgr.module.name\n]);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n *     manager.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n *//* @ngInject\n */\napp.MainController = function(ngeoFeatureOverlayMgr, ngeoToolActivateMgr) {\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.radius = 500;\n\n  /**\n   * @type {!ol.style.Style}\n   * @export\n   */\n  this.style = new olStyleStyle({\n    text: new olStyleText({\n      fill: new olStyleFill({color: '#279B61'}),\n      font: 'normal 30px FontAwesome',\n      offsetY: -15,\n      stroke: new olStyleStroke({color: '#ffffff', width: 3}),\n      text: '\\uf041'\n    })\n  });\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [-7910687, 6178318],\n      zoom: 17\n    })\n  });\n\n  ngeoFeatureOverlayMgr.init(this.map);\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.googleStreetViewActive = true;\n\n  const googleStreetViewToolActivate = new ngeoMiscToolActivate(\n    this,\n    'googleStreetViewActive'\n  );\n  ngeoToolActivateMgr.registerTool(\n    'mapTools',\n    googleStreetViewToolActivate,\n    true\n  );\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.dummyActive = false;\n\n  const dummyToolActivate = new ngeoMiscToolActivate(\n    this,\n    'dummyActive'\n  );\n  ngeoToolActivateMgr.registerTool(\n    'mapTools',\n    dummyToolActivate,\n    false\n  );\n};\n\n\napp.module.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/googlestreetview.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.googlestreetview.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGooglestreetviewComponent from 'ngeo/googlestreetview/component.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGooglestreetviewModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoGooglestreetviewComponent.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/googlestreetview/module.js","/**\n * @module ngeo.googlestreetview.component\n*/\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olObservable from 'ol/Observable.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGooglestreetview', [\n  ngeoMapFeatureOverlayMgr.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * @private\n */\nngeoBase.googlestreetview.Controller_ = class {\n\n  /**\n   * @param {angular.JQLite} $element Element.\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n   *     manager.\n   * @private\n   *//* @ngInject\n   * @ngdoc controller\n   * @ngname NgeoGooglestreetviewController\n   */\n  constructor($element, $scope, ngeoFeatureOverlayMgr) {\n\n    // Binding properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    $scope.$watch(\n      () => this.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    /**\n     * Style for the feature.\n     * @type {ol.style.Style|Array.<ol.style.Style>|\n     *     ol.FeatureStyleFunction|ol.StyleFunction|undefined}\n     * @export\n     */\n    this.featureStyle;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {number|undefined}\n     * @export\n     */\n    this.radius;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n\n    // Inner properties\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature();\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @private\n     */\n    this.featureOverlay_ = goog.asserts.assert(\n      ngeoFeatureOverlayMgr.getFeatureOverlay()\n    );\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * The current location in the OpenLayers' map view projection.\n     * @type {?ol.Coordinate}\n     * @private\n     */\n    this.location = null;\n\n    /**\n     * Flag that determines whether there's data at a given location or not.\n     * @type {boolean}\n     * @export\n     */\n    this.noDataAtLocation = false;\n\n    /**\n     * @type {!google.maps.StreetViewPanorama}\n     * @private\n     */\n    this.panorama_ = new google.maps.StreetViewPanorama(\n      $element[0],\n      {\n        pov: {\n          heading: 0,\n          pitch: 0\n        },\n        visible: false,\n        zoom: 1\n      }\n    );\n\n    /**\n     * @type {?google.maps.MapsEventListener}\n     * @private\n     */\n    this.panoramaListener_ = null;\n\n    /**\n     * @type {ol.geom.Point}\n     * @private\n     */\n    this.point_ = new olGeomPoint([0, 0]);\n\n    this.feature_.setGeometry(this.point_);\n\n    /**\n     * @type {google.maps.StreetViewService}\n     * @private\n     */\n    this.streetViewService_ = new google.maps.StreetViewService();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panoramaPositionChanging_ = false;\n  }\n\n  /**\n   * Called on initialization of the controller.\n   */\n  $onInit() {\n\n    // === Watchers ===\n\n    // (1) Watch for any change in the location\n    this.scope_.$watch(\n      () => this.location,\n      this.handleLocationChange_.bind(this)\n    );\n\n    // (2) Watch for both the active and location. When we have both, the\n    //     state is considered 'ready'.\n    this.scope_.$watch(\n      () => {\n        const isActive = this.active;\n        const hasLocation = this.location !== null;\n        return isActive && hasLocation;\n      },\n      this.handleReadyChange_.bind(this)\n    );\n\n    // (3) Watcher to manage the visibility of the panorama.\n    this.scope_.$watch(\n      () => {\n        const isActive = this.active;\n        const hasLocation = this.location !== null;\n        const hasData = this.noDataAtLocation === false;\n        return isActive && hasLocation && hasData;\n      },\n      (show, oldShow) => {\n        if (show === oldShow) {\n          return;\n        }\n\n        this.panorama_.setVisible(show);\n\n        if (show) {\n          this.panoramaListener_ = google.maps.event.addListener(\n            this.panorama_,\n            'position_changed',\n            this.handlePanoramaPositionChange_.bind(this)\n          );\n        } else if (this.panoramaListener_) {\n          google.maps.event.removeListener(this.panoramaListener_);\n          this.panoramaListener_ = null;\n        }\n      }\n    );\n\n\n    // Other initialization\n    if (this.featureStyle) {\n      this.feature_.setStyle(this.featureStyle);\n    }\n\n  }\n\n  /**\n   * Called when the 'active' property of this component changes.\n   * @param {boolean} active Active.\n   * @private\n   */\n  handleActiveChange_(active) {\n\n    const keys = this.listenerKeys_;\n\n    if (active) {\n      keys.push(\n        olEvents.listen(this.map, 'click', this.handleMapClick_, this)\n      );\n    } else {\n      olObservable.unByKey(keys);\n      keys.length = 0;\n    }\n  }\n\n  /**\n   * Called when the 'location' property of this component changes.\n   * @param {?ol.Coordinate} location Location, in OL map view projection.\n   * @param {?ol.Coordinate} oldLocation The previous location.\n   * @private\n   */\n  handleLocationChange_(location, oldLocation) {\n\n    // (1) No need to do anything if the old value equals the new value\n    if (location === oldLocation || (\n      Array.isArray(location) && Array.isArray(oldLocation) &&\n        olArray.equals(location, oldLocation)\n    )) {\n      return;\n    }\n\n    // (2) Update point coordinates\n    this.point_.setCoordinates(location);\n\n    // (3) Update StreetView location\n    if (location && !this.panoramaPositionChanging_) {\n      const lonLat = this.toLonLat_(location);\n      this.streetViewService_.getPanorama({\n        location: {\n          lat: lonLat[1],\n          lng: lonLat[0]\n        },\n        radius: this.radius\n      }, this.handleStreetViewServiceGetPanorama_.bind(this));\n    }\n  }\n\n  /**\n   * Called when the map is clicked while this component is active. Update the\n   * location accordingly.\n   * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n   * @private\n   */\n  handleMapClick_(evt) {\n    this.location = evt.coordinate;\n    this.scope_.$apply();\n  }\n\n  /**\n   * Called when the component 'virtual ready' state changes.\n   *\n   * When ready:\n   *  - add the feature to the overlay\n   *\n   * When not ready:\n   *  - remove the feature from the overlay\n   *\n   * @param {boolean} ready Whether the component is ready or not.\n   * @param {boolean} oldReady Previous ready value.\n   * @private\n   */\n  handleReadyChange_(ready, oldReady) {\n\n    if (ready === oldReady) {\n      return;\n    }\n\n    if (ready) {\n      this.featureOverlay_.addFeature(this.feature_);\n    } else {\n      this.featureOverlay_.removeFeature(this.feature_);\n    }\n  }\n\n  /**\n   * @param {google.maps.StreetViewPanoramaData} data Data.\n   * @param {google.maps.StreetViewStatus} status Status.\n   * @private\n   */\n  handleStreetViewServiceGetPanorama_(data, status) {\n\n    const panorama = this.panorama_;\n\n    if (status === google.maps.StreetViewStatus.OK) {\n      this.noDataAtLocation = false;\n      panorama.setPosition(data.location.latLng);\n    } else {\n      this.noDataAtLocation = true;\n    }\n\n    this.scope_.$apply();\n  }\n\n  /**\n   * Called when the panorama position changes. Update the location.\n   * @private\n   */\n  handlePanoramaPositionChange_() {\n    this.panoramaPositionChanging_ = true;\n    const position = this.panorama_.getPosition();\n    const lonLat = [position.lng(), position.lat()];\n    const location = this.fromLonLat_(lonLat);\n    this.location = location;\n    this.scope_.$apply();\n    this.panoramaPositionChanging_ = false;\n  }\n\n\n  // Utility methods\n\n  /**\n   * @param {!ol.Coordinate} lonLat LonLat coordinate.\n   * @return {ol.Coordinate} Map view projection coordinate.\n   */\n  fromLonLat_(lonLat) {\n    return olProj.fromLonLat(\n      lonLat,\n      this.map.getView().getProjection()\n    );\n  }\n\n  /**\n   * @param {!ol.Coordinate} coordinate Map view projection coordinate.\n   * @return {ol.Coordinate} LonLat coordinate.\n   */\n  toLonLat_(coordinate) {\n    return olProj.toLonLat(\n      coordinate,\n      this.map.getView().getProjection()\n    );\n  }\n};\n\n\nexports.component('ngeoGooglestreetview', {\n  bindings: {\n    'active': '<',\n    'featureStyle': '<?',\n    'map': '<',\n    'radius': '<?'\n  },\n  controller: ngeoBase.googlestreetview.Controller_,\n  templateUrl: () => `${ngeoBase.baseModuleTemplateUrl}/googlestreetview/component.html`\n});\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/googlestreetview/component.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap.js';\n\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', [\n  ngeoDatasourceSyncDataSourcesMap.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\nimport googAsserts from 'goog/asserts.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSyncDataSourcesMap', [\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('ngeoSyncDataSourcesMap', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 99\n// module chunks = 0 1 2 8 10 19 24"],"sourceRoot":""}