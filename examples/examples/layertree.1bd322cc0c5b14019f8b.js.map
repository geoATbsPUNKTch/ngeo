{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/misc/decorate.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/message/Popup.js","webpack:///./src/message/popupComponent.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./examples/layertree.js","webpack:///./node_modules/openlayers/src/ol/source/Stamen.js","webpack:///./src/layertree/module.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/layertree/component.js","webpack:///./src/layertree/Controller.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js"],"names":["__webpack_exports__","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","__webpack_require__","exports","interaction","_asserts2","default","assertInstanceof","_Interaction2","Object","defineProperty","get","getActive","set","val","setActive","layer","_Base2","configurable","getVisible","setVisible","getOpacity","setOpacity","$scope","source","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","parent","decrementLoadCount_","decrement_","getLayers","on","olEvent","element","getSource","fail","$applyAsync","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","call","this","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","ol","prototype","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","undefined","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","forEach","unlistenByKey","ol_Image","ImageWMS","opt_options","options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","x","Math","floor","y","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","listen","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","axisOrientation","getAxisOrientation","bbox","substr","join","uri","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","$compile","$rootScope","$sce","$timeout","_this","scope","$new","$watch","open","autoDestroy_","timeout_","destroy","sce_","element_","angular","document","body","append","getOpen","setOpen","$destroy","remove","setTitle","title","trustedTitle","trustAsHtml","setContent","content","opt_trusted","setWidth","width","setHeight","setSize","setAutoDestroy","autoDestroy","addClass","cls","Factory","module","_popupComponent2","name","factory","_index2","requires","push","_index","value","attrs","templateUrl","baseModuleTemplateUrl","directive_","ngeoPopupTemplateUrl","restrict","link","close","evt","stopPropagation","preventDefault","newVal","oldVal","css","directive","olBase","_Event","type","detail","arguments","length","_Event2","inherits","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","i","res","key","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","_Collection2","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","olObj","featureUidToGroupIndex_","groups_","source_","_Vector4","useSpatialIndex","layer_","_Vector2","style","styleFunction_","bind","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","assert","featureUid","getUid","toString","features","removeFeature","clear","group","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","map","setMap","setStyle","createFunction","service","defaultMessage","defaultArgs","givenMessage","givenArgs","message","args","e","AssertionError","errorHandler_","errorHandler","ENABLE_ASSERTS","condition","opt_message","var_args","doAssertFailure_","Array","slice","goog","isNumber","typeOf","isString","isFunction","isObject","isArray","isBoolean","nodeType","dom","NodeType","ELEMENT","getType_","Function","displayName","constructor","_typeof","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","item","mapUid","previous","setAt","removeAt","insertAt","event","_CustomEvent2","current","dispatchEvent","updateDimensions","dimensions","baseBgLayer","layers","getArray","_Layer2","hasUpdates","updatedDimensions","refresh","_SyncDataSourcesMap2","$window","ngeoSyncDataSourcesMap","prop","$eval","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","_events2","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","layerCache","ngeo","_module2","_module4","_Popup2","layertreeComponent","bindings","controller","controllerAs","template","component","LayertreeController","$http","appGetLayer","ngeoCreatePopup","tree","then","resp","data","http_","getLayer_","infoPopup_","promises_","node","onButtonClick","_this2","layerType","infoPopup","html","_Stamen2","_OSM2","_Tile2","MainController","view","_View2","zoom","__WEBPACK_IMPORTED_MODULE_2__source_XYZ_js__","Stamen","indexOf","provider","providerConfig","ProviderConfig","layerConfig","LayerConfig","extension","ATTRIBUTIONS","maxZoom","minZoom","__WEBPACK_IMPORTED_MODULE_0__index_js__","__WEBPACK_IMPORTED_MODULE_1__source_OSM_js__","ATTRIBUTION","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","_component2","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","getView","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","target","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","_DataSources2","_Controller2","ngeoLayertreeTemplateUrl","$attrs","isRoot","nodeExpr","rootScope_","properties","state_","mapExpr","$parent","children","$on","index","splice","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","treeCtrl","dataSource_","_decorate2","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","child","newState","getCalculateState","childState","previousChildState","some","getSetActive","addLayer","removeLayer","getDataSource","setDataSource","VisitorDecision","STOP","SKIP","DESCEND","traverseDepthFirst","visitor","manager","manager_","features_","index_","setFeatures","unlisten","handleFeatureAdd_","handleFeatureRemove_","$element","recenter","attr","getSize","fit","setZoom","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","olArray","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","keys","newLength","Number","sort","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","createXYZ","extentFromProjection","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction"],"mappings":"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","file":"layertree.1bd322cc0c5b14019f8b.js","sourcesContent":["/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.misc.decorate\n*/\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.message.Popup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n *//* @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Popup.js","/**\n * @module ngeo.message.popupComponent\n*/\nimport ngeoBase from 'ngeo/index.js';\nconst exports = angular.module('ngeoPopup', []);\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/message/popupcomponent.html`;\n  });\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intented to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/popupComponent.js","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.value('ngeoDataSources', new olCollection());\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/* eslint valid-jsdoc: 0, prefer-rest-params: 0,  */\n// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Utilities to check the preconditions, postconditions and\n * invariants runtime.\n *\n * Methods in this package should be given special treatment by the compiler\n * for type-inference. For example, <code>goog.asserts.assert(foo)</code>\n * will restrict <code>foo</code> to a truthy value.\n *\n * The compiler has an option to disable asserts. So code like:\n * <code>\n * var x = goog.asserts.assert(foo()); goog.asserts.assert(bar());\n * </code>\n * will be transformed into:\n * <code>\n * var x = foo();\n * </code>\n * The compiler will leave in foo() (because its return value is used),\n * but it will remove bar() because it assumes it does not have side-effects.\n *\n * @author agrieve@google.com (Andrew Grieve)\n */\n\nconst exports = {};\n\n/**\n * Throws an exception with the given message and \"Assertion failed\" prefixed\n * onto it.\n * @param {string} defaultMessage The message to use if givenMessage is empty.\n * @param {Array<*>} defaultArgs The substitution arguments for defaultMessage.\n * @param {string|undefined} givenMessage Message supplied by the caller.\n * @param {Array<*>} givenArgs The substitution arguments for givenMessage.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n * @private\n */\nexports.doAssertFailure_ = function(\n  defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  let message = 'Assertion failed';\n  let args;\n  if (givenMessage) {\n    message += `: ${givenMessage}`;\n    args = givenArgs;\n  } else if (defaultMessage) {\n    message += `: ${defaultMessage}`;\n    args = defaultArgs;\n  }\n  // The '' + works around an Opera 10 bug in the unit tests. Without it,\n  // a stack trace is added to var message above. With this, a stack trace is\n  // not added until this line (it causes the extra garbage to be added after\n  // the assertion message instead of in the middle of it).\n  const e = new exports.AssertionError(`${message}`, args || []);\n  exports.errorHandler_(e);\n};\n\n\n/**\n * Sets a custom error handler that can be used to customize the behavior of\n * assertion failures, for example by turning all assertion failures into log\n * messages.\n * @param {function(!goog.asserts.AssertionError)} errorHandler\n */\nexports.setErrorHandler = function(errorHandler) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_ = errorHandler;\n  }\n};\n\n\n/**\n * Checks if the condition evaluates to true if goog.asserts.ENABLE_ASSERTS is\n * true.\n * @template T\n * @param {T} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {T} The value of the condition.\n * @throws {goog.asserts.AssertionError} When the condition evaluates to false.\n */\nexports.assert = function(condition, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !condition) {\n    exports.doAssertFailure_(\n      '', null, opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return condition;\n};\n\n\n/**\n * Fails if goog.asserts.ENABLE_ASSERTS is true. This function is useful in case\n * when we want to add a check in the unreachable area like switch-case\n * statement:\n *\n * <pre>\n *  switch(type) {\n *    case FOO: doSomething(); break;\n *    case BAR: doSomethingElse(); break;\n *    default: goog.asserts.fail('Unrecognized type: ' + type);\n *      // We have only 2 types - \"default:\" section is unreachable code.\n *  }\n * </pre>\n *\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} Failure.\n */\nexports.fail = function(opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_(\n      new exports.AssertionError(\n        `Failure${opt_message ? `: ${opt_message}` : ''}`,\n        Array.prototype.slice.call(arguments, 1)));\n  }\n};\n\n\n/**\n * Checks if the value is a number if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {number} The value, guaranteed to be a number when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n */\nexports.assertNumber = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isNumber(value)) {\n    exports.doAssertFailure_(\n      'Expected number but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n\n/**\n * Checks if the value is a string if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {string} The value, guaranteed to be a string when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a string.\n */\nexports.assertString = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isString(value)) {\n    exports.doAssertFailure_(\n      'Expected string but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {string} */ (value);\n};\n\n\n/**\n * Checks if the value is a function if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Function} The value, guaranteed to be a function when asserts\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a function.\n */\nexports.assertFunction = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isFunction(value)) {\n    exports.doAssertFailure_(\n      'Expected function but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Function} */ (value);\n};\n\n\n/**\n * Checks if the value is an Object if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Object} The value, guaranteed to be a non-null object.\n * @throws {goog.asserts.AssertionError} When the value is not an object.\n */\nexports.assertObject = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isObject(value)) {\n    exports.doAssertFailure_(\n      'Expected object but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Object} */ (value);\n};\n\n\n/**\n * Checks if the value is an Array if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Array<?>} The value, guaranteed to be a non-null array.\n * @throws {goog.asserts.AssertionError} When the value is not an array.\n */\nexports.assertArray = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isArray(value)) {\n    exports.doAssertFailure_(\n      'Expected array but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Array<?>} */ (value);\n};\n\n\n/**\n * Checks if the value is a boolean if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {boolean} The value, guaranteed to be a boolean when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a boolean.\n */\nexports.assertBoolean = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isBoolean(value)) {\n    exports.doAssertFailure_(\n      'Expected boolean but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {boolean} */ (value);\n};\n\n\n/**\n * Checks if the value is a DOM Element if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Element} The value, likely to be a DOM Element when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not an Element.\n */\nexports.assertElement = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS &&\n      (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {\n    exports.doAssertFailure_(\n      'Expected Element but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Element} */ (value);\n};\n\n\n/**\n * Checks if the value is an instance of the user-defined type if\n * goog.asserts.ENABLE_ASSERTS is true.\n *\n * The compiler may tighten the type returned by this function.\n *\n * @param {?} value The value to check.\n * @param {function(new: T, ...)} type A user-defined constructor.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} When the value is not an instance of\n *     type.\n * @return {T}\n * @template T\n */\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !(value instanceof type)) {\n    exports.doAssertFailure_(\n      'Expected instanceof %s but got %s.',\n      [exports.getType_(type), exports.getType_(value)],\n      opt_message, Array.prototype.slice.call(arguments, 3));\n  }\n  return value;\n};\n\n\n/**\n * Checks that no enumerable keys are present in Object.prototype. Such keys\n * would break most code that use {@code for (var ... in ...)} loops.\n */\nexports.assertObjectPrototypeIsIntact = function() {\n  for (const key in Object.prototype) {\n    exports.fail(`${key} should not be enumerable in Object.prototype.`);\n  }\n};\n\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n * @param {*} value A constructor, object, or primitive.\n * @return {string} The best display name for the value, or 'unknown type name'.\n * @private\n */\nexports.getType_ = function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || 'unknown type name';\n  } else if (value instanceof Object) {\n    return value.constructor.displayName || value.constructor.name ||\n        Object.prototype.toString.call(value);\n  } else {\n    return value === null ? 'null' : typeof value;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapDirective from 'ngeo/map/directive.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap.js';\n\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', [\n  ngeoDatasourceSyncDataSourcesMap.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module app.layertree\n*/\n/**\n * This example shows how to create a layer tree tree based\n * on ngeo's ngeoLayertree directive.\n */\n\n/**\n * This example shows how to create a layer tree tree based\n * on ngeo's ngeoLayertree directive.\n */\n\nconst exports = {};\n\nimport './layertree.css';\nimport './common_dependencies.js';\nimport olMap from 'ol/Map.js';\n\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olSourceStamen from 'ol/source/Stamen.js';\nimport ngeoLayertreeModule from 'ngeo/layertree/module.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoLayertreeModule.name,\n  ngeoMapModule.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\n/**\n * An application-specific component wrapping the ngeo tree layer component.\n * The component includes a controller defining the tree tree.\n *\n * @type {!angular.Component}\n */\nexports.layertreeComponent = {\n  bindings: {\n    'map': '=appLayertreeMap'\n  },\n  controller: 'AppLayertreeController',\n  controllerAs: 'ctrl',\n  // use \"::ctrl.tree\" for the \"tree\" expression as we know the\n  // layer tree won't change\n  template:\n      '<div ngeo-layertree=\"::ctrl.tree\" ' +\n      'ngeo-layertree-templateurl=\"partials/layertree.html\" ' +\n      'ngeo-layertree-map=\"ctrl.map\" ' +\n      'ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\">' +\n      '</div>'\n};\n\n\nexports.module.component('appLayertree', exports.layertreeComponent);\n\n\n/**\n * @constructor\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {function(Object):ol.layer.Layer} appGetLayer Get layer service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n *//* @ngInject\n * @export\n */\nexports.LayertreeController = function($http, $sce, appGetLayer, ngeoCreatePopup) {\n\n  /**\n   * @type {Object|undefined}\n   * @export\n   */\n  this.tree = undefined;\n\n  $http.get('data/tree.json').then((resp) => {\n    this.tree = resp.data;\n  });\n\n  /**\n   * @private\n   * @type {angular.$http}\n   */\n  this.http_ = $http;\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @private\n   * @type {function(Object):ol.layer.Layer}\n   */\n  this.getLayer_ = appGetLayer;\n\n  /**\n   * @private\n   * @type {ngeo.message.Popup}\n   */\n  this.infoPopup_ = ngeoCreatePopup();\n\n  /**\n   * @type {Object.<string, !angular.$q.Promise>}\n   * @private\n   */\n  this.promises_ = {};\n};\n\n\n/**\n * Function called by the ngeo-layertree directives to create a layer\n * from a tree node. The function should return `null` if no layer should\n * be associated to the node (because it's not a leaf).\n * @param {Object} node Node object.\n * @return {ol.layer.Layer} The layer for this node.\n * @export\n */\nexports.LayertreeController.prototype.getLayer = function(node) {\n  return this.getLayer_(node);\n};\n\n\n/**\n * @param {Object} node Tree node.\n * @param {ol.layer.Layer} layer Layer.\n * @export\n */\nexports.LayertreeController.prototype.onButtonClick = function(node, layer) {\n  const layerType = node['layerType'];\n  if (!(layerType in this.promises_)) {\n    this.promises_[layerType] = this.http_.get('data/metadata.html').then(\n      (resp) => {\n        const html = this.sce_.trustAsHtml(resp.data);\n        return html;\n      }\n    );\n  }\n  const infoPopup = this.infoPopup_;\n  this.promises_[layerType].then((html) => {\n    infoPopup.setTitle(node['name']);\n    infoPopup.setContent(html);\n    infoPopup.setOpen(true);\n  });\n};\n\n\nexports.module.controller('AppLayertreeController', exports.LayertreeController);\n\n\n/**\n * A function that returns a layer for a node. A cache is used, so always the\n * same layer instance is returned for a given node. This function is called by\n * the ngeoLayertree directive for creating layers from tree nodes. The\n * function returns `null` when no layer should be created for the node.\n *\n * @param {Object} node Layer tree node.\n * @return {ol.layer.Layer} Layer.\n */\nexports.getLayer = (function() {\n  /**\n   * @type {Object.<string, ol.layer.Layer>}\n   */\n  const layerCache = {};\n  return (\n    /**\n         * @param {Object} node Tree node.\n         * @return {ol.layer.Layer} Layer.\n         */\n    function(node) {\n      if (!('layerType' in node)) {\n        return null;\n      }\n      const type = node['layerType'];\n      if (type in layerCache) {\n        return layerCache[type];\n      }\n      let source;\n      if (type == 'stamenWatercolor') {\n        source = new olSourceStamen({\n          layer: 'watercolor'\n        });\n      } else if (type == 'stamenTerrain-labels') {\n        source = new olSourceStamen({\n          layer: 'terrain-labels'\n        });\n      } else if (type == 'osmHumanitarian') {\n        source = new olSourceOSM({\n          url: 'https://tile-{a-c}.openstreetmap.fr/hot/{z}/{x}/{y}.png'\n        });\n      } else if (type == 'osmCycle') {\n        source = new olSourceOSM({\n          url: 'https://{a-c}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png'\n        });\n      } else if (type == 'osmTransport') {\n        source = new olSourceOSM({\n          url: 'https://{a-c}.tile.thunderforest.com/transport/{z}/{x}/{y}.png'\n        });\n      } else {\n        source = new olSourceOSM();\n      }\n      const layer = new olLayerTile({\n        source\n      });\n      layer.set('type', type);\n      layerCache[type] = layer;\n      return layer;\n    }\n  );\n})();\n\n\nexports.module.value('appGetLayer', exports.getLayer);\n\n\n/**\n * The application's main directive.\n * @constructor\n *//* @ngInject\n */\nexports.MainController = function() {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [-10983710.59086991, 4686507.078220731],\n      zoom: 4\n    })\n  });\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/layertree.js","/**\n * @module ol/source/Stamen\n */\nimport {inherits} from '../index.js';\nimport OSM from '../source/OSM.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.StamenOptions} options Stamen options.\n * @api\n */\nconst Stamen = function(options) {\n  const i = options.layer.indexOf('-');\n  const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n  const providerConfig = Stamen.ProviderConfig[provider];\n\n  const layerConfig = Stamen.LayerConfig[options.layer];\n\n  const url = options.url !== undefined ? options.url :\n    'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n      '/{z}/{x}/{y}.' + layerConfig.extension;\n\n  XYZ.call(this, {\n    attributions: Stamen.ATTRIBUTIONS,\n    cacheSize: options.cacheSize,\n    crossOrigin: 'anonymous',\n    maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n    minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n    opaque: layerConfig.opaque,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n};\n\ninherits(Stamen, XYZ);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nStamen.ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n  OSM.ATTRIBUTION\n];\n\n/**\n * @type {Object.<string, {extension: string, opaque: boolean}>}\n */\nStamen.LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true\n  }\n};\n\n/**\n * @type {Object.<string, {minZoom: number, maxZoom: number}>}\n */\nStamen.ProviderConfig = {\n  'terrain': {\n    minZoom: 4,\n    maxZoom: 18\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20\n  },\n  'watercolor': {\n    minZoom: 1,\n    maxZoom: 16\n  }\n};\nexport default Stamen;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/Stamen.js\n// module id = 348\n// module chunks = 15","/**\n * @module ngeo.layertree.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.layertree.Controller (already required by ngeo.layertree.component)\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertreeModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoLayertreeComponent.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/module.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\nimport googAsserts from 'goog/asserts.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSyncDataSourcesMap', [\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('ngeoSyncDataSourcesMap', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.layertree.component\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/layertree/component.html`;\n  });\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {angular.$compile} $compile Angular compile service.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function($compile, ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/component.js","/**\n * @module ngeo.layertree.Controller\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n *//* @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    goog.asserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      goog.asserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    goog.asserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  goog.asserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      goog.asserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    goog.asserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      goog.asserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30"],"sourceRoot":""}