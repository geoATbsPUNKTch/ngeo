{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/source/AsitVD.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./examples/backgroundlayerdropdown.js","webpack:///./src/goog.asserts.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json"],"names":["__webpack_exports__","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","__webpack_require__","asitVDResolutions","asitVDTileGrid","default","extent","resolutions","matrixIds","map","value","index","exports","options","_classCallCheck","this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","attributions","url","projection","requestEncoding","layer","style","matrixSet","format","tileGrid","_inherits","_WMTS2","_ol_Image_","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","ol","prototype","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","undefined","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","forEach","unlistenByKey","ol_Image","ImageWMS","opt_options","source_Image","crossOrigin_","url_","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","x","Math","floor","y","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","listen","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","axisOrientation","getAxisOrientation","bbox","substr","join","uri","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","olBase","_Event","type","detail","arguments","length","_Event2","inherits","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","i","res","key","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","module","angular","_Collection2","_index2","requires","push","name","_index","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","get","set","olObj","featureUidToGroupIndex_","groups_","source_","_Vector4","useSpatialIndex","layer_","_Vector2","source","styleFunction_","bind","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","_asserts2","assert","featureUid","getUid","toString","features","removeFeature","clear","group","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","setMap","setStyle","createFunction","service","ngeo","_module2","backgroundlayerComponent","bindings","templateUrl","controller","controllerAs","component","BackgroundlayerController","$http","ngeoBackgroundLayerMgr","_this","then","resp","bgLayers","data","setLayer","backgroundLayerMgr_","layerSpec","createLayer_","layerName","_Tile2","_AsitVD2","MainController","$scope","_Map2","view","_View2","zoom","overlay","_Image2","_ImageWMS2","LAYERS","serverType","addLayer","defaultMessage","defaultArgs","givenMessage","givenArgs","message","args","e","AssertionError","errorHandler_","errorHandler","ENABLE_ASSERTS","condition","opt_message","var_args","doAssertFailure_","Array","slice","goog","isNumber","typeOf","isString","isFunction","isObject","isArray","isBoolean","nodeType","dom","NodeType","ELEMENT","getType_","fail","Function","displayName","constructor","_typeof","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","getLayers","item","mapUid","previous","setAt","removeAt","insertAt","event","_CustomEvent2","current","dispatchEvent","updateDimensions","dimensions","baseBgLayer","layers","getArray","assertInstanceof","_Layer2","hasUpdates","updatedDimensions","getSource","refresh","_SyncDataSourcesMap2","directive_","$window","ngeoSyncDataSourcesMap","restrict","link","scope","element","attrs","prop","$eval","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","_events2","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","getView","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","evt","target","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","_DataSources2","manager","manager_","features_","index_","setFeatures","unlisten","handleFeatureAdd_","handleFeatureRemove_","$element","$attrs","mapExpr","recenter","attr","getSize","fit","setZoom","on","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","$watch","newVal","oldVal","cancelAnimationFrame","olArray","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","keys","newLength","Number","sort","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","_this2","$applyAsync","proj4","projCodes","defs","len","j","code","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","transform","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","ft","us-ft","ignoredChar","match","testkey","lkey","toLowerCase","replace","projString","defData","paramName","paramVal","paramOutname","self","paramObj","split","v","trim","filter","a","reduce","p","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","b","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","legalAxis","indexOf","parser","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","text","Error","level","place","root","stack","currentObject","mapit","unshift","thing","out","newObj","sExpr","shift","convert","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","wkt_parser_D2R","d2r","input","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","that","charAt","apply","EPSG","ESRI","IAU2000","console","log","WGS84","GOOGLE","lib_defs","codeWords","parseCode","some","extend","destination","property","msfnz","eccent","sinphi","cosphi","con","sqrt","sign","adjust_lon","abs","tsfnz","phi","com","pow","tan","phi2z","ts","dphi","eccnth","atan","sin","identity","pt","projs","es","cos","lon","lat","exp","names","projections_names","projStore","add","n","projections","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","callback","error","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","Proj","checkParams","datum_transform","dest","point","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","X","Y","Z","atan2","geocentricToGeodetic","adjust_axis","crs","denorm","t","xin","yin","zin","toPoint","array","m","checkSanity","checkCoord","num","TypeError","core_wgs84","transformer","from","to","coords","transformedArray","checkProj","oProj","core","fromProj","toProj","coord","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","right","top","mgrs_toPoint","ll","accuracy","utm","eccPrimeSquared","N","T","C","A","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","northing","easting","zoneNumber","zoneLetter","LetterDesignator","getLetterDesignator","LLtoUTM","seasting","snorthing","setParm","get100kSetForZone","setColumn","setRow","column","row","colOrigin","charCodeAt","rowOrigin","rowInt","rollover","colInt","String","fromCharCode","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","result","topRight","mgrsString","testChar","hunK","sb","substring","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","Point","warn","fromMGRS","mgrsStr","toMGRS","lib_Point","C06","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","s","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","d","ds","f","g","temp","h","asin","sinh","r","hypot","max","min","asinhy","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","Infinity","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","isNaN","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","APA","mode","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","offset","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","somerc","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","olProj","olProjProj4","epsg21781def","_proj4","register","setExtent","_somerc2","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","doc","homepage","license","main","repository","scripts","build","build:tmerc"],"mappings":"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","file":"backgroundlayerdropdown.4193cdc9a4963b0579b4.js","sourcesContent":["/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.source.AsitVD\n*/\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport olTilegridWMTS from 'ol/tilegrid/WMTS.js';\n\n\n/**\n * @const {!Array.<number>}\n */\nconst asitVDResolutions = [\n  4000, 3750, 3500, 3250, 3000, 2750, 2500, 2250, 2000, 1750, 1500, 1250,\n  1000, 750, 650, 500, 250, 100, 50, 20, 10, 5, 2.5, 2, 1.5, 1, 0.5\n];\n\n\n/**\n * @const {ol.tilegrid.WMTS}\n */\nconst asitVDTileGrid = new olTilegridWMTS({\n  extent: [420000, 30000, 900000, 350000],\n  resolutions: asitVDResolutions,\n  matrixIds: asitVDResolutions.map((value, index) => `${index}`)\n});\n\n\n/**\n * Layer source for the ASIT VD tile server.\n * @see https://www.asitvd.ch/chercher/geoservices/fond-de-plan-asit-vd.html\n *\n */\nconst exports = class extends olSourceWMTS {\n\n  /**\n   * @param {ngeox.source.AsitVDOptions} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      attributions: 'géodonnées &copy; Etat de Vaud & &copy; contributeurs OpenStreetMap',\n      url: 'https://ows{1-4}.asitvd.ch/wmts/1.0.0/{Layer}/default/default/0/' +\n        '21781/{TileMatrix}/{TileRow}/{TileCol}.png',\n      projection: 'EPSG:21781',\n      requestEncoding: 'REST',\n      layer: options.layer,\n      style: 'default',\n      matrixSet: '21781',\n      format: 'image/png',\n      tileGrid: asitVDTileGrid\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/source/AsitVD.js","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.value('ngeoDataSources', new olCollection());\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module app.backgroundlayerdropdown\n*/\nconst exports = {};\n\nimport './backgroundlayerdropdown.css';\nimport './common_dependencies.js';\nimport ngeoSourceAsitVD from 'ngeo/source/AsitVD.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name\n]);\n\n\n/**\n * The application-specific background layer component.\n *\n * The component is based on Bootstrap's dropdown jQuery plugin and on\n * the ngeoBackgroundLayerMgr service.\n *\n * @type {!angular.Component}\n */\nexports.backgroundlayerComponent = {\n  bindings: {\n    'map': '=appBackgroundlayerMap'\n  },\n  templateUrl: 'partials/backgroundlayerdropdown.html',\n  controller: 'AppBackgroundlayerController',\n  controllerAs: 'ctrl'\n};\n\n\nexports.module.component('appBackgroundlayer', exports.backgroundlayerComponent);\n\n\n/**\n * @constructor\n * @param {angular.$http} $http Angular http service.\n * @param {ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer\n *     manager.\n * @export\n *//* @ngInject\n */\nexports.BackgroundlayerController = function($http, ngeoBackgroundLayerMgr) {\n  $http.get('data/backgroundlayers.json').then(\n    (resp) => {\n      const bgLayers = resp.data;\n      this['bgLayers'] = bgLayers;\n      this.setLayer(bgLayers[0]);\n    });\n\n  /**\n   * @type {ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n};\n\n\n/**\n * Function called when the user selects a new background layer in the\n * dropdown. Called by the ng-click directive used in the partial.\n * @param {Object} layerSpec Layer specification object.\n * @export\n */\nexports.BackgroundlayerController.prototype.setLayer = function(layerSpec) {\n  this['currentBgLayer'] = layerSpec;\n  const layer = this.createLayer_(layerSpec['name']);\n  this.backgroundLayerMgr_.set(this['map'], layer);\n};\n\n\n/**\n * @param {string} layerName Layer name.\n * @return {ol.layer.Tile} The layer.\n * @private\n */\nexports.BackgroundlayerController.prototype.createLayer_ = function(layerName) {\n  if (layerName === 'blank') {\n    return new olLayerTile();\n  }\n\n  const source = new ngeoSourceAsitVD({\n    layer: layerName\n  });\n  return new olLayerTile({source});\n};\n\n\nexports.module.controller('AppBackgroundlayerController',\n  exports.BackgroundlayerController);\n\n\n/**\n * @constructor\n * @param {angular.Scope} $scope Controller scope.\n *//* @ngInject\n */\nexports.MainController = function($scope) {\n\n  /**\n   * @type {ol.Map}\n   */\n  const map = new olMap({\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [1000, 500, 200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [600000, 200000],\n      zoom: 1\n    })\n  });\n  this['map'] = map;\n\n  /**\n   * An overlay layer.\n   * @type {ol.layer.Image}\n   */\n  const overlay = new olLayerImage({\n    source: new olSourceImageWMS({\n      url: 'https://wms.geo.admin.ch',\n      params: {'LAYERS': 'ch.swisstopo.dreiecksvermaschung'},\n      serverType: 'mapserver'\n    })\n  });\n\n  map.addLayer(overlay);\n\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/backgroundlayerdropdown.js","/* eslint valid-jsdoc: 0, prefer-rest-params: 0,  */\n// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Utilities to check the preconditions, postconditions and\n * invariants runtime.\n *\n * Methods in this package should be given special treatment by the compiler\n * for type-inference. For example, <code>goog.asserts.assert(foo)</code>\n * will restrict <code>foo</code> to a truthy value.\n *\n * The compiler has an option to disable asserts. So code like:\n * <code>\n * var x = goog.asserts.assert(foo()); goog.asserts.assert(bar());\n * </code>\n * will be transformed into:\n * <code>\n * var x = foo();\n * </code>\n * The compiler will leave in foo() (because its return value is used),\n * but it will remove bar() because it assumes it does not have side-effects.\n *\n * @author agrieve@google.com (Andrew Grieve)\n */\n\nconst exports = {};\n\n/**\n * Throws an exception with the given message and \"Assertion failed\" prefixed\n * onto it.\n * @param {string} defaultMessage The message to use if givenMessage is empty.\n * @param {Array<*>} defaultArgs The substitution arguments for defaultMessage.\n * @param {string|undefined} givenMessage Message supplied by the caller.\n * @param {Array<*>} givenArgs The substitution arguments for givenMessage.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n * @private\n */\nexports.doAssertFailure_ = function(\n  defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  let message = 'Assertion failed';\n  let args;\n  if (givenMessage) {\n    message += `: ${givenMessage}`;\n    args = givenArgs;\n  } else if (defaultMessage) {\n    message += `: ${defaultMessage}`;\n    args = defaultArgs;\n  }\n  // The '' + works around an Opera 10 bug in the unit tests. Without it,\n  // a stack trace is added to var message above. With this, a stack trace is\n  // not added until this line (it causes the extra garbage to be added after\n  // the assertion message instead of in the middle of it).\n  const e = new exports.AssertionError(`${message}`, args || []);\n  exports.errorHandler_(e);\n};\n\n\n/**\n * Sets a custom error handler that can be used to customize the behavior of\n * assertion failures, for example by turning all assertion failures into log\n * messages.\n * @param {function(!goog.asserts.AssertionError)} errorHandler\n */\nexports.setErrorHandler = function(errorHandler) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_ = errorHandler;\n  }\n};\n\n\n/**\n * Checks if the condition evaluates to true if goog.asserts.ENABLE_ASSERTS is\n * true.\n * @template T\n * @param {T} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {T} The value of the condition.\n * @throws {goog.asserts.AssertionError} When the condition evaluates to false.\n */\nexports.assert = function(condition, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !condition) {\n    exports.doAssertFailure_(\n      '', null, opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return condition;\n};\n\n\n/**\n * Fails if goog.asserts.ENABLE_ASSERTS is true. This function is useful in case\n * when we want to add a check in the unreachable area like switch-case\n * statement:\n *\n * <pre>\n *  switch(type) {\n *    case FOO: doSomething(); break;\n *    case BAR: doSomethingElse(); break;\n *    default: goog.asserts.fail('Unrecognized type: ' + type);\n *      // We have only 2 types - \"default:\" section is unreachable code.\n *  }\n * </pre>\n *\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} Failure.\n */\nexports.fail = function(opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_(\n      new exports.AssertionError(\n        `Failure${opt_message ? `: ${opt_message}` : ''}`,\n        Array.prototype.slice.call(arguments, 1)));\n  }\n};\n\n\n/**\n * Checks if the value is a number if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {number} The value, guaranteed to be a number when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n */\nexports.assertNumber = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isNumber(value)) {\n    exports.doAssertFailure_(\n      'Expected number but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n\n/**\n * Checks if the value is a string if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {string} The value, guaranteed to be a string when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a string.\n */\nexports.assertString = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isString(value)) {\n    exports.doAssertFailure_(\n      'Expected string but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {string} */ (value);\n};\n\n\n/**\n * Checks if the value is a function if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Function} The value, guaranteed to be a function when asserts\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a function.\n */\nexports.assertFunction = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isFunction(value)) {\n    exports.doAssertFailure_(\n      'Expected function but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Function} */ (value);\n};\n\n\n/**\n * Checks if the value is an Object if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Object} The value, guaranteed to be a non-null object.\n * @throws {goog.asserts.AssertionError} When the value is not an object.\n */\nexports.assertObject = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isObject(value)) {\n    exports.doAssertFailure_(\n      'Expected object but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Object} */ (value);\n};\n\n\n/**\n * Checks if the value is an Array if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Array<?>} The value, guaranteed to be a non-null array.\n * @throws {goog.asserts.AssertionError} When the value is not an array.\n */\nexports.assertArray = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isArray(value)) {\n    exports.doAssertFailure_(\n      'Expected array but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Array<?>} */ (value);\n};\n\n\n/**\n * Checks if the value is a boolean if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {boolean} The value, guaranteed to be a boolean when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a boolean.\n */\nexports.assertBoolean = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isBoolean(value)) {\n    exports.doAssertFailure_(\n      'Expected boolean but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {boolean} */ (value);\n};\n\n\n/**\n * Checks if the value is a DOM Element if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Element} The value, likely to be a DOM Element when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not an Element.\n */\nexports.assertElement = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS &&\n      (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {\n    exports.doAssertFailure_(\n      'Expected Element but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Element} */ (value);\n};\n\n\n/**\n * Checks if the value is an instance of the user-defined type if\n * goog.asserts.ENABLE_ASSERTS is true.\n *\n * The compiler may tighten the type returned by this function.\n *\n * @param {?} value The value to check.\n * @param {function(new: T, ...)} type A user-defined constructor.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} When the value is not an instance of\n *     type.\n * @return {T}\n * @template T\n */\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !(value instanceof type)) {\n    exports.doAssertFailure_(\n      'Expected instanceof %s but got %s.',\n      [exports.getType_(type), exports.getType_(value)],\n      opt_message, Array.prototype.slice.call(arguments, 3));\n  }\n  return value;\n};\n\n\n/**\n * Checks that no enumerable keys are present in Object.prototype. Such keys\n * would break most code that use {@code for (var ... in ...)} loops.\n */\nexports.assertObjectPrototypeIsIntact = function() {\n  for (const key in Object.prototype) {\n    exports.fail(`${key} should not be enumerable in Object.prototype.`);\n  }\n};\n\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n * @param {*} value A constructor, object, or primitive.\n * @return {string} The best display name for the value, or 'unknown type name'.\n * @private\n */\nexports.getType_ = function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || 'unknown type name';\n  } else if (value instanceof Object) {\n    return value.constructor.displayName || value.constructor.name ||\n        Object.prototype.toString.call(value);\n  } else {\n    return value === null ? 'null' : typeof value;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapDirective from 'ngeo/map/directive.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap.js';\n\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', [\n  ngeoDatasourceSyncDataSourcesMap.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\nimport googAsserts from 'goog/asserts.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSyncDataSourcesMap', [\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('ngeoSyncDataSourcesMap', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 73\n// module chunks = 0 1 3 4 5 12 13 17 18","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 75\n// module chunks = 0 1 3 4 5 12 13 17 18","/**\n * @module ngeo.proj.EPSG21781\n*/\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n*/\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 94\n// module chunks = 0 1 3 4 5 12 13 17 18"],"sourceRoot":""}