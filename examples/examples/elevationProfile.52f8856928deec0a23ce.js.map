{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/CustomEvent.js","webpack:///./src/misc/debounce.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.js","webpack:///./src/map/module.js","webpack:///./examples/elevationProfile.js","webpack:///./src/profile/elevationComponent.js","webpack:///./src/profile/d3Elevation.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json"],"names":["__webpack_exports__","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","call","this","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","Object","ol","prototype","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","undefined","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","forEach","unlistenByKey","ol_Image","ImageWMS","opt_options","options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","x","Math","floor","y","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","listen","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","axisOrientation","getAxisOrientation","bbox","substr","join","uri","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","olBase","__webpack_require__","_Event","exports","type","detail","arguments","length","_Event2","default","inherits","_index","angular","module","_index2","requires","push","name","factory_","$timeout","func","wait","invokeApply","timeout","_len","args","Array","_key","context","cancel","apply","factory","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","i","res","key","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","value","_Collection2","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","get","set","olObj","featureUidToGroupIndex_","groups_","source_","_Vector4","useSpatialIndex","layer_","_Vector2","source","style","styleFunction_","bind","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","_asserts2","assert","featureUid","getUid","toString","features","removeFeature","clear","group","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","map","setMap","setStyle","createFunction","service","defaultMessage","defaultArgs","givenMessage","givenArgs","message","e","AssertionError","errorHandler_","errorHandler","ENABLE_ASSERTS","condition","opt_message","var_args","doAssertFailure_","slice","goog","isNumber","typeOf","isString","isFunction","isObject","isArray","isBoolean","nodeType","dom","NodeType","ELEMENT","getType_","fail","Function","displayName","constructor","_typeof","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","ngeo","_module2","_elevationComponent2","MainController","$http","$scope","_this","scope_","_Map2","layers","_Image2","_ImageWMS2","LAYERS","serverType","view","_View2","zoom","vectorLayer","snappedPoint_","_Feature2","getSource","profilePoisData","sort","dist","title","profileData","then","resp","data","len","lineString","_LineString2","p","appendCoordinate","getSize","getView","fit","on","evt","dragging","getEventCoordinate","originalEvent","snapToGeometry","getFeatures","getGeometry","typedFunctionsFactory","opt_childKey","item","distanceExtractor","types","linesConfiguration","line1","zExtractor","poiExtractor","z","opt_z","hoverCallback","point","setGeometry","_Point2","outCallback","profileOptions","profileHighlight","geometry","closestPoint","getClosestPoint","dx","dy","pixelDist","sqrt","$apply","controller","_debounce2","directive_","ngeoDebounce","restrict","link","scope","element","attrs","optionsAttr","selection","d3","select","profile","elevationData","poiData","refreshData","datum","showPois","$watchCollection","newVal","assign","origHoverCallback","$applyAsync","origOutCallback","_d3Elevation2","$watch","oldVal","highlight","clearHighlight","_events2","window","directive","_asserts","light","margin","top","right","bottom","left","nullFunction","numberOfLines","keys","bisectDistance","bisector","d","styleDefs","poiLabelAngle","i18n","xAxisLabel","xAxis","yAxisLabel","yAxis","formatter","xhover","units","parseFloat","toPrecision","yhover","ele","xtick","ytick","lightXAxis","svg","scaleModifier","g","width","xFactor","xUnits","xDomain","each","selectAll","remove","max","clientWidth","scaleLinear","range","clientHeight","axisBottom","axisLeft","area","y0","y1","firstLineName","svgEnter","enter","append","attr","text","gEnter","insert","xHover","domain","yDomain","elevationsValues","concat","min","padding","line","yHover","color","tickFormat","tickValues","ticks","tickSize","mouseX","mouse","x0","invert","distance","elevation","elevations","elevationsRef","lineName","xtranslate","pois","pe","poiEnterG","duration","delay","exit","_Observable2","mapUids_","getLayers","layer","mapUid","previous","setAt","removeAt","insertAt","event","_CustomEvent2","current","dispatchEvent","updateDimensions","dimensions","baseBgLayer","getArray","assertInstanceof","_Layer2","hasUpdates","updatedDimensions","refresh","_SyncDataSourcesMap2","$window","ngeoSyncDataSourcesMap","prop","$eval","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","target","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","_DataSources2","manager","index","manager_","features_","index_","setFeatures","unlisten","handleFeatureAdd_","handleFeatureRemove_","$element","$attrs","mapExpr","recenter","setZoom","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","olArray","templateUrl","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","newLength","Number","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","_this2","proj4","projCodes","defs","j","code","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","transform","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","ft","us-ft","ignoredChar","match","testkey","lkey","toLowerCase","replace","projString","defData","paramName","paramVal","paramOutname","self","paramObj","split","v","trim","filter","a","reduce","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","y_0","k_0","k0","k","b","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","legalAxis","indexOf","parser","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","Error","level","place","root","stack","currentObject","mapit","unshift","thing","out","newObj","sExpr","shift","convert","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","wkt_parser_D2R","d2r","input","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","that","charAt","EPSG","ESRI","IAU2000","console","log","WGS84","GOOGLE","lib_defs","codeWords","parseCode","some","extend","destination","property","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","abs","tsfnz","phi","com","pow","tan","phi2z","ts","dphi","eccnth","atan","sin","identity","pt","projs","es","cos","lon","lat","exp","names","projections_names","projStore","add","n","projections","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","callback","error","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","Proj","checkParams","datum_transform","dest","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","X","Y","Z","atan2","geocentricToGeodetic","adjust_axis","crs","denorm","t","xin","yin","zin","toPoint","array","m","checkSanity","checkCoord","num","TypeError","core_wgs84","transformer","from","to","coords","transformedArray","checkProj","oProj","core","fromProj","toProj","coord","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs","mgrs_forward","UTMtoLL","decode","toUpperCase","mgrs_toPoint","ll","accuracy","utm","eccPrimeSquared","N","T","C","A","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","northing","easting","zoneNumber","zoneLetter","LetterDesignator","getLetterDesignator","LLtoUTM","seasting","snorthing","setParm","get100kSetForZone","setColumn","setRow","column","row","colOrigin","charCodeAt","rowOrigin","rowInt","rollover","colInt","String","fromCharCode","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","result","topRight","mgrsString","testChar","hunK","sb","substring","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","Point","warn","fromMGRS","mgrsStr","toMGRS","lib_Point","C06","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","s","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","ds","f","temp","h","asin","sinh","r","hypot","asinhy","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","Infinity","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","isNaN","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","APA","mode","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","qsc_shift_lon_origin","offset","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","somerc","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","olProj","olProjProj4","epsg21781def","_proj4","register","setExtent","_somerc2","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","doc","homepage","license","main","repository","scripts","build","build:tmerc"],"mappings":"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","file":"elevationProfile.52f8856928deec0a23ce.js","sourcesContent":["/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ngeo.misc.debounce\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n *//* @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.value('ngeoDataSources', new olCollection());\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/* eslint valid-jsdoc: 0, prefer-rest-params: 0,  */\n// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Utilities to check the preconditions, postconditions and\n * invariants runtime.\n *\n * Methods in this package should be given special treatment by the compiler\n * for type-inference. For example, <code>goog.asserts.assert(foo)</code>\n * will restrict <code>foo</code> to a truthy value.\n *\n * The compiler has an option to disable asserts. So code like:\n * <code>\n * var x = goog.asserts.assert(foo()); goog.asserts.assert(bar());\n * </code>\n * will be transformed into:\n * <code>\n * var x = foo();\n * </code>\n * The compiler will leave in foo() (because its return value is used),\n * but it will remove bar() because it assumes it does not have side-effects.\n *\n * @author agrieve@google.com (Andrew Grieve)\n */\n\nconst exports = {};\n\n/**\n * Throws an exception with the given message and \"Assertion failed\" prefixed\n * onto it.\n * @param {string} defaultMessage The message to use if givenMessage is empty.\n * @param {Array<*>} defaultArgs The substitution arguments for defaultMessage.\n * @param {string|undefined} givenMessage Message supplied by the caller.\n * @param {Array<*>} givenArgs The substitution arguments for givenMessage.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n * @private\n */\nexports.doAssertFailure_ = function(\n  defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  let message = 'Assertion failed';\n  let args;\n  if (givenMessage) {\n    message += `: ${givenMessage}`;\n    args = givenArgs;\n  } else if (defaultMessage) {\n    message += `: ${defaultMessage}`;\n    args = defaultArgs;\n  }\n  // The '' + works around an Opera 10 bug in the unit tests. Without it,\n  // a stack trace is added to var message above. With this, a stack trace is\n  // not added until this line (it causes the extra garbage to be added after\n  // the assertion message instead of in the middle of it).\n  const e = new exports.AssertionError(`${message}`, args || []);\n  exports.errorHandler_(e);\n};\n\n\n/**\n * Sets a custom error handler that can be used to customize the behavior of\n * assertion failures, for example by turning all assertion failures into log\n * messages.\n * @param {function(!goog.asserts.AssertionError)} errorHandler\n */\nexports.setErrorHandler = function(errorHandler) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_ = errorHandler;\n  }\n};\n\n\n/**\n * Checks if the condition evaluates to true if goog.asserts.ENABLE_ASSERTS is\n * true.\n * @template T\n * @param {T} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {T} The value of the condition.\n * @throws {goog.asserts.AssertionError} When the condition evaluates to false.\n */\nexports.assert = function(condition, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !condition) {\n    exports.doAssertFailure_(\n      '', null, opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return condition;\n};\n\n\n/**\n * Fails if goog.asserts.ENABLE_ASSERTS is true. This function is useful in case\n * when we want to add a check in the unreachable area like switch-case\n * statement:\n *\n * <pre>\n *  switch(type) {\n *    case FOO: doSomething(); break;\n *    case BAR: doSomethingElse(); break;\n *    default: goog.asserts.fail('Unrecognized type: ' + type);\n *      // We have only 2 types - \"default:\" section is unreachable code.\n *  }\n * </pre>\n *\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} Failure.\n */\nexports.fail = function(opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_(\n      new exports.AssertionError(\n        `Failure${opt_message ? `: ${opt_message}` : ''}`,\n        Array.prototype.slice.call(arguments, 1)));\n  }\n};\n\n\n/**\n * Checks if the value is a number if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {number} The value, guaranteed to be a number when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n */\nexports.assertNumber = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isNumber(value)) {\n    exports.doAssertFailure_(\n      'Expected number but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n\n/**\n * Checks if the value is a string if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {string} The value, guaranteed to be a string when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a string.\n */\nexports.assertString = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isString(value)) {\n    exports.doAssertFailure_(\n      'Expected string but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {string} */ (value);\n};\n\n\n/**\n * Checks if the value is a function if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Function} The value, guaranteed to be a function when asserts\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a function.\n */\nexports.assertFunction = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isFunction(value)) {\n    exports.doAssertFailure_(\n      'Expected function but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Function} */ (value);\n};\n\n\n/**\n * Checks if the value is an Object if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Object} The value, guaranteed to be a non-null object.\n * @throws {goog.asserts.AssertionError} When the value is not an object.\n */\nexports.assertObject = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isObject(value)) {\n    exports.doAssertFailure_(\n      'Expected object but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Object} */ (value);\n};\n\n\n/**\n * Checks if the value is an Array if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Array<?>} The value, guaranteed to be a non-null array.\n * @throws {goog.asserts.AssertionError} When the value is not an array.\n */\nexports.assertArray = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isArray(value)) {\n    exports.doAssertFailure_(\n      'Expected array but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Array<?>} */ (value);\n};\n\n\n/**\n * Checks if the value is a boolean if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {boolean} The value, guaranteed to be a boolean when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a boolean.\n */\nexports.assertBoolean = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isBoolean(value)) {\n    exports.doAssertFailure_(\n      'Expected boolean but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {boolean} */ (value);\n};\n\n\n/**\n * Checks if the value is a DOM Element if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Element} The value, likely to be a DOM Element when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not an Element.\n */\nexports.assertElement = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS &&\n      (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {\n    exports.doAssertFailure_(\n      'Expected Element but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Element} */ (value);\n};\n\n\n/**\n * Checks if the value is an instance of the user-defined type if\n * goog.asserts.ENABLE_ASSERTS is true.\n *\n * The compiler may tighten the type returned by this function.\n *\n * @param {?} value The value to check.\n * @param {function(new: T, ...)} type A user-defined constructor.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} When the value is not an instance of\n *     type.\n * @return {T}\n * @template T\n */\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !(value instanceof type)) {\n    exports.doAssertFailure_(\n      'Expected instanceof %s but got %s.',\n      [exports.getType_(type), exports.getType_(value)],\n      opt_message, Array.prototype.slice.call(arguments, 3));\n  }\n  return value;\n};\n\n\n/**\n * Checks that no enumerable keys are present in Object.prototype. Such keys\n * would break most code that use {@code for (var ... in ...)} loops.\n */\nexports.assertObjectPrototypeIsIntact = function() {\n  for (const key in Object.prototype) {\n    exports.fail(`${key} should not be enumerable in Object.prototype.`);\n  }\n};\n\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n * @param {*} value A constructor, object, or primitive.\n * @return {string} The best display name for the value, or 'unknown type name'.\n * @private\n */\nexports.getType_ = function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || 'unknown type name';\n  } else if (value instanceof Object) {\n    return value.constructor.displayName || value.constructor.name ||\n        Object.prototype.toString.call(value);\n  } else {\n    return value === null ? 'null' : typeof value;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapDirective from 'ngeo/map/directive.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module app.elevationProfile\n*/\nconst exports = {};\n\nimport './elevationProfile.css';\nimport './common_dependencies.js';\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olFeature from 'ol/Feature.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoProfileElevationComponent from 'ngeo/profile/elevationComponent.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name,\n  ngeoProfileElevationComponent.name,\n]);\n\n\n/**\n * @constructor\n * @param {angular.$http} $http The $http angular service.\n * @param {angular.Scope} $scope The $scope angular service.\n *//* @ngInject\n */\nexports.MainController = function($http, $scope) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  const source = new olSourceVector();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerImage({\n        source: new olSourceImageWMS({\n          url: 'http://wms.geo.admin.ch/',\n          crossOrigin: 'anonymous',\n          attributions: '&copy; ' +\n            '<a href=\"http://www.geo.admin.ch/internet/geoportal/' +\n            'en/home.html\">Pixelmap 1:500000 / geo.admin.ch</a>',\n          params: {\n            'LAYERS': 'ch.swisstopo.pixelkarte-farbe-pk1000.noscale',\n            'FORMAT': 'image/jpeg'\n          },\n          serverType: /** @type {ol.source.WMSServerType} */ ('mapserver')\n        })\n      }),\n      new olLayerVector({\n        source\n      })\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      extent: [420000, 30000, 900000, 350000],\n      zoom: 0,\n      center: [0, 0]\n    })\n  });\n\n  const map = this.map;\n\n  const vectorLayer = new olLayerVector({\n    source: new olSourceVector()\n  });\n\n  this.snappedPoint_ = new olFeature();\n  vectorLayer.getSource().addFeature(this.snappedPoint_);\n\n  // Use vectorLayer.setMap(map) rather than map.addLayer(vectorLayer). This\n  // makes the vector layer \"unmanaged\", meaning that it is always on top.\n  vectorLayer.setMap(map);\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.profilePoisData = [\n    {sort: 1, dist: 1000, title: 'First POI', id: 12345},\n    {sort: 2, dist: 3000, title: 'Second POI', id: 12346}\n  ];\n\n  /**\n   * @type {Object|undefined}\n   * @export\n   */\n  this.profileData = undefined;\n\n  $http.get('data/profile.json').then((resp) => {\n    const data = resp.data['profile'];\n    this.profileData = data;\n\n    let i;\n    const len = data.length;\n    const lineString = new olGeomLineString([],\n      /** @type {ol.geom.GeometryLayout} */ ('XYM'));\n    for (i = 0; i < len; i++) {\n      const p = data[i];\n      lineString.appendCoordinate([p.x, p.y, p.dist]);\n    }\n    source.addFeature(new olFeature(lineString));\n\n    const size = /** @type {ol.Size} */ (this.map.getSize());\n    map.getView().fit(source.getExtent(), {size});\n  });\n\n\n  map.on('pointermove', (evt) => {\n    if (evt.dragging) {\n      return;\n    }\n    const coordinate = map.getEventCoordinate(evt.originalEvent);\n    this.snapToGeometry(coordinate, source.getFeatures()[0].getGeometry());\n  });\n\n\n  /**\n   * Factory for creating simple getter functions for extractors.\n   * If the value is in a child property, the opt_childKey must be defined.\n   * The type parameter is used by closure to type the returned function.\n   * @param {T} type An object of the expected result type.\n   * @param {string} key Key used for retrieving the value.\n   * @param {string=} opt_childKey Key of a child object.\n   * @template T\n   * @return {function(Object): T} Getter function.\n   */\n  const typedFunctionsFactory = function(type, key, opt_childKey) {\n    return (\n    /**\n         * @param {Object} item\n         * @return {T}\n         * @template T\n         */\n      function(item) {\n        if (opt_childKey !== undefined) {\n          item = item[opt_childKey];\n        }\n        return item[key];\n      });\n  };\n\n  const types = {\n    number: 1,\n    string: ''\n  };\n\n\n  const distanceExtractor = typedFunctionsFactory(types.number, 'dist');\n\n\n  const linesConfiguration = {\n    'line1': {\n      style: {},\n      zExtractor: typedFunctionsFactory(types.number, 'mnt', 'values')\n    }\n  };\n\n\n  /**\n   * @type {ngeox.profile.PoiExtractor}\n   */\n  const poiExtractor = {\n    sort: typedFunctionsFactory(types.number, 'sort'),\n    id: typedFunctionsFactory(types.string, 'id'),\n    dist: typedFunctionsFactory(types.number, 'dist'),\n    title: typedFunctionsFactory(types.string, 'title'),\n    /**\n      * @param {Object} item POI.\n      * @param {number=} opt_z Z value.\n      * @return {number} Z value.\n      */\n    z: (item, opt_z) => {\n      if (opt_z !== undefined) {\n        item['z'] = opt_z;\n      }\n      return item['z'];\n    }\n  };\n\n  /**\n   * @param {Object} point Point.\n   */\n  const hoverCallback = function(point) {\n    // An item in the list of points given to the profile.\n    this.point = point;\n    this.snappedPoint_.setGeometry(new olGeomPoint([point.x, point.y]));\n  }.bind(this);\n\n  const outCallback = function() {\n    this.point = null;\n    this.snappedPoint_.setGeometry(null);\n  }.bind(this);\n\n\n  /**\n   * @type {Object}\n   * @export\n   */\n  this.profileOptions = {\n    distanceExtractor,\n    linesConfiguration,\n    poiExtractor,\n    hoverCallback,\n    outCallback\n  };\n\n  /**\n   * @type {Object}\n   * @export\n   */\n  this.point = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.profileHighlight = undefined;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate The current pointer coordinate.\n * @param {ol.geom.Geometry|undefined} geometry The geometry to snap to.\n */\nexports.MainController.prototype.snapToGeometry = function(coordinate, geometry) {\n  const closestPoint = geometry.getClosestPoint(coordinate);\n  // compute distance to line in pixels\n  const dx = closestPoint[0] - coordinate[0];\n  const dy = closestPoint[1] - coordinate[1];\n  const dist = Math.sqrt(dx * dx + dy * dy);\n  const pixelDist = dist / this.map.getView().getResolution();\n\n  if (pixelDist < 8) {\n    this.profileHighlight = closestPoint[2];\n  } else {\n    this.profileHighlight = -1;\n  }\n  this.scope_.$apply();\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/elevationProfile.js","/**\n * @module ngeo.profile.elevationComponent\n*/\nimport googAsserts from 'goog/asserts.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoProfileD3Elevation from 'ngeo/profile/d3Elevation.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoProfile', [\n  ngeoMiscDebounce.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert an elevation profile chart\n * in the DOM.\n *\n * Example:\n *\n *      <div ngeo-profile=\"ctrl.profileData\"\n *        ngeo-profile-options=\"ctrl.profileOptions\"\n *        ngeo-profile-pois=\"ctrl.profilePois\">\n *      </div>\n *\n * Where \"ctrl.profileOptions\" is of type {@link ngeox.profile.ProfileOptions};\n * \"ctrl.profileData\" and \"ctrl.profilePois\" are arrays which will be\n * processed by {@link ngeox.profile.ElevationExtractor} and\n * {@link ngeox.profile.PoiExtractor}.\n *\n * See our live example: [../examples/profile.html](../examples/profile.html)\n *\n * @htmlAttribute {?Object} ngeo-profile The profile data.\n * @htmlAttribute {ngeox.profile.ProfileOptions} ngeo-profile-options The options.\n * @htmlAttribute {?Array} ngeo-profile-pois The data for POIs.\n * @htmlAttribute {*} ngeo-profile-highlight Any property on the scope which\n * evaluated value may correspond to distance from origin.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoProfile\n */\nexports.directive_ = function(ngeoDebounce) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const optionsAttr = attrs['ngeoProfileOptions'];\n      googAsserts.assert(optionsAttr !== undefined);\n\n      const selection = d3.select(element[0]);\n      let profile, elevationData, poiData;\n\n      scope.$watchCollection(optionsAttr, (newVal) => {\n\n        const options = /** @type {ngeox.profile.ProfileOptions} */\n                (olObj.assign({}, newVal));\n\n        if (options !== undefined) {\n\n          // proxy the hoverCallback and outCallbackin order to be able to\n          // call $applyAsync\n          //\n          // We're using $applyAsync here because the callback may be\n          // called inside the Angular context. For example, it's the case\n          // when the user hover's the line geometry on the map and the\n          // profileHighlight property is changed.\n          //\n          // For that reason we use $applyAsync instead of $apply here.\n          if (options.hoverCallback !== undefined) {\n            const origHoverCallback = options.hoverCallback;\n            options.hoverCallback = function(...args) {\n              origHoverCallback(...args);\n              scope.$applyAsync();\n            };\n          }\n\n          if (options.outCallback !== undefined) {\n            const origOutCallback = options.outCallback;\n            options.outCallback = function() {\n              origOutCallback();\n              scope.$applyAsync();\n            };\n          }\n\n          profile = ngeoProfileD3Elevation(options);\n          refreshData();\n        }\n      });\n\n      scope.$watch(attrs['ngeoProfile'], (newVal, oldVal) => {\n        elevationData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfilePois'], (newVal, oldVal) => {\n        poiData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfileHighlight'],\n        (newVal, oldVal) => {\n          if (newVal === undefined) {\n            return;\n          }\n          if (newVal > 0) {\n            profile.highlight(newVal);\n          } else {\n            profile.clearHighlight();\n          }\n        });\n\n      olEvents.listen(window, 'resize', ngeoDebounce(refreshData, 50, true));\n\n      function refreshData() {\n        if (profile !== undefined) {\n          selection.datum(elevationData).call(profile);\n          if (elevationData !== undefined) {\n            profile.showPois(poiData);\n          }\n        }\n      }\n    }\n  };\n};\n\nexports.directive('ngeoProfile', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/profile/elevationComponent.js","/**\n * @module ngeo.profile.d3Elevation\n*/\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Provides a D3js component to be used to draw an elevation\n * profile chart.\n *\n *     let selection = d3.select('#element_id');\n *     let profile = ngeo.profile.d3Elevation({\n *       distanceExtractor: function (item) {return item['dist'];},\n *       linesConfiguration: {\n *         'lineZ1': {\n *           zExtractor: function (item) {return item['values']['z1'];}\n *         },\n *         'lineZ2': {\n *           color: '#00F',\n *           zExtractor: function (item) {return item['values']['z2'];}\n *         }\n *       },\n *       hoverCallback: function(point, dist, xUnits, elevations, yUnits) {\n *         console.log(point.x, point.y);\n *       },\n *       outCallback: function() {\n *         console.log(\"out\");\n *       }\n *     });\n *     selection.datum(data).call(profile);\n *\n * The selection data must be an array.\n * The layout for the items of this array is unconstrained: the distance values\n * is extracted using the distanceExtractor config option and multiples z values\n * can be displayed by providing multiple linesConfiguration with its specific\n * zExtractor.\n * Optionally you can provide a color in your linesConfiguration. A line without\n * color will be red. Each linesConfiguration name is used as class for its\n * respective line. So you can pass a styleDefs config option (inline css) to\n * customize the line or all the chart.\n * Optionally, POIs can be displayed and depend on a poiExtractor\n * config option.\n *\n * The data below will work for the above example:\n *\n *     [\n *         {\n *             \"y\": 199340,\n *             \"values\": {\"z1\": 788.7, \"z2\": 774.2},\n *             \"dist\": 0.0,\n *             \"x\": 541620\n *         }, ...\n *     ]\n *\n * @return {Object} D3js component.\n * @param {ngeox.profile.ProfileOptions} options Profile options.\n * @export\n */\nconst exports = function(options) {\n  /**\n   * Whether the simplified profile should be shown.\n   * @type {boolean}\n   */\n  const light = options.light !== undefined ? options.light : false;\n\n\n  /**\n   * The values for margins around the chart defined in pixels.\n   */\n  const margin = light ? {top: 0, right: 0, bottom: 0, left: 0} :\n    {top: 10, right: 20, bottom: 30, left: 40};\n\n  /**\n   * Hover callback function.\n   * @type {function(Object, number, string, Object.<string, number>, string)}\n   */\n  const hoverCallback = options.hoverCallback !== undefined ?\n    options.hoverCallback : olBase.nullFunction;\n\n  /**\n   * Out callback function.\n   * @type {function()}\n   */\n  const outCallback = options.outCallback !== undefined ?\n    options.outCallback : olBase.nullFunction;\n\n  /**\n   * Distance data extractor used to get the dist values.\n   */\n  const distanceExtractor = options.distanceExtractor;\n\n  /**\n   * Line configuration object.\n   */\n  const linesConfiguration = options.linesConfiguration;\n\n  /**\n   * Number of differents configurations for the line.\n   */\n  const numberOfLines = Object.keys(linesConfiguration).length;\n\n  /**\n   * Method to get the coordinate in pixels from a distance.\n   */\n  const bisectDistance = d3.bisector(d => distanceExtractor(d)).left;\n\n  /**\n   * POI data extractor.\n   */\n  const poiExtractor = options.poiExtractor;\n\n  /**\n   * Optional SVG inline style.\n   */\n  const styleDefs = options.styleDefs;\n\n  /**\n   * @type {number}\n   */\n  const poiLabelAngle = options.poiLabelAngle !== undefined ?\n    options.poiLabelAngle : -60;\n\n  /**\n   * @type {Object.<string, string>}\n   */\n  const i18n = options.i18n || {};\n\n  /**\n   * @type {string}\n   */\n  const xAxisLabel = (i18n.xAxis || 'Distance');\n\n  /**\n   * @type {string}\n   */\n  const yAxisLabel = (i18n.yAxis || 'Elevation');\n\n  /**\n   * @type {ngeox.profile.ProfileFormatter}\n   */\n  const formatter = {\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string} Distance.\n     */\n    xhover(dist, units) {\n      return `${parseFloat(dist.toPrecision(3))} ${units}`;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string} Elevation.\n     */\n    yhover(ele, units) {\n      return `${Math.round(ele)} m`;\n    },\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string|number} Distance.\n     */\n    xtick(dist, units) {\n      return dist;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string|number} Elevation.\n     */\n    ytick(ele, units) {\n      return ele;\n    }\n  };\n\n  if (options.formatter !== undefined) {\n    olObj.assign(formatter, options.formatter);\n  }\n\n  /**\n   * @type {boolean}\n   */\n  const lightXAxis = options.lightXAxis !== undefined ? options.lightXAxis : false;\n\n  // Objects shared with the showPois function\n  /**\n   * @type {Object}\n   */\n  let svg;\n\n  /**\n   * D3 x scale.\n   */\n  let x;\n\n  /**\n   * D3 y scale.\n   */\n  let y;\n\n  /**\n   * Scale modifier to allow customizing the x and y scales.\n   */\n  const scaleModifier = options.scaleModifier;\n\n  let g;\n\n  /**\n   * Height of the chart in pixels\n   */\n  let height;\n\n  /**\n   * Width of the chart in pixels\n   */\n  let width;\n\n  /**\n  * Factor to determine whether to use 'm' or 'km'.\n  */\n  let xFactor;\n\n  /**\n  * Distance units. Either 'm' or 'km'.\n  */\n  let xUnits;\n\n  /**\n   * D3 extent of the distance.\n   */\n  let xDomain;\n\n\n  const profile = function(selection) {\n    selection.each(function(data) {\n      d3.select(this).selectAll('svg').remove();\n      if (data === undefined) {\n        return;\n      }\n\n      width = Math.max(this.clientWidth - margin.right - margin.left, 0);\n      x = d3.scaleLinear().range([0, width]);\n\n      height = Math.max(this.clientHeight - margin.top - margin.bottom, 0);\n      y = d3.scaleLinear().range([height, 0]);\n\n      const xAxis = d3.axisBottom(x);\n      const yAxis = d3.axisLeft(y);\n\n      let area;\n      if (numberOfLines === 1) {\n        area = d3.area()\n          .x(d => x(distanceExtractor(d)))\n          .y0(height)\n          .y1((d) => {\n            const firstLineName =  Object.keys(linesConfiguration)[0];\n            return y(linesConfiguration[firstLineName].zExtractor(d));\n          });\n      }\n\n      // Select the svg element, if it exists.\n      svg = d3.select(this).selectAll('svg').data([data]);\n      // Otherwise, create the skeletal chart.\n      const svgEnter = svg.enter().append('svg');\n      // Then select it again to get the complete object.\n      svg = d3.select(this).selectAll('svg').data([data]);\n\n      if (styleDefs !== undefined) {\n        svgEnter.append('defs').append('style')\n          .attr('type', 'text/css')\n          .text(styleDefs);\n      }\n      const gEnter = svgEnter.append('g');\n\n      clearPois();\n\n      gEnter.style('font', '11px Arial');\n\n      if (numberOfLines === 1) {\n        gEnter.append('path').attr('class', 'area')\n          .style('fill', 'rgba(222, 222, 222, 0.5)');\n      }\n\n      gEnter.insert('g', ':first-child')\n        .attr('class', 'grid-y');\n\n      if (!light) {\n        gEnter.append('g')\n          .attr('class', 'x axis')\n          .attr('transform', `translate(0,${height})`);\n\n        gEnter.append('text')\n          .attr('class', 'x label')\n          .attr('text-anchor', 'end')\n          .attr('x', width - 4)\n          .attr('y', height - 4);\n\n        gEnter.append('g')\n          .attr('class', 'y axis');\n\n        gEnter.append('text')\n          .attr('class', 'y label')\n          .attr('text-anchor', 'end')\n          .attr('y', 6)\n          .attr('dy', '.75em')\n          .attr('transform', 'rotate(-90)')\n          .style('fill', 'grey')\n          .text(`${yAxisLabel} [m]`);\n\n        gEnter.append('g')\n          .attr('class', 'metas')\n          .attr('transform', `translate(${width + 3}, 0)`);\n      }\n\n      gEnter.append('g').attr('class', 'pois');\n\n      const xHover = gEnter.append('g').attr('class', 'x grid-hover');\n      xHover.append('svg:line').attr('stroke-dasharray', '5,5');\n      xHover.append('text');\n\n      gEnter.append('rect')\n        .attr('class', 'overlay')\n        .attr('width', width)\n        .attr('height', height)\n        .style('fill', 'none')\n        .style('pointer-events', 'all');\n\n      // Update the outer dimensions.\n      svg.attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom);\n\n      // Update the inner dimensions.\n      g = svg.select('g')\n        .attr('transform', `translate(${margin.left},${\n          margin.top})`);\n\n      xDomain = d3.extent(data, d => distanceExtractor(d));\n      x.domain(xDomain);\n\n      // Return an array with the min and max value of the min/max values of\n      // each lines.\n      const yDomain = function() {\n        let elevationsValues = [];\n        let extent, name;\n        // Get min/max values (extent) of each lines.\n        for (name in linesConfiguration) {\n          extent = d3.extent(data, d => linesConfiguration[name].zExtractor(d));\n          elevationsValues = elevationsValues.concat(extent);\n        }\n        return [\n          Math.min.apply(null, elevationsValues),\n          Math.max.apply(null, elevationsValues)\n        ];\n      }();\n\n      y.domain(yDomain);\n\n      // set the ratio according to the horizontal distance\n      if (scaleModifier !== undefined) {\n        scaleModifier(x, y, width, height);\n      } else {\n        // By default, add a small padding so that it looks nicer\n        const padding = (yDomain[1] - yDomain[0]) * 0.1;\n        y.domain([yDomain[0] - padding, yDomain[1] + padding]);\n      }\n\n      // Update the area path.\n      if (numberOfLines === 1) {\n        g.select('.area')\n          .transition()\n          .attr('d', area);\n      }\n\n      // Set style and update the lines paths and y hover guides for each lines.\n      let line, name, yHover;\n      for (name in linesConfiguration) {\n        // Set style of each line and add a class with its respective name.\n        gEnter.append('path').attr('class', `line ${name}`)\n          .style('stroke', linesConfiguration[name].color || '#F00')\n          .style('fill', 'none');\n\n        // Set y hover guides\n        yHover = gEnter.append('g').attr('class', `y grid-hover ${name}`);\n        yHover.append('svg:line').attr('stroke-dasharray', '5,5');\n        yHover.append('text');\n\n        // Configure the d3 line.\n        line = d3.line()\n          .x(d => x(distanceExtractor(d)))\n          .y(d => y(linesConfiguration[name].zExtractor(d)));\n\n        // Update path for the line.\n        g.select(`.line.${name}`)\n          .transition()\n          .attr('d', line);\n      }\n\n      if (xDomain[1] > 2000) {\n        xFactor = 1000;\n        xUnits = 'km';\n      } else {\n        xFactor = 1;\n        xUnits = 'm';\n      }\n\n      if (!light) {\n        xAxis.tickFormat(d => formatter.xtick(d / xFactor, xUnits));\n        if (lightXAxis) {\n          xAxis.tickValues([0, x.domain()[1]]);\n        }\n\n        yAxis.tickFormat(d => formatter.ytick(d, 'm'));\n\n        g.select('.x.axis')\n          .transition()\n          .call(xAxis);\n\n        g.select('.x.label')\n          .text(`${xAxisLabel} [${xUnits}]`)\n          .style('fill', 'grey')\n          .style('shape-rendering', 'crispEdges');\n\n        // Avoid too much lines with overlapping labels in small profiles\n        if (height / 15 < 10) {\n          yAxis.ticks(height / 15);\n        }\n\n        g.select('.y.axis')\n          .transition()\n          .call(yAxis);\n      }\n\n      g.select('.grid-y')\n        .transition()\n        .call(yAxis.tickSize(-width, 0).tickFormat(''))\n        .selectAll('.tick line')\n        .style('stroke', '#ccc')\n        .style('opacity', 0.7);\n\n      g.selectAll('.axis').selectAll('path, line')\n        .style('fill', 'none')\n        .style('stroke', '#000')\n        .style('shape-rendering', 'crispEdges');\n\n      g.select('.grid-y').select('path')\n        .style('stroke', 'none');\n\n      g.selectAll('.grid-hover line')\n        .style('stroke', '#222')\n        .style('opacity', 0.8);\n\n      g.select('.overlay')\n        .on('mouseout', mouseout)\n        .on('mousemove', mousemove);\n\n      function mousemove() {\n        const mouseX = d3.mouse(this)[0];\n        const x0 = x.invert(mouseX);\n\n        profile.highlight(x0);\n      }\n\n      function mouseout() {\n        profile.clearHighlight();\n      }\n    });\n  };\n\n  /**\n   * Remove any highlight.\n   * Fire the outCallback callback.\n   */\n  profile.clearHighlight = function() {\n    g.selectAll('.grid-hover')\n      .style('display', 'none');\n    outCallback.call(null);\n  };\n\n  /**\n   * Highlight the given distance and corresponding elevation on chart.\n   * Fire the hoverCallback callback with corresponding point.\n   * @param {number} distance Distance.\n   */\n  profile.highlight = function(distance) {\n    const data = svg.datum();\n    const i = bisectDistance(data, distance);\n    if (i >= data.length) {\n      return;\n    }\n\n    const point = data[i];\n    const dist = distanceExtractor(point);\n    let elevation;\n    const elevations = [];\n    const elevationsRef = {};\n    let lineName;\n\n    for (lineName in linesConfiguration) {\n      elevation = linesConfiguration[lineName].zExtractor(point);\n      elevations.push(elevation);\n      elevationsRef[lineName] = elevation;\n      g.select(`.y.grid-hover.${lineName}`)\n        .style('display', 'inline')\n        .select('line')\n        .attr('x1', x(0))\n        .attr('y1', y(elevation))\n        .attr('x2', width)\n        .attr('y2', y(elevation));\n    }\n\n    g.select('.x.grid-hover')\n      .style('display', 'inline')\n      .select('line')\n      .attr('x1', x(dist))\n      .attr('y1', height)\n      .attr('x2', x(dist))\n      .attr('y2', y(Math.max.apply(null, elevations)));\n\n    const right = dist > xDomain[1] / 2;\n    let xtranslate = x(dist);\n    xtranslate += right ? -10 : 10;\n\n    g.select('.x.grid-hover text')\n      .text(formatter.xhover(dist / xFactor, xUnits))\n      .style('text-anchor', right ? 'end' : 'start')\n      .attr('transform', `translate(${xtranslate},${\n        height - 10})`);\n\n    const yUnits = 'm';\n    // Display altitude on guides only if there is one line.\n    if (numberOfLines === 1) {\n      g.select('.y.grid-hover text')\n        .text(formatter.yhover(elevations[0], 'm'))\n        .style('text-anchor', right ? 'end' : 'start')\n        .attr('transform', `translate(${xtranslate},${\n          y(elevations[0]) - 10})`);\n    }\n    hoverCallback.call(null, point, dist / xFactor, xUnits, elevationsRef,\n      yUnits);\n  };\n\n\n  profile.showPois = function(pois) {\n    pois = pois !== undefined ? pois : [];\n    googAsserts.assert(pois.length === 0 || poiExtractor !== undefined);\n\n    const pe = poiExtractor;\n    const g = svg.select('g');\n    const profileData = svg.datum();\n    const ps = g.select('.pois');\n\n    const p = ps.selectAll('.poi').data(pois, (d) => {\n      const i = bisectDistance(profileData, Math.round(pe.dist(d) * 10) / 10, 1);\n      const point = profileData[i];\n      if (point) {\n        let lineName;\n        const elevations = [];\n        for (lineName in linesConfiguration) {\n          elevations.push(linesConfiguration[lineName].zExtractor(point));\n        }\n        const z = Math.max.apply(null, elevations);\n        pe.z(d, z);\n      }\n      return pe.id(d);\n    });\n\n    const poiEnterG = p.enter()\n      .append('g')\n      .attr('class', 'poi');\n\n    poiEnterG.append('text')\n      .attr('x', light ? 0 : 9)\n      .attr('dy', '.35em')\n      .attr('text-anchor', light ? 'middle' : 'start');\n\n    poiEnterG.append('line')\n      .style('shape-rendering', 'crispEdges');\n\n    poiEnterG.style('opacity', 0)\n      .transition()\n      .duration(1000)\n      .delay(100)\n      .style('opacity', 1);\n\n    poiEnterG.selectAll('text')\n      .attr('transform', (d) => {\n        if (light) {\n          return ['translate(',\n            x(pe.dist(d)), ',',\n            y(pe.z(d)) - 10, ')'\n          ].join('');\n        } else {\n          return ['translate(',\n            x(pe.dist(d)), ',',\n            y(pe.z(d)) - 20, ') rotate(', poiLabelAngle, ')'\n          ].join('');\n        }\n      })\n      .text(d => pe.sort(d) + (light ? '' : (` - ${pe.title(d)}`)));\n\n    poiEnterG.selectAll('line')\n      .style('stroke', 'grey')\n      .attr('x1', d => x(pe.dist(d)))\n      .attr('y1', d => y(y.domain()[0]))\n      .attr('x2', d => x(pe.dist(d)))\n      .attr('y2', d => y(pe.z(d)));\n\n    // remove unused pois\n    poiEnterG.exit().remove();\n  };\n\n  function clearPois() {\n    profile.showPois([]);\n  }\n\n\n  return profile;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/profile/d3Elevation.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap.js';\n\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', [\n  ngeoDatasourceSyncDataSourcesMap.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\nimport googAsserts from 'goog/asserts.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSyncDataSourcesMap', [\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('ngeoSyncDataSourcesMap', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 73\n// module chunks = 0 1 3 4 5 12 13 17 18","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 75\n// module chunks = 0 1 3 4 5 12 13 17 18","/**\n * @module ngeo.proj.EPSG21781\n*/\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n*/\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 94\n// module chunks = 0 1 3 4 5 12 13 17 18"],"sourceRoot":""}