{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/interaction/ModifyEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Modify.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./examples/modifycircle.js","webpack:///./src/map/recenter.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/interaction/Measure.js"],"names":["__webpack_exports__","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","__webpack_require__","exports","unitPrefixFormat","numberFormat","opt_options","options","_Measure2","default","call","this","continueMsg","undefined","document","createElement","textContent","_asserts2","assert","ol","inherits","prototype","createDrawInteraction","style","source","_DrawAzimut2","handleMeasure","callback","geom","assertInstanceof","sketchFeature","getGeometry","_GeometryCollection2","line","getGeometries","_LineString2","getFormattedAzimutRadius","getMap","getView","getProjection","proj","Projection","decimals","precision","getLastCoordinate","projection","formatLength","formatAzimut","output","getFormattedAzimut","getFormattedLength","format","getAzimut","coords","getCoordinates","dx","dy","rad","Math","acos","sqrt","PI","olFunctions","_Pointer2","handleDownEvent","handleDownEvent_","handleEvent","handleEvent_","handleUpEvent","handleUpEvent_","downPx_","source_","started_","sketchFeature_","sketchPoint_","squaredClickTolerance_","sketchLayer_","_Vector2","_Vector4","useSpatialIndex","wrapX","_Draw2","getDefaultStyleFunction","_events2","listen","updateState_","event","pixel","downPx","clickPx","pass","handlePointerMove_","finishDrawing_","startDrawing_","mapBrowserEvent","type","modifyDrawing_","createOrUpdateSketchPoint_","coordinates","coordinate","slice","_Feature2","_Point2","updateSketchFeatures_","sketchPointGeom","setCoordinates","sketchFeatures","push","getSource","clear","addFeatures","start","circle","_Circle2","geometry","setGeometry","dispatchEvent","Event","geometries","getGeometriesArray","last","length","setRadius","getLength","abortDrawing_","shouldStopEvent","FALSE","map","active","getActive","setMap","addFeature","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","Object","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","forEach","unlistenByKey","ol_Image","ImageWMS","source_Image","attributions","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","x","floor","y","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","axisOrientation","getAxisOrientation","bbox","substr","join","uri","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","ModifyEventType","Modify","features","Pointer","handleDragEvent","handleDragEvent_","condition_","condition","primaryAction","defaultDeleteCondition_","altKeyOnly","singleClick","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","always","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","RBush","pixelTolerance_","pixelTolerance","snappedToVertex_","changingFeature_","dragSegments_","overlay_","Vector","source_Vector","updateWhileAnimating","updateWhileInteracting","SEGMENT_WRITERS_","Point","writePointGeometry_","LineString","writeLineStringGeometry_","LinearRing","Polygon","writePolygonGeometry_","MultiPoint","writeMultiPointGeometry_","MultiLineString","writeMultiLineStringGeometry_","MultiPolygon","writeMultiPolygonGeometry_","Circle","writeCircleGeometry_","GeometryCollection","writeGeometryCollectionGeometry_","Collection","getFeatures","VectorEventType","ADDFEATURE","handleSourceAdd_","REMOVEFEATURE","handleSourceRemove_","Error","features_","addFeature_","bind","CollectionEventType","ADD","handleFeatureAdd_","REMOVE","handleFeatureRemove_","lastPointerEvent_","MODIFY_SEGMENT_CIRCLE_CENTER_INDEX","MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX","feature","getType","isRendered","handlePointerAtPixel_","handleFeatureChange_","willModifyFeatures_","evt","removeFeature_","removeFeatureSegmentData_","removeFeature","unlisten","rBush","nodesToRemove","node","i","remove","setActive","segmentData","segment","insert","points","ii","depth","index","lines","j","jj","rings","polygons","k","kk","getCenter","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","vertexFeature","Feature","compareIndexes_","a","b","pixelCoordinate","getCoordinateFromPixel","insertVertices","vertex","vertexExtent","segmentDataMatches","getInExtent","componentSegments","sort","segmentDataMatch","uid","Array","GeometryType","CIRCLE","closestVertex","closestOnSegmentData_","equals","LINE_STRING","MULTI_LINE_STRING","insertVertex_","apply","dragSegment","getStride","POINT","MULTI_POINT","POLYGON","MULTI_POLYGON","setCenter","distance","setGeometryCoordinates_","update","MapBrowserPointerEvent","handled","getInteracting","MapBrowserEventType","POINTERMOVE","handlingDownUpSequence","SINGLECLICK","removePoint","sortByDistance","pointDistanceToSegmentDataSquared_","box","nodes","closestSegment","vertexPixel","getPixelFromCoordinate","dist","vertexSegments","pixel1","pixel2","squaredDist1","squaredDistance","squaredDist2","min","pointCoordinates","circleGeometry","distanceToCenterSquared","distanceToCircumference","getRadius","squaredDistanceToSegment","getClosestPoint","closestOnSegment","splice","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","POINTERDRAG","removeVertex_","dragSegments","segmentsByFeature","component","left","newIndex","right","deleted","pop","segments","delta","forEachInExtent","array","Style","createDefaultEditing","mapBrowserPointerEvent","olBase","_Event","detail","arguments","_Event2","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","res","key","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","module","angular","value","_Collection2","_index2","requires","name","_index","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","get","set","olObj","featureUidToGroupIndex_","groups_","layer_","styleFunction_","groupIndex","featureUid","getUid","toString","group","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","setStyle","createFunction","service","defaultMessage","defaultArgs","givenMessage","givenArgs","message","args","e","AssertionError","errorHandler_","errorHandler","ENABLE_ASSERTS","opt_message","var_args","doAssertFailure_","goog","isNumber","typeOf","isString","isFunction","isObject","isArray","isBoolean","nodeType","dom","NodeType","ELEMENT","getType_","fail","Function","displayName","constructor","_typeof","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","getLayers","item","layer","mapUid","previous","setAt","removeAt","insertAt","_CustomEvent2","current","updateDimensions","dimensions","baseBgLayer","layers","getArray","_Layer2","hasUpdates","updatedDimensions","refresh","_SyncDataSourcesMap2","directive_","$window","ngeoSyncDataSourcesMap","restrict","link","scope","element","attrs","prop","$eval","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","view","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","target","_View2","_this","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","_DataSources2","manager","manager_","index_","setFeatures","ngeo","_module3","MainController","_Tile2","_OSM2","zoom","circleFeature","fromCircle","color","label","opacity","stroke","FeatureProperties","IS_CIRCLE","vectorSource","interaction","_ModifyCircle2","addInteraction","controller","$scope","$element","$attrs","mapExpr","recenter","attr","getSize","fit","setZoom","on","$","selected","selectedIndex","olExtent","_RBush2","_Modify2","boundingExtent","_coordinate2","_Polygon2","azimut","_MeasureAzimut2","AZIMUT","lowerLeft","upperRight","stateExpr","animationDelayKey","animationDelay","$watch","newVal","oldVal","cancelAnimationFrame","olArray","templateUrl","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","keys","newLength","Number","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","_this2","$applyAsync","__WEBPACK_IMPORTED_MODULE_9__math_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","__WEBPACK_IMPORTED_MODULE_0__index_js__","appendPoint","point","flatCoordinates","__WEBPACK_IMPORTED_MODULE_1__array_js__","getFlatCoordinates","clone","multiPoint","setFlatCoordinates","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","stride","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","intersectsExtent","setLayout","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XY","setFlatCoordinatesInternal","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","ends_","maxDelta_","maxDeltaRevision_","appendLineString","lineString","multiLineString","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","m","opt_extrapolate","opt_interpolate","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","ends","lineStrings","offset","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","polygon","multiPolygon","len","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","endss","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","__WEBPACK_IMPORTED_MODULE_6__obj_js__","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","GEOMETRY_COLLECTION","rotate","angle","anchor","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","DrawEventType","Draw","shouldHandle_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","maxPoints_","maxPoints","Infinity","finishCondition_","finishCondition","functions","geometryFunction","opt_geometry","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","concat","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchCoords_","sketchLine_","sketchLineCoords_","clickTolerance","geometryName_","geometryName","noModifierKeys","freehandCondition_","freehand","freehandCondition","shiftKeyOnly","ol_Object","getChangeEventType","Property","ACTIVE","styles","originalEvent","CONTEXTMENU","preventDefault","move","clearTimeout","addToDrawing_","POINTERDOWN","pointerEvent","pointerType","MouseSource","POINTER_TYPE","DBLCLICK","setTimeout","frameState","circleMode","finishDrawing","atFinish_","stopPropagation","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","setGeometryName","sketchLineGeom","ring","getLinearRing","done","removeLastPoint","extend","overlaySource","createRegularPolygon","opt_sides","opt_angle","radius","atan","createBox","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","getRadiusSquared_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","circleExtent","intersectsCoordinate","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","transform","olDom","olSphere","MeasureBaseOptions","_Interaction2","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","displayHelpTooltip_","displayHelpTooltip","startMsg","changeEventKey_","postcomposeEventKey_","fill","_Fill2","_Stroke2","width","vectorLayer_","drawInteraction_","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","SPHERE_WGS84","_EPSG2","RADIUS","getFormattedArea","abs","geodesicArea","getFormattedCircleArea","pow","c1","c2","haversineDistance","getFormattedPoint","opt_template","dragging","helpMsg","removeChildren","appendChild","setPosition","getDrawInteraction","prevMap","removeInteraction","createMeasureTooltip_","measure","coord","innerHTML","classList","add","setOffset","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","_Overlay2","positioning","addOverlay","removeOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement"],"mappings":"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","file":"modifycircle.1a789d35b694a5a7e45c.js","sourcesContent":["/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.interaction.MeasureAzimut\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, opt_options) {\n\n  const options = opt_options || {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nol.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), ol.proj.Projection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureAzimut.js","/**\n * @module ngeo.interaction.DrawAzimut\n*/\nimport googAsserts from 'goog/asserts.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style !== undefined ?\n      options.style : olInteractionDraw.getDefaultStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nol.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), sketchFeature));\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/DrawAzimut.js","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/ModifyEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature modification start\n   * @event ol.interaction.Modify.Event#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ol.interaction.Modify.Event#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/ModifyEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Modify\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport ModifyEventType from '../interaction/ModifyEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ol.interaction.Modify.Event\n * @api\n */\nconst Modify = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Modify.handleDownEvent_,\n    handleDragEvent: Modify.handleDragEvent_,\n    handleEvent: Modify.handleEvent,\n    handleUpEvent: Modify.handleUpEvent_\n  });\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.primaryAction;\n\n\n  /**\n   * @private\n   * @param {ol.MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n    return _ol_events_condition_.altKeyOnly(mapBrowserEvent) &&\n      _ol_events_condition_.singleClick(mapBrowserEvent);\n  };\n\n  /**\n   * @type {ol.EventsConditionType}\n   * @private\n   */\n  this.deleteCondition_ = options.deleteCondition ?\n    options.deleteCondition : this.defaultDeleteCondition_;\n\n  /**\n   * @type {ol.EventsConditionType}\n   * @private\n   */\n  this.insertVertexCondition_ = options.insertVertexCondition ?\n    options.insertVertexCondition : _ol_events_condition_.always;\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * Segments intersecting {@link this.vertexFeature_} by segment uid.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.vertexSegments_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * Tracks if the next `singleclick` event should be ignored to prevent\n   * accidental deletion right after vertex creation.\n   * @type {boolean}\n   * @private\n   */\n  this.ignoreNextSingleClick_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new RBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = [];\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      Modify.getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'Circle': this.writeCircleGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_\n  };\n\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = null;\n\n  let features;\n  if (options.source) {\n    this.source_ = options.source;\n    features = new Collection(this.source_.getFeatures());\n    _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n      this.handleSourceAdd_, this);\n    _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n      this.handleSourceRemove_, this);\n  } else {\n    features = options.features;\n  }\n  if (!features) {\n    throw new Error('The modify interaction requires features or a source');\n  }\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = features;\n\n  this.features_.forEach(this.addFeature_.bind(this));\n  _ol_events_.listen(this.features_, CollectionEventType.ADD,\n    this.handleFeatureAdd_, this);\n  _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n    this.handleFeatureRemove_, this);\n\n  /**\n   * @type {ol.MapBrowserPointerEvent}\n   * @private\n   */\n  this.lastPointerEvent_ = null;\n\n};\n\ninherits(Modify, PointerInteraction);\n\n\n/**\n * @define {number} The segment index assigned to a circle's center when\n * breaking up a cicrle into ModifySegmentDataType segments.\n */\nModify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX = 0;\n\n/**\n * @define {number} The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n */\nModify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n    this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n  }\n  const map = this.getMap();\n  if (map && map.isRendered() && this.getActive()) {\n    this.handlePointerAtPixel_(this.lastPixel_, map);\n  }\n  _ol_events_.listen(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nModify.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYSTART, this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  _ol_events_.unlisten(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setActive = function(active) {\n  if (this.vertexFeature_ && !active) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  PointerInteraction.prototype.setActive.call(this, active);\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.source.Vector.Event} event Event.\n * @private\n */\nModify.prototype.handleSourceAdd_ = function(event) {\n  if (event.feature) {\n    this.features_.push(event.feature);\n  }\n};\n\n\n/**\n * @param {ol.source.Vector.Event} event Event.\n * @private\n */\nModify.prototype.handleSourceRemove_ = function(event) {\n  if (event.feature) {\n    this.features_.remove(event.feature);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureAdd_ = function(evt) {\n  this.addFeature_(/** @type {ol.Feature} */ (evt.element));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureChange_ = function(evt) {\n  if (!this.changingFeature_) {\n    const feature = /** @type {ol.Feature} */ (evt.target);\n    this.removeFeature_(feature);\n    this.addFeature_(feature);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nModify.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  let coordinates, i, ii, segmentData;\n  for (i = 0, ii = points.length; i < ii; ++i) {\n    coordinates = points[i];\n    segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n      feature: feature,\n      geometry: geometry,\n      depth: [i],\n      index: i,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  let i, ii, segment, segmentData;\n  for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    segment = coordinates.slice(i, i + 2);\n    segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: i,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = lines.length; j < jj; ++j) {\n    coordinates = lines[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nModify.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, k, kk, rings, segment, segmentData;\n  for (k = 0, kk = polygons.length; k < kk; ++k) {\n    rings = polygons[k];\n    for (j = 0, jj = rings.length; j < jj; ++j) {\n      coordinates = rings[j];\n      for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segment = coordinates.slice(i, i + 2);\n        segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j, k],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * We convert a circle into two segments.  The segment at index\n * {@link ol.interaction.Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX} is the\n * circle's center (a point).  The segment at index\n * {@link ol.interaction.Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX} is\n * the circumference, and is not a line segment.\n *\n * @param {ol.Feature} feature Feature.\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nModify.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCenter();\n  const centerSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const circumferenceSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const featureSegments = [centerSegmentData, circumferenceSegmentData];\n  centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n  this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n  this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nModify.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    this.SEGMENT_WRITERS_[geometries[i].getType()].call(\n      this, feature, geometries[i]);\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nModify.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nModify.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleDownEvent_ = function(evt) {\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  const pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const insertVertices = [];\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(Modify.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        const closestVertex = Modify.closestOnSegmentData_(pixelCoordinate, segmentDataMatch);\n        if (_ol_coordinate_.equals(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (_ol_coordinate_.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (_ol_coordinate_.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (let j = insertVertices.length - 1; j >= 0; --j) {\n      this.insertVertex_.apply(this, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleDragEvent_ = function(evt) {\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  const vertex = evt.coordinate;\n  for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    const dragSegment = this.dragSegments_[i];\n    const segmentData = dragSegment[0];\n    const depth = segmentData.depth;\n    const geometry = segmentData.geometry;\n    let coordinates;\n    const segment = segmentData.segment;\n    const index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX) {\n          this.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this.changingFeature_ = true;\n          geometry.setRadius(_ol_coordinate_.distance(geometry.getCenter(), vertex));\n          this.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleUpEvent_ = function(evt) {\n  let segmentData;\n  let geometry;\n  for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n    segmentData = this.dragSegments_[i][0];\n    geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      const coordinates = geometry.getCenter();\n      const centerSegmentData = segmentData.featureSegments[0];\n      const circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this.rBush_.update(boundingExtent(segmentData.segment),\n        segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Modify}\n * @api\n */\nModify.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nModify.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nModify.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return Modify.pointDistanceToSegmentDataSquared_(pixelCoordinate, a) -\n        Modify.pointDistanceToSegmentDataSquared_(pixelCoordinate, b);\n  };\n\n  const box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n    map.getView().getResolution() * this.pixelTolerance_);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = Modify.closestOnSegmentData_(pixelCoordinate, node);\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    let dist = _ol_coordinate_.distance(pixel, vertexPixel);\n    if (dist <= this.pixelTolerance_) {\n      const vertexSegments = {};\n\n      if (node.geometry.getType() === GeometryType.CIRCLE &&\n      node.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        this.snappedToVertex_ = true;\n        this.createOrUpdateVertexFeature_(vertex);\n      } else {\n        const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        const squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n        const squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((_ol_coordinate_.equals(closestSegment[0], segment[0]) &&\n              _ol_coordinate_.equals(closestSegment[1], segment[1]) ||\n              (_ol_coordinate_.equals(closestSegment[0], segment[1]) &&\n              _ol_coordinate_.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n      }\n\n      vertexSegments[getUid(closestSegment)] = true;\n      this.vertexSegments_ = vertexSegments;\n      return;\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {ol.Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {ol.ModifySegmentDataType} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nModify.pointDistanceToSegmentDataSquared_ = function(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    const circleGeometry = /** @type {ol.geom.Circle} */ (geometry);\n\n    if (segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n      const distanceToCenterSquared =\n            _ol_coordinate_.squaredDistance(circleGeometry.getCenter(), pointCoordinates);\n      const distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return _ol_coordinate_.squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n};\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {ol.Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {ol.ModifySegmentDataType} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {ol.Coordinate} The point closest to the specified line segment.\n */\nModify.closestOnSegmentData_ = function(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return _ol_coordinate_.closestOnSegment(pointCoordinates, segmentData.segment);\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} segmentData Segment data.\n * @param {ol.Coordinate} vertex Vertex.\n * @private\n */\nModify.prototype.insertVertex_ = function(segmentData, vertex) {\n  const segment = segmentData.segment;\n  const feature = segmentData.feature;\n  const geometry = segmentData.geometry;\n  const depth = segmentData.depth;\n  const index = /** @type {number} */ (segmentData.index);\n  let coordinates;\n\n  while (vertex.length < geometry.getStride()) {\n    vertex.push(0);\n  }\n\n  switch (geometry.getType()) {\n    case GeometryType.MULTI_LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.MULTI_POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates.splice(index + 1, 0, vertex);\n      break;\n    default:\n      return;\n  }\n\n  this.setGeometryCoordinates_(geometry, coordinates);\n  const rTree = this.rBush_;\n  rTree.remove(segmentData);\n  this.updateSegmentIndices_(geometry, index, depth, 1);\n  const newSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    segment: [segment[0], vertex],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index\n  });\n  rTree.insert(boundingExtent(newSegmentData.segment),\n    newSegmentData);\n  this.dragSegments_.push([newSegmentData, 1]);\n\n  const newSegmentData2 = /** @type {ol.ModifySegmentDataType} */ ({\n    segment: [vertex, segment[1]],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index + 1\n  });\n  rTree.insert(boundingExtent(newSegmentData2.segment),\n    newSegmentData2);\n  this.dragSegments_.push([newSegmentData2, 0]);\n  this.ignoreNextSingleClick_ = true;\n};\n\n/**\n * Removes the vertex currently being pointed.\n * @return {boolean} True when a vertex was removed.\n * @api\n */\nModify.prototype.removePoint = function() {\n  if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n    const evt = this.lastPointerEvent_;\n    this.willModifyFeatures_(evt);\n    this.removeVertex_();\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes a vertex from all matching features.\n * @return {boolean} True when a vertex was removed.\n * @private\n */\nModify.prototype.removeVertex_ = function() {\n  const dragSegments = this.dragSegments_;\n  const segmentsByFeature = {};\n  let deleted = false;\n  let component, coordinates, dragSegment, geometry, i, index, left;\n  let newIndex, right, segmentData, uid;\n  for (i = dragSegments.length - 1; i >= 0; --i) {\n    dragSegment = dragSegments[i];\n    segmentData = dragSegment[0];\n    uid = getUid(segmentData.feature);\n    if (segmentData.depth) {\n      // separate feature components\n      uid += '-' + segmentData.depth.join('-');\n    }\n    if (!(uid in segmentsByFeature)) {\n      segmentsByFeature[uid] = {};\n    }\n    if (dragSegment[1] === 0) {\n      segmentsByFeature[uid].right = segmentData;\n      segmentsByFeature[uid].index = segmentData.index;\n    } else if (dragSegment[1] == 1) {\n      segmentsByFeature[uid].left = segmentData;\n      segmentsByFeature[uid].index = segmentData.index + 1;\n    }\n\n  }\n  for (uid in segmentsByFeature) {\n    right = segmentsByFeature[uid].right;\n    left = segmentsByFeature[uid].left;\n    index = segmentsByFeature[uid].index;\n    newIndex = index - 1;\n    if (left !== undefined) {\n      segmentData = left;\n    } else {\n      segmentData = right;\n    }\n    if (newIndex < 0) {\n      newIndex = 0;\n    }\n    geometry = segmentData.geometry;\n    coordinates = geometry.getCoordinates();\n    component = coordinates;\n    deleted = false;\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        if (coordinates[segmentData.depth[0]].length > 2) {\n          coordinates[segmentData.depth[0]].splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.LINE_STRING:\n        if (coordinates.length > 2) {\n          coordinates.splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.MULTI_POLYGON:\n        component = component[segmentData.depth[1]];\n        /* falls through */\n      case GeometryType.POLYGON:\n        component = component[segmentData.depth[0]];\n        if (component.length > 4) {\n          if (index == component.length - 1) {\n            index = 0;\n          }\n          component.splice(index, 1);\n          deleted = true;\n          if (index === 0) {\n            // close the ring again\n            component.pop();\n            component.push(component[0]);\n            newIndex = component.length - 1;\n          }\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (deleted) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n      const segments = [];\n      if (left !== undefined) {\n        this.rBush_.remove(left);\n        segments.push(left.segment[0]);\n      }\n      if (right !== undefined) {\n        this.rBush_.remove(right);\n        segments.push(right.segment[1]);\n      }\n      if (left !== undefined && right !== undefined) {\n        const newSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n          depth: segmentData.depth,\n          feature: segmentData.feature,\n          geometry: segmentData.geometry,\n          index: newIndex,\n          segment: segments\n        });\n        this.rBush_.insert(boundingExtent(newSegmentData.segment),\n          newSegmentData);\n      }\n      this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n      if (this.vertexFeature_) {\n        this.overlay_.getSource().removeFeature(this.vertexFeature_);\n        this.vertexFeature_ = null;\n      }\n      dragSegments.length = 0;\n    }\n\n  }\n  return deleted;\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nModify.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {number} index Index.\n * @param {Array.<number>|undefined} depth Depth.\n * @param {number} delta Delta (1 or -1).\n * @private\n */\nModify.prototype.updateSegmentIndices_ = function(\n  geometry, index, depth, delta) {\n  this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n    if (segmentDataMatch.geometry === geometry &&\n        (depth === undefined || segmentDataMatch.depth === undefined ||\n        equals(segmentDataMatch.depth, depth)) &&\n        segmentDataMatch.index > index) {\n      segmentDataMatch.index += delta;\n    }\n  });\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nModify.getDefaultStyleFunction = function() {\n  const style = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Modify} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.ModifyEvent}\n * @param {ol.interaction.ModifyEventType} type Type.\n * @param {ol.Collection.<ol.Feature>} features The features modified.\n * @param {ol.MapBrowserPointerEvent} mapBrowserPointerEvent Associated\n *     {@link ol.MapBrowserPointerEvent}.\n */\nModify.Event = function(type, features, mapBrowserPointerEvent) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being modified.\n   * @type {ol.Collection.<ol.Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * Associated {@link ol.MapBrowserEvent}.\n   * @type {ol.MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserPointerEvent;\n};\ninherits(Modify.Event, Event);\nexport default Modify;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Modify.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.value('ngeoDataSources', new olCollection());\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/* eslint valid-jsdoc: 0, prefer-rest-params: 0,  */\n// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Utilities to check the preconditions, postconditions and\n * invariants runtime.\n *\n * Methods in this package should be given special treatment by the compiler\n * for type-inference. For example, <code>goog.asserts.assert(foo)</code>\n * will restrict <code>foo</code> to a truthy value.\n *\n * The compiler has an option to disable asserts. So code like:\n * <code>\n * var x = goog.asserts.assert(foo()); goog.asserts.assert(bar());\n * </code>\n * will be transformed into:\n * <code>\n * var x = foo();\n * </code>\n * The compiler will leave in foo() (because its return value is used),\n * but it will remove bar() because it assumes it does not have side-effects.\n *\n * @author agrieve@google.com (Andrew Grieve)\n */\n\nconst exports = {};\n\n/**\n * Throws an exception with the given message and \"Assertion failed\" prefixed\n * onto it.\n * @param {string} defaultMessage The message to use if givenMessage is empty.\n * @param {Array<*>} defaultArgs The substitution arguments for defaultMessage.\n * @param {string|undefined} givenMessage Message supplied by the caller.\n * @param {Array<*>} givenArgs The substitution arguments for givenMessage.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n * @private\n */\nexports.doAssertFailure_ = function(\n  defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  let message = 'Assertion failed';\n  let args;\n  if (givenMessage) {\n    message += `: ${givenMessage}`;\n    args = givenArgs;\n  } else if (defaultMessage) {\n    message += `: ${defaultMessage}`;\n    args = defaultArgs;\n  }\n  // The '' + works around an Opera 10 bug in the unit tests. Without it,\n  // a stack trace is added to var message above. With this, a stack trace is\n  // not added until this line (it causes the extra garbage to be added after\n  // the assertion message instead of in the middle of it).\n  const e = new exports.AssertionError(`${message}`, args || []);\n  exports.errorHandler_(e);\n};\n\n\n/**\n * Sets a custom error handler that can be used to customize the behavior of\n * assertion failures, for example by turning all assertion failures into log\n * messages.\n * @param {function(!goog.asserts.AssertionError)} errorHandler\n */\nexports.setErrorHandler = function(errorHandler) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_ = errorHandler;\n  }\n};\n\n\n/**\n * Checks if the condition evaluates to true if goog.asserts.ENABLE_ASSERTS is\n * true.\n * @template T\n * @param {T} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {T} The value of the condition.\n * @throws {goog.asserts.AssertionError} When the condition evaluates to false.\n */\nexports.assert = function(condition, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !condition) {\n    exports.doAssertFailure_(\n      '', null, opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return condition;\n};\n\n\n/**\n * Fails if goog.asserts.ENABLE_ASSERTS is true. This function is useful in case\n * when we want to add a check in the unreachable area like switch-case\n * statement:\n *\n * <pre>\n *  switch(type) {\n *    case FOO: doSomething(); break;\n *    case BAR: doSomethingElse(); break;\n *    default: goog.asserts.fail('Unrecognized type: ' + type);\n *      // We have only 2 types - \"default:\" section is unreachable code.\n *  }\n * </pre>\n *\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} Failure.\n */\nexports.fail = function(opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_(\n      new exports.AssertionError(\n        `Failure${opt_message ? `: ${opt_message}` : ''}`,\n        Array.prototype.slice.call(arguments, 1)));\n  }\n};\n\n\n/**\n * Checks if the value is a number if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {number} The value, guaranteed to be a number when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n */\nexports.assertNumber = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isNumber(value)) {\n    exports.doAssertFailure_(\n      'Expected number but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n\n/**\n * Checks if the value is a string if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {string} The value, guaranteed to be a string when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a string.\n */\nexports.assertString = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isString(value)) {\n    exports.doAssertFailure_(\n      'Expected string but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {string} */ (value);\n};\n\n\n/**\n * Checks if the value is a function if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Function} The value, guaranteed to be a function when asserts\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a function.\n */\nexports.assertFunction = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isFunction(value)) {\n    exports.doAssertFailure_(\n      'Expected function but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Function} */ (value);\n};\n\n\n/**\n * Checks if the value is an Object if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Object} The value, guaranteed to be a non-null object.\n * @throws {goog.asserts.AssertionError} When the value is not an object.\n */\nexports.assertObject = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isObject(value)) {\n    exports.doAssertFailure_(\n      'Expected object but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Object} */ (value);\n};\n\n\n/**\n * Checks if the value is an Array if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Array<?>} The value, guaranteed to be a non-null array.\n * @throws {goog.asserts.AssertionError} When the value is not an array.\n */\nexports.assertArray = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isArray(value)) {\n    exports.doAssertFailure_(\n      'Expected array but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Array<?>} */ (value);\n};\n\n\n/**\n * Checks if the value is a boolean if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {boolean} The value, guaranteed to be a boolean when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a boolean.\n */\nexports.assertBoolean = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isBoolean(value)) {\n    exports.doAssertFailure_(\n      'Expected boolean but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {boolean} */ (value);\n};\n\n\n/**\n * Checks if the value is a DOM Element if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Element} The value, likely to be a DOM Element when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not an Element.\n */\nexports.assertElement = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS &&\n      (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {\n    exports.doAssertFailure_(\n      'Expected Element but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Element} */ (value);\n};\n\n\n/**\n * Checks if the value is an instance of the user-defined type if\n * goog.asserts.ENABLE_ASSERTS is true.\n *\n * The compiler may tighten the type returned by this function.\n *\n * @param {?} value The value to check.\n * @param {function(new: T, ...)} type A user-defined constructor.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} When the value is not an instance of\n *     type.\n * @return {T}\n * @template T\n */\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !(value instanceof type)) {\n    exports.doAssertFailure_(\n      'Expected instanceof %s but got %s.',\n      [exports.getType_(type), exports.getType_(value)],\n      opt_message, Array.prototype.slice.call(arguments, 3));\n  }\n  return value;\n};\n\n\n/**\n * Checks that no enumerable keys are present in Object.prototype. Such keys\n * would break most code that use {@code for (var ... in ...)} loops.\n */\nexports.assertObjectPrototypeIsIntact = function() {\n  for (const key in Object.prototype) {\n    exports.fail(`${key} should not be enumerable in Object.prototype.`);\n  }\n};\n\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n * @param {*} value A constructor, object, or primitive.\n * @return {string} The best display name for the value, or 'unknown type name'.\n * @private\n */\nexports.getType_ = function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || 'unknown type name';\n  } else if (value instanceof Object) {\n    return value.constructor.displayName || value.constructor.name ||\n        Object.prototype.toString.call(value);\n  } else {\n    return value === null ? 'null' : typeof value;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapDirective from 'ngeo/map/directive.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap.js';\n\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', [\n  ngeoDatasourceSyncDataSourcesMap.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\nimport googAsserts from 'goog/asserts.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSyncDataSourcesMap', [\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('ngeoSyncDataSourcesMap', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module app.modifycircle\n*/\nconst exports = {};\n\nimport './modifycircle.css';\nimport './common_dependencies.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olCollection from 'ol/Collection.js';\nimport olFeature from 'ol/Feature.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n\n/** @type {!angular.Module} **/\nconst module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name\n]);\n\n\n/**\n * @constructor\n *//* @ngInject\n */\nexports.MainController = function() {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [-10997148, 4569099],\n      zoom: 4\n    })\n  });\n\n  const map = this.map;\n\n  const circle = new olGeomCircle([-10691093, 4966327], 465000);\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.features = new olCollection();\n\n  const circleFeature = new olFeature({\n    geometry: ol.geom.Polygon.fromCircle(circle),\n    color: '#000000',\n    label: 'Circle 1',\n    opacity: '0.5',\n    stroke: '2'\n  });\n\n  circleFeature.set(ngeo.FeatureProperties.IS_CIRCLE, true);\n  this.features.push(circleFeature);\n\n  const vectorSource = new olSourceVector({\n    features: this.features\n  });\n  const vectorLayer = new olLayerVector({\n    source: vectorSource\n  });\n\n  // Use vectorLayer.setMap(map) rather than map.addLayer(vectorLayer). This\n  // makes the vector layer \"unmanaged\", meaning that it is always on top.\n  vectorLayer.setMap(map);\n\n  /**\n   * @type {ngeo.interaction.ModifyCircle}\n   * @export\n   */\n  this.interaction = new ngeoInteractionModifyCircle(\n    /** @type {olx.interaction.ModifyOptions} */({\n      features: this.features\n    }));\n\n  const interaction = this.interaction;\n  interaction.setActive(true);\n  map.addInteraction(interaction);\n\n};\n\n\nmodule.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/modifycircle.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.interaction.ModifyCircle\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport olCoordinate from 'ol/coordinate.js';\nimport olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStructsRBush from 'ol/structs/RBush.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      exports.getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(this.addFeature_, this);\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeo.FeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifystart'), this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry =\n      /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = olGeomPolygon.fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeo.FeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifyend'), this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultStyleFunction = function() {\n  const style = olStyleStyle.createDefaultEditing();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/ModifyCircle.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 72\n// module chunks = 0 1 2 3 4 5 7 9 10","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = _ol_coordinate_.squaredDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  const styles = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == MouseSource.POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      const center = coordinates[0];\n      const end = coordinates[1];\n      const radius = Math.sqrt(\n        _ol_coordinate_.squaredDistance(center, end));\n      const geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      const angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = _ol_geom_flat_deflate_.coordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 81\n// module chunks = 0 1 2 6 7 8 9 11 14","/**\n * @module ngeo.interaction.Measure\n*/\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olDom from 'ol/dom.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nngeo.interaction.MeasureBaseOptions;\n\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ?\n    options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nol.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\nexports.SPHERE_WGS84 = new olSphere(olProjEPSG4326.RADIUS);\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(\n  polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (\n    polygon.clone().transform(projection, 'EPSG:4326'));\n  const coordinates = geom.getLinearRing(0).getCoordinates();\n  const area = Math.abs(exports.SPHERE_WGS84.geodesicArea(coordinates));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(\n  circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection,\n  precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = ol.proj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = ol.proj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += exports.SPHERE_WGS84.haversineDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(\n  point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js"],"sourceRoot":""}