{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./src/misc/btnComponent.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/misc/decorate.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./examples/interactionbtngroup.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js"],"names":["__webpack_exports__","_index","__webpack_require__","exports","angular","module","_index2","default","requires","push","name","btnGroupComponent_","$parse","restrict","controller","link","scope","element","attrs","setActive","assign","$watch","buttons_","some","buttonModel","newValue","directive","BtnGroupController","$scope","this","scope_","prototype","activate","index","forEach","expressionFn","i","addButton","length","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","undefined","on","$apply","$setViewValue","$viewValue","$render","toggleClass","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","interaction","_asserts2","assertInstanceof","_Interaction2","Object","defineProperty","get","getActive","set","val","layer","_Base2","configurable","getVisible","setVisible","getOpacity","setOpacity","source","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","parent","decrementLoadCount_","decrement_","getLayers","olEvent","getSource","fail","$applyAsync","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","call","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","ol","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","unlistenByKey","ol_Image","ImageWMS","opt_options","options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","x","Math","floor","y","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","listen","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","axisOrientation","getAxisOrientation","bbox","substr","join","uri","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","olBase","_Event","type","detail","arguments","_Event2","inherits","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","res","key","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","value","_Collection2","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","olObj","featureUidToGroupIndex_","groups_","source_","_Vector4","useSpatialIndex","layer_","_Vector2","style","styleFunction_","bind","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","assert","featureUid","getUid","toString","features","removeFeature","clear","group","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","map","setMap","setStyle","createFunction","service","defaultMessage","defaultArgs","givenMessage","givenArgs","message","args","e","AssertionError","errorHandler_","errorHandler","ENABLE_ASSERTS","condition","opt_message","var_args","doAssertFailure_","Array","slice","goog","isNumber","typeOf","isString","isFunction","isObject","isArray","isBoolean","nodeType","dom","NodeType","ELEMENT","getType_","Function","displayName","constructor","_typeof","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","item","mapUid","previous","setAt","removeAt","insertAt","event","_CustomEvent2","current","dispatchEvent","updateDimensions","dimensions","baseBgLayer","layers","getArray","_Layer2","hasUpdates","updatedDimensions","refresh","_SyncDataSourcesMap2","directive_","$window","ngeoSyncDataSourcesMap","prop","$eval","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","_events2","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","ngeo","_module2","_btnComponent2","MainController","ngeoFeatureOverlayMgr","overlay","setFeatures","fill","_Fill2","color","stroke","_Stroke2","width","_Circle2","radius","_Tile2","_OSM2","view","_View2","zoom","drawPolygon","_Draw2","_decorate2","addInteraction","drawPoint","drawLine","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","getView","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","evt","target","_this","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","_DataSources2","manager","manager_","features_","index_","unlisten","handleFeatureAdd_","handleFeatureRemove_","$element","$attrs","mapExpr","recenter","attr","getSize","fit","setZoom","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","newVal","oldVal","cancelAnimationFrame","olArray","templateUrl","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","keys","newLength","Number","sort","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","_this2","__WEBPACK_IMPORTED_MODULE_9__math_js__","MultiPoint","coordinates","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","setCoordinates","__WEBPACK_IMPORTED_MODULE_0__index_js__","appendPoint","point","flatCoordinates","__WEBPACK_IMPORTED_MODULE_1__array_js__","getFlatCoordinates","clone","multiPoint","setFlatCoordinates","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","stride","ii","j","squaredDistance","getCoordinates","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","points","getType","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_POINT","intersectsExtent","setLayout","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XY","setFlatCoordinatesInternal","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","MultiLineString","ends_","maxDelta_","maxDeltaRevision_","appendLineString","lineString","multiLineString","sqrt","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","m","opt_extrapolate","opt_interpolate","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","ends","lineStrings","offset","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","MULTI_LINE_STRING","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","MultiPolygon","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","polygon","multiPolygon","len","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","endss","polygons","jj","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","DrawEventType","Draw","Pointer","handleDownEvent","handleDownEvent_","handleEvent","handleUpEvent","handleUpEvent_","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","POLYGON","maxPoints_","maxPoints","Infinity","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","CIRCLE","opt_geometry","circle","Circle","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","POINT","Point","LINE_STRING","LineString","Polygon","geometry","concat","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","getDefaultStyleFunction","geometryName_","geometryName","condition_","noModifierKeys","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","ol_Object","getChangeEventType","Property","ACTIVE","updateState_","styles","Style","createDefaultEditing","getGeometry","originalEvent","CONTEXTMENU","preventDefault","move","MapBrowserEventType","POINTERMOVE","pass","POINTERDRAG","pixel","clearTimeout","addToDrawing_","POINTERDOWN","handlePointerMove_","pointerEvent","pointerType","MouseSource","POINTER_TYPE","DBLCLICK","startDrawing_","setTimeout","MapBrowserPointerEvent","frameState","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","dx","dy","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","getPixelFromCoordinate","Feature","updateSketchFeatures_","setGeometryName","setGeometry","Event","last","sketchLineGeom","ring","getLinearRing","done","pop","removeLastPoint","splice","sketchFeature","extend","shouldStopEvent","sketchFeatures","overlaySource","addFeatures","getMap","active","createRegularPolygon","opt_sides","opt_angle","angle","atan","createBox","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","delta","getRadius","getRadiusSquared_","getCenter","computeExtent","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","circleExtent","intersectsCoordinate","setCenter","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","setRadius","transform"],"mappings":"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","file":"interactionbtngroup.aefe90e302ad7b947acc.js","sourcesContent":["/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.misc.btnComponent\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n *//* @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach(function(expressionFn, i) {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  }, this);\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/btnComponent.js","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.misc.decorate\n*/\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.value('ngeoDataSources', new olCollection());\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/* eslint valid-jsdoc: 0, prefer-rest-params: 0,  */\n// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Utilities to check the preconditions, postconditions and\n * invariants runtime.\n *\n * Methods in this package should be given special treatment by the compiler\n * for type-inference. For example, <code>goog.asserts.assert(foo)</code>\n * will restrict <code>foo</code> to a truthy value.\n *\n * The compiler has an option to disable asserts. So code like:\n * <code>\n * var x = goog.asserts.assert(foo()); goog.asserts.assert(bar());\n * </code>\n * will be transformed into:\n * <code>\n * var x = foo();\n * </code>\n * The compiler will leave in foo() (because its return value is used),\n * but it will remove bar() because it assumes it does not have side-effects.\n *\n * @author agrieve@google.com (Andrew Grieve)\n */\n\nconst exports = {};\n\n/**\n * Throws an exception with the given message and \"Assertion failed\" prefixed\n * onto it.\n * @param {string} defaultMessage The message to use if givenMessage is empty.\n * @param {Array<*>} defaultArgs The substitution arguments for defaultMessage.\n * @param {string|undefined} givenMessage Message supplied by the caller.\n * @param {Array<*>} givenArgs The substitution arguments for givenMessage.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n * @private\n */\nexports.doAssertFailure_ = function(\n  defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  let message = 'Assertion failed';\n  let args;\n  if (givenMessage) {\n    message += `: ${givenMessage}`;\n    args = givenArgs;\n  } else if (defaultMessage) {\n    message += `: ${defaultMessage}`;\n    args = defaultArgs;\n  }\n  // The '' + works around an Opera 10 bug in the unit tests. Without it,\n  // a stack trace is added to var message above. With this, a stack trace is\n  // not added until this line (it causes the extra garbage to be added after\n  // the assertion message instead of in the middle of it).\n  const e = new exports.AssertionError(`${message}`, args || []);\n  exports.errorHandler_(e);\n};\n\n\n/**\n * Sets a custom error handler that can be used to customize the behavior of\n * assertion failures, for example by turning all assertion failures into log\n * messages.\n * @param {function(!goog.asserts.AssertionError)} errorHandler\n */\nexports.setErrorHandler = function(errorHandler) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_ = errorHandler;\n  }\n};\n\n\n/**\n * Checks if the condition evaluates to true if goog.asserts.ENABLE_ASSERTS is\n * true.\n * @template T\n * @param {T} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {T} The value of the condition.\n * @throws {goog.asserts.AssertionError} When the condition evaluates to false.\n */\nexports.assert = function(condition, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !condition) {\n    exports.doAssertFailure_(\n      '', null, opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return condition;\n};\n\n\n/**\n * Fails if goog.asserts.ENABLE_ASSERTS is true. This function is useful in case\n * when we want to add a check in the unreachable area like switch-case\n * statement:\n *\n * <pre>\n *  switch(type) {\n *    case FOO: doSomething(); break;\n *    case BAR: doSomethingElse(); break;\n *    default: goog.asserts.fail('Unrecognized type: ' + type);\n *      // We have only 2 types - \"default:\" section is unreachable code.\n *  }\n * </pre>\n *\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} Failure.\n */\nexports.fail = function(opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_(\n      new exports.AssertionError(\n        `Failure${opt_message ? `: ${opt_message}` : ''}`,\n        Array.prototype.slice.call(arguments, 1)));\n  }\n};\n\n\n/**\n * Checks if the value is a number if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {number} The value, guaranteed to be a number when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n */\nexports.assertNumber = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isNumber(value)) {\n    exports.doAssertFailure_(\n      'Expected number but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n\n/**\n * Checks if the value is a string if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {string} The value, guaranteed to be a string when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a string.\n */\nexports.assertString = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isString(value)) {\n    exports.doAssertFailure_(\n      'Expected string but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {string} */ (value);\n};\n\n\n/**\n * Checks if the value is a function if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Function} The value, guaranteed to be a function when asserts\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a function.\n */\nexports.assertFunction = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isFunction(value)) {\n    exports.doAssertFailure_(\n      'Expected function but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Function} */ (value);\n};\n\n\n/**\n * Checks if the value is an Object if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Object} The value, guaranteed to be a non-null object.\n * @throws {goog.asserts.AssertionError} When the value is not an object.\n */\nexports.assertObject = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isObject(value)) {\n    exports.doAssertFailure_(\n      'Expected object but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Object} */ (value);\n};\n\n\n/**\n * Checks if the value is an Array if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Array<?>} The value, guaranteed to be a non-null array.\n * @throws {goog.asserts.AssertionError} When the value is not an array.\n */\nexports.assertArray = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isArray(value)) {\n    exports.doAssertFailure_(\n      'Expected array but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Array<?>} */ (value);\n};\n\n\n/**\n * Checks if the value is a boolean if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {boolean} The value, guaranteed to be a boolean when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a boolean.\n */\nexports.assertBoolean = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isBoolean(value)) {\n    exports.doAssertFailure_(\n      'Expected boolean but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {boolean} */ (value);\n};\n\n\n/**\n * Checks if the value is a DOM Element if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Element} The value, likely to be a DOM Element when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not an Element.\n */\nexports.assertElement = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS &&\n      (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {\n    exports.doAssertFailure_(\n      'Expected Element but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Element} */ (value);\n};\n\n\n/**\n * Checks if the value is an instance of the user-defined type if\n * goog.asserts.ENABLE_ASSERTS is true.\n *\n * The compiler may tighten the type returned by this function.\n *\n * @param {?} value The value to check.\n * @param {function(new: T, ...)} type A user-defined constructor.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} When the value is not an instance of\n *     type.\n * @return {T}\n * @template T\n */\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !(value instanceof type)) {\n    exports.doAssertFailure_(\n      'Expected instanceof %s but got %s.',\n      [exports.getType_(type), exports.getType_(value)],\n      opt_message, Array.prototype.slice.call(arguments, 3));\n  }\n  return value;\n};\n\n\n/**\n * Checks that no enumerable keys are present in Object.prototype. Such keys\n * would break most code that use {@code for (var ... in ...)} loops.\n */\nexports.assertObjectPrototypeIsIntact = function() {\n  for (const key in Object.prototype) {\n    exports.fail(`${key} should not be enumerable in Object.prototype.`);\n  }\n};\n\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n * @param {*} value A constructor, object, or primitive.\n * @return {string} The best display name for the value, or 'unknown type name'.\n * @private\n */\nexports.getType_ = function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || 'unknown type name';\n  } else if (value instanceof Object) {\n    return value.constructor.displayName || value.constructor.name ||\n        Object.prototype.toString.call(value);\n  } else {\n    return value === null ? 'null' : typeof value;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapDirective from 'ngeo/map/directive.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap.js';\n\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', [\n  ngeoDatasourceSyncDataSourcesMap.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module app.interactionbtngroup\n*/\nconst exports = {};\n\nimport './interactionbtngroup.css';\nimport './common_dependencies.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport olCollection from 'ol/Collection.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name,\n  ngeoMiscBtnComponent.name,\n]);\n\n\n/**\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @constructor\n *//* @ngInject\n */\nexports.MainController = function(ngeoFeatureOverlayMgr) {\n\n  /**\n   * Collection shared between the drawing interactions and the feature\n   * overlay used to render the drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   */\n  const features = new olCollection();\n\n  const overlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  overlay.setFeatures(features);\n  overlay.setStyle(new olStyleStyle({\n    fill: new olStyleFill({\n      color: 'rgba(255, 255, 255, 0.2)'\n    }),\n    stroke: new olStyleStroke({\n      color: '#ffcc33',\n      width: 2\n    }),\n    image: new olStyleCircle({\n      radius: 7,\n      fill: new olStyleFill({\n        color: '#ffcc33'\n      })\n    })\n  }));\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [-10997148, 4569099],\n      zoom: 4\n    })\n  });\n\n  const map = this.map;\n\n  // initialize the feature overlay manager with the map\n  ngeoFeatureOverlayMgr.init(map);\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPolygon = new olInteractionDraw(\n    /** @type {olx.interaction.DrawOptions} */ ({\n      type: 'Polygon',\n      features: features\n    }));\n\n  const drawPolygon = this.drawPolygon;\n\n  drawPolygon.setActive(false);\n  ngeoMiscDecorate.interaction(drawPolygon);\n  map.addInteraction(drawPolygon);\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint = new olInteractionDraw(\n    /** @type {olx.interaction.DrawOptions} */ ({\n      type: 'Point',\n      features: features\n    }));\n\n  const drawPoint = this.drawPoint;\n  drawPoint.setActive(false);\n  ngeoMiscDecorate.interaction(drawPoint);\n  map.addInteraction(drawPoint);\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawLine = new olInteractionDraw(\n    /** @type {olx.interaction.DrawOptions} */ ({\n      type: 'LineString',\n      features: features\n    }));\n\n  const drawLine = this.drawLine;\n  drawLine.setActive(false);\n  ngeoMiscDecorate.interaction(drawLine);\n  map.addInteraction(drawLine);\n\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/interactionbtngroup.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\nimport googAsserts from 'goog/asserts.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSyncDataSourcesMap', [\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('ngeoSyncDataSourcesMap', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = _ol_coordinate_.squaredDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  const styles = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == MouseSource.POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      const center = coordinates[0];\n      const end = coordinates[1];\n      const radius = Math.sqrt(\n        _ol_coordinate_.squaredDistance(center, end));\n      const geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      const angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = _ol_geom_flat_deflate_.coordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 81\n// module chunks = 0 1 2 6 7 8 9 11 14"],"sourceRoot":""}