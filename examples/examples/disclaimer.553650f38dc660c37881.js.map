{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/message/Popup.js","webpack:///./src/message/popupComponent.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.js","webpack:///./examples/disclaimer.js","webpack:///./src/message/Disclaimer.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js"],"names":["__webpack_exports__","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","exports","prototype","showMessage","message","show","object","this","getMessageObjects","forEach","error","Type","ERROR","info","INFORMATION","success","SUCCESS","warn","WARNING","opt_type","msgObjects","msgObject","defaultType","push","msg","type","undefined","Array","isArray","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","call","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","Object","ol","getImage","handleImageError_","unlistenImage_","changed","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","unlistenByKey","ol_Image","ImageWMS","opt_options","options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","x","Math","floor","y","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","listen","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","axisOrientation","getAxisOrientation","bbox","substr","join","uri","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","__webpack_require__","$compile","$rootScope","$sce","$timeout","_this","scope","$new","$watch","open","autoDestroy_","timeout_","destroy","sce_","element_","angular","element","document","body","append","getOpen","setOpen","$destroy","remove","setTitle","title","trustedTitle","trustAsHtml","setContent","content","opt_trusted","setWidth","width","setHeight","setSize","setAutoDestroy","autoDestroy","addClass","cls","_asserts2","default","fail","Factory","module","_popupComponent2","name","factory","_index2","requires","_index","value","attrs","templateUrl","baseModuleTemplateUrl","directive_","ngeoPopupTemplateUrl","restrict","link","close","evt","stopPropagation","preventDefault","newVal","oldVal","css","directive","olBase","_Event","detail","arguments","length","_Event2","inherits","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","i","res","key","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","_Collection2","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","get","set","olObj","featureUidToGroupIndex_","groups_","source_","_Vector4","useSpatialIndex","layer_","_Vector2","source","style","styleFunction_","bind","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","assert","featureUid","getUid","toString","features","removeFeature","clear","group","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","map","setMap","setStyle","createFunction","service","defaultMessage","defaultArgs","givenMessage","givenArgs","args","e","AssertionError","errorHandler_","errorHandler","ENABLE_ASSERTS","condition","opt_message","var_args","doAssertFailure_","slice","goog","isNumber","typeOf","isString","isFunction","isObject","isBoolean","nodeType","dom","NodeType","ELEMENT","getType_","Function","displayName","constructor","_typeof","ngeo","_module2","_Disclaimer2","MainController","ngeoDisclaimer","disclaimer","_Map2","layers","_Tile2","_OSM2","view","_View2","zoom","successMsg_","infoMsg_","warningMsg_","errorMsg_","inMapMsgs_","$","tooltip","container","trigger","inMap","alert","target","_Message2","closeAll","controller","gettextCatalog","ngeoCreatePopup","gettextCatalog_","createPopup_","container_","messages_","closeMessage_","assertString","uid","getMessageUid_","popup","classNames","el","button","getString","html","on","hasClass","_Popup2","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","getLayers","item","layer","mapUid","previous","setAt","removeAt","insertAt","event","_CustomEvent2","current","dispatchEvent","updateDimensions","dimensions","baseBgLayer","getArray","assertInstanceof","_Layer2","hasUpdates","updatedDimensions","getSource","refresh","_SyncDataSourcesMap2","$window","ngeoSyncDataSourcesMap","prop","$eval","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","_events2","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","getView","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","_DataSources2","manager","index","manager_","features_","index_","setFeatures","unlisten","handleFeatureAdd_","handleFeatureRemove_","$scope","$element","$attrs","mapExpr","recenter","attr","getSize","fit","setZoom","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","olArray","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","keys","newLength","Number","sort","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","_this2","$applyAsync","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_0__index_js__","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction"],"mappings":"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","file":"disclaimer.553650f38dc660c37881.js","sourcesContent":["/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.message.Message\n*/\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.message.Popup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n *//* @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Popup.js","/**\n * @module ngeo.message.popupComponent\n*/\nimport ngeoBase from 'ngeo/index.js';\nconst exports = angular.module('ngeoPopup', []);\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/message/popupcomponent.html`;\n  });\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intented to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/popupComponent.js","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.value('ngeoDataSources', new olCollection());\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/* eslint valid-jsdoc: 0, prefer-rest-params: 0,  */\n// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Utilities to check the preconditions, postconditions and\n * invariants runtime.\n *\n * Methods in this package should be given special treatment by the compiler\n * for type-inference. For example, <code>goog.asserts.assert(foo)</code>\n * will restrict <code>foo</code> to a truthy value.\n *\n * The compiler has an option to disable asserts. So code like:\n * <code>\n * var x = goog.asserts.assert(foo()); goog.asserts.assert(bar());\n * </code>\n * will be transformed into:\n * <code>\n * var x = foo();\n * </code>\n * The compiler will leave in foo() (because its return value is used),\n * but it will remove bar() because it assumes it does not have side-effects.\n *\n * @author agrieve@google.com (Andrew Grieve)\n */\n\nconst exports = {};\n\n/**\n * Throws an exception with the given message and \"Assertion failed\" prefixed\n * onto it.\n * @param {string} defaultMessage The message to use if givenMessage is empty.\n * @param {Array<*>} defaultArgs The substitution arguments for defaultMessage.\n * @param {string|undefined} givenMessage Message supplied by the caller.\n * @param {Array<*>} givenArgs The substitution arguments for givenMessage.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n * @private\n */\nexports.doAssertFailure_ = function(\n  defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  let message = 'Assertion failed';\n  let args;\n  if (givenMessage) {\n    message += `: ${givenMessage}`;\n    args = givenArgs;\n  } else if (defaultMessage) {\n    message += `: ${defaultMessage}`;\n    args = defaultArgs;\n  }\n  // The '' + works around an Opera 10 bug in the unit tests. Without it,\n  // a stack trace is added to var message above. With this, a stack trace is\n  // not added until this line (it causes the extra garbage to be added after\n  // the assertion message instead of in the middle of it).\n  const e = new exports.AssertionError(`${message}`, args || []);\n  exports.errorHandler_(e);\n};\n\n\n/**\n * Sets a custom error handler that can be used to customize the behavior of\n * assertion failures, for example by turning all assertion failures into log\n * messages.\n * @param {function(!goog.asserts.AssertionError)} errorHandler\n */\nexports.setErrorHandler = function(errorHandler) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_ = errorHandler;\n  }\n};\n\n\n/**\n * Checks if the condition evaluates to true if goog.asserts.ENABLE_ASSERTS is\n * true.\n * @template T\n * @param {T} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {T} The value of the condition.\n * @throws {goog.asserts.AssertionError} When the condition evaluates to false.\n */\nexports.assert = function(condition, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !condition) {\n    exports.doAssertFailure_(\n      '', null, opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return condition;\n};\n\n\n/**\n * Fails if goog.asserts.ENABLE_ASSERTS is true. This function is useful in case\n * when we want to add a check in the unreachable area like switch-case\n * statement:\n *\n * <pre>\n *  switch(type) {\n *    case FOO: doSomething(); break;\n *    case BAR: doSomethingElse(); break;\n *    default: goog.asserts.fail('Unrecognized type: ' + type);\n *      // We have only 2 types - \"default:\" section is unreachable code.\n *  }\n * </pre>\n *\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} Failure.\n */\nexports.fail = function(opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_(\n      new exports.AssertionError(\n        `Failure${opt_message ? `: ${opt_message}` : ''}`,\n        Array.prototype.slice.call(arguments, 1)));\n  }\n};\n\n\n/**\n * Checks if the value is a number if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {number} The value, guaranteed to be a number when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n */\nexports.assertNumber = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isNumber(value)) {\n    exports.doAssertFailure_(\n      'Expected number but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n\n/**\n * Checks if the value is a string if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {string} The value, guaranteed to be a string when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a string.\n */\nexports.assertString = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isString(value)) {\n    exports.doAssertFailure_(\n      'Expected string but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {string} */ (value);\n};\n\n\n/**\n * Checks if the value is a function if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Function} The value, guaranteed to be a function when asserts\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a function.\n */\nexports.assertFunction = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isFunction(value)) {\n    exports.doAssertFailure_(\n      'Expected function but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Function} */ (value);\n};\n\n\n/**\n * Checks if the value is an Object if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Object} The value, guaranteed to be a non-null object.\n * @throws {goog.asserts.AssertionError} When the value is not an object.\n */\nexports.assertObject = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isObject(value)) {\n    exports.doAssertFailure_(\n      'Expected object but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Object} */ (value);\n};\n\n\n/**\n * Checks if the value is an Array if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Array<?>} The value, guaranteed to be a non-null array.\n * @throws {goog.asserts.AssertionError} When the value is not an array.\n */\nexports.assertArray = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isArray(value)) {\n    exports.doAssertFailure_(\n      'Expected array but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Array<?>} */ (value);\n};\n\n\n/**\n * Checks if the value is a boolean if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {boolean} The value, guaranteed to be a boolean when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a boolean.\n */\nexports.assertBoolean = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isBoolean(value)) {\n    exports.doAssertFailure_(\n      'Expected boolean but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {boolean} */ (value);\n};\n\n\n/**\n * Checks if the value is a DOM Element if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Element} The value, likely to be a DOM Element when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not an Element.\n */\nexports.assertElement = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS &&\n      (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {\n    exports.doAssertFailure_(\n      'Expected Element but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Element} */ (value);\n};\n\n\n/**\n * Checks if the value is an instance of the user-defined type if\n * goog.asserts.ENABLE_ASSERTS is true.\n *\n * The compiler may tighten the type returned by this function.\n *\n * @param {?} value The value to check.\n * @param {function(new: T, ...)} type A user-defined constructor.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} When the value is not an instance of\n *     type.\n * @return {T}\n * @template T\n */\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !(value instanceof type)) {\n    exports.doAssertFailure_(\n      'Expected instanceof %s but got %s.',\n      [exports.getType_(type), exports.getType_(value)],\n      opt_message, Array.prototype.slice.call(arguments, 3));\n  }\n  return value;\n};\n\n\n/**\n * Checks that no enumerable keys are present in Object.prototype. Such keys\n * would break most code that use {@code for (var ... in ...)} loops.\n */\nexports.assertObjectPrototypeIsIntact = function() {\n  for (const key in Object.prototype) {\n    exports.fail(`${key} should not be enumerable in Object.prototype.`);\n  }\n};\n\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n * @param {*} value A constructor, object, or primitive.\n * @return {string} The best display name for the value, or 'unknown type name'.\n * @private\n */\nexports.getType_ = function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || 'unknown type name';\n  } else if (value instanceof Object) {\n    return value.constructor.displayName || value.constructor.name ||\n        Object.prototype.toString.call(value);\n  } else {\n    return value === null ? 'null' : typeof value;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.js","/**\n * @module app.disclaimer\n*/\nconst exports = {};\n\nimport './disclaimer.css';\nimport './common_dependencies.js';\nimport ngeoMessageDisclaimer from 'ngeo/message/Disclaimer.js';\n\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name,\n  ngeoMessageDisclaimer.module.name,\n]);\n\n\n/**\n * @param {ngeo.message.Disclaimer} ngeoDisclaimer Ngeo disclaimer service.\n *//* @ngInject\n * @constructor\n */\nexports.MainController = function(ngeoDisclaimer) {\n\n  /**\n   * @type {ngeo.message.Disclaimer}\n   * @export\n   */\n  this.disclaimer = ngeoDisclaimer;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [0, 0],\n      zoom: 4\n    })\n  });\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.successMsg_ = 'Disclaimer with success style';\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.infoMsg_ = 'Disclaimer with info style';\n  /**\n   * @type {string}\n   * @private\n   */\n  this.warningMsg_ = 'Disclaimer with warning style';\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.errorMsg_ = 'Disclaimer with error style';\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.inMapMsgs_ = [\n    'Disclaimer inside the map',\n    'An other message ',\n    'Map contributors',\n    'This is a long message inside a map'\n  ];\n\n  // initialize tooltips\n  $('[data-toggle=\"tooltip\"]').tooltip({\n    container: 'body',\n    trigger: 'hover'\n  });\n};\n\n\n/**\n * @export\n */\nexports.MainController.prototype.success = function() {\n  this.disclaimer.success(this.successMsg_);\n};\n\n\n/**\n * @export\n */\nexports.MainController.prototype.info = function() {\n  this.disclaimer.info(this.infoMsg_);\n};\n\n\n/**\n * @export\n */\nexports.MainController.prototype.warn = function() {\n  this.disclaimer.warn(this.warningMsg_);\n};\n\n\n/**\n * @export\n */\nexports.MainController.prototype.error = function() {\n  this.disclaimer.error(this.errorMsg_);\n};\n\n\n/**\n * Demonstrates how to display a disclaimer message in an other target. In\n * this case, it's shown in the map.\n * @export\n */\nexports.MainController.prototype.inMap = function() {\n  this.inMapMsgs_.forEach(function(message) {\n    this.disclaimer.alert({\n      msg: message,\n      target: angular.element('#disclaimers-in-map'),\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }, this);\n};\n\n\n/**\n * Demonstrates how to close disclaimer messages using JavaScript, i.e.\n * instead of clicking on the close button.\n * @export\n */\nexports.MainController.prototype.closeAll = function() {\n\n  this.disclaimer.close({\n    msg: this.successMsg_,\n    type: ngeoMessageMessage.Type.SUCCESS\n  });\n\n  this.disclaimer.close({\n    msg: this.infoMsg_,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n\n  this.disclaimer.close({\n    msg: this.warningMsg_,\n    type: ngeoMessageMessage.Type.WARNING\n  });\n\n  this.disclaimer.close({\n    msg: this.errorMsg_,\n    type: ngeoMessageMessage.Type.ERROR\n  });\n\n  this.inMapMsgs_.forEach(function(message) {\n    this.disclaimer.close({\n      msg: message,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }, this);\n\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/disclaimer.js","/**\n * @module ngeo.message.Disclaimer\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, disclaimers, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @ngdoc service\n * @ngname ngeoDisclaimer\n *//* @ngInject\n */\nconst exports = function($sce, gettextCatalog, ngeoCreatePopup) {\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @private\n   * @type {ngeox.PopupFactory}\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  ngeoMessageMessage.call(this);\n\n  const container = angular.element('<div class=\"ngeo-disclaimer\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * Cache of messages.\n   * @type {Object.<string, angular.JQLite|ngeo.message.Popup>}\n   * @private\n   */\n  this.messages_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Show disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.alert = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Close disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.close = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.closeMessage_, this);\n};\n\n\n/**\n * Show the message.\n * @param {ngeox.Message} message Message.\n * @protected\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const gettextCatalog = this.gettextCatalog_;\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  // No need to do anything if message already exist.\n  const uid = this.getMessageUid_(message);\n  if (this.messages_[uid] !== undefined) {\n    return;\n  }\n\n  const showInPopup = message.popup === true;\n\n  if (showInPopup) {\n    // display the message in a popup, i.e. using the ngeo create popup\n    const popup = this.createPopup_();\n    const content = this.sce_.trustAsHtml(message.msg);\n    popup.open({\n      autoDestroy: true,\n      content: content,\n      title: '&nbsp;'\n    });\n\n    // Watch the open property\n    popup.scope.$watch('open', (newVal, oldVal) => {\n      if (!newVal) {\n        this.closeMessage_(message);\n      }\n    });\n\n    this.messages_[uid] =  popup;\n\n  } else {\n    // display the message using a boostrap dismissible alert\n    const classNames = ['alert', 'fade', 'alert-dismissible'];\n    switch (type) {\n      case ngeoMessageMessage.Type.ERROR:\n        classNames.push('alert-danger');\n        break;\n      case ngeoMessageMessage.Type.INFORMATION:\n        classNames.push('alert-info');\n        break;\n      case ngeoMessageMessage.Type.SUCCESS:\n        classNames.push('alert-success');\n        break;\n      case ngeoMessageMessage.Type.WARNING:\n        classNames.push('alert-warning');\n        break;\n      default:\n        break;\n    }\n\n    const el = angular.element(\n      `<div role=\"alert\" class=\"${classNames.join(' ')}\"></div>`);\n    const button = angular.element(\n      `<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"${\n        gettextCatalog.getString('Close')\n      }\"><span aria-hidden=\"true\" class=\"fa fa-times\"></span></button>`);\n    const msg = angular.element('<span />').html(message.msg);\n    el.append(button).append(msg);\n\n    let container;\n\n    if (message.target) {\n      container = angular.element(message.target);\n    } else {\n      container = this.container_;\n    }\n\n    container.append(el);\n    el.addClass('in');\n\n    // Listen when the message gets closed to cleanup the cache of messages\n    el.on('closed.bs.alert', () => {\n      this.closeMessage_(message);\n    });\n\n    this.messages_[uid] =  el;\n  }\n};\n\n\n/**\n * @param {ngeox.Message} message Message.\n * @return {string} The uid.\n * @private\n */\nexports.prototype.getMessageUid_ = function(message) {\n  return `${message.msg}-${message.type}`;\n};\n\n\n/**\n * Close the message.\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.closeMessage_ = function(message) {\n  const uid = this.getMessageUid_(message);\n  const obj = this.messages_[uid];\n\n  // (1) No need to do anything if message doesn't exist\n  if (obj === undefined) {\n    return;\n  }\n\n  // (2) Close message (popup or alert)\n  if (obj instanceof ngeoMessagePopup) {\n    // (2.1) Close popup, if not already closed\n    if (obj.getOpen()) {\n      obj.setOpen(false);\n    }\n  } else {\n    // (2.2) Check if the message hasn't been closed using the UI, i.e. by\n    //       clicking the close button. If not, then close it.\n    if (obj.hasClass('in')) {\n      obj.alert('close');\n    }\n  }\n\n  // (3) Remove message from cache since it's closed now.\n  delete this.messages_[uid];\n};\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoDisclaimer', [\n  ngeoMessagePopup.module.name,\n]);\n\nexports.module.service('ngeoDisclaimer', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Disclaimer.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapDirective from 'ngeo/map/directive.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap.js';\n\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', [\n  ngeoDatasourceSyncDataSourcesMap.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\nimport googAsserts from 'goog/asserts.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSyncDataSourcesMap', [\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('ngeoSyncDataSourcesMap', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30"],"sourceRoot":""}