{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/misc/Time.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/Attribute.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/datasource/DataSource.js","webpack:///./examples/attributes.js","webpack:///./src/format/XSDAttribute.js","webpack:///./src/editing/attributesComponent.js","webpack:///./src/misc/datetimepickerComponent.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js"],"names":["__WEBPACK_IMPORTED_MODULE_0__xml_js__","__webpack_require__","XML","prototype","read","source","isDocument","this","readFromDocument","isNode","readFromNode","doc","parse","node","__webpack_exports__","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","_index","exports","getOptions","time","minDate","Date","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","mode","getTime","values","getUTCDate","localDate","getUTCFullYear","getUTCMonth","module","angular","service","_index2","default","requires","push","name","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","call","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","Object","ol","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","undefined","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","forEach","unlistenByKey","ol_Image","ImageWMS","opt_options","options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","x","Math","floor","y","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","listen","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","axisOrientation","getAxisOrientation","bbox","substr","join","uri","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","attribute","type","exec","ngeo","AttributeType","GEOMETRY","geomType","listenerKeys_","addListenerKey","uid","key","initListenerKey_","clearListenerKey","length","_events2","olBase","_Event","detail","arguments","_Event2","inherits","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","i","res","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","value","_Collection2","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","get","set","_module2","_attributesComponent2","MainController","$http","$timeout","$scope","_this","timeout_","disabled","feature","_Feature2","kind","then","handleXSDAttributeGet_","bind","log","$watch","newValue","oldValue","appendLog","resp","_XSDAttribute2","data","updateName","_this2","newMessage","controller","_XML2","_asserts2","assert","nodeType","Node","DOCUMENT_NODE","n","firstChild","nextSibling","ELEMENT_NODE","localName","elements","getElementsByTagName","ii","readFromElementNode_","getAttribute","assertString","alias","nillable","required","_Attribute2","setGeometryType","setAttributeByXsdType_","enumerations","SELECT","choices","restrictions","restrictionNode","maxLengths","maxLength","Number","BOOLEAN","DATE","DATETIME","TIME","NUMBER","numType","NumberType","FLOAT","INTEGER","TEXT","getGeometryAttribute","geomAttribute","_EventHelper2","_index3","component_","bindings","require","form","templateUrl","baseModuleTemplateUrl","component","Controller_","ngeoEventHelper","properties","scope_","ngeoEventHelper_","updating_","$onInit","getProperties","getUid","handleFeaturePropertyChange_","handleInputChange","$onDestroy","evt","target","$apply","_Time2","restrict","bindToController","scope","directive","$element","gettextCatalog","element_","gettextCatalog_","lang","getCurrentLanguage","$","datetimepicker","setLocale","fromJson","olObj","featureUidToGroupIndex_","groups_","source_","_Vector4","useSpatialIndex","layer_","_Vector2","style","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","featureUid","toString","features","removeFeature","clear","group","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","map","setMap","setStyle","createFunction","defaultMessage","defaultArgs","givenMessage","givenArgs","message","args","e","AssertionError","errorHandler_","errorHandler","ENABLE_ASSERTS","condition","opt_message","var_args","doAssertFailure_","Array","slice","goog","isNumber","typeOf","isString","isFunction","isObject","isArray","isBoolean","dom","NodeType","ELEMENT","getType_","fail","Function","displayName","constructor","_typeof","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","getLayers","item","layer","mapUid","previous","setAt","removeAt","insertAt","event","_CustomEvent2","current","dispatchEvent","updateDimensions","dimensions","baseBgLayer","layers","getArray","assertInstanceof","_Layer2","hasUpdates","updatedDimensions","getSource","refresh","_SyncDataSourcesMap2","directive_","$window","ngeoSyncDataSourcesMap","link","element","attrs","prop","$eval","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","start","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","ngeoDataSources","ngeoDataSources_","map_","handleDataSourcesAdd_","$inject","view","getView","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","_View2","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","_DataSources2","manager","index","manager_","features_","index_","setFeatures","unlisten","handleFeatureAdd_","handleFeatureRemove_","$attrs","mapExpr","recenter","attr","getSize","fit","zoom","setZoom","on","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","newVal","oldVal","cancelAnimationFrame","olArray","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","keys","newLength","sort","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","$applyAsync"],"mappings":"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","file":"attributes.db0481a279fa7d93f2ce.js","sourcesContent":["/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 106\n// module chunks = 0 1 5 20","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.misc.Time\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n *//* @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = new Date(time.minValue);\n  const maxDate = new Date(time.maxValue);\n\n  const minDefaultDate = (time.minDefValue) ?\n    new Date(time.minDefValue) : minDate;\n  const maxDefaultDate = (time.maxDefValue) ?\n    new Date(time.maxDefValue) : maxDate;\n\n  const defaultValues = (time.mode === 'range') ?\n    [minDefaultDate.getTime(), maxDefaultDate.getTime()] :\n    minDefaultDate.getTime();\n\n  return {\n    minDate: minDate.getTime(),\n    maxDate: maxDate.getTime(),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/Time.js","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.Attribute\n*/\nconst exports = {};\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeo.AttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Attribute.js","/**\n * @module ngeo.misc.EventHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n *//* @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.value('ngeoDataSources', new olCollection());\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module app.attributes\n*/\nconst exports = {};\n\nimport './attributes.css';\nimport './common_dependencies.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingAttributesComponent from 'ngeo/editing/attributesComponent.js';\n\nimport olFeature from 'ol/Feature.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n\n/** @type {!angular.Module} */\nexports.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name,\n  ngeoEditingAttributesComponent.name,\n]);\n\n\n/**\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {!angular.Scope} $scope Scope.\n *//* @ngInject\n * @constructor\n */\nexports.MainController = function($http, $timeout, $scope) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {?Array.<ngeox.Attribute>}\n   * @export\n   */\n  this.attributes = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.disabled = false;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature = new olFeature({\n    'name': 'A feature',\n    'kind': 'house'\n  });\n\n  $http.get('data/xsdattributes.xml').then(\n    this.handleXSDAttributeGet_.bind(this));\n\n  //\n  // Visual feedback for changes applied to feature:\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.log = '';\n\n  $scope.$watch(\n    () => this.feature.get('name'),\n    (newValue, oldValue) => {\n      if (newValue !== oldValue) {\n        this.appendLog(`name changed from '${oldValue}' to '${newValue}'`);\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.feature.get('kind'),\n    (newValue, oldValue) => {\n      if (newValue !== oldValue) {\n        this.appendLog(`kind changed from '${oldValue}' to '${newValue}'`);\n      }\n    }\n  );\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @private\n */\nexports.MainController.prototype.handleXSDAttributeGet_ = function(resp) {\n  const format = new ngeoFormatXSDAttribute();\n  const attributes = format.read(resp.data);\n  this.attributes = attributes;\n  return attributes;\n};\n\n\n/**\n * @export\n */\nexports.MainController.prototype.updateName = function() {\n  this.timeout_(() => {\n    this.feature.set('name', 'An alternate name');\n  }, 0);\n};\n\n/**\n * @param {string} newMessage New message to add to log.\n */\nexports.MainController.prototype.appendLog = function(newMessage) {\n  this.log = `${newMessage}\\n${this.log}`;\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/attributes.js","/**\n * @module ngeo.format.XSDAttribute\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoAttribute from 'ngeo/Attribute.js';\nimport olFormatXML from 'ol/format/XML.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @classdesc\n * Reads attributes that are defined in XSD format and return them as a list.\n *\n * @constructor\n * @struct\n * @extends {ol.format.XML}\n */\nconst exports = function() {\n  olFormatXML.call(this);\n};\n\nol.inherits(exports, olFormatXML);\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Array.<ngeox.Attribute>} The parsed result.\n * @override\n */\nexports.prototype.read = function(source) {\n  return (\n    /** @type {Array.<ngeox.Attribute>} */ olFormatXML.prototype.read.call(this, source)\n  );\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromDocument = function(doc) {\n  googAsserts.assert(doc.nodeType == Node.DOCUMENT_NODE,\n    'doc.nodeType should be DOCUMENT');\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromNode = function(node) {\n  googAsserts.assert(node.nodeType == Node.ELEMENT_NODE,\n    'node.nodeType should be ELEMENT');\n  googAsserts.assert(node.localName == 'schema',\n    'localName should be schema');\n\n  let elements = node.getElementsByTagName('element');\n  if (!elements.length) {\n    elements = node.getElementsByTagName('xsd:element');\n  }\n  const attributes = [];\n\n  let attribute;\n  for (let i = 0, ii = elements.length; i < ii; i++) {\n    attribute = this.readFromElementNode_(elements[i]);\n    if (attribute) {\n      attributes.push(attribute);\n    }\n  }\n\n  return attributes;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {?ngeox.Attribute} An attribute object.\n * @private\n */\nexports.prototype.readFromElementNode_ = function(node) {\n\n  const name = node.getAttribute('name');\n  googAsserts.assertString(name, 'name should be defined in element node.');\n\n  const alias = node.getAttribute('alias');\n  const nillable = node.getAttribute('nillable');\n  const required = !(nillable === true || nillable === 'true');\n\n  const attribute = {\n    name,\n    alias,\n    required\n  };\n\n  const type = node.getAttribute('type');\n  if (type) {\n    if (!ngeoAttribute.setGeometryType(attribute, type)) {\n      this.setAttributeByXsdType_(attribute, type);\n    }\n  } else {\n\n    // Attribute has no type defined on 'element' node.  Try:\n\n    // (1) Enumerations\n    let enumerations = node.getElementsByTagName('enumeration');\n    if (!enumerations.length) {\n      enumerations = node.getElementsByTagName('xsd:enumeration');\n    }\n    if (enumerations.length) {\n      attribute.type = ngeoBase.AttributeType.SELECT;\n      const choices = [];\n      for (let i = 0, ii = enumerations.length; i < ii; i++) {\n        choices.push(enumerations[i].getAttribute('value'));\n      }\n      attribute.choices = choices;\n    } else {\n      // (2) Other types with restrictions\n      let restrictions = node.getElementsByTagName('restriction');\n      if (!restrictions.length) {\n        restrictions = node.getElementsByTagName('xsd:restriction');\n      }\n      if (restrictions.length && restrictions[0]) {\n        const restrictionNode = restrictions[0];\n        this.setAttributeByXsdType_(\n          attribute,\n          restrictionNode.getAttribute('base')\n        );\n        // MaxLength\n        let maxLengths = node.getElementsByTagName('maxLength');\n        if (!maxLengths.length) {\n          maxLengths = node.getElementsByTagName('xsd:maxLength');\n        }\n        if (maxLengths.length && maxLengths[0]) {\n          attribute.maxLength = Number(maxLengths[0].getAttribute('value'));\n        }\n      }\n    }\n  }\n\n  if (!attribute.type) {\n    return null;\n  }\n\n  googAsserts.assert(attribute.type);\n\n  return attribute;\n};\n\n\n/**\n * Set the `type` and `numType` properties of an attribute depending on the\n * given xsdType.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type The xsd type.\n * @private\n */\nexports.prototype.setAttributeByXsdType_ = function(\n  attribute, type\n) {\n  if (type === 'xsd:boolean') {\n    attribute.type = ngeoBase.AttributeType.BOOLEAN;\n  } else if (type === 'xsd:date') {\n    attribute.type = ngeoBase.AttributeType.DATE;\n  } else if (type === 'xsd:dateTime') {\n    attribute.type = ngeoBase.AttributeType.DATETIME;\n  } else if (type === 'xsd:time') {\n    attribute.type = ngeoBase.AttributeType.TIME;\n  } else if (type === 'xsd:decimal') {\n    attribute.type = ngeoBase.AttributeType.NUMBER;\n    attribute.numType = ngeoBase.NumberType.FLOAT;\n  } else if (type === 'xsd:integer') {\n    attribute.type = ngeoBase.AttributeType.NUMBER;\n    attribute.numType = ngeoBase.NumberType.INTEGER;\n  } else if (type === 'xsd:string') {\n    attribute.type = ngeoBase.AttributeType.TEXT;\n  }\n};\n\n\n/**\n * Returns the first geometry attribute among a given list of attributes.\n * @param {Array.<ngeox.Attribute>} attributes The list of attributes.\n * @return {?ngeox.Attribute} A geometry attribute object.\n */\nexports.getGeometryAttribute = function(attributes) {\n  let geomAttribute = null;\n  for (let i = 0, ii = attributes.length; i < ii; i++) {\n    if (attributes[i].type === ngeoBase.AttributeType.GEOMETRY) {\n      geomAttribute = attributes[i];\n      break;\n    }\n  }\n  return geomAttribute;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/XSDAttribute.js","/**\n * @module ngeo.editing.attributesComponent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDatetimepickerComponent from 'ngeo/misc/datetimepickerComponent.js';\n\nconst exports = angular.module('ngeoAttributes', [\n  ngeoMiscEventHelper.module.name,\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Component used to render the attributes of a feature into a form.\n * Example:\n *\n *     <ngeo-attributes\n *       ngeo-attributes-attributes=\"::ctrl.attributes\"\n *       ngeo-attributes-disabled=\"ctrl.attributesDisabled\"\n *       ngeo-attributes-feature=\"::ctrl.feature\">\n *     </ngeo-attributes>\n *\n * @htmlAttribute {Array.<ngeox.Attribute>} ngeo-attributes-attributes The\n *     list of attributes to use.\n * @htmlAttribute {boolean} ngeo-attributes-disabled Whether the fieldset should\n *     be disabled or not.\n * @htmlAttribute {ol.Feature} ngeo-attributes-feature The feature.\n *\n * @ngdoc component\n * @ngname ngeoAttributes\n */\nexports.component_ = {\n  controller: 'ngeoAttributesController as attrCtrl',\n  bindings: {\n    'attributes': '=ngeoAttributesAttributes',\n    'disabled': '<ngeoAttributesDisabled',\n    'feature': '=ngeoAttributesFeature'\n  },\n  require: {\n    'form': '^'\n  },\n  templateUrl: () => `${ngeoBase.baseModuleTemplateUrl}/editing/attributescomponent.html`\n};\n\nexports.component('ngeoAttributes', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n *//* @ngInject\n * @ngdoc controller\n * @ngname ngeoAttributesController\n */\nexports.Controller_ = function($scope, ngeoEventHelper) {\n\n  /**\n   * The list of attributes to create the form with.\n   * @type {Array.<ngeox.Attribute>}\n   * @export\n   */\n  this.attributes;\n\n  /**\n   * Whether the fieldset should be disabled or not.\n   * @type {boolean}\n   * @export\n   */\n  this.disabled = false;\n\n  /**\n   * The feature containing the values.\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * The properties bound to the form, initialized with the inner properties\n   * of the feature.\n   * @type {?Object.<string, *>}\n   * @export\n   */\n  this.properties;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * While changes happen from the form (from the template), they are applied\n   * to the feature inner properties. The 'propertychange' event registered\n   * above does the opposite, i.e. it listens to the feature inner properties\n   * changes and apply them to the form. To prevent circular issues, while\n   * applying changes coming from the form, this flag is set. While set, changes\n   * from the feature inner properties are ignored.\n   * @type {boolean}\n   * @private\n   */\n  this.updating_ = false;\n};\n\n\n/**\n * Initialise the component.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.properties = this.feature.getProperties();\n\n  // Listen to the feature inner properties change and apply them to the form\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(this.feature, 'propertychange', this.handleFeaturePropertyChange_, this)\n  );\n};\n\n\n/**\n * Called when an input node value changes\n * @param {string} name Attribute name\n * @export\n */\nexports.Controller_.prototype.handleInputChange = function(name) {\n  this.updating_ = true;\n  const value = this.properties[name];\n  this.feature.set(name, value);\n  this.updating_ = false;\n};\n\n\n/**\n * Cleanup event listeners.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n};\n\n\n/**\n * @param {ol.Object.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function(evt) {\n  if (this.updating_) {\n    return;\n  }\n  this.properties[evt.key] = evt.target.get(evt.key);\n  this.scope_.$apply();\n};\n\n\nexports.controller('ngeoAttributesController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/editing/attributesComponent.js","/**\n * @module ngeo.misc.datetimepickerComponent\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDateTimePicker', [\n  ngeoMiscTime.module.name,\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * A directive used to display a date or time picker\n *\n * Example:\n *\n *      <input ngeo-datetimepicker\n *          ngeo-datetimepicker-options=\"{timepicker: false}\"\n *\n * @htmlAttribute {Object} ngeo-datetimepicker-options The options.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoDatetimepicker\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: exports.component_,\n    bindToController: true,\n    scope: {\n      'options': '<ngeoDatetimepickerOptions'\n    }\n  };\n};\n\nexports.directive('ngeoDateTimePicker', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n *//* @ngInject\n * @ngdoc controller\n * @ngname ngeoDatetimepickerController\n */\nexports.Controller_ = function($element, gettextCatalog) {\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * The options\n   * @type {Object|String}\n   * @private\n   */\n  this.options;\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  if (typeof this.options === 'string') {\n    this.options = angular.fromJson(this.options);\n  }\n  this.element_.datetimepicker(this.options);\n};\n\nexports.controller('ngeoDateTimePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/datetimepickerComponent.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/* eslint valid-jsdoc: 0, prefer-rest-params: 0,  */\n// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Utilities to check the preconditions, postconditions and\n * invariants runtime.\n *\n * Methods in this package should be given special treatment by the compiler\n * for type-inference. For example, <code>goog.asserts.assert(foo)</code>\n * will restrict <code>foo</code> to a truthy value.\n *\n * The compiler has an option to disable asserts. So code like:\n * <code>\n * var x = goog.asserts.assert(foo()); goog.asserts.assert(bar());\n * </code>\n * will be transformed into:\n * <code>\n * var x = foo();\n * </code>\n * The compiler will leave in foo() (because its return value is used),\n * but it will remove bar() because it assumes it does not have side-effects.\n *\n * @author agrieve@google.com (Andrew Grieve)\n */\n\nconst exports = {};\n\n/**\n * Throws an exception with the given message and \"Assertion failed\" prefixed\n * onto it.\n * @param {string} defaultMessage The message to use if givenMessage is empty.\n * @param {Array<*>} defaultArgs The substitution arguments for defaultMessage.\n * @param {string|undefined} givenMessage Message supplied by the caller.\n * @param {Array<*>} givenArgs The substitution arguments for givenMessage.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n * @private\n */\nexports.doAssertFailure_ = function(\n  defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  let message = 'Assertion failed';\n  let args;\n  if (givenMessage) {\n    message += `: ${givenMessage}`;\n    args = givenArgs;\n  } else if (defaultMessage) {\n    message += `: ${defaultMessage}`;\n    args = defaultArgs;\n  }\n  // The '' + works around an Opera 10 bug in the unit tests. Without it,\n  // a stack trace is added to var message above. With this, a stack trace is\n  // not added until this line (it causes the extra garbage to be added after\n  // the assertion message instead of in the middle of it).\n  const e = new exports.AssertionError(`${message}`, args || []);\n  exports.errorHandler_(e);\n};\n\n\n/**\n * Sets a custom error handler that can be used to customize the behavior of\n * assertion failures, for example by turning all assertion failures into log\n * messages.\n * @param {function(!goog.asserts.AssertionError)} errorHandler\n */\nexports.setErrorHandler = function(errorHandler) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_ = errorHandler;\n  }\n};\n\n\n/**\n * Checks if the condition evaluates to true if goog.asserts.ENABLE_ASSERTS is\n * true.\n * @template T\n * @param {T} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {T} The value of the condition.\n * @throws {goog.asserts.AssertionError} When the condition evaluates to false.\n */\nexports.assert = function(condition, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !condition) {\n    exports.doAssertFailure_(\n      '', null, opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return condition;\n};\n\n\n/**\n * Fails if goog.asserts.ENABLE_ASSERTS is true. This function is useful in case\n * when we want to add a check in the unreachable area like switch-case\n * statement:\n *\n * <pre>\n *  switch(type) {\n *    case FOO: doSomething(); break;\n *    case BAR: doSomethingElse(); break;\n *    default: goog.asserts.fail('Unrecognized type: ' + type);\n *      // We have only 2 types - \"default:\" section is unreachable code.\n *  }\n * </pre>\n *\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} Failure.\n */\nexports.fail = function(opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_(\n      new exports.AssertionError(\n        `Failure${opt_message ? `: ${opt_message}` : ''}`,\n        Array.prototype.slice.call(arguments, 1)));\n  }\n};\n\n\n/**\n * Checks if the value is a number if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {number} The value, guaranteed to be a number when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n */\nexports.assertNumber = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isNumber(value)) {\n    exports.doAssertFailure_(\n      'Expected number but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n\n/**\n * Checks if the value is a string if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {string} The value, guaranteed to be a string when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a string.\n */\nexports.assertString = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isString(value)) {\n    exports.doAssertFailure_(\n      'Expected string but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {string} */ (value);\n};\n\n\n/**\n * Checks if the value is a function if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Function} The value, guaranteed to be a function when asserts\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a function.\n */\nexports.assertFunction = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isFunction(value)) {\n    exports.doAssertFailure_(\n      'Expected function but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Function} */ (value);\n};\n\n\n/**\n * Checks if the value is an Object if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Object} The value, guaranteed to be a non-null object.\n * @throws {goog.asserts.AssertionError} When the value is not an object.\n */\nexports.assertObject = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isObject(value)) {\n    exports.doAssertFailure_(\n      'Expected object but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Object} */ (value);\n};\n\n\n/**\n * Checks if the value is an Array if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Array<?>} The value, guaranteed to be a non-null array.\n * @throws {goog.asserts.AssertionError} When the value is not an array.\n */\nexports.assertArray = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isArray(value)) {\n    exports.doAssertFailure_(\n      'Expected array but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Array<?>} */ (value);\n};\n\n\n/**\n * Checks if the value is a boolean if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {boolean} The value, guaranteed to be a boolean when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a boolean.\n */\nexports.assertBoolean = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isBoolean(value)) {\n    exports.doAssertFailure_(\n      'Expected boolean but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {boolean} */ (value);\n};\n\n\n/**\n * Checks if the value is a DOM Element if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Element} The value, likely to be a DOM Element when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not an Element.\n */\nexports.assertElement = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS &&\n      (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {\n    exports.doAssertFailure_(\n      'Expected Element but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Element} */ (value);\n};\n\n\n/**\n * Checks if the value is an instance of the user-defined type if\n * goog.asserts.ENABLE_ASSERTS is true.\n *\n * The compiler may tighten the type returned by this function.\n *\n * @param {?} value The value to check.\n * @param {function(new: T, ...)} type A user-defined constructor.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} When the value is not an instance of\n *     type.\n * @return {T}\n * @template T\n */\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !(value instanceof type)) {\n    exports.doAssertFailure_(\n      'Expected instanceof %s but got %s.',\n      [exports.getType_(type), exports.getType_(value)],\n      opt_message, Array.prototype.slice.call(arguments, 3));\n  }\n  return value;\n};\n\n\n/**\n * Checks that no enumerable keys are present in Object.prototype. Such keys\n * would break most code that use {@code for (var ... in ...)} loops.\n */\nexports.assertObjectPrototypeIsIntact = function() {\n  for (const key in Object.prototype) {\n    exports.fail(`${key} should not be enumerable in Object.prototype.`);\n  }\n};\n\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n * @param {*} value A constructor, object, or primitive.\n * @return {string} The best display name for the value, or 'unknown type name'.\n * @private\n */\nexports.getType_ = function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || 'unknown type name';\n  } else if (value instanceof Object) {\n    return value.constructor.displayName || value.constructor.name ||\n        Object.prototype.toString.call(value);\n  } else {\n    return value === null ? 'null' : typeof value;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapDirective from 'ngeo/map/directive.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap.js';\n\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', [\n  ngeoDatasourceSyncDataSourcesMap.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\nimport googAsserts from 'goog/asserts.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSyncDataSourcesMap', [\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('ngeoSyncDataSourcesMap', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js"],"sourceRoot":""}