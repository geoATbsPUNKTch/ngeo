{"version":3,"sources":["webpack:///./src/filters.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./examples/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js"],"names":["__webpack_require__","olMath","_index2","default","Scalify","$filter","numberFilter","filterFn","scale","text","module","filter","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","undefined","Infinity","sign","Math","abs","nb_decimal","floor","log","factor","pow","round","decimal","unit","str_number","length","substring","groups","str_unit","index","unshift","join","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","opt_type","divisor","prefix","index_max","postfix","space","NumberCoordinates","coordinates","opt_fractionDigits","opt_template","template","x","y","fractionDigits","parseInt","replace","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","modulo","dms","d","m","s","_string2","padNumber","charAt","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","__webpack_exports__","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","call","this","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","Object","ol","prototype","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","forEach","unlistenByKey","ol_Image","ImageWMS","opt_options","options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","listen","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","axisOrientation","getAxisOrientation","bbox","substr","uri","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","olBase","_Event","exports","type","detail","arguments","_Event2","inherits","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","i","res","key","fixedTileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__string_js__","angular","value","_Collection2","requires","push","name","_index","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","get","set","olObj","featureUidToGroupIndex_","groups_","source_","_Vector4","useSpatialIndex","layer_","_Vector2","source","style","styleFunction_","bind","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","_asserts2","assert","featureUid","getUid","toString","features","removeFeature","clear","group","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","map","setMap","setStyle","createFunction","service","defaultMessage","defaultArgs","givenMessage","givenArgs","message","args","e","AssertionError","errorHandler_","errorHandler","ENABLE_ASSERTS","condition","opt_message","var_args","doAssertFailure_","Array","slice","goog","isNumber","typeOf","isString","isFunction","isObject","isArray","isBoolean","nodeType","dom","NodeType","ELEMENT","getType_","fail","Function","displayName","constructor","_typeof","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","getLayers","item","layer","mapUid","previous","setAt","removeAt","insertAt","event","_CustomEvent2","current","dispatchEvent","updateDimensions","dimensions","baseBgLayer","layers","getArray","assertInstanceof","_Layer2","hasUpdates","updatedDimensions","getSource","refresh","_SyncDataSourcesMap2","directive_","$window","ngeoSyncDataSourcesMap","restrict","link","scope","element","attrs","prop","$eval","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","_events2","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","view","getView","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","evt","target","_View2","_this","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","_DataSources2","manager","manager_","features_","index_","setFeatures","unlisten","handleFeatureAdd_","handleFeatureRemove_","$scope","$element","$attrs","mapExpr","recenter","attr","getSize","fit","zoom","setZoom","on","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","$watch","newVal","oldVal","cancelAnimationFrame","olArray","templateUrl","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","controller","ScaleselectorController_","scalesExpr","scales","zoomLevels","keys","newLength","sort","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","_this2","$applyAsync","app","ngeo","_module2","MainController","_Tile2","_OSM2","maxZoom","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","__WEBPACK_IMPORTED_MODULE_0__index_js__","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction"],"mappings":"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","file":"scaleselector.min.js","sourcesContent":["/**\n * @module ngeo.filters\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport * as olMath from 'ol/math.js';\nimport olString from 'ol/string.js';\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nngeoBase.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoScalify', ngeoBase.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nngeoBase.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoNumber', ngeoBase.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nngeoBase.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoUnitPrefix', ngeoBase.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nngeoBase.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoNumberCoordinates', ngeoBase.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nngeoBase.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoDMSCoordinates', ngeoBase.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * @return {function(?):string} The filter function.\n *//* @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nngeoBase.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nngeoBase.module.filter('ngeoTrustHtml', ngeoBase.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filters.js","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.value('ngeoDataSources', new olCollection());\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/* eslint valid-jsdoc: 0, prefer-rest-params: 0,  */\n// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Utilities to check the preconditions, postconditions and\n * invariants runtime.\n *\n * Methods in this package should be given special treatment by the compiler\n * for type-inference. For example, <code>goog.asserts.assert(foo)</code>\n * will restrict <code>foo</code> to a truthy value.\n *\n * The compiler has an option to disable asserts. So code like:\n * <code>\n * var x = goog.asserts.assert(foo()); goog.asserts.assert(bar());\n * </code>\n * will be transformed into:\n * <code>\n * var x = foo();\n * </code>\n * The compiler will leave in foo() (because its return value is used),\n * but it will remove bar() because it assumes it does not have side-effects.\n *\n * @author agrieve@google.com (Andrew Grieve)\n */\n\nconst exports = {};\n\n/**\n * Throws an exception with the given message and \"Assertion failed\" prefixed\n * onto it.\n * @param {string} defaultMessage The message to use if givenMessage is empty.\n * @param {Array<*>} defaultArgs The substitution arguments for defaultMessage.\n * @param {string|undefined} givenMessage Message supplied by the caller.\n * @param {Array<*>} givenArgs The substitution arguments for givenMessage.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n * @private\n */\nexports.doAssertFailure_ = function(\n  defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  let message = 'Assertion failed';\n  let args;\n  if (givenMessage) {\n    message += `: ${givenMessage}`;\n    args = givenArgs;\n  } else if (defaultMessage) {\n    message += `: ${defaultMessage}`;\n    args = defaultArgs;\n  }\n  // The '' + works around an Opera 10 bug in the unit tests. Without it,\n  // a stack trace is added to var message above. With this, a stack trace is\n  // not added until this line (it causes the extra garbage to be added after\n  // the assertion message instead of in the middle of it).\n  const e = new exports.AssertionError(`${message}`, args || []);\n  exports.errorHandler_(e);\n};\n\n\n/**\n * Sets a custom error handler that can be used to customize the behavior of\n * assertion failures, for example by turning all assertion failures into log\n * messages.\n * @param {function(!goog.asserts.AssertionError)} errorHandler\n */\nexports.setErrorHandler = function(errorHandler) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_ = errorHandler;\n  }\n};\n\n\n/**\n * Checks if the condition evaluates to true if goog.asserts.ENABLE_ASSERTS is\n * true.\n * @template T\n * @param {T} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {T} The value of the condition.\n * @throws {goog.asserts.AssertionError} When the condition evaluates to false.\n */\nexports.assert = function(condition, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !condition) {\n    exports.doAssertFailure_(\n      '', null, opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return condition;\n};\n\n\n/**\n * Fails if goog.asserts.ENABLE_ASSERTS is true. This function is useful in case\n * when we want to add a check in the unreachable area like switch-case\n * statement:\n *\n * <pre>\n *  switch(type) {\n *    case FOO: doSomething(); break;\n *    case BAR: doSomethingElse(); break;\n *    default: goog.asserts.fail('Unrecognized type: ' + type);\n *      // We have only 2 types - \"default:\" section is unreachable code.\n *  }\n * </pre>\n *\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} Failure.\n */\nexports.fail = function(opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_(\n      new exports.AssertionError(\n        `Failure${opt_message ? `: ${opt_message}` : ''}`,\n        Array.prototype.slice.call(arguments, 1)));\n  }\n};\n\n\n/**\n * Checks if the value is a number if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {number} The value, guaranteed to be a number when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n */\nexports.assertNumber = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isNumber(value)) {\n    exports.doAssertFailure_(\n      'Expected number but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n\n/**\n * Checks if the value is a string if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {string} The value, guaranteed to be a string when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a string.\n */\nexports.assertString = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isString(value)) {\n    exports.doAssertFailure_(\n      'Expected string but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {string} */ (value);\n};\n\n\n/**\n * Checks if the value is a function if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Function} The value, guaranteed to be a function when asserts\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a function.\n */\nexports.assertFunction = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isFunction(value)) {\n    exports.doAssertFailure_(\n      'Expected function but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Function} */ (value);\n};\n\n\n/**\n * Checks if the value is an Object if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Object} The value, guaranteed to be a non-null object.\n * @throws {goog.asserts.AssertionError} When the value is not an object.\n */\nexports.assertObject = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isObject(value)) {\n    exports.doAssertFailure_(\n      'Expected object but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Object} */ (value);\n};\n\n\n/**\n * Checks if the value is an Array if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Array<?>} The value, guaranteed to be a non-null array.\n * @throws {goog.asserts.AssertionError} When the value is not an array.\n */\nexports.assertArray = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isArray(value)) {\n    exports.doAssertFailure_(\n      'Expected array but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Array<?>} */ (value);\n};\n\n\n/**\n * Checks if the value is a boolean if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {boolean} The value, guaranteed to be a boolean when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a boolean.\n */\nexports.assertBoolean = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isBoolean(value)) {\n    exports.doAssertFailure_(\n      'Expected boolean but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {boolean} */ (value);\n};\n\n\n/**\n * Checks if the value is a DOM Element if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Element} The value, likely to be a DOM Element when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not an Element.\n */\nexports.assertElement = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS &&\n      (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {\n    exports.doAssertFailure_(\n      'Expected Element but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Element} */ (value);\n};\n\n\n/**\n * Checks if the value is an instance of the user-defined type if\n * goog.asserts.ENABLE_ASSERTS is true.\n *\n * The compiler may tighten the type returned by this function.\n *\n * @param {?} value The value to check.\n * @param {function(new: T, ...)} type A user-defined constructor.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} When the value is not an instance of\n *     type.\n * @return {T}\n * @template T\n */\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !(value instanceof type)) {\n    exports.doAssertFailure_(\n      'Expected instanceof %s but got %s.',\n      [exports.getType_(type), exports.getType_(value)],\n      opt_message, Array.prototype.slice.call(arguments, 3));\n  }\n  return value;\n};\n\n\n/**\n * Checks that no enumerable keys are present in Object.prototype. Such keys\n * would break most code that use {@code for (var ... in ...)} loops.\n */\nexports.assertObjectPrototypeIsIntact = function() {\n  for (const key in Object.prototype) {\n    exports.fail(`${key} should not be enumerable in Object.prototype.`);\n  }\n};\n\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n * @param {*} value A constructor, object, or primitive.\n * @return {string} The best display name for the value, or 'unknown type name'.\n * @private\n */\nexports.getType_ = function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || 'unknown type name';\n  } else if (value instanceof Object) {\n    return value.constructor.displayName || value.constructor.name ||\n        Object.prototype.toString.call(value);\n  } else {\n    return value === null ? 'null' : typeof value;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapDirective from 'ngeo/map/directive.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap.js';\n\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', [\n  ngeoDatasourceSyncDataSourcesMap.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\nimport googAsserts from 'goog/asserts.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSyncDataSourcesMap', [\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('ngeoSyncDataSourcesMap', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module app.scaleselector\n*/\nconst exports = {};\n\nimport './scaleselector.css';\nimport './common_dependencies.js';\n/** @suppress {extraRequire} */\nimport ngeoFilters from 'ngeo/filters.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n\n/** @type {!angular.Module} **/\napp.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name\n]);\n\n\n/**\n * @constructor\n * @param {angular.Scope} $scope Controller scope.\n *//* @ngInject\n */\napp.MainController = function($scope) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [-10635142.37, 4813698.29],\n      zoom: 1,\n      maxZoom: 4\n    })\n  });\n\n  /**\n   * The zoom level/scale map object for the ngeoScaleselector directive.\n   * @type {!Array.<number>}\n   * @const\n   * @export\n   */\n  this.scales = [200000000, 100000000, 50000000, 25000000, 12000000];\n\n  /**\n   * Use the \"dropup\" variation of the Bootstrap dropdown.\n   * @type {ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = {\n    dropup: true\n  };\n\n};\n\n\napp.module.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/scaleselector.js","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30"],"sourceRoot":""}