{"version":3,"sources":["webpack:///./src/goog.asserts.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/interaction/Measure.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./src/filters.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/utils.js","webpack:///./src/rule/Rule.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./node_modules/openlayers/src/ol/format/JSONFeature.js","webpack:///./node_modules/openlayers/src/ol/format/GeoJSON.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/misc/Time.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./node_modules/openlayers/src/ol/format/KML.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/query/Querent.js","webpack:///./src/Attribute.js","webpack:///./src/datasource/OGC.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./src/download/service.js","webpack:///./node_modules/openlayers/src/ol/format/GPX.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/query/MapQuerent.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./src/map/LayerHelper.js","webpack:///./src/filter/RuleHelper.js","webpack:///./src/rule/Date.js","webpack:///./src/rule/Geometry.js","webpack:///./src/rule/Select.js","webpack:///./src/rule/Text.js","webpack:///./src/WFSDescribeFeatureType.js","webpack:///./node_modules/openlayers/src/ol/format/WMSCapabilities.js","webpack:///./src/datasource/Helper.js","webpack:///./src/format/WFSAttribute.js","webpack:///./src/query/mapQueryComponent.js","webpack:///./examples/bboxquery.js","webpack:///./src/query/module.js","webpack:///./src/query/Service.js","webpack:///./src/query/bboxQueryComponent.js"],"names":["exports","defaultMessage","defaultArgs","givenMessage","givenArgs","message","args","e","AssertionError","errorHandler_","errorHandler","ENABLE_ASSERTS","condition","opt_message","var_args","doAssertFailure_","Array","prototype","slice","call","arguments","value","goog","isNumber","typeOf","isString","isFunction","isObject","isArray","isBoolean","nodeType","dom","NodeType","ELEMENT","type","getType_","key","Object","fail","Function","displayName","name","constructor","toString","_typeof","__webpack_exports__","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","this","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","ol","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","undefined","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","forEach","unlistenByKey","ol_Image","ImageWMS","opt_options","options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","x","Math","floor","y","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","listen","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","axisOrientation","getAxisOrientation","bbox","substr","join","uri","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","olBase","__webpack_require__","_Event","detail","length","_Event2","default","inherits","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","i","res","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","module","angular","_Collection2","_index2","requires","push","_index","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","get","set","olObj","featureUidToGroupIndex_","groups_","source_","_Vector4","useSpatialIndex","layer_","_Vector2","source","style","styleFunction_","bind","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","_asserts2","assert","featureUid","getUid","features","removeFeature","clear","group","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","map","setMap","setStyle","createFunction","service","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","getLayers","item","layer","mapUid","previous","setAt","removeAt","insertAt","event","_CustomEvent2","current","dispatchEvent","updateDimensions","dimensions","baseBgLayer","layers","getArray","assertInstanceof","_Layer2","hasUpdates","updatedDimensions","getSource","refresh","_SyncDataSourcesMap2","directive_","$window","ngeoSyncDataSourcesMap","restrict","link","scope","element","attrs","prop","$eval","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","_events2","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","view","getView","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","evt","target","_View2","_this","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","_DataSources2","manager","index","manager_","features_","index_","setFeatures","unlisten","handleFeatureAdd_","handleFeatureRemove_","$scope","$element","$attrs","mapExpr","recenter","attr","getSize","fit","zoom","setZoom","on","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","$watch","newVal","oldVal","cancelAnimationFrame","olArray","templateUrl","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","controller","ScaleselectorController_","scalesExpr","scales","zoomLevels","keys","newLength","Number","sort","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","_this2","$applyAsync","__WEBPACK_IMPORTED_MODULE_9__math_js__","MultiPoint","coordinates","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","setCoordinates","__WEBPACK_IMPORTED_MODULE_0__index_js__","appendPoint","point","flatCoordinates","__WEBPACK_IMPORTED_MODULE_1__array_js__","getFlatCoordinates","clone","multiPoint","setFlatCoordinates","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","stride","ii","j","squaredDistance","getCoordinates","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","points","getType","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_POINT","intersectsExtent","setLayout","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XY","setFlatCoordinatesInternal","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","MultiLineString","ends_","maxDelta_","maxDeltaRevision_","appendLineString","lineString","multiLineString","sqrt","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","m","opt_extrapolate","opt_interpolate","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","ends","lineStrings","offset","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","MULTI_LINE_STRING","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","MultiPolygon","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","polygon","multiPolygon","len","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","endss","polygons","jj","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","__WEBPACK_IMPORTED_MODULE_6__obj_js__","GeometryCollection","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","geometries","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getGeometries","getGeometriesArray","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","geometry","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","GEOMETRY_COLLECTION","rotate","angle","anchor","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","proj4","projCodes","defs","code","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","transform","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","ft","us-ft","ignoredChar","match","testkey","lkey","toLowerCase","replace","projString","defData","paramName","paramVal","paramOutname","self","paramObj","split","v","trim","filter","a","reduce","p","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","b","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","legalAxis","indexOf","parser","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","text","Error","level","place","root","stack","currentObject","mapit","unshift","thing","out","newObj","sExpr","shift","convert","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","wkt_parser_D2R","d2r","input","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","that","charAt","apply","EPSG","ESRI","IAU2000","console","log","WGS84","GOOGLE","lib_defs","codeWords","parseCode","some","extend","destination","property","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","abs","tsfnz","phi","com","pow","tan","phi2z","ts","dphi","eccnth","atan","sin","identity","pt","projs","es","cos","lon","lat","exp","names","projections_names","projStore","add","projections","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","callback","error","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","Proj","checkParams","datum_transform","dest","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","X","Y","Z","atan2","geocentricToGeodetic","adjust_axis","crs","denorm","t","xin","yin","zin","toPoint","array","checkSanity","checkCoord","num","TypeError","core_wgs84","transformer","from","to","coords","transformedArray","checkProj","oProj","core","fromProj","toProj","coord","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","right","top","mgrs_toPoint","ll","accuracy","utm","eccPrimeSquared","N","T","C","A","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","northing","easting","zoneNumber","zoneLetter","LetterDesignator","getLetterDesignator","LLtoUTM","seasting","snorthing","setParm","get100kSetForZone","setColumn","setRow","column","row","colOrigin","charCodeAt","rowOrigin","rowInt","rollover","colInt","String","fromCharCode","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","result","topRight","mgrsString","testChar","hunK","sb","substring","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","Point","warn","fromMGRS","mgrsStr","toMGRS","lib_Point","C06","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","s","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","d","ds","f","g","temp","h","asin","sinh","r","hypot","max","min","asinhy","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","Infinity","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","isNaN","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","APA","mode","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","somerc","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","DrawEventType","Draw","Pointer","handleDownEvent","handleDownEvent_","handleEvent","handleUpEvent","handleUpEvent_","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","POLYGON","maxPoints_","maxPoints","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","CIRCLE","opt_geometry","circle","Circle","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","POINT","LINE_STRING","LineString","Polygon","concat","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","getDefaultStyleFunction","geometryName_","geometryName","condition_","noModifierKeys","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","ol_Object","getChangeEventType","Property","ACTIVE","updateState_","styles","Style","createDefaultEditing","getGeometry","originalEvent","CONTEXTMENU","preventDefault","move","MapBrowserEventType","POINTERMOVE","pass","POINTERDRAG","pixel","clearTimeout","addToDrawing_","POINTERDOWN","handlePointerMove_","pointerEvent","pointerType","MouseSource","POINTER_TYPE","DBLCLICK","startDrawing_","setTimeout","MapBrowserPointerEvent","frameState","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","dx","dy","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","getPixelFromCoordinate","Feature","updateSketchFeatures_","setGeometryName","setGeometry","Event","last","sketchLineGeom","ring","getLinearRing","done","removeLastPoint","splice","sketchFeature","shouldStopEvent","sketchFeatures","overlaySource","addFeatures","getMap","active","getActive","createRegularPolygon","opt_sides","opt_angle","radius","createBox","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","node","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","exec","readDateTime","dateTime","parse","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","readString","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","delta","getRadius","getRadiusSquared_","getCenter","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","circleExtent","intersectsCoordinate","setCenter","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","setRadius","olDom","olSphere","ngeo","interaction","MeasureBaseOptions","_Interaction2","handleEvent_","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","document","createElement","textContent","changeEventKey_","postcomposeEventKey_","fill","_Fill2","color","stroke","_Stroke2","width","vectorLayer_","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","SPHERE_WGS84","_EPSG2","RADIUS","getFormattedArea","format","geodesicArea","getFormattedCircleArea","getFormattedLength","haversineDistance","getFormattedPoint","opt_template","dragging","helpMsg","removeChildren","setPosition","getDrawInteraction","prevMap","removeInteraction","addInteraction","createMeasureTooltip_","handleMeasure","measure","innerHTML","classList","setOffset","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","_Overlay2","positioning","addOverlay","removeOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent","setActive","getTooltipElement","olProj","olProjProj4","epsg21781def","_proj4","register","setExtent","_somerc2","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","doc","homepage","license","main","repository","scripts","build","build:tmerc","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","XMLSerializer","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","readFeature","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","readFeaturesFromDocument","readFeatures","readFeaturesFromNode","firstChild","nextSibling","Node","ELEMENT_NODE","readGeometry","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","writeFeature","writeFeatureNode","serializeToString","writeFeatures","writeFeaturesNode","writeGeometry","writeGeometryNode","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","font","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getText","getTextAlign","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","olMath","Scalify","$filter","numberFilter","filterFn","$locale","formats","NUMBER_FORMATS","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","nb_decimal","factor","str_number","groups","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","opt_type","divisor","prefix","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","template","fractionDigits","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","modulo","dms","_string2","xdms","ydms","trustHtmlFilter","$sce","trustAsHtml","read","readFromDocument","readFromNode","btnGroupComponent_","$parse","assign","buttons_","buttonModel","newValue","BtnGroupController","scope_","activate","expressionFn","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","$apply","$setViewValue","$viewValue","$render","toggleClass","multiGeom","_MultiPoint2","_MultiLineString2","_MultiPolygon2","navigator","userAgent","hex","rgb","colorZeroPadding","queryString","queryData","pairs","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","pair","indexOfEquals","decodeURIComponent","err","return","queryItem","encodeURIComponent","active_","expression","lowerBoundary_","lowerBoundary","operator_","operator","upperBoundary_","upperBoundary","isCustom_","isCustom","operators_","operators","propertyName_","propertyName","listenerKeys","getExpression","setExpression","Observable","OperatorType","BETWEEN","TemporalOperatorType","DURING","EQUAL_TO","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","LESSER_THAN","LESSER_THAN_OR_EQUAL_TO","LIKE","NOT_EQUAL_TO","SpatialOperatorType","CONTAINS","INTERSECTS","WITHIN","BEGINS","ENDS","EQUALS","XLink","readHref","getAttributeNS","unitPrefixFormat","numberFormat","_Measure2","_DrawAzimut2","geom","_GeometryCollection2","line","_LineString2","getFormattedAzimutRadius","getLastCoordinate","formatLength","formatAzimut","getFormattedAzimut","getAzimut","JSONFeature","format_Feature","getObject","object","JSON","FormatType","readFeatureFromObject","getReadOptions","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","format_JSONFeature","GeoJSON","featureProjection","defaultFeatureProjection","extractGeometryName_","extractGeometryName","GEOMETRY_READERS","GEOMETRY_WRITERS","rightHanded","geometryReader","geometryWriter","geoJSONFeature","geometry_name","setId","properties","setProperties","geoJSONFeatures","adaptOptions","getId","getProperties","getGeometryName","objects","olFunctions","_Pointer2","started_","sketchLayer_","_Draw2","finishDrawing_","mapBrowserEvent","_Feature2","_Point2","sketchPointGeom","_Circle2","getLength","FALSE","getOptions","time","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getTime","values","localDate","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","featureType","featureNS_","featureNS","gmlFormat_","gmlFormat","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","schemaLocation_","schemaLocation","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","context","__WEBPACK_IMPORTED_MODULE_9__obj_js__","objectStack","FEATURE_COLLECTION_PARSERS","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","GMLNS","makeArrayPusher","readFeaturesInternal","pushParseAndPop","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","http://www.opengis.net/gml","boundedBy","makeObjectPropertySetter","readGeometryElement","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","getAttribute","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","parseNode","INSERT_RESULTS_PARSERS_","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","makeChildAppender","writeFeature_","gmlVersion","child","createElementNS","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","writeFeatureElement","writeOgcFidFilter_","fid","setAttribute","getTypeName_","featurePrefix","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","pushSerializeAndPop","hasZ","srsName","TRANSACTION_SERIALIZERS_","makeSimpleNodeFactory","writeProperty_","writeGeometryElement","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","getTagName","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","begin","writeTimeInstant_","writeLogicalFilter_","conditions","writeNotFilter_","writeComparisonFilter_","matchCase","writeOgcLiteral_","writeIsNullFilter_","writeIsBetweenFilter_","writeIsLikeFilter_","wildCard","singleChar","escapeChar","pattern","writeOgcExpression_","tagName","timeInstant","timePosition","Query","During","And","Or","Not","BBOX","Contains","Intersects","Within","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","featureTypes","writeGetFeature","handle","outputFormat","maxFeatures","resultType","startIndex","count","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","and","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","firstElementChild","nextElementSibling","childNodes","__WEBPACK_IMPORTED_MODULE_10__proj_js__","__WEBPACK_IMPORTED_MODULE_8__xml_js__","GML2","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","readFlatCoordinates_","containerSrs","__WEBPACK_IMPORTED_MODULE_7__proj_js__","coordsGroups","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","flatLinearRing","RING_PARSERS","outerBoundaryIsParser_","GEOMETRY_FLAT_COORDINATES_PARSERS_","makeReplacer","FLAT_LINEAR_RINGS_PARSERS_","innerBoundaryIs","outerBoundaryIs","GEOMETRY_PARSERS_","readPoint","readMultiPoint","readLineString","readMultiLineString","LinearRing","readLinearRing","readPolygon","readMultiPolygon","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","nodeName","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","dataProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","namespaceURI","writeCoordinates_","segments","writeCurveSegments_","parts","getCoords_","writeSurfaceOrPolygon_","rings","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_srsName","opt_hasZ","writeMultiCurveOrLineString_","curve","lines","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","pointMember","lineStringMember","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","polygonMember","lowerCorner","upperCorner","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","featureMember","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","localName","defaultPrefix","candidate","parsersNS","parsers","readFeatureElement","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","flatLinearRings","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","pointMembers","lineStringMembers","polygonMembers","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","__WEBPACK_IMPORTED_MODULE_26__xml_js__","KML","DEFAULT_STYLE_ARRAY_","createStyleDefaults_","__WEBPACK_IMPORTED_MODULE_18__proj_js__","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS_","NAMESPACE_URIS_","SCHEMA_LOCATION_","DEFAULT_COLOR_","DEFAULT_FILL_STYLE_","__WEBPACK_IMPORTED_MODULE_19__style_Fill_js__","DEFAULT_IMAGE_STYLE_ANCHOR_","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_","__WEBPACK_IMPORTED_MODULE_21__style_IconAnchorUnits_js__","PIXELS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_","DEFAULT_IMAGE_STYLE_SIZE_","DEFAULT_IMAGE_STYLE_SRC_","DEFAULT_IMAGE_SCALE_MULTIPLIER_","DEFAULT_IMAGE_STYLE_","__WEBPACK_IMPORTED_MODULE_20__style_Icon_js__","anchorOrigin","__WEBPACK_IMPORTED_MODULE_22__style_IconOrigin_js__","BOTTOM_LEFT","anchorXUnits","anchorYUnits","DEFAULT_NO_IMAGE_STYLE_","DEFAULT_STROKE_STYLE_","__WEBPACK_IMPORTED_MODULE_23__style_Stroke_js__","DEFAULT_TEXT_STROKE_STYLE_","DEFAULT_TEXT_STYLE_","__WEBPACK_IMPORTED_MODULE_25__style_Text_js__","DEFAULT_STYLE_","__WEBPACK_IMPORTED_MODULE_24__style_Style_js__","zIndex","ICON_ANCHOR_UNITS_MAP_","fraction","FRACTION","pixels","insetPixels","createNameStyleFunction_","foundStyle","textStyle","textOffset","imageSize","getImageSize","imageScale","foundText","createFeatureStyleFunction_","styleUrl","sharedStyles","nameStyle","drawName","__WEBPACK_IMPORTED_MODULE_10__geom_GeometryType_js__","findStyle_","styleValue","readColor_","hexColor","re","readURI_","baseURI","window","location","href","URL","readVec2_","xunits","yunits","origin","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale_","readStyleMapValue_","STYLE_MAP_PARSERS_","IconStyleParser_","ICON_STYLE_PARSERS_","styleObject","IconObject","drawIcon","hotSpot","w","heading","__WEBPACK_IMPORTED_MODULE_17__math_js__","imageStyle","offsetOrigin","LabelStyleParser_","LABEL_STYLE_PARSERS_","LineStyleParser_","LINE_STYLE_PARSERS_","strokeStyle","PolyStyleParser_","POLY_STYLE_PARSERS_","fillStyle","outline","FLAT_LINEAR_RING_PARSERS_","gxCoordParser_","readGxMultiTrack_","GX_MULTITRACK_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_MultiLineString_js__","readGxTrack_","gxTrackObject","whens","GX_TRACK_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_GeometryLayout_js__","readIcon_","iconObject","ICON_PARSERS_","readLineString_","EXTRUDE_AND_ALTITUDE_MODE_PARSERS_","readLinearRing_","__WEBPACK_IMPORTED_MODULE_16__geom_Polygon_js__","readMultiGeometry_","MULTI_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryCollection_js__","multiGeometry","homogeneous","__WEBPACK_IMPORTED_MODULE_2__array_js__","__WEBPACK_IMPORTED_MODULE_13__geom_MultiPoint_js__","setCommonGeometryProperties_","__WEBPACK_IMPORTED_MODULE_14__geom_MultiPolygon_js__","__WEBPACK_IMPORTED_MODULE_3__asserts_js__","readPoint_","__WEBPACK_IMPORTED_MODULE_15__geom_Point_js__","readPolygon_","readStyle_","STYLE_PARSERS_","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DataParser_","DATA_PARSERS_","featureObject","ExtendedDataParser_","EXTENDED_DATA_PARSERS_","RegionParser_","REGION_PARSERS_","PairDataParser_","pairObject","PAIR_PARSERS_","PlacemarkStyleMapParser_","styleMapValue","placemarkObject","SchemaDataParser_","SCHEMA_DATA_PARSERS_","SimpleDataParser_","data","LatLonAltBoxParser_","LAT_LON_ALT_BOX_PARSERS_","regionObject","LodParser_","LOD_PARSERS_","lodObject","INNER_BOUNDARY_IS_PARSERS_","OUTER_BOUNDARY_IS_PARSERS_","LinkParser_","LINK_PARSERS_","whenParser_","when","makeStructureNS","Data","SchemaData","LatLonAltBox","Lod","altitudeMode","minAltitude","maxAltitude","north","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","extrude","tessellate","Icon","MultiGeometry","Track","NETWORK_LINK_PARSERS_","ExtendedData","Region","Link","address","open","phoneNumber","visibility","PLACEMARK_PARSERS_","StyleMap","MultiTrack","SimpleData","IconStyle","LabelStyle","LineStyle","PolyStyle","Pair","readDocumentOrFolder_","Document","makeArrayExtender","Folder","Placemark","readPlacemark_","readSharedStyle_","readSharedStyleMap_","__WEBPACK_IMPORTED_MODULE_1__Feature_js__","__WEBPACK_IMPORTED_MODULE_5__format_Feature_js__","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeColorTextNode_","rgba","__WEBPACK_IMPORTED_MODULE_4__color_js__","abgr","writeCoordinatesTextNode_","dimension","writeDataNode_","EXTENDEDDATA_NODE_SERIALIZERS_","writeDataNodeName_","writeDataNodeValue_","writeDocument_","DOCUMENT_SERIALIZERS_","DOCUMENT_NODE_FACTORY_","writeExtendedData_","namesAndValues","DATA_NODE_FACTORY_","writeIcon_","icon","orderedKeys","ICON_SEQUENCE_","makeSequence","ICON_SERIALIZERS_","GX_NODE_FACTORY_","writeIconStyle_","getSrc","iconImageSize","iconProperties","getAnchor","getOrigin","ICON_STYLE_SEQUENCE_","ICON_STYLE_SERIALIZERS_","writeLabelStyle_","getColor","LABEL_STYLE_SEQUENCE_","LABEL_STYLE_SERIALIZERS_","writeLineStyle_","getWidth","LINE_STYLE_SEQUENCE_","LINE_STYLE_SERIALIZERS_","writeMultiGeometry_","factory","POINT_NODE_FACTORY_","LINE_STRING_NODE_FACTORY_","POLYGON_NODE_FACTORY_","MULTI_GEOMETRY_SERIALIZERS_","writeBoundaryIs_","BOUNDARY_IS_SERIALIZERS_","LINEAR_RING_NODE_FACTORY_","writePlacemark_","PLACEMARK_SERIALIZERS_","EXTENDEDDATA_NODE_FACTORY_","getStyleFunction","PLACEMARK_SEQUENCE_","writePrimitiveGeometry_","getStride","PRIMITIVE_GEOMETRY_SEQUENCE_","PRIMITIVE_GEOMETRY_SERIALIZERS_","writePolygon_","linearRings","outerRing","POLYGON_SERIALIZERS_","INNER_BOUNDARY_NODE_FACTORY_","OUTER_BOUNDARY_NODE_FACTORY_","writePolyStyle_","POLY_STYLE_SERIALIZERS_","COLOR_NODE_FACTORY_","writeScaleTextNode_","writeStyle_","STYLE_SEQUENCE_","STYLE_SERIALIZERS_","writeVec2_","vec2","KML_SEQUENCE_","KML_SERIALIZERS_","GEOMETRY_TYPE_TO_NODENAME_","kml","xmlnsUri","xmlSchemaInstanceUri","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","olUri","olExtent","$http","$q","ngeoRuleHelper","ngeoWMSTime","http_","q_","ngeoRuleHelper_","ngeoWMSTime_","requestCancelers_","wmsGetCapabilitiesPromises_","wmtsGetCapabilitiesPromises_","promises","cancelStillRunningRequests_","queryableDataSources","dataSources","getQueryableDataSources","combinedWFSDataSources","getCombinableWFSDataSources_","wfs","issueCombinedWFS_","combinedWMSDataSources","getCombinableWMSDataSources_","wms","issueCombinedWMS_","all","then","handleCombinedQueryResult_","isDataSourceQueryable_","supportsWFS","supportsAttributes","ogcLayerNames","getOGCLayerNames","appendParams","assertString","wfsUrl","TYPENAME","response","_WFSDescribeFeatureType2","layerCapabilities","layerName","found","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","layerCapability","wmsFindLayerCapability","baseUrl","opt_cache","cache","promise","_WMSCapabilities2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_WMTSCapabilities2","combinedHash","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","dataSourceIdStr","dataSourceId","limit","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","tooManyFeatures","totalFeatureCount","readAndTypeFeatures_","setUniqueIds_","getSetOlFormatTypes_","wfsFormat","wmsFormat","opt_types","types","setLayers","combinedDataSources","wfsCount","tolerancePx","tolerance","createOrUpdateFromCoordinate","_WFS2","xmlSerializer","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_loop","getFeatureCommonOptions","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","wfsFeatureNS","wfsFeaturePrefix","wfsOutputFormat","activeDimensions","getInRangeOGCLayerNames","createFilter","incTime","filterRules","timeRangeValue","getFeatureDefer","defer","handleQueryResult_","countPromise","getCountOptions","featureCountXml","featureCountRequest","canceler","registerCanceler_","post","headers","Content-Type","timeout","resolve","numberOfFeatures","getFeatureOptions","featureRequestXml","featureRequest","_iterator6","FEATURE_COUNT","projCode","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","LAYERS","INFO_FORMAT","activeDimensionsSet","filterString","filtrableLayerName","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmsInfoFormat","wmsUrl","getFiltrableOGCLayerName","createFilterString","timeProperty","formatWMSTimeParam","filterParamValue","filterParamValues","wmsSource","_ImageWMS2","wmsGetFeatureInfoUrl","combinableDataSources","notCombinableDataSources","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","combinableForWFS","combined","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","combinableDataSource","combinableWithDataSourceForWFS","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","combinableForWMS","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","combinableWithDataSourceForWMS","queryable","isAnyOGCLayerInRange","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","CombinedDataSources","_RuleHelper2","_WMSTime2","attribute","AttributeType","GEOMETRY","geomType","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","FilterCondition","AND","filterRules_","filtrable_","filtrable","copyable_","copyable","dimensions_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","ogcType_","ogcType","Type","WMS","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeUpperValue_","timeUpperValue","wfsFeatureNS_","WFSFeatureNS","wfsFeaturePrefix_","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","WFSOutputFormat","GML3","wfsUrl_","wmsInfoFormat_","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","ogcLayer","_GML4","_GML2","wfsFormat_","supportsWMS","_WMSGetFeatureInfo2","wmsFormat_","_inherits","_get","updateGeometryNameFromAttributes_","haveTheSameActiveDimensions","queryableOnly","layerNames","maxRes","minRes","share","myActive","itsActive","range","lower","upper","config","guessServiceTypeByUrl","WMTS","QGISSERVER","geoserver","mapserver","qgisserver","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","Filter","tagName_","filter_Filter","LogicalNary","filter_LogicalNary","filter_And","Bbox","filter_Bbox","Spatial","filter_Spatial","filter_Contains","Comparison","filter_Comparison","filter_During","ComparisonBinary","opt_matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","filter_Intersects","IsBetween","filter_IsBetween","IsLike","opt_wildCard","opt_singleChar","opt_escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","filter_Not","NotEqualTo","filter_NotEqualTo","filter_Or","filter_Within","_ol_format_filter_","or","not","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","olColor","$injector","$filter_","decimals_","has","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","filterName","assertFunction","projection_","download_","setProjection","opt_select","getStyle","supportsVertex_","getVertexStyle","getHaloStyle_","getLineStringStyle_","getPointStyle_","RECTANGLE","getPolygonStyle_","TEXT","getTextStyle_","strokeWidth","getStrokeProperty","showLabel","getShowLabelProperty","showMeasure","getShowMeasureProperty","getRGBAColorProperty","textLabelValues","getMeasure","getNameProperty","textLabelValue","createTextStyle_","getSizeProperty","optNumber","attrib","getNumber","opacity","getOpacityProperty","fillColor","azimut","FeatureProperties","AZIMUT","getRadiusLine","getAngleProperty","createEditingStyles","white","blue","opt_incGeomFunc","incGeomFunc","_RegularShape2","innerMultiCoordinates","multiCoordinates","supported","includes","haloSize","getFilteredFeatureValues","ANGLE","getColorProperty","COLOR","fromString","NAME","OPACITY","SHOW_MEASURE","assertBoolean","SHOW_LABEL","SIZE","STROKE","export","formatType","GPX","exportGPX","exportKML","_GPX2","export_","_KML2","fileName","opt_mimeType","mimeType","clones","writeOptions","_Text2","_MeasureAzimut2","_toConsumableArray","IS_TEXT","IS_CIRCLE","IS_RECTANGLE","panMapToFeature","opt_panDuration","panDuration","assertArray","calculateExtent","mapCenter","featureCenter","getCoordinateAt","getInteriorPoint","animate","duration","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","_service2","factory_","content","opt_fileType","fileType","_utils2","isSafari","blob","Blob","saveAs","readExtensions_","readExtensions","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","RTE_PARSERS","cmt","desc","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","appendCoordinate","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","makeArraySerializer","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","geometryLayout","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","GPX_SERIALIZERS","hasM","applyLayoutOptions_","__WEBPACK_IMPORTED_MODULE_7__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_6__geom_GeometryLayout_js__","handleReadExtensions_","extensionsNode","featureReader","gpx","gettextCatalog","gettextCatalog_","_Time2","formatTimeValue","opt_useISOFormat","opt_toUTC","utc","yearResolution","monthResolution","dayResolution","getString","toISOString","wmsTimeProperty","times","sources","total","pending","ngeoDataSourcesHelper","ngeoQuerent","ngeoQueryResult","ngeoDataSourcesHelper_","ngeoQuerent_","result_","limit_","queryCountFirst_","queryCountFirst","tolerancePx_","dataSourceNames_","issue","handleResult_","queried","tooManyResults","idStr","getDataSource","label","querentResultItem","typeSeparatedFeatures","filteredProperties","alias","unset","featuresByType","_Querent2","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","layers_","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","featureIdentifier_","layerIdentifier_","readFeatures_","toRemove","layerFeatures","gmlFeatures","$q_","$http_","GROUP_KEY","REFRESH_PARAM","createBasicWMSLayer","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","olServerType","serverType","_Image2","createBasicWMSLayerFromDataSource","imageType","setVisible","createWMTSLayerFromCapabilitites","capabilitiesURL","opt_dimensions","_Tile2","preload","_WMTS2","optionsFromCapabilities","setSource","l","find","elt","reject","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","createBasicGroup","opt_layers","_Group2","getGroupFromMap","groupName","getLayerGroup","existingGroup","addLayer","getFlatLayers","getFlatLayers_","getLayerByName","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","LAYER","isLayerVisible","getVisible","currentResolution","getMinResolution","getMaxResolution","refreshWMSLayer","random","updateWMSLayerState","TIME","getQuerySourceIds","ngeoFeatureHelper","ngeoFeatureHelper_","opt_isCustom","rules","createRuleFromAttribute","rule","DATE","DATETIME","_Date2","_Rule2","_Geometry2","NUMBER","SELECT","_Select2","choices","optionsList","createRule","selectOptions","sourceRule","destRule","serializeRule","featureProperties","mainFilter","createFilterFromRule_","_filter2","OR","NOT","timeFilter","createTimeFilterFromDataSource_","filterNode","rot","rsot","rtot","spatialTypes","numericTypes","beginValue","endValue","moment","subtract","selectedChoices","selectedChoice","numericExpression","stringExpression","momentEnd","startValue","_FeatureHelper2","_Rule","feature_","format_","_GeoJSON2","updatingExpression_","updatingGeometry_","geometryChangeListenerKey_","handleFeatureGeometryChange_","setGeometryFromExpression_","registerGeometryChange_","Geometry","handleGeometryChange_","choices_","_XML2","_xml2","readElement_","readComplexType_","COMPLEX_TYPE_PARSERS_","readComplexContent_","COMPLEX_CONTENT_PARSERS_","readExtension_","EXTENSION_PARSERS_","readSequence_","SEQUENCE_PARSERS_","complexType","complexContent","extension","sequence","WMSCapabilities","__WEBPACK_IMPORTED_MODULE_2__format_XML_js__","wmsCapabilityObject","readAttribution_","ATTRIBUTION_PARSERS_","readBoundingBox_","__WEBPACK_IMPORTED_MODULE_3__format_XSD_js__","readEXGeographicBoundingBox_","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS_","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","readCapability_","CAPABILITY_PARSERS_","readService_","SERVICE_PARSERS_","readContactInformation_","CONTACT_INFORMATION_PARSERS_","readContactPersonPrimary_","CONTACT_PERSON_PARSERS_","readContactAddress_","CONTACT_ADDRESS_PARSERS_","readException_","EXCEPTION_PARSERS_","readCapabilityLayer_","parentLayerObject","layerObject","cascaded","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","readDimension_","unitSymbol","multipleValues","nearestValue","readFormatOnlineresource_","FORMAT_ONLINERESOURCE_PARSERS_","readRequest_","REQUEST_PARSERS_","readDCPType_","DCPTYPE_PARSERS_","readHTTP_","readOperationType_","OPERATIONTYPE_PARSERS_","readSizedFormatOnlineresource_","formatOnlineresource","readAuthorityURL_","authorityObject","readMetadataURL_","metadataObject","readKeywordList_","KEYWORDLIST_PARSERS_","Service","Capability","Request","Exception","Name","KeywordList","OnlineResource","__WEBPACK_IMPORTED_MODULE_1__format_XLink_js__","ContactInformation","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","ContactPosition","ContactAddress","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","StateOrProvince","PostCode","CRS","EX_GeographicBoundingBox","BoundingBox","Attribution","AuthorityURL","MetadataURL","DataURL","FeatureListURL","MinScaleDenominator","MaxScaleDenominator","LogoURL","GetCapabilities","GetMap","GetFeatureInfo","DCPType","StyleSheetURL","StyleURL","Keyword","collection_","cache_","handleDataSourcesRemove_","wfsDescribeFeatureTypeDefer","wfsDescribeFeatureType","ogcLayerName","_WFSAttribute2","setAttributes","_Attribute","complexTypeElements","readFromComplexTypeElement_","required","_Attribute2","setGeometryType","_MapQuerent2","ngeoMapQuerent","elem","clickEventKey_","pointerMoveEventKey_","handleMapClick_","getEventPixel","hit","forEachLayerAtPixel","sourceids","getTargetElement","cursor","cursorHover","app","_module2","_btnComponent2","_module4","queryresultComponent","controllerAs","component","QueryresultController","MainController","queryActive","_OGC2","busStopLayer","informationLayer","_OSM2","_Service2","_mapQueryComponent2","_bboxQueryComponent2","ngeoQueryOptions","ngeoLayerHelper","sourceIdsProperty_","sourceIdsProperty","DEFAULT_SOURCE_IDS_PROPERTY_","featurePrefix_","ngeoLayerHelper_","sources_","addSource","sourceId","infoFormat","QueryInfoFormatType","sourceLabel","resultSource","identifierAttributeField","cacheItem","addSources","clearResult_","removeAllSources","issueIdentifyFeaturesRequests_","issueGetFeatureRequests_","getQueryableSources_","doGetFeatureInfoRequests_","doGetFeatureRequestsWithCoordinate_","updatePendingState_","doGetFeatureRequests_","wfsOnly","wmsItemsByUrl","wfsItemsByUrl","ids","getLayerSourceIds_","validateLayerParams","layerSource","layersFromParams","wfsQuery","urlWfs","pushSourceIfUnique_","isUnique","items","lyrStr","getLayersForItems_","getDimensionsParams_","getQueryBbox_","getLayersForItem_","getFeatures","_this3","meta","_has2","DEVICE_PIXEL_RATIO","pendingSources","getLimit","_DragBox2","_condition2","platformModifierKeyOnly"],"mappings":"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","file":"bboxquery.min.js","sourcesContent":["/* eslint valid-jsdoc: 0, prefer-rest-params: 0,  */\n// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Utilities to check the preconditions, postconditions and\n * invariants runtime.\n *\n * Methods in this package should be given special treatment by the compiler\n * for type-inference. For example, <code>goog.asserts.assert(foo)</code>\n * will restrict <code>foo</code> to a truthy value.\n *\n * The compiler has an option to disable asserts. So code like:\n * <code>\n * var x = goog.asserts.assert(foo()); goog.asserts.assert(bar());\n * </code>\n * will be transformed into:\n * <code>\n * var x = foo();\n * </code>\n * The compiler will leave in foo() (because its return value is used),\n * but it will remove bar() because it assumes it does not have side-effects.\n *\n * @author agrieve@google.com (Andrew Grieve)\n */\n\nconst exports = {};\n\n/**\n * Throws an exception with the given message and \"Assertion failed\" prefixed\n * onto it.\n * @param {string} defaultMessage The message to use if givenMessage is empty.\n * @param {Array<*>} defaultArgs The substitution arguments for defaultMessage.\n * @param {string|undefined} givenMessage Message supplied by the caller.\n * @param {Array<*>} givenArgs The substitution arguments for givenMessage.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n * @private\n */\nexports.doAssertFailure_ = function(\n  defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  let message = 'Assertion failed';\n  let args;\n  if (givenMessage) {\n    message += `: ${givenMessage}`;\n    args = givenArgs;\n  } else if (defaultMessage) {\n    message += `: ${defaultMessage}`;\n    args = defaultArgs;\n  }\n  // The '' + works around an Opera 10 bug in the unit tests. Without it,\n  // a stack trace is added to var message above. With this, a stack trace is\n  // not added until this line (it causes the extra garbage to be added after\n  // the assertion message instead of in the middle of it).\n  const e = new exports.AssertionError(`${message}`, args || []);\n  exports.errorHandler_(e);\n};\n\n\n/**\n * Sets a custom error handler that can be used to customize the behavior of\n * assertion failures, for example by turning all assertion failures into log\n * messages.\n * @param {function(!goog.asserts.AssertionError)} errorHandler\n */\nexports.setErrorHandler = function(errorHandler) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_ = errorHandler;\n  }\n};\n\n\n/**\n * Checks if the condition evaluates to true if goog.asserts.ENABLE_ASSERTS is\n * true.\n * @template T\n * @param {T} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {T} The value of the condition.\n * @throws {goog.asserts.AssertionError} When the condition evaluates to false.\n */\nexports.assert = function(condition, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !condition) {\n    exports.doAssertFailure_(\n      '', null, opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return condition;\n};\n\n\n/**\n * Fails if goog.asserts.ENABLE_ASSERTS is true. This function is useful in case\n * when we want to add a check in the unreachable area like switch-case\n * statement:\n *\n * <pre>\n *  switch(type) {\n *    case FOO: doSomething(); break;\n *    case BAR: doSomethingElse(); break;\n *    default: goog.asserts.fail('Unrecognized type: ' + type);\n *      // We have only 2 types - \"default:\" section is unreachable code.\n *  }\n * </pre>\n *\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} Failure.\n */\nexports.fail = function(opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_(\n      new exports.AssertionError(\n        `Failure${opt_message ? `: ${opt_message}` : ''}`,\n        Array.prototype.slice.call(arguments, 1)));\n  }\n};\n\n\n/**\n * Checks if the value is a number if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {number} The value, guaranteed to be a number when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n */\nexports.assertNumber = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isNumber(value)) {\n    exports.doAssertFailure_(\n      'Expected number but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n\n/**\n * Checks if the value is a string if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {string} The value, guaranteed to be a string when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a string.\n */\nexports.assertString = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isString(value)) {\n    exports.doAssertFailure_(\n      'Expected string but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {string} */ (value);\n};\n\n\n/**\n * Checks if the value is a function if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Function} The value, guaranteed to be a function when asserts\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a function.\n */\nexports.assertFunction = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isFunction(value)) {\n    exports.doAssertFailure_(\n      'Expected function but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Function} */ (value);\n};\n\n\n/**\n * Checks if the value is an Object if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Object} The value, guaranteed to be a non-null object.\n * @throws {goog.asserts.AssertionError} When the value is not an object.\n */\nexports.assertObject = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isObject(value)) {\n    exports.doAssertFailure_(\n      'Expected object but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Object} */ (value);\n};\n\n\n/**\n * Checks if the value is an Array if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Array<?>} The value, guaranteed to be a non-null array.\n * @throws {goog.asserts.AssertionError} When the value is not an array.\n */\nexports.assertArray = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isArray(value)) {\n    exports.doAssertFailure_(\n      'Expected array but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Array<?>} */ (value);\n};\n\n\n/**\n * Checks if the value is a boolean if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {boolean} The value, guaranteed to be a boolean when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a boolean.\n */\nexports.assertBoolean = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isBoolean(value)) {\n    exports.doAssertFailure_(\n      'Expected boolean but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {boolean} */ (value);\n};\n\n\n/**\n * Checks if the value is a DOM Element if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Element} The value, likely to be a DOM Element when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not an Element.\n */\nexports.assertElement = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS &&\n      (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {\n    exports.doAssertFailure_(\n      'Expected Element but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Element} */ (value);\n};\n\n\n/**\n * Checks if the value is an instance of the user-defined type if\n * goog.asserts.ENABLE_ASSERTS is true.\n *\n * The compiler may tighten the type returned by this function.\n *\n * @param {?} value The value to check.\n * @param {function(new: T, ...)} type A user-defined constructor.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} When the value is not an instance of\n *     type.\n * @return {T}\n * @template T\n */\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !(value instanceof type)) {\n    exports.doAssertFailure_(\n      'Expected instanceof %s but got %s.',\n      [exports.getType_(type), exports.getType_(value)],\n      opt_message, Array.prototype.slice.call(arguments, 3));\n  }\n  return value;\n};\n\n\n/**\n * Checks that no enumerable keys are present in Object.prototype. Such keys\n * would break most code that use {@code for (var ... in ...)} loops.\n */\nexports.assertObjectPrototypeIsIntact = function() {\n  for (const key in Object.prototype) {\n    exports.fail(`${key} should not be enumerable in Object.prototype.`);\n  }\n};\n\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n * @param {*} value A constructor, object, or primitive.\n * @return {string} The best display name for the value, or 'unknown type name'.\n * @private\n */\nexports.getType_ = function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || 'unknown type name';\n  } else if (value instanceof Object) {\n    return value.constructor.displayName || value.constructor.name ||\n        Object.prototype.toString.call(value);\n  } else {\n    return value === null ? 'null' : typeof value;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.js","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.value('ngeoDataSources', new olCollection());\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapDirective from 'ngeo/map/directive.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap.js';\n\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', [\n  ngeoDatasourceSyncDataSourcesMap.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\nimport googAsserts from 'goog/asserts.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSyncDataSourcesMap', [\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('ngeoSyncDataSourcesMap', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 72\n// module chunks = 0 1 2 3 4 5 7 9 10","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 73\n// module chunks = 0 1 3 4 5 12 13 17 18","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 75\n// module chunks = 0 1 3 4 5 12 13 17 18","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = _ol_coordinate_.squaredDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  const styles = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == MouseSource.POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      const center = coordinates[0];\n      const end = coordinates[1];\n      const radius = Math.sqrt(\n        _ol_coordinate_.squaredDistance(center, end));\n      const geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      const angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 80\n// module chunks = 0 1 2 5 10","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = _ol_geom_flat_deflate_.coordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 81\n// module chunks = 0 1 2 6 7 8 9 11 14","/**\n * @module ngeo.interaction.Measure\n*/\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olDom from 'ol/dom.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nngeo.interaction.MeasureBaseOptions;\n\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ?\n    options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nol.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\nexports.SPHERE_WGS84 = new olSphere(olProjEPSG4326.RADIUS);\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(\n  polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (\n    polygon.clone().transform(projection, 'EPSG:4326'));\n  const coordinates = geom.getLinearRing(0).getCoordinates();\n  const area = Math.abs(exports.SPHERE_WGS84.geodesicArea(coordinates));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(\n  circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection,\n  precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = ol.proj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = ol.proj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += exports.SPHERE_WGS84.haversineDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(\n  point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js","/**\n * @module ngeo.proj.EPSG21781\n*/\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n*/\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 94\n// module chunks = 0 1 3 4 5 12 13 17 18","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 98\n// module chunks = 0 1 2 10","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 99\n// module chunks = 0 1 2 8 10 19 24","/**\n * @module ngeo.filters\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport * as olMath from 'ol/math.js';\nimport olString from 'ol/string.js';\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nngeoBase.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoScalify', ngeoBase.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nngeoBase.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoNumber', ngeoBase.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nngeoBase.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoUnitPrefix', ngeoBase.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nngeoBase.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoNumberCoordinates', ngeoBase.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nngeoBase.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoDMSCoordinates', ngeoBase.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * @return {function(?):string} The filter function.\n *//* @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nngeoBase.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nngeoBase.module.filter('ngeoTrustHtml', ngeoBase.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filters.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 106\n// module chunks = 0 1 5 20","/**\n * @module ngeo.misc.btnComponent\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n *//* @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach(function(expressionFn, i) {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  }, this);\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/btnComponent.js","/**\n * @module ngeo.utils\n*/\nconst exports = {};\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.rule.Rule\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.rule.Rule}\n */\nconst exports = class {\n\n  /**\n   * The abstract class for all filter rules.\n   *\n   * Rules are used to define filters that can be applied on data sources.\n   * A rule is usually a combination of 3 things:\n   *\n   * - a property name, for example 'city_name'\n   * - an operator, for example 'is equal to'\n   * - and an expression, for example 'Chicoutimi'.\n   *\n   * A rule is useful to hold those properties and change them on the fly.\n   * For example, chaning an operator from 'is equal to' to 'like'.\n   *\n   * Also, a rule is especially useful for its `value` getter, which returns\n   * the combination of properties described above or `null` if there are some\n   * missing.  The `value` getter can be watched and used when the value is\n   * not null.\n   *\n   * When the operator is `between`, the `lowerBoundary` and `upperBoundary`\n   * properties are used instead of `expression`.\n   *\n   * @struct\n   * @param {!ngeox.rule.RuleOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * Whether the rule is active or not. Used by the `ngeo-rule` component.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = options.active === true;\n\n    /**\n     * The expression of the rule. The expression and boundaries are mutually\n     * exclusives.\n     *\n     * Note: exported (instead of private) due to the problem with the\n     * compiler. See the getter/setter methods below...  As a setter, the\n     * `expression` property would support being bond to an `ng-model`. Without\n     * it, it can't unless we expose the property directly.\n     *\n     * @type {?number|string}\n     * @export\n     */\n    this.expression = options.expression !== undefined ?\n      options.expression : null;\n\n    /**\n     * The lower boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.lowerBoundary_ = options. lowerBoundary !== undefined ?\n      options.lowerBoundary : null;\n\n    /**\n     * The rule operator.\n     * @type {?string}\n     * @private\n     */\n    this.operator_ = options.operator || null;\n\n    /**\n     * The upper boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.upperBoundary_ = options. upperBoundary !== undefined ?\n      options.upperBoundary : null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the rule is a custom one or not.\n     * @type {boolean}\n     * @private\n     */\n    this.isCustom_ = options.isCustom !== false;\n\n    /**\n     * The human-readable name of the rule.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n\n    /**\n     * A list of rule operators.\n     * @type {?Array.<string>}\n     * @private\n     */\n    this.operators_ = options.operators || null;\n\n    /**\n     * The property name (a.k.a. the attribute name).\n     * @type {string}\n     * @private\n     */\n    this.propertyName_ = options.propertyName;\n\n    /**\n     * The type of rule.\n     * @type {string}\n     * @private\n     */\n    this.type_ = goog.asserts.assert(options.type);\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @protected\n     */\n    this.listenerKeys = [];\n\n  }\n\n  // === Dynamic property getters/setters ===\n\n  /**\n   * @return {boolean} Active\n   * @export\n   */\n  get active() {\n    return this.active_;\n  }\n\n  /**\n   * @param {boolean} active Active\n   * @export\n   */\n  set active(active) {\n    this.active_ = active;\n  }\n\n  /**\n   * The `expression` property does not have conventionnal getter/setters\n   * method because of a limitation of the compiler. It doesn't support\n   * yet having such methods being extended in child classes.\n   *\n   * See: https://github.com/google/closure-compiler/issues/1089\n   *\n   * @return {?number|string} Expression\n   * @export\n   */\n  getExpression() {\n    return this.expression;\n  }\n\n  /**\n   * @param {?number|string} expression Expression\n   * @export\n   */\n  setExpression(expression) {\n    this.expression = expression;\n  }\n\n  /**\n   * @return {?number} Lower boundary\n   * @export\n   */\n  get lowerBoundary() {\n    return this.lowerBoundary_;\n  }\n\n  /**\n   * @param {?number} lowerBoundary Lower boundary\n   * @export\n   */\n  set lowerBoundary(lowerBoundary) {\n    this.lowerBoundary_ = lowerBoundary;\n  }\n\n  /**\n   * @return {?string} Operator\n   * @export\n   */\n  get operator() {\n    return this.operator_;\n  }\n\n  /**\n   * @param {?string} operator Operator\n   * @export\n   */\n  set operator(operator) {\n    this.operator_ = operator;\n  }\n\n  /**\n   * @return {?number} Upper boundary\n   * @export\n   */\n  get upperBoundary() {\n    return this.upperBoundary_;\n  }\n\n  /**\n   * @param {?number} upperBoundary Upper boundary\n   * @export\n   */\n  set upperBoundary(upperBoundary) {\n    this.upperBoundary_ = upperBoundary;\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {boolean} Is custom.\n   * @export\n   */\n  get isCustom() {\n    return this.isCustom_;\n  }\n\n  /**\n   * @return {string} name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Array.<string>} Operators\n   * @export\n   */\n  get operators() {\n    return this.operators_;\n  }\n\n  /**\n   * @return {string} Property name\n   * @export\n   */\n  get propertyName() {\n    return this.propertyName_;\n  }\n\n  /**\n   * @return {string} Type\n   * @export\n   */\n  get type() {\n    return this.type_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {?ngeox.rule.RuleSimpleValue|ngeox.rule.RuleRangeValue} Value.\n   * @export\n   */\n  get value() {\n    let value = null;\n\n    const expression = this.getExpression();\n    const lowerBoundary = this.lowerBoundary;\n    const operator = this.operator;\n    const propertyName = this.propertyName;\n    const upperBoundary = this.upperBoundary;\n\n    if (operator) {\n      if (operator === exports.OperatorType.BETWEEN ||\n          operator === exports.TemporalOperatorType.DURING) {\n        if (lowerBoundary !== null && upperBoundary !== null) {\n          value = {\n            operator,\n            lowerBoundary,\n            propertyName,\n            upperBoundary\n          };\n        }\n      } else {\n        if (expression !== null) {\n          value = {\n            expression,\n            operator,\n            propertyName\n          };\n        }\n      }\n    }\n\n    return value;\n  }\n\n  // === Other utility methods ===\n\n  /**\n   * Reset the following properties to `null`: expression, lowerBoundary,\n   * upperBoundary.\n   * @export\n   */\n  reset() {\n    if (this.getExpression() !== null) {\n      this.setExpression(null);\n    }\n    if (this.lowerBoundary !== null) {\n      this.lowerBoundary = null;\n    }\n    if (this.upperBoundary !== null) {\n      this.upperBoundary = null;\n    }\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    ol.Observable.unByKey(this.listenerKeys);\n    this.listenerKeys.length = 0;\n  }\n\n};\n\n\n/**\n * @enum {string}\n */\nexports.OperatorType = {\n  BETWEEN: '..',\n  EQUAL_TO: '=',\n  GREATER_THAN: '>',\n  GREATER_THAN_OR_EQUAL_TO: '>=',\n  LESSER_THAN: '<',\n  LESSER_THAN_OR_EQUAL_TO: '<=',\n  LIKE: '~',\n  NOT_EQUAL_TO: '!='\n};\n\n\n/**\n * @enum {string}\n */\nexports.SpatialOperatorType = {\n  CONTAINS: 'contains',\n  INTERSECTS: 'intersects',\n  WITHIN: 'within'\n};\n\n\n/**\n * @enum {string}\n */\nexports.TemporalOperatorType = {\n  BEGINS: '>=',\n  DURING: '..',\n  ENDS: '<=',\n  EQUALS: '='\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Rule.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 125\n// module chunks = 0 1 5","/**\n * @module ngeo.interaction.MeasureAzimut\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, opt_options) {\n\n  const options = opt_options || {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nol.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), ol.proj.Projection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureAzimut.js","/**\n * @module ol/format/JSONFeature\n */\nimport {inherits} from '../index.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst JSONFeature = function() {\n  FeatureFormat.call(this);\n};\n\ninherits(JSONFeature, FeatureFormat);\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.getType = function() {\n  return FormatType.JSON;\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeature = function(source, opt_options) {\n  return this.readFeatureFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeatures = function(source, opt_options) {\n  return this.readFeaturesFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.Feature} Feature.\n */\nJSONFeature.prototype.readFeatureFromObject = function(object, opt_options) {};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nJSONFeature.prototype.readFeaturesFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readGeometry = function(source, opt_options) {\n  return this.readGeometryFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nJSONFeature.prototype.readGeometryFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readProjection = function(source) {\n  return this.readProjectionFromObject(getObject(source));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nJSONFeature.prototype.readProjectionFromObject = function(object) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeature = function(feature, opt_options) {\n  return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeatureObject = function(feature, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeatures = function(features, opt_options) {\n  return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeaturesObject = function(features, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeGeometryObject = function(geometry, opt_options) {};\nexport default JSONFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/JSONFeature.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/GeoJSON\n */\n// TODO: serialize dataProjection as crs member when writing\n// see https://github.com/openlayers/openlayers/issues/2078\n\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @constructor\n * @extends {ol.format.JSONFeature}\n * @param {olx.format.GeoJSONOptions=} opt_options Options.\n * @api\n */\nconst GeoJSON = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  JSONFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection(\n    options.defaultDataProjection ?\n      options.defaultDataProjection : 'EPSG:4326');\n\n\n  if (options.featureProjection) {\n    this.defaultFeatureProjection = getProjection(options.featureProjection);\n  }\n\n  /**\n   * Name of the geometry attribute for features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * Look for the geometry name in the feature GeoJSON\n   * @type {boolean|undefined}\n   * @private\n   */\n  this.extractGeometryName_ = options.extractGeometryName;\n\n};\n\ninherits(GeoJSON, JSONFeature);\n\n\n/**\n * @const\n * @type {Object.<string, function(GeoJSONObject): ol.geom.Geometry>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n  'GeometryCollection': readGeometryCollectionGeometry\n};\n\n\n/**\n * @const\n * @type {Object.<string, function(ol.geom.Geometry, olx.format.WriteOptions=): (GeoJSONGeometry|GeoJSONGeometryCollection)>}\n */\nconst GEOMETRY_WRITERS = {\n  'Point': writePointGeometry,\n  'LineString': writeLineStringGeometry,\n  'Polygon': writePolygonGeometry,\n  'MultiPoint': writeMultiPointGeometry,\n  'MultiLineString': writeMultiLineStringGeometry,\n  'MultiPolygon': writeMultiPolygonGeometry,\n  'GeometryCollection': writeGeometryCollectionGeometry,\n  'Circle': writeEmptyGeometryCollectionGeometry\n};\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  const geometryReader = GEOMETRY_READERS[object.type];\n  return (\n    /** @type {ol.geom.Geometry} */ transformWithOptions(\n      geometryReader(object), false, opt_options)\n  );\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object.geometries.map(\n    /**\n       * @param {GeoJSONGeometry} geometry Geometry.\n       * @return {ol.geom.Geometry} geometry Geometry.\n       */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object.coordinates);\n}\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {ol.geom.Geometry} */ (\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {GeoJSONGeometryCollection} Empty GeoJSON geometry collection.\n */\nfunction writeEmptyGeometryCollectionGeometry(geometry) {\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: []\n  });\n}\n\n\n/**\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function(geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: geometries\n  });\n}\n\n\n/**\n * @param {ol.geom.LineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * @param {ol.geom.Point} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.Polygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * Read a feature from a GeoJSON Feature source.  Only works for Feature or\n * geometry types.  Use {@link ol.format.GeoJSON#readFeatures} to read\n * FeatureCollection source. If feature at source has an id, it will be used\n * as Feature id by calling {@link ol.Feature#setId} internally.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGeoJSON.prototype.readFeature;\n\n\n/**\n * Read all features from a GeoJSON source.  Works for all GeoJSON types.\n * If the source includes only geometries, features will be created with those\n * geometries.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGeoJSON.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeatureFromObject = function(object, opt_options) {\n  /**\n   * @type {GeoJSONFeature}\n   */\n  let geoJSONFeature = null;\n  if (object.type === 'Feature') {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n  } else {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ ({\n      type: 'Feature',\n      geometry: /** @type {GeoJSONGeometry|GeoJSONGeometryCollection} */ (object)\n    });\n  }\n\n  const geometry = readGeometry(geoJSONFeature.geometry, opt_options);\n  const feature = new Feature();\n  if (this.geometryName_) {\n    feature.setGeometryName(this.geometryName_);\n  } else if (this.extractGeometryName_ && geoJSONFeature.geometry_name !== undefined) {\n    feature.setGeometryName(geoJSONFeature.geometry_name);\n  }\n  feature.setGeometry(geometry);\n  if (geoJSONFeature.id !== undefined) {\n    feature.setId(geoJSONFeature.id);\n  }\n  if (geoJSONFeature.properties) {\n    feature.setProperties(geoJSONFeature.properties);\n  }\n  return feature;\n};\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeaturesFromObject = function(object, opt_options) {\n  const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  /** @type {Array.<ol.Feature>} */\n  let features = null;\n  if (geoJSONObject.type === 'FeatureCollection') {\n    const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */\n        (object);\n    features = [];\n    const geoJSONFeatures = geoJSONFeatureCollection.features;\n    let i, ii;\n    for (i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n      features.push(this.readFeatureFromObject(geoJSONFeatures[i],\n        opt_options));\n    }\n  } else {\n    features = [this.readFeatureFromObject(object, opt_options)];\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @api\n */\nGeoJSON.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readGeometryFromObject = function(object, opt_options) {\n  return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n};\n\n\n/**\n * Read the projection from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGeoJSON.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readProjectionFromObject = function(object) {\n  const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  const crs = geoJSONObject.crs;\n  let projection;\n  if (crs) {\n    if (crs.type == 'name') {\n      projection = getProjection(crs.properties.name);\n    } else {\n      assert(false, 36); // Unknown SRS type\n    }\n  } else {\n    projection = this.defaultDataProjection;\n  }\n  return /** @type {ol.proj.Projection} */ (projection);\n};\n\n\n/**\n * Encode a feature as a GeoJSON Feature string.\n *\n * @function\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeature;\n\n\n/**\n * Encode a feature as a GeoJSON Feature object.\n *\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeature} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeatureObject = function(feature, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n\n  const object = /** @type {GeoJSONFeature} */ ({\n    'type': 'Feature'\n  });\n  const id = feature.getId();\n  if (id !== undefined) {\n    object.id = id;\n  }\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    object.geometry = writeGeometry(geometry, opt_options);\n  } else {\n    object.geometry = null;\n  }\n  const properties = feature.getProperties();\n  delete properties[feature.getGeometryName()];\n  if (!isEmpty(properties)) {\n    object.properties = properties;\n  } else {\n    object.properties = null;\n  }\n  return object;\n};\n\n\n/**\n * Encode an array of features as GeoJSON.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features as a GeoJSON object.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeatureCollection} GeoJSON Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeaturesObject = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const objects = [];\n  let i, ii;\n  for (i = 0, ii = features.length; i < ii; ++i) {\n    objects.push(this.writeFeatureObject(features[i], opt_options));\n  }\n  return /** @type {GeoJSONFeatureCollection} */ ({\n    type: 'FeatureCollection',\n    features: objects\n  });\n};\n\n\n/**\n * Encode a geometry as a GeoJSON string.\n *\n * @function\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeGeometry;\n\n\n/**\n * Encode a geometry as a GeoJSON object.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeGeometryObject = function(geometry, opt_options) {\n  return writeGeometry(geometry, this.adaptOptions(opt_options));\n};\nexport default GeoJSON;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GeoJSON.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.interaction.DrawAzimut\n*/\nimport googAsserts from 'goog/asserts.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style !== undefined ?\n      options.style : olInteractionDraw.getDefaultStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nol.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), sketchFeature));\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/DrawAzimut.js","/**\n * @module ngeo.misc.Time\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n *//* @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = new Date(time.minValue);\n  const maxDate = new Date(time.maxValue);\n\n  const minDefaultDate = (time.minDefValue) ?\n    new Date(time.minDefValue) : minDate;\n  const maxDefaultDate = (time.maxDefValue) ?\n    new Date(time.maxDefValue) : maxDate;\n\n  const defaultValues = (time.mode === 'range') ?\n    [minDefaultDate.getTime(), maxDefaultDate.getTime()] :\n    minDefaultDate.getTime();\n\n  return {\n    minDate: minDate.getTime(),\n    maxDate: maxDate.getTime(),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/Time.js","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 142\n// module chunks = 0 1","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 149\n// module chunks = 0 1","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 150\n// module chunks = 0 1","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.KMLOptions=} opt_options Options.\n * @api\n */\nconst KML = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!KML.DEFAULT_STYLE_ARRAY_) {\n    KML.createStyleDefaults_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : KML.DEFAULT_STYLE_ARRAY_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {Object.<string, (Array.<ol.style.Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.GX_NAMESPACE_URIS_ = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.NAMESPACE_URIS_ = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nKML.SCHEMA_LOCATION_ = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @return {Array.<ol.style.Style>} Default style.\n * @private\n */\nKML.createStyleDefaults_ = function() {\n  /**\n   * @const\n   * @type {ol.Color}\n   * @private\n   */\n  KML.DEFAULT_COLOR_ = [255, 255, 255, 1];\n\n  /**\n   * @const\n   * @type {ol.style.Fill}\n   * @private\n   */\n  KML.DEFAULT_FILL_STYLE_ = new Fill({\n    color: KML.DEFAULT_COLOR_\n  });\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_ = [20, 2]; // FIXME maybe [8, 32] ?\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SIZE_ = [64, 64];\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SRC_ =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_ = 0.5;\n\n  /**\n   * @const\n   * @type {ol.style.Image}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ = new Icon({\n    anchor: KML.DEFAULT_IMAGE_STYLE_ANCHOR_,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_,\n    anchorYUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_,\n    size: KML.DEFAULT_IMAGE_STYLE_SIZE_,\n    src: KML.DEFAULT_IMAGE_STYLE_SRC_\n  });\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_NO_IMAGE_STYLE_ = 'NO_IMAGE';\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_STROKE_STYLE_ = new Stroke({\n    color: KML.DEFAULT_COLOR_,\n    width: 1\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STROKE_STYLE_ = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Text}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STYLE_ = new Text({\n    font: 'bold 16px Helvetica',\n    fill: KML.DEFAULT_FILL_STYLE_,\n    stroke: KML.DEFAULT_TEXT_STROKE_STYLE_,\n    scale: 0.8\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Style}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ = new Style({\n    fill: KML.DEFAULT_FILL_STYLE_,\n    image: KML.DEFAULT_IMAGE_STYLE_,\n    text: KML.DEFAULT_TEXT_STYLE_,\n    stroke: KML.DEFAULT_STROKE_STYLE_,\n    zIndex: 0\n  });\n\n  /**\n   * @const\n   * @type {Array.<ol.style.Style>}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ARRAY_ = [KML.DEFAULT_STYLE_];\n\n  return KML.DEFAULT_STYLE_ARRAY_;\n};\n\n\n/**\n * @const\n * @type {Object.<string, ol.style.IconAnchorUnits>}\n * @private\n */\nKML.ICON_ANCHOR_UNITS_MAP_ = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {ol.style.Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {ol.style.Style} style Style.\n * @private\n */\nKML.createNameStyleFunction_ = function(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || KML.DEFAULT_TEXT_STYLE_.getFont());\n    textStyle.setScale(foundText.getScale() || KML.DEFAULT_TEXT_STYLE_.getScale());\n    textStyle.setFill(foundText.getFill() || KML.DEFAULT_TEXT_STYLE_.getFill());\n    textStyle.setStroke(foundText.getStroke() || KML.DEFAULT_TEXT_STROKE_STYLE_);\n  } else {\n    textStyle = KML.DEFAULT_TEXT_STYLE_.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles Shared\n *          styles.\n * @param {boolean|undefined} showPointNames true to show names for point\n *          placemarks.\n * @return {ol.FeatureStyleFunction} Feature style function.\n * @private\n */\nKML.createFeatureStyleFunction_ = function(style, styleUrl,\n  defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n         * @param {number} resolution Resolution.\n         * @return {Array.<ol.style.Style>} Style.\n         * @this {ol.Feature}\n         */\n    function(resolution) {\n      let drawName = showPointNames;\n      /** @type {ol.style.Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        if (this.getGeometry()) {\n          drawName = (this.getGeometry().getType() ===\n                        GeometryType.POINT);\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (this.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(style[0],\n            name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = KML.findStyle_(styleUrl, defaultStyle,\n          sharedStyles);\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(foundStyle[0],\n            name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = KML.createNameStyleFunction_(defaultStyle[0],\n          name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|string|undefined} styleValue Style value.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<ol.style.Style>} Style.\n * @private\n */\nKML.findStyle_ = function(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return KML.findStyle_(\n      sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.Color|undefined} Color.\n */\nKML.readColor_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nKML.readFlatCoordinates_ = function(node) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {string} URI.\n */\nKML.readURI_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.KMLVec2_} Vec2.\n */\nKML.readVec2_ = function(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: KML.ICON_ANCHOR_UNITS_MAP_[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: KML.ICON_ANCHOR_UNITS_MAP_[yunits],\n    origin: origin\n  };\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {number|undefined} Scale.\n */\nKML.readScale_ = function(node) {\n  return XSD.readDecimal(node);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>|string|undefined} StyleMap.\n */\nKML.readStyleMapValue_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(undefined,\n    KML.STYLE_MAP_PARSERS_, node, objectStack);\n};\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.IconStyleParser_ = function(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = KML.DEFAULT_IMAGE_STYLE_SRC_;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {ol.KMLVec2_|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === KML.DEFAULT_IMAGE_STYLE_SRC_) {\n    anchor = KML.DEFAULT_IMAGE_STYLE_ANCHOR_;\n    anchorXUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_;\n    anchorYUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == KML.DEFAULT_IMAGE_STYLE_SRC_) {\n      size = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n      if (scale === undefined) {\n        scale = KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = KML.DEFAULT_NO_IMAGE_STYLE_;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LabelStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LABEL_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {ol.Color} */\n          ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LineStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LINE_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PolyStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.POLY_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline =\n      /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nKML.readFlatLinearRing_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.FLAT_LINEAR_RING_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.gxCoordParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nKML.readGxMultiTrack_ = function(node, objectStack) {\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    KML.GX_MULTITRACK_GEOMETRY_PARSERS_, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readGxTrack_ = function(node, objectStack) {\n  const gxTrackObject = _ol_xml_.pushParseAndPop(\n    /** @type {ol.KMLGxTrackObject_} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), KML.GX_TRACK_PARSERS_, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  let i, ii;\n  for (i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii;\n    ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object} Icon object.\n */\nKML.readIcon_ = function(node, objectStack) {\n  const iconObject = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_PARSERS_, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nKML.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readLineString_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readLinearRing_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n      [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\nKML.readMultiGeometry_ = function(node, objectStack) {\n  const geometries = _ol_xml_.pushParseAndPop([],\n    KML.MULTI_GEOMETRY_PARSERS_, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {ol.geom.Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry, i, ii;\n  for (i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {ol.geom.Geometry} */ (multiGeometry);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Point|undefined} Point.\n */\nKML.readPoint_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readPolygon_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    KML.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>} Style.\n */\nKML.readStyle_ = function(node, objectStack) {\n  const styleObject = _ol_xml_.pushParseAndPop(\n    {}, KML.STYLE_PARSERS_, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {ol.style.Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : KML.DEFAULT_FILL_STYLE_);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {ol.style.Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : KML.DEFAULT_IMAGE_STYLE_);\n  if (imageStyle == KML.DEFAULT_NO_IMAGE_STYLE_) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {ol.style.Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : KML.DEFAULT_TEXT_STYLE_);\n  let strokeStyle = /** @type {ol.style.Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : KML.DEFAULT_STROKE_STYLE_);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n};\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {ol.geom.MultiPoint|ol.geom.MultiLineString|ol.geom.MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<ol.geom.Geometry>} geometries List of geometries.\n * @private\n */\nKML.setCommonGeometryProperties_ = function(multiGeometry,\n  geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let geometry, i, hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (i = 0; i < ii; ++i) {\n    geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.DataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  _ol_xml_.parseNode(KML.DATA_PARSERS_, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.ExtendedDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.EXTENDED_DATA_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.RegionParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.REGION_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PairDataParser_ = function(node, objectStack) {\n  const pairObject = _ol_xml_.pushParseAndPop(\n    {}, KML.PAIR_PARSERS_, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {ol.style.Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PlacemarkStyleMapParser_ = function(node, objectStack) {\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SchemaDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.SCHEMA_DATA_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SimpleDataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = XSD.readString(node);\n    const featureObject =\n        /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LatLonAltBoxParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LAT_LON_ALT_BOX_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LodParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LOD_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.INNER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.OUTER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LinkParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.LINK_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.whenParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'displayName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'value': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTENDED_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': KML.DataParser_,\n    'SchemaData': KML.SchemaDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.REGION_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LatLonAltBox': KML.LatLonAltBoxParser_,\n    'Lod': KML.LodParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LAT_LON_ALT_BOX_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'minAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'north': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'south': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'east': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'west': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'minLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'minFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'tessellate': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RING_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RINGS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'innerBoundaryIs': KML.innerBoundaryIsParser_,\n    'outerBoundaryIs': KML.outerBoundaryIsParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_TRACK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'when': KML.whenParser_\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'coord': KML.gxCoordParser_\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GEOMETRY_FLAT_COORDINATES_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'y': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'w': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'h': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeObjectPropertySetter(KML.readIcon_),\n    'heading': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'hotSpot': _ol_xml_.makeObjectPropertySetter(KML.readVec2_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.INNER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LABEL_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINE_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'width': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.MULTI_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeArrayPusher(KML.readLineString_),\n    'LinearRing': _ol_xml_.makeArrayPusher(KML.readLinearRing_),\n    'MultiGeometry': _ol_xml_.makeArrayPusher(KML.readMultiGeometry_),\n    'Point': _ol_xml_.makeArrayPusher(KML.readPoint_),\n    'Polygon': _ol_xml_.makeArrayPusher(KML.readPolygon_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_MULTITRACK_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.GX_NAMESPACE_URIS_, {\n    'Track': _ol_xml_.makeArrayPusher(KML.readGxTrack_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.NETWORK_LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'Link': KML.LinkParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.OUTER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PAIR_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'key': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PLACEMARK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'MultiGeometry': _ol_xml_.makeObjectPropertySetter(\n      KML.readMultiGeometry_, 'geometry'),\n    'LineString': _ol_xml_.makeObjectPropertySetter(\n      KML.readLineString_, 'geometry'),\n    'LinearRing': _ol_xml_.makeObjectPropertySetter(\n      KML.readLinearRing_, 'geometry'),\n    'Point': _ol_xml_.makeObjectPropertySetter(\n      KML.readPoint_, 'geometry'),\n    'Polygon': _ol_xml_.makeObjectPropertySetter(\n      KML.readPolygon_, 'geometry'),\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'StyleMap': KML.PlacemarkStyleMapParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'MultiTrack': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxMultiTrack_, 'geometry'),\n      'Track': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxTrack_, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.POLY_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'fill': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'outline': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.SCHEMA_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'SimpleData': KML.SimpleDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': KML.IconStyleParser_,\n    'LabelStyle': KML.LabelStyleParser_,\n    'LineStyle': KML.LineStyleParser_,\n    'PolyStyle': KML.PolyStyleParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_MAP_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Pair': KML.PairDataParser_\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  const parsersNS = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Document': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': _ol_xml_.makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n  /** @type {Array.<ol.Feature>} */\n  const features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({'geometry': null},\n    KML.PLACEMARK_PARSERS_, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  const feature = new Feature();\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n\n  const geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    const style = object['Style'];\n    const styleUrl = object['styleUrl'];\n    const styleFunction = KML.createFeatureStyleFunction_(\n      style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n      this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    const style = KML.readStyle_(node, objectStack);\n    if (style) {\n      let styleUri;\n      let baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        const url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  let styleUri;\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return null;\n  }\n  const feature = this.readPlacemark_(\n    node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return [];\n  }\n  let features;\n  const localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    let n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Souce.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'name') {\n      return XSD.readString(n);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  const networkLinks = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  const networkLinks = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  const networkLinks = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.NETWORK_LINK_PARSERS_,\n        n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  const regions = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  const regions = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  const regions = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'Region') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.REGION_PARSERS_,\n        n, []);\n      regions.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {ol.Color|string} color Color.\n * @private\n */\nKML.writeColorTextNode_ = function(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  let i;\n  for (i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  XSD.writeStringTextNode(node, abgr.join(''));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeCoordinatesTextNode_ = function(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  let d, i;\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  XSD.writeStringTextNode(node, text);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeDataNode_ = function(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n * @private\n */\nKML.writeDataNodeName_ = function(node, name) {\n  XSD.writeCDATASection(node, name);\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n * @private\n */\nKML.writeDataNodeValue_ = function(node, value) {\n  XSD.writeStringTextNode(node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writeDocument_ = function(node, features, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.DOCUMENT_SERIALIZERS_,\n    KML.DOCUMENT_NODE_FACTORY_, features, objectStack, undefined,\n    this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeExtendedData_ = function(node, namesAndValues, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      KML.DATA_NODE_FACTORY_, [{name: names[i], value: values[i]}], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIcon_ = function(node, icon, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = KML.ICON_SEQUENCE_[parentNode.namespaceURI];\n  let values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.ICON_SERIALIZERS_, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      KML.ICON_SEQUENCE_[KML.GX_NAMESPACE_URIS_[0]];\n  values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_SERIALIZERS_,\n    KML.GX_NODE_FACTORY_, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIconStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {ol.KMLVec2_} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.ICON_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLabelStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      KML.LABEL_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LABEL_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLineStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.LINE_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LINE_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeMultiGeometry_ = function(node, geometry, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<ol.geom.Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    factory = KML.GEOMETRY_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {ol.geom.MultiPoint} */ (geometry).getPoints();\n    factory = KML.POINT_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {ol.geom.MultiLineString} */ (geometry)).getLineStrings();\n    factory = KML.LINE_STRING_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {ol.geom.MultiPolygon} */ (geometry)).getPolygons();\n    factory = KML.POLYGON_NODE_FACTORY_;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.MULTI_GEOMETRY_SERIALIZERS_, factory,\n    geometries, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeBoundaryIs_ = function(node, linearRing, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.BOUNDARY_IS_SERIALIZERS_,\n    KML.LINEAR_RING_NODE_FACTORY_, [linearRing], objectStack);\n};\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writePlacemark_ = function(node, feature, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = _ol_xml_.makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      KML.EXTENDEDDATA_NODE_FACTORY_, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction.call(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PLACEMARK_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    KML.GEOMETRY_NODE_FACTORY_, [geometry], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePrimitiveGeometry_ = function(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PRIMITIVE_GEOMETRY_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PRIMITIVE_GEOMETRY_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolygon_ = function(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  // inner rings\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.INNER_BOUNDARY_NODE_FACTORY_,\n    linearRings, objectStack);\n  // outer ring\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.OUTER_BOUNDARY_NODE_FACTORY_,\n    [outerRing], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolyStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.POLY_STYLE_SERIALIZERS_,\n    KML.COLOR_NODE_FACTORY_, [style.getColor()], objectStack);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n * @private\n */\nKML.writeScaleTextNode_ = function(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  XSD.writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {ol.KMLVec2_} vec2 Vec2.\n * @private\n */\nKML.writeVec2_ = function(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.KML_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.KML_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Document': _ol_xml_.makeChildAppender(KML.writeDocument_),\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.DOCUMENT_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.EXTENDEDDATA_NODE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': _ol_xml_.makeChildAppender(KML.writeDataNode_),\n    'value': _ol_xml_.makeChildAppender(KML.writeDataNodeValue_),\n    'displayName': _ol_xml_.makeChildAppender(KML.writeDataNodeName_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nKML.GEOMETRY_TYPE_TO_NODENAME_ = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'href'\n  ],\n  _ol_xml_.makeStructureNS(KML.GX_NAMESPACE_URIS_, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'y': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'w': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'h': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeChildAppender(KML.writeIcon_),\n    'heading': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'hotSpot': _ol_xml_.makeChildAppender(KML.writeVec2_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LABEL_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LABEL_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LINE_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LINE_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'width': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.BOUNDARY_IS_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.MULTI_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'GeometryCollection': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PLACEMARK_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PLACEMARK_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': _ol_xml_.makeChildAppender(\n      KML.writeExtendedData_),\n    'MultiGeometry': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_),\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'Style': _ol_xml_.makeChildAppender(KML.writeStyle_),\n    'address': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'description': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'open': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'phoneNumber': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'styleUrl': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'visibility': _ol_xml_.makeChildAppender(\n      XSD.writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'tessellate': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'altitudeMode': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'coordinates': _ol_xml_.makeChildAppender(\n      KML.writeCoordinatesTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLYGON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLY_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': _ol_xml_.makeChildAppender(KML.writeIconStyle_),\n    'LabelStyle': _ol_xml_.makeChildAppender(KML.writeLabelStyle_),\n    'LineStyle': _ol_xml_.makeChildAppender(KML.writeLineStyle_),\n    'PolyStyle': _ol_xml_.makeChildAppender(KML.writePolyStyle_)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GX_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  return _ol_xml_.createElementNS(KML.GX_NAMESPACE_URIS_[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.DOCUMENT_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GEOMETRY_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      KML.GEOMETRY_TYPE_TO_NODENAME_[/** @type {ol.geom.Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.COLOR_NODE_FACTORY_ = _ol_xml_.makeSimpleNodeFactory('color');\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.DATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Data');\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.EXTENDEDDATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.INNER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POINT_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINE_STRING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINEAR_RING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POLYGON_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Polygon');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.OUTER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const kml = _ol_xml_.createElementNS(KML.NAMESPACE_URIS_[4], 'kml');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:gx',\n    KML.GX_NAMESPACE_URIS_[0]);\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(kml, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    KML.SCHEMA_LOCATION_);\n\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: kml};\n  const properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  const orderedKeys = KML.KML_SEQUENCE_[kml.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.KML_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n    this);\n  return kml;\n};\nexport default KML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/KML.js\n// module id = 151\n// module chunks = 0 1 2 10","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.query.Querent\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport ngeoWFSDescribeFeatureType from 'ngeo/WFSDescribeFeatureType.js';\nimport olFormatWMSCapabilities from 'ol/format/WMSCapabilities.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olUri from 'ol/uri.js';\nimport * as olExtent from 'ol/extent.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Querent is a service that issues all sorts of queries using\n   * ngeo data sources. It does not store the result. Instead, it returns it\n   * using promises. Any component that inject this service can use it to\n   * make it issue its own queries and do whatever it wants with the result.\n   *\n   * It supports sending OGC requests and parse the response, such as:\n   * - WFS DescribeFeatureType\n   * - WFS GetFeature\n   * - WMS GetCapabilites\n   * - WMS GetFeatureInfo\n   * - WMTS GetCapabilities\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   *//* @ngInject\n   */\n  constructor($http, $q, ngeoRuleHelper, ngeoWMSTime) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n\n    // === Other properties ===\n\n    /**\n     * Promises that can be resolved to cancel started requests.\n     * @type {!Array.<angular.$q.Deferred>}\n     * @private\n     */\n    this.requestCancelers_ = [];\n\n    /**\n     * Cache of promises for WMS GetCapabilities requests. They key is the\n     * online resource base url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmsGetCapabilitiesPromises_ = {};\n\n    /**\n     * Cache of promises for WMST GetCapabilities requests. They key is the\n     * url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmtsGetCapabilitiesPromises_ = {};\n  }\n\n\n  // === PUBLIC methods ===\n\n  /**\n   * Issue WMS GetFeatureInfo and/or WFS GetFeature requests using the given\n   * data sources, map and optional filters.\n   *\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  issue(options) {\n\n    const promises = [];\n    const map = options.map;\n\n    // (1) Cancel requests that are still running\n    this.cancelStillRunningRequests_();\n\n    // (2) Get queryable data sources\n    let queryableDataSources;\n    if (options.queryableDataSources) {\n      queryableDataSources = options.queryableDataSources;\n    } else {\n      const dataSources = options.dataSources;\n      goog.asserts.assert(dataSources, 'DataSources should be set');\n      queryableDataSources = this.getQueryableDataSources(dataSources, map);\n    }\n\n    // (3) Combine data sources that support WFS and issue WFS queries.\n    //     The 'bbox' ('extent' option) is not required for WFS requests to\n    //     be issued.\n    const combinedWFSDataSources = this.getCombinableWFSDataSources_(\n      queryableDataSources.wfs);\n    promises.push(this.issueCombinedWFS_(combinedWFSDataSources, options));\n\n    // (4) Combine data sources that support WMS and issue WMS queries.\n    //     Only occurs if the `coordinate` option is set, because it's required\n    //     by WMS GetFeatureInfo requests.\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const combinedWMSDataSources = this.getCombinableWMSDataSources_(\n        queryableDataSources.wms);\n      promises.push(this.issueCombinedWMS_(combinedWMSDataSources, options));\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Browse a given list of data sources. Return 2 lists of data sources that\n   * are queryable, the first one being those that support WFS and the other\n   * WMS only. This means that WFS is always favored first, then WMS.\n   *\n   * The map view resolution determines if the inner ogc layers are in range.\n   *\n   * @param {!Array.<!ngeo.datasource.DataSource>} dataSources Data sources\n   * @param {ol.Map} map Map.\n   * @return {!ngeox.QueryableDataSources} Queryable data sources.\n   * @export\n   */\n  getQueryableDataSources(dataSources, map) {\n\n    const queryableDataSources = {\n      wfs: [],\n      wms: []\n    };\n    const resolution = goog.asserts.assertNumber(map.getView().getResolution());\n\n    for (const dataSource of dataSources) {\n\n      // (1) Skip data source that can't be queried\n      if (!this.isDataSourceQueryable_(dataSource, resolution)) {\n        continue;\n      }\n\n      if (dataSource instanceof ngeoDatasourceOGC) {\n        // (2) Split data sources\n        if (dataSource.supportsWFS) {\n          queryableDataSources.wfs.push(dataSource);\n        } else {\n          queryableDataSources.wms.push(dataSource);\n        }\n      }\n    }\n\n    return queryableDataSources;\n  }\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  wfsDescribeFeatureType(dataSource) {\n\n    goog.asserts.assert(\n      dataSource.supportsAttributes,\n      `The data source must support WFS, have a single OGCLayer that\n      is queryable in order to issue WFS DescribeFeatureType requests`\n    );\n\n    const ogcLayerNames = dataSource.getOGCLayerNames();\n\n    const url = olUri.appendParams(\n      goog.asserts.assertString(dataSource.wfsUrl),\n      {\n        'REQUEST': 'DescribeFeatureType',\n        'SERVICE': 'WFS',\n        'VERSION': '2.0.0',\n        'TYPENAME': ogcLayerNames\n      }\n    );\n\n    return this.http_.get(url).then((response) => {\n      const format = new ngeoWFSDescribeFeatureType();\n      return format.read(response.data);\n    });\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMS layer capabilities\n   * @param {string} layerName Name of the WMS layer\n   * @return {?Object} Found WMS layer capability\n   * @export\n   */\n  wmsFindLayerCapability(layerCapabilities, layerName) {\n\n    let found = null;\n\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Name'] === layerName) {\n        found = layerCapability;\n        break;\n      } else if (layerCapability['Layer']) {\n        found = this.wmsFindLayerCapability(\n          layerCapability['Layer'], layerName);\n        if (found) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * @param {string} baseUrl Base url of the WMS server.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmsGetCapabilities(baseUrl, opt_cache) {\n\n    const cache = opt_cache !== false;\n\n    const params = {\n      'REQUEST': 'GetCapabilities',\n      'SERVICE': 'WMS',\n      'VERSION': '1.3.0'\n    };\n\n    const url = olUri.appendParams(baseUrl, params);\n    let promise;\n\n    if (!cache || !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.wmsGetCapabilitiesPromises_[baseUrl];\n    }\n\n    goog.asserts.assert(promise);\n\n    if (cache && !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      this.wmsGetCapabilitiesPromises_[baseUrl] = promise;\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMTS layer capabilities\n   * @param {string} layerName Name of the WMTS layer, a.k.a. the identifier.\n   * @return {?Object} Found WTMS layer capability\n   * @export\n   */\n  wmtsFindLayerCapability(layerCapabilities, layerName) {\n    let found = null;\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Identifier'] === layerName) {\n        found = layerCapability;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {string} url Url of the WMTS server. Note that it must contain\n   *     all required arguments.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmtsGetCapabilities(url, opt_cache) {\n\n    const cache = opt_cache !== false;\n    let promise;\n\n    if (!cache || !this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMTSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.wmtsGetCapabilitiesPromises_[url];\n    }\n\n    goog.asserts.assert(promise);\n\n    if (cache && !this.wmtsGetCapabilitiesPromises_[url]) {\n      this.wmtsGetCapabilitiesPromises_[url] = promise;\n    }\n\n    return promise;\n  }\n\n\n  // === PRIVATE methods ===\n\n  /**\n   * Handles the response of multiple promises that did either\n   * WMS GetFeatureInfo or WFS GetFeature requests, in which the result is\n   * a hash with key being the data source id and value the array of features.\n   *\n   * The response object itself is an array, one item being one result per\n   * promise. The idea is to return a single hash by combining the result\n   * objects.\n   *\n   * The keys are always unique, i.e. there can be multiple result objects for\n   * the same data source id.\n   *\n   * @param {!Array.<ngeox.QuerentResult>} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleCombinedQueryResult_(response) {\n    const combinedHash = {};\n    for (const hash of response) {\n      for (const dataSourceIdStr in hash) {\n        const dataSourceId = Number(dataSourceIdStr);\n        combinedHash[dataSourceId] = hash[dataSourceId];\n      }\n    }\n    return combinedHash;\n  }\n\n\n  /**\n   * Handles the result of a single WMS GetFeatureInfo or WFS GetFeature\n   * request. Read features from the response and return them.\n   *\n   * @param {!Array.<!ngeo.datasource.OGC>} dataSources List of\n   *     queryable data sources that were used to do the query.\n   * @param {number} limit The maximum number of features to get with the query.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {angular.$http.Response|number} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleQueryResult_(dataSources, limit, wfs, response) {\n    const hash = {};\n\n    for (const dataSource of dataSources) {\n      let features;\n      let tooManyFeatures;\n      let totalFeatureCount;\n\n      if (typeof response === 'number') {\n        features = [];\n        tooManyFeatures = true;\n        totalFeatureCount = response;\n      } else {\n        if (dataSource instanceof ngeoDatasourceOGC) {\n          features = this.readAndTypeFeatures_(dataSource, response.data, wfs);\n        } else {\n          features = [];\n        }\n      }\n      const dataSourceId = dataSource.id;\n      this.setUniqueIds_(features, dataSource.id);\n      hash[dataSourceId] = {\n        features,\n        limit,\n        tooManyFeatures,\n        totalFeatureCount\n      };\n    }\n\n    return hash;\n  }\n\n  /**\n   * Read and assign the type of the feature to each feature in the data.\n   * The type will be stocked in the properties of the features as\n   * \"ngeo_feature_type_\".\n   * @param {ngeo.datasource.OGC} dataSource used to read the features.\n   * @param {Document | Node | Object | string} data the response data.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @return {Array.<ol.Feature>} returned features with a type in each features.\n   * @private\n   */\n  readAndTypeFeatures_(dataSource, data, wfs) {\n    const features = [];\n    let readFeatures;\n    // Copy the types to be able to set it AND iterate on it.\n    const featureTypes = this.getSetOlFormatTypes_(dataSource, wfs).slice();\n    featureTypes.forEach((type) => {\n      // Assign temporarily a single feature type to read features separately.\n      this.getSetOlFormatTypes_(dataSource, wfs, [type]);\n      if (wfs) {\n        readFeatures = dataSource.wfsFormat.readFeatures(data);\n      } else {\n        readFeatures = dataSource.wmsFormat.readFeatures(data);\n      }\n      if (readFeatures.length > 0) {\n        readFeatures.forEach((feature) => {\n          feature.set('ngeo_feature_type_', type);\n          features.push(feature);\n        });\n      }\n    });\n    // Re-set the value to the datasource.xxxFormat to be able to re-use\n    // it later (in another query);\n    this.getSetOlFormatTypes_(dataSource, wfs, featureTypes);\n    return features;\n  }\n\n  /**\n   * Return the types defined in the format of the datasource. Can set the\n   * types if one is given.\n   * @param {ngeo.datasource.OGC} dataSource that contains the format object.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {Array.<string>=} opt_types An array of type if you want to set the\n   *     type of the format object.\n   * @return {Array.<string>} The types defined in the format.\n   * @private\n   */\n  getSetOlFormatTypes_(dataSource, wfs, opt_types) {\n    let types;\n    if (wfs) {\n      if (opt_types) {\n        dataSource.wfsFormat.setFeatureType(opt_types);\n      }\n      types = dataSource.wfsFormat.getFeatureType();\n    } else {\n      if (opt_types) {\n        dataSource.wmsFormat.setLayers(opt_types);\n      }\n      types = dataSource.wmsFormat.getLayers();\n    }\n    if (!types) {\n      return [];\n    }\n    return (Array.isArray(types)) ? types : [types];\n  }\n\n  /**\n   * Issue WFS GetFeature requests using the given combined data sources, map\n   * and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWFS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const maxFeatures = goog.asserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = goog.asserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const srsName = projection.getCode();\n    const wfsCount = options.wfsCount === true;\n\n    // (1) Extent (bbox), which is optional, i.e. its value can stay undefined\n    let bbox;\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const tolerancePx = options.tolerancePx;\n      goog.asserts.assert(tolerancePx);\n      const tolerance = tolerancePx * resolution;\n      bbox = olExtent.buffer(\n        olExtent.createOrUpdateFromCoordinate(coordinate),\n        tolerance\n      );\n    } else {\n      bbox = options.extent;\n    }\n\n    // (2) Launch one request per combinaison of data sources\n    const wfsFormat = new olFormatWFS();\n    const xmlSerializer = new XMLSerializer();\n    for (const dataSources of combinedDataSources) {\n\n      let getFeatureCommonOptions;\n      let featureNS;\n      let featureTypes = [];\n      let url;\n      const params = {};\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!getFeatureCommonOptions) {\n          featureNS = dataSource.wfsFeatureNS;\n          const featurePrefix = dataSource.wfsFeaturePrefix;\n          const geometryName = dataSource.geometryName;\n          const outputFormat = dataSource.wfsOutputFormat;\n\n          getFeatureCommonOptions = {\n            bbox,\n            featureNS,\n            featurePrefix,\n            geometryName,\n            outputFormat,\n            srsName\n          };\n\n          url = dataSource.wfsUrl;\n\n          // All data sources combined share the same active dimensions\n          olObj.assign(params, dataSource.activeDimensions);\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        featureTypes = featureTypes.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Add filter, if any. If the case, then only one data source\n        //     is expected to be used for this request.\n        let filter;\n        if (options.filter) {\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            filter: options.filter,\n            incTime: true\n          });\n        } else if ((dataSource.filterRules && dataSource.filterRules.length) ||\n            dataSource.timeRangeValue) {\n\n          goog.asserts.assert(\n            dataSources.length === 1,\n            `A data source having filterRules or timeRangeValue should issue\n            a single query, alone.`\n          );\n\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            incTime: true,\n            srsName: srsName\n          });\n        }\n\n        if (filter) {\n          getFeatureCommonOptions['filter'] = filter;\n        }\n      }\n\n      goog.asserts.assert(getFeatureCommonOptions);\n      getFeatureCommonOptions.featureTypes = featureTypes;\n      goog.asserts.assert(url);\n\n      // (4) Build query then launch\n      //\n      //     If we require to do a WFS GetFeature request with\n      //     `resultType: 'hits'` first, do so. In that case, if there would\n      //     be too many features returned, no GetFeature is done thereafter\n      //     and the data sources will return empty arrays in the returned\n      //     response.\n      //\n      //     If we do not need to count features first, then proceed with\n      //     an normal WFS GetFeature request.\n      const getFeatureDefer = this.q_.defer();\n      promises.push(\n        getFeatureDefer.promise.then(\n          this.handleQueryResult_.bind(this, dataSources, maxFeatures, true)\n        )\n      );\n\n      // (4.1) Count, if required\n      let countPromise;\n      if (wfsCount) {\n        const getCountOptions =\n            /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n            olObj.assign(\n              {\n                resultType: 'hits'\n              },\n              getFeatureCommonOptions\n            )\n          );\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(\n          featureCountXml);\n        const canceler = this.registerCanceler_();\n        countPromise = this.http_.post(\n          url,\n          featureCountRequest,\n          {\n            params: params,\n            headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n            timeout: canceler.promise\n          }\n        ).then(((response) => {\n          const meta = dataSources[0].wfsFormat.readFeatureCollectionMetadata(\n            response.data\n          );\n          return meta['numberOfFeatures'];\n        }).bind(this));\n      } else {\n        countPromise = this.q_.resolve();\n      }\n\n      // (4.2) After count, do GetFeature (if required)\n      countPromise.then((numberOfFeatures) => {\n        // `true` is returned if a count request was made AND there would\n        // be too many features.\n        if (numberOfFeatures === undefined || numberOfFeatures < maxFeatures) {\n\n          const getFeatureOptions =\n              /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n              olObj.assign(\n                {\n                  maxFeatures\n                },\n                getFeatureCommonOptions\n              )\n            );\n          const featureRequestXml = wfsFormat.writeGetFeature(\n            getFeatureOptions);\n          const featureRequest = xmlSerializer.serializeToString(\n            featureRequestXml);\n          goog.asserts.assertString(url);\n          const canceler = this.registerCanceler_();\n          this.http_.post(\n            url,\n            featureRequest,\n            {\n              params: params,\n              headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n              timeout: canceler.promise\n            }\n          ).then((response) => {\n            getFeatureDefer.resolve(response);\n          });\n\n        } else {\n          getFeatureDefer.resolve(numberOfFeatures);\n        }\n      });\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Issue WMS GetFeatureInfo requests using the given combined data sources,\n   * map and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWMS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const FEATURE_COUNT = goog.asserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = goog.asserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const projCode = projection.getCode();\n\n    // (1) Coordinate, which is required to issue WMS GetFeatureInfo requests\n    const coordinate = options.coordinate;\n    goog.asserts.assert(coordinate);\n\n    // (2) Launch one request per combinaison of data sources\n    for (const dataSources of combinedDataSources) {\n\n      let url;\n      let LAYERS = [];\n      let INFO_FORMAT;\n      let activeDimensionsSet = false;\n      const params = {};\n      let filterString = null;\n      let filtrableLayerName = null;\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!INFO_FORMAT) {\n          INFO_FORMAT = dataSource.wmsInfoFormat;\n          url = dataSource.wmsUrl;\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        LAYERS = LAYERS.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Manage active dimensions, which are added directly to the\n        //     query parameters. Note that this occurs only ONCE, i.e.\n        //     for the first data source, because all data sources here have\n        //     been combined together, therefore they share the same active\n        //     dimensions.\n        if (!activeDimensionsSet) {\n          olObj.assign(params, dataSource.activeDimensions);\n          activeDimensionsSet = true;\n        }\n\n        // (d) Add filter, if any. If there is a filter on the data source,\n        //     then it is expected that one request will be sent for this\n        //     data source only.\n        if (dataSource.filterRules && dataSource.filterRules.length) {\n          goog.asserts.assert(dataSources.length === 1);\n          filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n          filterString = this.ngeoRuleHelper_.createFilterString({\n            dataSource: dataSource,\n            srsName: projCode\n          });\n        }\n\n        // (e) Add TIME parameter if the data source has a time range value.\n        //     If that's the case, then it is expected that one request will be\n        //     sent for this data source only.\n        if (dataSource.timeRangeValue !== null && dataSource.timeProperty) {\n          goog.asserts.assert(dataSources.length === 1);\n          params['TIME'] = this.ngeoWMSTime_.formatWMSTimeParam(\n            dataSource.timeProperty,\n            dataSource.timeRangeValue\n          );\n        }\n      }\n\n      params['LAYERS'] = LAYERS;\n      params['QUERY_LAYERS'] = LAYERS;\n\n      // Manage 'FILTER' parameter\n      if (filterString && filtrableLayerName) {\n        let filterParamValue = null;\n        if (LAYERS.length === 1) {\n          // When there's only one layer in the `LAYERS` parameters, then\n          // the filter string is given as-is.\n          filterParamValue = filterString;\n        } else {\n          // When there's more then one layer, then each filter must be wrapped\n          // between parenthesis and the order must also match the `LAYERS`\n          // parameter as well.\n          const filterParamValues = [];\n          for (let i = 0, ii = LAYERS.length; i < ii; i++) {\n            if (LAYERS[i] === filtrableLayerName) {\n              filterParamValues.push(`(${filterString})`);\n            } else {\n              filterParamValues.push('()');\n            }\n          }\n          filterParamValue = filterParamValues.join('');\n        }\n        params['FILTER'] = filterParamValue;\n      }\n\n      goog.asserts.assert(url);\n      const wmsSource = new olSourceImageWMS({\n        params,\n        url\n      });\n\n      // (4) Build query url, then launch\n      const wmsGetFeatureInfoUrl = goog.asserts.assertString(\n        wmsSource.getGetFeatureInfoUrl(\n          coordinate, resolution, projCode, {\n            // Without extern, quoting is necessary\n            'FEATURE_COUNT': FEATURE_COUNT,\n            'INFO_FORMAT': INFO_FORMAT\n          }\n        )\n      );\n\n      const canceler = this.registerCanceler_();\n      promises.push(\n        this.http_.get(\n          wmsGetFeatureInfoUrl,\n          {\n            timeout: canceler.promise\n          }\n        ).then(\n          this.handleQueryResult_.bind(this, dataSources, FEATURE_COUNT, false)\n        )\n      );\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WFS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWFSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWFS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWFS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WMS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWMSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWMS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWMS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * Checks if a data source can be queried, which requires it to be:\n   * - visible\n   * - in range\n   * - queryable (using the native getter)\n   * - have at least one OGC layer in range of current map view resolution.\n   *\n   * @param {ngeo.datasource.DataSource} ds Data source\n   * @param {number} res Resolution.\n   * @return {boolean} Whether the data source is queryable\n   * @private\n   */\n  isDataSourceQueryable_(ds, res) {\n    let queryable = ds.visible && ds.inRange && ds.queryable;\n    if (queryable && ds instanceof ngeoDatasourceOGC) {\n      const ogcDS = /** @type {!ngeo.datasource.OGC} */ (ds);\n      queryable = ogcDS.isAnyOGCLayerInRange(res, true);\n    }\n    return queryable;\n  }\n\n  /**\n   * Make sure that feature ids are unique, because the same features might\n   * be returned for different layers.\n   * @param {Array.<ol.Feature>} features Features\n   * @param {number} dataSourceId Data source id.\n   * @private\n   */\n  setUniqueIds_(features, dataSourceId) {\n    features.forEach((feature) => {\n      if (feature.getId() !== undefined) {\n        const id = `${dataSourceId}_${feature.getId()}`;\n        feature.setId(id);\n      }\n    });\n  }\n\n  /**\n   * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n   *    HTTP request.\n   * @private\n   */\n  registerCanceler_() {\n    const canceler = this.q_.defer();\n    this.requestCancelers_.push(canceler);\n    return canceler;\n  }\n\n  /**\n   * @private\n   */\n  cancelStillRunningRequests_() {\n    for (const canceler of this.requestCancelers_) {\n      canceler.resolve();\n    }\n    this.requestCancelers_.length = 0;\n  }\n};\n\n\n/**\n * @typedef {!Array.<!Array.<!ngeo.datasource.OGC>>}\n */\nexports.CombinedDataSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuerent', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoQuerent', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/query/Querent.js","/**\n * @module ngeo.Attribute\n*/\nconst exports = {};\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeo.AttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Attribute.js","/**\n * @module ngeo.datasource.OGC\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoBase.FilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoBase.AttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 167\n// module chunks = 0 1","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.FeatureHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilters from 'ngeo/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n *//* @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    goog.asserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoBase.GeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoBase.GeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoBase.GeometryType.CIRCLE:\n    case ngeoBase.GeometryType.POLYGON:\n    case ngeoBase.GeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoBase.GeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  goog.asserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        offsetY: -(size + 10 / 2 + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return goog.asserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return goog.asserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoBase.FeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            offsetY: -(8 / 2 + 4)\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoBase.GeometryType.LINE_STRING,\n    ngeoBase.GeometryType.POLYGON,\n    ngeoBase.GeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoBase.GeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoBase.GeometryType.LINE_STRING:\n    case ngeoBase.GeometryType.CIRCLE:\n    case ngeoBase.GeometryType.POLYGON:\n    case ngeoBase.GeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoBase.GeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  goog.asserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoBase.FeatureProperties.ANGLE)));\n  goog.asserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = goog.asserts.assertString(feature.get(ngeoBase.FeatureProperties.COLOR));\n\n  goog.asserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = goog.asserts.assertString(feature.get(ngeoBase.FeatureProperties.NAME));\n  goog.asserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoBase.FeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoBase.FeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return goog.asserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoBase.FeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return goog.asserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoBase.FeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoBase.FeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  goog.asserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoBase.GeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoBase.FeatureProperties.AZIMUT);\n      goog.asserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  goog.asserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoBase.FeatureProperties.IS_TEXT)) {\n      type = ngeoBase.GeometryType.TEXT;\n    } else {\n      type = ngeoBase.GeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoBase.GeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoBase.FeatureProperties.IS_CIRCLE)) {\n      type = ngeoBase.GeometryType.CIRCLE;\n    } else if (feature.get(ngeoBase.FeatureProperties.IS_RECTANGLE)) {\n      type = ngeoBase.GeometryType.RECTANGLE;\n    } else {\n      type = ngeoBase.GeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoBase.GeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoBase.GeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoBase.GeometryType.MULTI_LINE_STRING;\n  }\n\n  goog.asserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  goog.asserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    goog.asserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoFeatureHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/FeatureHelper.js","/**\n * @module ngeo.download.service\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/download/service.js","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.GPXOptions=} opt_options Options.\n * @api\n */\nconst GPX = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(ol.Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (ol.Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst GPX_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeArrayPusher(readRte),\n    'trk': _ol_xml_.makeArrayPusher(readTrk),\n    'wpt': _ol_xml_.makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst LINK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkText'),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTE_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTEPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKSEG_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst WPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime),\n    'magvar': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'geoidheight': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'sym': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'fix': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'sat': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'hdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'vdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'pdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'ageofdgpsdata': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'dgpsid': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst LINK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst RTE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'rtept': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTEPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst TRK_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'trkseg': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRKSEG_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': _ol_xml_.makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst WPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst WPT_TYPE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'time': _ol_xml_.makeChildAppender(XSD.writeDateTimeTextNode),\n    'magvar': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'geoidheight': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'sym': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'fix': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'sat': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'hdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'vdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'pdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'ageofdgpsdata': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'dgpsid': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {ol.Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return _ol_xml_.createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst GPX_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeChildAppender(writeRte),\n    'trk': _ol_xml_.makeChildAppender(writeTrk),\n    'wpt': _ol_xml_.makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {ol.geom.GeometryLayout} Layout.\n */\nGPX.applyLayoutOptions_ = function(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  _ol_xml_.parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop(\n    {}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (rteValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (trkValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  _ol_xml_.parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates);\n  const geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {ol.LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = GPX.applyLayoutOptions_(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const feature = features[i];\n    if (this.readExtensions_) {\n      const extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  const feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<ol.Feature>} */\n    const features = _ol_xml_.pushParseAndPop([], GPX_PARSERS,\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  _ol_xml_.setAttributeNS(node, null, 'lat', coordinate[1]);\n  _ol_xml_.setAttributeNS(node, null, 'lon', coordinate[0]);\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  const orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    RTE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    TRK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  _ol_xml_.pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  const gpx = _ol_xml_.createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(gpx, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(gpx, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GPX.js\n// module id = 171\n// module chunks = 0 1 2","/**\n * @module ngeo.misc.WMSTime\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n *//* @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/WMSTime.js","/**\n * @module ngeo.query.MapQuerent\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport * as olObj from 'ol/obj.js';\n\n\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\nngeoBase.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n  sources: [],\n  total: 0,\n  pending: false\n}));\n\n\nconst exports = class {\n\n  /**\n   * The ngeo Map Querent is the service bound to a map that issues\n   * queries using the Querent service. The result is stored inside this\n   * service.\n   *\n   * NOTE: This will replace the ngeo.Query service.\n   *\n   * @struct\n   * @param {angular.$injector} $injector Main injector.\n   * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data source objects.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     sources helper service.\n   * @param {ngeo.query.Querent} ngeoQuerent The ngeo querent service.\n   * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   *//* @ngInject\n   */\n  constructor($injector, ngeoDataSources, ngeoDataSourcesHelper, ngeoQuerent,\n    ngeoQueryResult) {\n\n    const options = /** @type {ngeox.QueryOptions} */ (\n      $injector.has('ngeoQueryOptions') ?\n        $injector.get('ngeoQueryOptions') : {});\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.result_ = ngeoQueryResult;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n    /**\n     * When set, before making WFS GetFeature requests to fetch features,\n     * WFS GetFeature requests with `resultType = 'hits'` are made first. If\n     * the number of records for the request would exceed the limit, then\n     * no features are returned.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n      options.queryCountFirst : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerancePx_ = options.tolerance !== undefined ?\n      options.tolerance : 3;\n\n    /**\n     * A hash of data source names classified by ids.\n     * @type {Object.<number, string>}\n     * @private\n     */\n    this.dataSourceNames_ = {};\n  }\n\n  /**\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @export\n   */\n  issue(options) {\n    // (1) Clear previous result\n    this.clear();\n\n    // (2) Get queryable data sources, unless they are already set\n    let queryableDataSources;\n    if (options.dataSources === undefined &&\n        options.queryableDataSources === undefined\n    ) {\n      queryableDataSources = this.ngeoQuerent_.getQueryableDataSources(\n        this.ngeoDataSources_.getArray(),\n        options.map\n      );\n    }\n\n    // (3) Update query options, update the pending property and issue the\n    //     request.\n    const limit = options.limit !== undefined ? options.limit : this.limit_;\n    olObj.assign(options, {\n      queryableDataSources: queryableDataSources,\n      limit: limit,\n      tolerancePx: this.tolerancePx_,\n      wfsCount: this.queryCountFirst_\n    });\n    this.result_.pending = true;\n    this.ngeoQuerent_.issue(options).then(this.handleResult_.bind(this));\n  }\n\n  /**\n   * Clear result, i.e. clear all 'result source' from their features and other\n   * information.\n   * @export\n   */\n  clear() {\n    this.result_.total = 0;\n    for (const source of this.result_.sources) {\n      source.features.length = 0;\n      source.pending = false;\n      source.queried = false;\n      source.tooManyResults = false;\n      source.totalFeatureCount = undefined;\n    }\n    this.result_.sources.length = 0; // Clear previous result sources\n    this.result_.pending = false;\n  }\n\n  /**\n   * Called after a request to the querent service. Update the result.\n   *\n   * @param {ngeox.QuerentResult} response Response\n   * @private\n   */\n  handleResult_(response) {\n    let total = 0;\n\n    // (1) Update result sources, i.e. add them\n    for (const idStr in response) {\n      const id = Number(idStr);\n      const dataSource = this.ngeoDataSourcesHelper_.getDataSource(id);\n      let label = dataSource.name;\n      goog.asserts.assert(dataSource);\n\n      const querentResultItem = response[id];\n      const features = querentResultItem.features;\n      const limit = querentResultItem.limit;\n      const tooManyResults = querentResultItem.tooManyFeatures === true;\n      const totalFeatureCount = querentResultItem.totalFeatureCount;\n\n      const typeSeparatedFeatures = {};\n      features.forEach((feature) => {\n        const type = goog.asserts.assertString(feature.get('ngeo_feature_type_'));\n        if (!typeSeparatedFeatures[type]) {\n          typeSeparatedFeatures[type] = [];\n        }\n        // Use properties aliases if any\n        if (dataSource.attributes && dataSource.attributes.length) {\n          const properties = feature.getProperties();\n          const filteredProperties = {};\n          dataSource.attributes.forEach((attribute) => {\n            if (attribute.alias) {\n              filteredProperties[attribute.alias] = properties[attribute.name];\n              feature.unset(attribute.name, /* silent */ true);\n            } else {\n              // No alias is available => use the attribute as is.\n              filteredProperties[attribute.name] = properties[attribute.name];\n            }\n          });\n          feature.setProperties(filteredProperties, /* silent */ true);\n        }\n        typeSeparatedFeatures[type].push(feature);\n      });\n\n      for (const type in typeSeparatedFeatures) {\n        label = type ? type : label;\n        const featuresByType = typeSeparatedFeatures[type];\n        this.result_.sources.push({\n          features: featuresByType,\n          id: id,\n          label: label,\n          limit: limit,\n          pending: false,\n          queried: true,\n          tooManyResults: tooManyResults,\n          totalFeatureCount: totalFeatureCount\n        });\n        total += features.length;\n      }\n    }\n\n    // (2) Update total & pending\n    this.result_.total = total;\n    this.result_.pending = false;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoMapQuerent', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoMapQuerent', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/query/MapQuerent.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 190\n// module chunks = 0 1","/**\n * @module ngeo.map.LayerHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n *//* @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module ngeo.filter.RuleHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport ngeoRuleDate from 'ngeo/rule/Date.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport ngeoRuleText from 'ngeo/rule/Text.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatFilter from 'ol/format/filter.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to create `ngeo.rule.Rule`\n   * objects.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoRuleHelper\n   *//* @ngInject\n   */\n  constructor(gettextCatalog, ngeoFeatureHelper, ngeoWMSTime) {\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.Attribute>} attributes Attributes.\n   * @param {boolean=} opt_isCustom Whether the created rules should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRulesFromAttributes(attributes, opt_isCustom) {\n    const rules = [];\n    for (const attribute of attributes) {\n      rules.push(this.createRuleFromAttribute(attribute, opt_isCustom));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.Attribute} attribute Attribute.\n   * @param {boolean=} opt_isCustom Whether the created rule should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRuleFromAttribute(attribute, opt_isCustom) {\n\n    let rule;\n    const isCustom = opt_isCustom === true;\n\n    /**\n     * @type {string}\n     */\n    const name = this.gettextCatalog_.getString(attribute.name);\n\n    // Todo: support geometry\n\n    switch (attribute.type) {\n      case ngeoBase.AttributeType.DATE:\n      case ngeoBase.AttributeType.DATETIME:\n        if (isCustom) {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.EQUALS,\n            operators: [\n              ngeoRuleRule.TemporalOperatorType.EQUALS,\n              ngeoRuleRule.TemporalOperatorType.BEGINS,\n              ngeoRuleRule.TemporalOperatorType.ENDS\n            ],\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        } else {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.DURING,\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        }\n        break;\n      case ngeoBase.AttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry({\n          name: name,\n          operator: ngeoRuleRule.SpatialOperatorType.WITHIN,\n          operators: [\n            ngeoRuleRule.SpatialOperatorType.CONTAINS,\n            ngeoRuleRule.SpatialOperatorType.INTERSECTS,\n            ngeoRuleRule.SpatialOperatorType.WITHIN\n          ],\n          propertyName: attribute.name,\n          type: attribute.type\n        });\n        break;\n      case ngeoBase.AttributeType.NUMBER:\n        if (isCustom) {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.EQUAL_TO,\n            operators: [\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.GREATER_THAN,\n              ngeoRuleRule.OperatorType.GREATER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.LESSER_THAN,\n              ngeoRuleRule.OperatorType.LESSER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name,\n            type: ngeoBase.AttributeType.NUMBER\n          });\n        } else {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.BETWEEN,\n            propertyName: attribute.name,\n            type: ngeoBase.AttributeType.NUMBER\n          });\n        }\n        break;\n      case ngeoBase.AttributeType.SELECT:\n        rule = new ngeoRuleSelect({\n          choices: goog.asserts.assert(attribute.choices),\n          name: name,\n          propertyName: attribute.name\n        });\n        break;\n      default:\n        if (isCustom) {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            operators: [\n              ngeoRuleRule.OperatorType.LIKE,\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name\n          });\n        } else {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            propertyName: attribute.name\n          });\n        }\n        break;\n    }\n\n    return rule;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions>} optionsList List of options\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRules(optionsList) {\n    const rules = [];\n    for (const options of optionsList) {\n      rules.push(this.createRule(options));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions} options Options\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRule(options) {\n    let rule;\n    switch (options.type) {\n      case ngeoBase.AttributeType.DATE:\n      case ngeoBase.AttributeType.DATETIME:\n        rule = new ngeoRuleDate(options);\n        break;\n      case ngeoBase.AttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry(options);\n        break;\n      case ngeoBase.AttributeType.SELECT:\n        const selectOptions = /** @type {!ngeox.rule.SelectOptions} */ (\n          options);\n        goog.asserts.assert(selectOptions.choices);\n        rule = new ngeoRuleSelect(selectOptions);\n        break;\n      default:\n        rule = new ngeoRuleText(options);\n        break;\n    }\n    return rule;\n  }\n\n  /**\n   * Create a new `ngeo.rule.Rule` object using an other given rule.\n   *\n   * @param {!ngeo.rule.Rule} rule Original rule to clone.\n   * @return {!ngeo.rule.Rule} A clone rule.\n   * @export\n   */\n  cloneRule(rule) {\n\n    let clone;\n\n    let expression = rule.getExpression();\n    if (expression === null) {\n      expression = undefined;\n    }\n    const isCustom = rule.isCustom;\n    const lowerBoundary = rule.lowerBoundary !== null ? rule.lowerBoundary :\n      undefined;\n    const name = rule.name;\n    const operator = rule.operator !== null ? rule.operator : undefined;\n    const operators = rule.operators ? rule.operators.slice(0) : undefined;\n    const propertyName = rule.propertyName;\n    const type = rule.type !== null ? rule.type : undefined;\n    const upperBoundary = rule.upperBoundary !== null ? rule.upperBoundary :\n      undefined;\n\n    const options = {\n      expression,\n      isCustom,\n      lowerBoundary,\n      name,\n      operator,\n      operators,\n      propertyName,\n      type,\n      upperBoundary\n    };\n\n    if (rule instanceof ngeoRuleDate) {\n      clone = new ngeoRuleDate(options);\n    } else if (rule instanceof ngeoRuleGeometry) {\n      clone = new ngeoRuleGeometry(options);\n      clone.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(rule.feature)\n      );\n    } else if (rule instanceof ngeoRuleSelect) {\n      options.choices = rule.choices.slice(0);\n      clone = new ngeoRuleSelect(options);\n    } else if (rule instanceof ngeoRuleText) {\n      clone = new ngeoRuleText(options);\n    } else {\n      clone = new ngeoRuleRule(options);\n    }\n\n    return clone;\n  }\n\n  /**\n   * Extend the dynamic properties from a source rule to destination rule.\n   * The source rule remains unchanged, while the destination rule changes.\n   *\n   * @param {!ngeo.rule.Rule} sourceRule Source rule to collect the dynamic\n   *     properties from.\n   * @param {!ngeo.rule.Rule} destRule Destination rule where the dynamic\n   *     properties are set.\n   * @export\n   */\n  extendRule(sourceRule, destRule) {\n\n    if (destRule.getExpression() !== sourceRule.getExpression()) {\n      destRule.setExpression(sourceRule.getExpression());\n    }\n\n    if (destRule.lowerBoundary !== sourceRule.lowerBoundary) {\n      destRule.lowerBoundary = sourceRule.lowerBoundary;\n    }\n\n    if (destRule.operator !== sourceRule.operator) {\n      destRule.operator = sourceRule.operator;\n    }\n\n    if (destRule.upperBoundary !== sourceRule.upperBoundary) {\n      destRule.upperBoundary = sourceRule.upperBoundary;\n    }\n\n    if (sourceRule instanceof ngeoRuleGeometry &&\n       destRule instanceof ngeoRuleGeometry\n    ) {\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(destRule.feature);\n      destRule.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(sourceRule.feature)\n      );\n    }\n  }\n\n  /**\n   * @param {!Array.<!ngeo.rule.Rule>} rules Rules\n   * @return {!Array.<!ngeox.rule.AnyOptions>} List of serialized rule options.\n   * @export\n   */\n  serializeRules(rules) {\n    return rules.map((rule) => {\n      const serializedRule = this.serializeRule(rule);\n      return serializedRule;\n    });\n  }\n\n  /**\n   * Selialize a rule into options to re-create it later.\n   * @param {!ngeo.rule.Rule} rule Rule to serialize.\n   * @return {!ngeox.rule.AnyOptions} Serialized rule options.\n   * @export\n   */\n  serializeRule(rule) {\n    const obj = {\n      name: rule.name,\n      propertyName: rule.propertyName,\n      type: rule.type\n    };\n\n    if (rule.expression !== null) {\n      obj.expression = rule.expression;\n    }\n\n    if (rule.lowerBoundary !== null) {\n      obj.lowerBoundary = rule.lowerBoundary;\n    }\n\n    if (rule.operator !== null) {\n      obj.operator = rule.operator;\n    }\n\n    if (rule.operators !== null) {\n      obj.operators = rule.operators.slice(0);\n    }\n\n    if (rule.upperBoundary !== null) {\n      obj.upperBoundary = rule.upperBoundary;\n    }\n\n    if (rule instanceof ngeoRuleGeometry) {\n      obj.featureProperties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        rule.feature);\n    }\n\n    if (rule instanceof ngeoRuleSelect) {\n      obj.choices = rule.choices;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Create a `ol.format.filter.Filter` object for a given data source.\n   * See the `ngeox.CreateFilterOptions` to learn more.\n   *\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?ol.format.filter.Filter} Filter.\n   * @export\n   */\n  createFilter(options) {\n\n    const dataSource = /** @type {ngeo.datasource.OGC} */ (options.dataSource);\n    let mainFilter = null;\n\n    if (options.filter) {\n      mainFilter = options.filter;\n    } else {\n      const rules = options.filterRules || dataSource.filterRules;\n      const conditions = [];\n\n      if (rules && rules.length) {\n        for (const rule of rules) {\n          const filter = this.createFilterFromRule_(\n            rule,\n            dataSource,\n            options.srsName\n          );\n          if (filter) {\n            conditions.push(filter);\n          }\n        }\n      }\n\n      const condition = dataSource.filterCondition;\n      if (conditions.length === 1) {\n        mainFilter = conditions[0];\n      } else if (conditions.length >= 2) {\n        if (condition === ngeoBase.FilterCondition.AND) {\n          mainFilter = olFormatFilter.and.apply(null, conditions);\n        } else if (condition === ngeoBase.FilterCondition.OR ||\n                   condition === ngeoBase.FilterCondition.NOT\n        ) {\n          mainFilter = olFormatFilter.or.apply(null, conditions);\n        }\n      }\n      if (mainFilter && condition === ngeoBase.FilterCondition.NOT) {\n        mainFilter = olFormatFilter.not(mainFilter);\n      }\n    }\n\n    if (options.incTime) {\n      const timeFilter = this.createTimeFilterFromDataSource_(dataSource);\n      if (timeFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              timeFilter\n            ]\n          );\n        } else {\n          mainFilter = timeFilter;\n        }\n      }\n    }\n\n    return mainFilter;\n  }\n\n  /**\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?string} Filter string.\n   * @export\n   */\n  createFilterString(options) {\n    let filterString = null;\n    const filter = this.createFilter(options);\n    if (filter) {\n      const filterNode = olFormatWFS.writeFilter(filter);\n      const xmlSerializer = new XMLSerializer();\n      filterString = xmlSerializer.serializeToString(filterNode);\n    }\n    return filterString;\n  }\n\n  /**\n   * @param {ngeo.rule.Rule} rule Rule.\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *     set on geometries when this is not provided.\n   * @return {?ol.format.filter.Filter} filter Filter;\n   * @private\n   */\n  createFilterFromRule_(rule, dataSource, opt_srsName) {\n\n    let filter = null;\n\n    const value = rule.value;\n    if (!value) {\n      return null;\n    }\n\n    const expression = value.expression;\n    const lowerBoundary = value.lowerBoundary;\n    const operator = value.operator;\n    const propertyName = value.propertyName;\n    const upperBoundary = value.upperBoundary;\n\n    const rot =  ngeoRuleRule.OperatorType;\n    const rsot = ngeoRuleRule.SpatialOperatorType;\n    const rtot = ngeoRuleRule.TemporalOperatorType;\n\n    const spatialTypes = [\n      rsot.CONTAINS,\n      rsot.INTERSECTS,\n      rsot.WITHIN\n    ];\n\n    const numericTypes = [\n      rot.GREATER_THAN,\n      rot.GREATER_THAN_OR_EQUAL_TO,\n      rot.LESSER_THAN,\n      rot.LESSER_THAN_OR_EQUAL_TO\n    ];\n\n    if (rule instanceof ngeoRuleDate) {\n      let beginValue;\n      let endValue;\n\n      if (operator === rtot.DURING) {\n        beginValue = moment(lowerBoundary).format('YYYY-MM-DD');\n        endValue = moment(upperBoundary).format('YYYY-MM-DD');\n      } else if (operator === rtot.EQUALS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n        endValue = moment(\n          expression\n        ).add(\n          1, 'days'\n        ).subtract(\n          1, 'seconds'\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n      } else if (operator === rtot.BEGINS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n        // NOTE: end value is CURRENT + 30 years\n        endValue = moment(\n          expression\n        ).add(\n          30, 'years'\n        ).format(\n          'YYYY-MM-DD'\n        );\n      } else if (operator === rtot.ENDS) {\n        // NOTE: begin value is hardcoded to 1970-01-01\n        beginValue = '1970-01-01';\n        endValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n      }\n      if (beginValue && endValue) {\n        filter = olFormatFilter.during(\n          propertyName,\n          beginValue,\n          endValue\n        );\n      }\n    } else if (rule instanceof ngeoRuleSelect) {\n      const selectedChoices = rule.selectedChoices;\n      if (selectedChoices.length === 1) {\n        filter = olFormatFilter.equalTo(\n          propertyName,\n          selectedChoices[0]\n        );\n      } else if (selectedChoices.length >= 2) {\n        const conditions = [];\n        for (const selectedChoice of selectedChoices) {\n          conditions.push(\n            olFormatFilter.equalTo(\n              propertyName,\n              selectedChoice\n            )\n          );\n        }\n        filter = olFormatFilter.or.apply(null, conditions);\n      }\n    } else if (olArray.includes(spatialTypes, operator)) {\n      const geometryName = dataSource.geometryName;\n      goog.asserts.assertInstanceof(rule, ngeoRuleGeometry);\n      const geometry = goog.asserts.assert(rule.geometry);\n      if (operator === rsot.CONTAINS) {\n        filter = olFormatFilter.contains(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.INTERSECTS) {\n        filter = olFormatFilter.intersects(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.WITHIN) {\n        filter = olFormatFilter.within(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      }\n    } else if (olArray.includes(numericTypes, operator)) {\n      const numericExpression = goog.asserts.assertNumber(expression);\n      if (operator === rot.GREATER_THAN) {\n        filter = olFormatFilter.greaterThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.GREATER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.greaterThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN) {\n        filter = olFormatFilter.lessThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.lessThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      }\n    } else if (operator === rot.BETWEEN) {\n      filter = olFormatFilter.between(\n        propertyName,\n        lowerBoundary,\n        upperBoundary\n      );\n    } else if (operator === rot.EQUAL_TO) {\n      filter = olFormatFilter.equalTo(\n        propertyName,\n        expression\n      );\n    } else if (operator === rot.LIKE) {\n      const stringExpression = String(expression)\n        .replace(/!/g, '!!')\n        .replace(/\\./g, '!.')\n        .replace(/\\*/g, '!*');\n      filter = olFormatFilter.like(\n        propertyName,\n        `*${stringExpression}*`,\n        '*', /* wildCard */\n        '.', /* singleChar */\n        '!', /* escapeChar */\n        false /* matchCase */\n      );\n    } else if (operator === rot.NOT_EQUAL_TO) {\n      filter = olFormatFilter.notEqualTo(\n        propertyName,\n        expression\n      );\n    }\n\n    return filter;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * time properties within the data source.\n   * @param {ngeo.datasource.OGC} dataSource Data source from which to\n   *     create the filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createTimeFilterFromDataSource_(dataSource) {\n    let filter = null;\n    const range = dataSource.timeRangeValue;\n    const timeProperty = dataSource.timeProperty;\n    const name = dataSource.timeAttributeName;\n\n    if (range && timeProperty && name) {\n\n      if (range.end !== undefined) {\n        // Case 1: the range has both 'start' and 'end' values.  Use them to\n        //         create a During filter.\n\n        const values = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        ).split('/');\n\n        filter = olFormatFilter.during(name, values[0], values[1]);\n      } else {\n\n        // Case 2: we only have a 'start' value. We need to calculate the 'end'\n        //         using the resolution of the time property.\n\n        const resolution = timeProperty.resolution || 'seconds';\n        const value = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        );\n        let momentEnd;\n\n        switch (resolution) {\n          case 'year':\n            momentEnd = moment(value).add(1, 'years').subtract(1, 'seconds');\n            break;\n          case 'month':\n            momentEnd = moment(value).add(1, 'months').subtract(1, 'seconds');\n            break;\n          case 'day':\n            momentEnd = moment(value).add(1, 'days').subtract(1, 'seconds');\n            break;\n          default:\n            //case \"second\":\n            // This would require a TContains filter, which neither OpenLayers\n            // and MapServer support. Skip...\n        }\n\n        if (momentEnd) {\n          const startValue = moment(value).format('YYYY-MM-DD HH:mm:ss');\n          const endValue = momentEnd.format('YYYY-MM-DD HH:mm:ss');\n          filter = olFormatFilter.during(name, startValue, endValue);\n        }\n      }\n    }\n\n    return filter;\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRuleHelper', [\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoRuleHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/RuleHelper.js","/**\n * @module ngeo.rule.Date\n*/\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A date rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.DateOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = options.type || ngeo.AttributeType.DATE;\n\n    super(options);\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Date.js","/**\n * @module ngeo.rule.Geometry\n*/\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A rule bound to the geometry of a `ol.Feature` object. Changes made\n   * to the geometry are applied to the `expression` property of the rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.GeometryOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = ngeo.AttributeType.GEOMETRY;\n\n    super(options);\n\n    // === STATIC properties ===\n\n    const properties = options.featureProperties || {};\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature(properties);\n\n    /**\n     * @type {!ol.format.GeoJSON}\n     * @private\n     */\n    this.format_ = new olFormatGeoJSON();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingExpression_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingGeometry_ = false;\n\n    /**\n     * @type {?ol.EventsKey}\n     * @private\n     */\n    this.geometryChangeListenerKey_ = null;\n\n    this.listenerKeys.push(\n      olEvents.listen(\n        this.feature_,\n        ol.Object.getChangeEventType(this.feature.getGeometryName()),\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    this.setGeometryFromExpression_();\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {!ol.Feature} Feature.\n   * @export\n   */\n  get feature() {\n    return this.feature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setExpression(expression) {\n    this.updatingExpression_ = true;\n    super.setExpression(expression);\n\n    if (!this.updatingGeometry_) {\n      this.setGeometryFromExpression_();\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingExpression_ = false;\n  }\n\n  // === Calculated property getters/setters ===\n\n  /**\n   * @return {?ol.geom.Geometry} Geometry\n   * @export\n   */\n  get geometry() {\n    return this.feature_.getGeometry() || null;\n  }\n\n  /**\n   * @param {?ol.geom.Geometry} geometry Geometry\n   * @export\n   */\n  set geometry(geometry) {\n    this.feature_.setGeometry(geometry);\n  }\n\n  // === Other methods ===\n\n  /**\n   * Called when the geometry property in the feature changes. Update the\n   * expression accordingly.\n   * @private\n   */\n  handleFeatureGeometryChange_() {\n    if (this.updatingExpression_) {\n      return;\n    }\n\n    this.updatingGeometry_ = true;\n\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.expression = this.format_.writeGeometry(geometry);\n    } else {\n      this.expression = null;\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Called when the geometry of the features changes. Update the expression\n   * accordingly.\n   * @param {ol.Object.Event} evt Event\n   * @private\n   */\n  handleGeometryChange_(evt) {\n    const geometry = goog.asserts.assertInstanceof(\n      evt.target, ol.geom.Geometry\n    );\n    this.updatingGeometry_ = true;\n    this.expression = this.format_.writeGeometry(geometry);\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Set geometry property using the expression property.\n   * @private\n   */\n  setGeometryFromExpression_() {\n    let geometry = null;\n    if (this.expression) {\n      // An expression can only have a string value with a geometry rule.\n      const expression = goog.asserts.assertString(this.expression);\n      geometry = this.format_.readGeometry(expression);\n    }\n    this.geometry = geometry;\n  }\n\n  /**\n   * Unlisten the feature geometry change event, then listen to it if the\n   * feature has a geometry.\n   * @private\n   */\n  registerGeometryChange_() {\n\n    // (1) Unlisten\n    if (this.geometryChangeListenerKey_ !== null) {\n      ol.Observable.unByKey(this.geometryChangeListenerKey_);\n      this.geometryChangeListenerKey_ = null;\n    }\n\n    // (2) Listen, if geom\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.geometryChangeListenerKey_ = olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      );\n    }\n  }\n\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Geometry.js","/**\n * @module ngeo.rule.Select\n*/\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A select rule, which allows the selection of multiple values among a list\n   * of choices.\n   *\n   * The expression property holds the list of selected choices, which is\n   * comma-separated.\n   *\n   * @struct\n   * @param {!ngeox.rule.SelectOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = ngeoRuleRule.OperatorType.EQUAL_TO;\n    options.type = ngeo.AttributeType.SELECT;\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.choices_ = options.choices;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {Array.<string>} Choices\n   * @export\n   */\n  get choices() {\n    return this.choices_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {Array.<string>} Selected choices\n   * @export\n   */\n  get selectedChoices() {\n    let selectedChoices;\n    if (this.expression) {\n      const stringExpression = String(this.expression);\n      selectedChoices = stringExpression.split(',');\n    } else {\n      selectedChoices = [];\n    }\n    return selectedChoices;\n  }\n\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Select.js","/**\n * @module ngeo.rule.Text\n*/\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A text rule, which always compares the value with the LIKE operator, by\n   * default.\n   *\n   * @struct\n   * @param {!ngeox.rule.TextOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = options.operator || ngeoRuleRule.OperatorType.LIKE;\n    options.type = ngeo.AttributeType.TEXT;\n\n    super(options);\n\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Text.js","/**\n * @module ngeo.WFSDescribeFeatureType\n*/\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\nimport olXml from 'ol/xml.js';\n\n/**\n * @classdesc\n * Format for reading WFS DescribeFeatureType data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst exports = function() {\n\n  olFormatXML.call(this);\n\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * Read a WFS DescribeFeatureType document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WFS DescribeFeatureType.\n * @api\n */\nexports.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromNode = function(node) {\n  let result = {};\n  result = olXml.pushParseAndPop(\n    result,\n    exports.PARSERS_,\n    node,\n    []\n  );\n  return result;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Attributes.\n */\nexports.readElement_ = function(node, objectStack) {\n  const attributes = {};\n  for (let i = 0, len = node.attributes.length; i < len; i++) {\n    const attribute = node.attributes.item(i);\n    attributes[attribute.name] = attribute.value;\n  }\n  if (objectStack.length === 1) {\n    // remove namespace from type\n    attributes['type'] = attributes['type'].split(':').pop();\n  }\n  return attributes;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexType_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const object = olXml.pushParseAndPop(\n    {'name': name},\n    exports.COMPLEX_TYPE_PARSERS_,\n    node, objectStack\n  );\n  // flatten\n  object['complexContent'] =\n    object['complexContent']['extension']['sequence']['element'];\n  return object;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexContent_ = function(\n  node, objectStack\n) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.COMPLEX_CONTENT_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readExtension_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.EXTENSION_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readSequence_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.SEQUENCE_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nexports.NAMESPACE_URIS_ = [\n  null,\n  'http://www.w3.org/2001/XMLSchema'\n];\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    ),\n    'complexType': olXml.makeObjectPropertyPusher(\n      exports.readComplexType_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_TYPE_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'complexContent': olXml.makeObjectPropertySetter(\n      exports.readComplexContent_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_CONTENT_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'extension': olXml.makeObjectPropertySetter(\n      exports.readExtension_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.EXTENSION_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'sequence': olXml.makeObjectPropertySetter(\n      exports.readSequence_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.SEQUENCE_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    )\n  }));\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/WFSDescribeFeatureType.js","/**\n * @module ol/format/WMSCapabilities\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMSCapabilities = function() {\n\n  XML.call(this);\n\n  /**\n   * @type {string|undefined}\n   */\n  this.version = undefined;\n};\n\ninherits(WMSCapabilities, XML);\n\n\n/**\n * Read a WMS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMS capabilities.\n * @api\n */\nWMSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMSCapabilities.prototype.readFromNode = function(node) {\n  this.version = node.getAttribute('version').trim();\n  const wmsCapabilityObject = _ol_xml_.pushParseAndPop({\n    'version': this.version\n  }, WMSCapabilities.PARSERS_, node, []);\n  return wmsCapabilityObject ? wmsCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMSCapabilities.readAttribution_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.ATTRIBUTION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nWMSCapabilities.readBoundingBox_ = function(node, objectStack) {\n  const extent = [\n    XSD.readDecimalString(node.getAttribute('minx')),\n    XSD.readDecimalString(node.getAttribute('miny')),\n    XSD.readDecimalString(node.getAttribute('maxx')),\n    XSD.readDecimalString(node.getAttribute('maxy'))\n  ];\n\n  const resolutions = [\n    XSD.readDecimalString(node.getAttribute('resx')),\n    XSD.readDecimalString(node.getAttribute('resy'))\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions\n  };\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Extent|undefined} Bounding box object.\n */\nWMSCapabilities.readEXGeographicBoundingBox_ = function(node, objectStack) {\n  const geographicBoundingBox = _ol_xml_.pushParseAndPop(\n    {},\n    WMSCapabilities.EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS_,\n    node, objectStack);\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  const westBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['westBoundLongitude']);\n  const southBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['southBoundLatitude']);\n  const eastBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['eastBoundLongitude']);\n  const northBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['northBoundLatitude']);\n  if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude, southBoundLatitude,\n    eastBoundLongitude, northBoundLatitude\n  ];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Capability object.\n */\nWMSCapabilities.readCapability_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.CAPABILITY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Service object.\n */\nWMSCapabilities.readService_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.SERVICE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Contact information object.\n */\nWMSCapabilities.readContactInformation_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.CONTACT_INFORMATION_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Contact person object.\n */\nWMSCapabilities.readContactPersonPrimary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.CONTACT_PERSON_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Contact address object.\n */\nWMSCapabilities.readContactAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.CONTACT_ADDRESS_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<string>|undefined} Format array.\n */\nWMSCapabilities.readException_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WMSCapabilities.EXCEPTION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Layer object.\n */\nWMSCapabilities.readCapabilityLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nWMSCapabilities.readLayer_ = function(node, objectStack) {\n  const parentLayerObject = /**  @type {Object.<string,*>} */\n        (objectStack[objectStack.length - 1]);\n\n  const layerObject = _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.LAYER_PARSERS_, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  let queryable =\n        XSD.readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  let cascaded = XSD.readNonNegativeIntegerString(\n    node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  let opaque = XSD.readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  let noSubsets =\n        XSD.readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  let fixedWidth =\n        XSD.readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  let fixedHeight =\n        XSD.readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  const addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function(key) {\n    if (key in parentLayerObject) {\n      const childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  const replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n    'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n  replaceKeys.forEach(function(key) {\n    if (!(key in layerObject)) {\n      const parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nWMSCapabilities.readDimension_ = function(node, objectStack) {\n  const dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': XSD.readBooleanString(\n      node.getAttribute('multipleValues')),\n    'nearestValue': XSD.readBooleanString(\n      node.getAttribute('nearestValue')),\n    'current': XSD.readBooleanString(node.getAttribute('current')),\n    'values': XSD.readString(node)\n  };\n  return dimensionObject;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nWMSCapabilities.readFormatOnlineresource_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.FORMAT_ONLINERESOURCE_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nWMSCapabilities.readRequest_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.REQUEST_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nWMSCapabilities.readDCPType_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.DCPTYPE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nWMSCapabilities.readHTTP_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.HTTP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nWMSCapabilities.readOperationType_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.OPERATIONTYPE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nWMSCapabilities.readSizedFormatOnlineresource_ = function(node, objectStack) {\n  const formatOnlineresource =\n        WMSCapabilities.readFormatOnlineresource_(node, objectStack);\n  if (formatOnlineresource) {\n    const size = [\n      XSD.readNonNegativeIntegerString(node.getAttribute('width')),\n      XSD.readNonNegativeIntegerString(node.getAttribute('height'))\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nWMSCapabilities.readAuthorityURL_ = function(node, objectStack) {\n  const authorityObject =\n        WMSCapabilities.readFormatOnlineresource_(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nWMSCapabilities.readMetadataURL_ = function(node, objectStack) {\n  const metadataObject =\n        WMSCapabilities.readFormatOnlineresource_(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMSCapabilities.readStyle_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.STYLE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Keyword list.\n */\nWMSCapabilities.readKeywordList_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WMSCapabilities.KEYWORDLIST_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wms'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Service': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readService_),\n    'Capability': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readCapability_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CAPABILITY_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Request': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readRequest_),\n    'Exception': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readException_),\n    'Layer': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readCapabilityLayer_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.SERVICE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'KeywordList': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readKeywordList_),\n    'OnlineResource': _ol_xml_.makeObjectPropertySetter(\n      XLink.readHref),\n    'ContactInformation': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readContactInformation_),\n    'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AccessConstraints': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'LayerLimit': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CONTACT_INFORMATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'ContactPersonPrimary': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readContactPersonPrimary_),\n    'ContactPosition': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'ContactAddress': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readContactAddress_),\n    'ContactVoiceTelephone': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'ContactFacsimileTelephone': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'ContactElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CONTACT_PERSON_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'ContactPerson': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'ContactOrganization': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CONTACT_ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'AddressType': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'StateOrProvince': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.EXCEPTION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Format': _ol_xml_.makeArrayPusher(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'KeywordList': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readKeywordList_),\n    'CRS': _ol_xml_.makeObjectPropertyPusher(XSD.readString),\n    'EX_GeographicBoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readEXGeographicBoundingBox_),\n    'BoundingBox': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readBoundingBox_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readDimension_),\n    'Attribution': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readAttribution_),\n    'AuthorityURL': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readAuthorityURL_),\n    'Identifier': _ol_xml_.makeObjectPropertyPusher(XSD.readString),\n    'MetadataURL': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readMetadataURL_),\n    'DataURL': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readFormatOnlineresource_),\n    'FeatureListURL': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readFormatOnlineresource_),\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readStyle_),\n    'MinScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'MaxScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readLayer_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.ATTRIBUTION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'OnlineResource': _ol_xml_.makeObjectPropertySetter(\n      XLink.readHref),\n    'LogoURL': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readSizedFormatOnlineresource_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS_ =\n    _ol_xml_.makeStructureNS(WMSCapabilities.NAMESPACE_URIS_, {\n      'westBoundLongitude': _ol_xml_.makeObjectPropertySetter(\n        XSD.readDecimal),\n      'eastBoundLongitude': _ol_xml_.makeObjectPropertySetter(\n        XSD.readDecimal),\n      'southBoundLatitude': _ol_xml_.makeObjectPropertySetter(\n        XSD.readDecimal),\n      'northBoundLatitude': _ol_xml_.makeObjectPropertySetter(\n        XSD.readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.REQUEST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'GetCapabilities': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readOperationType_),\n    'GetMap': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readOperationType_),\n    'GetFeatureInfo': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readOperationType_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.OPERATIONTYPE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Format': _ol_xml_.makeObjectPropertyPusher(XSD.readString),\n    'DCPType': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readDCPType_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.DCPTYPE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readHTTP_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readFormatOnlineresource_),\n    'Post': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readFormatOnlineresource_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readSizedFormatOnlineresource_),\n    'StyleSheetURL': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readFormatOnlineresource_),\n    'StyleURL': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readFormatOnlineresource_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.FORMAT_ONLINERESOURCE_PARSERS_ =\n    _ol_xml_.makeStructureNS(WMSCapabilities.NAMESPACE_URIS_, {\n      'Format': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'OnlineResource': _ol_xml_.makeObjectPropertySetter(\n        XLink.readHref)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.KEYWORDLIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Keyword': _ol_xml_.makeArrayPusher(XSD.readString)\n  });\nexport default WMSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSCapabilities.js\n// module id = 209\n// module chunks = 0 1","/**\n * @module ngeo.datasource.Helper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoFormatWFSAttribute from 'ngeo/format/WFSAttribute.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport olEvents from 'ol/events.js';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to manipulate or get data sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo data source\n   *     collection.\n   * @param {ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @ngdoc service\n   * @ngname ngeoDataSourcesHelper\n   *//* @ngInject\n   */\n  constructor($q, ngeoDataSources, ngeoQuerent) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = ngeoDataSources;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Object.<number, ngeo.datasource.DataSource>}\n     * @private\n     */\n    this.cache_ = {};\n\n    // Events\n\n    olEvents.listen(ngeoDataSources, 'add', this.handleDataSourcesAdd_, this);\n    olEvents.listen(ngeoDataSources, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n  /**\n   * @return {ngeox.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?ngeo.datasource.DataSource} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return this.cache_[id] || null;\n  }\n\n  /**\n   * Get the attributes of a data source. If they are not set, they are obtained\n   * from the querent service using a WFS DescribeFeatureType request, then set\n   * in the data source.\n   *\n   * Please, note that in order to be dynamically set, the data source must\n   * only have 1 ogcLayer set and be queryable.\n   *\n   * @param {ngeo.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  getDataSourceAttributes(dataSource) {\n\n    const wfsDescribeFeatureTypeDefer = this.q_.defer();\n\n    if (dataSource.attributes) {\n      wfsDescribeFeatureTypeDefer.resolve(dataSource.attributes);\n    } else {\n      this.ngeoQuerent_.wfsDescribeFeatureType(\n        dataSource\n      ).then((featureType) => {\n        // We know, at this point, that there's only one definition that\n        // was returned.  Just to be sure, let's do a bunch of assertions.\n        const ogcLayerName = dataSource.getOGCLayerNames()[0];\n        goog.asserts.assertString(\n          ogcLayerName, 'The data source should have only one ogcLayer.');\n        const element = featureType.element[0];\n        goog.asserts.assert(element.name === ogcLayerName);\n        goog.asserts.assert(\n          featureType.complexType[0].name === element.type);\n\n        const complexContent = featureType['complexType'][0]['complexContent'];\n        const attributes = new ngeoFormatWFSAttribute().read(complexContent);\n\n        // Set the attributes in the data source\n        dataSource.setAttributes(attributes);\n\n        wfsDescribeFeatureTypeDefer.resolve(attributes);\n      });\n    }\n\n    return wfsDescribeFeatureTypeDefer.promise;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. Add it\n   * to the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = goog.asserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    this.cache_[dataSource.id] = dataSource;\n  }\n\n  /**\n   * Called when a data source is removed from the ngeo collection. Remove it\n   * from the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = goog.asserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    delete this.cache_[dataSource.id];\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSourcesHelper', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoDataSourcesHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Helper.js","/**\n * @module ngeo.format.WFSAttribute\n*/\nimport ngeoAttribute from 'ngeo/Attribute.js';\n\nconst exports = class {\n\n\n  /**\n   * A format that reads the complexType from a WFS DescribeFeatureType\n   * response for a single set of attributes and return an array of\n   * `ngeox.Attribute`.\n   */\n\n\n  /**\n   * @param {Array.<Object>} complexTypeElements Complex type element\n   * @return {Array.<ngeox.Attribute>} Attributes\n   */\n  read(complexTypeElements) {\n    return complexTypeElements.map(this.readFromComplexTypeElement_);\n  }\n\n\n  /**\n   * @param {Object} object Complex type element\n   * @return {ngeox.Attribute} Attribute\n   * @private\n   */\n  readFromComplexTypeElement_(object) {\n\n    const name = goog.asserts.assertString(object['name']);\n    const alias = 'alias' in object ?\n      goog.asserts.assertString(object['alias']) : null;\n    const required = object['minOccurs'] != '0';\n\n    const attribute = {\n      name,\n      alias,\n      required\n    };\n\n    const type = goog.asserts.assertString(object['type']);\n\n    if (!ngeoAttribute.setGeometryType(attribute, type)) {\n      if (type === 'gml:TimeInstantType') {\n        attribute.type = ngeo.AttributeType.DATETIME;\n      } else if (type === 'double') {\n        attribute.type = ngeo.AttributeType.NUMBER;\n      } else {\n        attribute.type = ngeo.AttributeType.TEXT;\n      }\n    }\n\n    return attribute;\n  }\n\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/WFSAttribute.js","/**\n * @module ngeo.query.mapQueryComponent\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olEvents from 'ol/events.js';\n\nconst exports = angular.module('ngeoMapQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a \"map query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, clicks made on the map are listened by the directive\n * and a request gets issued to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-map-query=\"\"\n *        ngeo-map-query-map=\"::ctrl.map\"\n *        ngeo-map-query-active=\"ctrl.queryActive\"\n *        ngeo-map-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See our live example: [../examples/mapquery.html](../examples/mapquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @param {angular.$injector} $injector Main injector.\n * @return {angular.Directive} The Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoMapQuery\n */\nexports.directive_ = function(ngeoMapQuerent, $injector) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      const map = scope.$eval(attrs['ngeoMapQueryMap']);\n      let clickEventKey_ = null;\n      let pointerMoveEventKey_ = null;\n\n      /**\n       * Called when the map is clicked while this controller is active. Issue\n       * a request to the query service using the coordinate that was clicked.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handleMapClick_ = function(evt) {\n        const coordinate = evt.coordinate;\n        ngeoMapQuerent.issue({\n          coordinate,\n          map\n        });\n      };\n\n      /**\n       * Called when the pointer is moved while this controller is active.\n       * Change the mouse pointer when hovering a non-transparent pixel on the\n       * map.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handlePointerMove_ = function(evt) {\n        if (!evt.dragging) {\n          const pixel = map.getEventPixel(evt.originalEvent);\n          const queryable = function(layer) {\n            const visible = layer.get('visible');\n            const sourceids = layer.get('querySourceIds');\n            return visible && !!sourceids;\n          };\n          const hit = map.forEachLayerAtPixel(pixel, () => true, undefined, queryable);\n          map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n        }\n      };\n\n      /**\n       * Listen to the map events.\n       */\n      const activate_ = function() {\n        clickEventKey_ = olEvents.listen(map, 'singleclick', handleMapClick_);\n        const queryOptions = /** @type {ngeox.QueryOptions} */ (\n          $injector.has('ngeoQueryOptions') ? $injector.get('ngeoQueryOptions') : {}\n        );\n        if (queryOptions.cursorHover) {\n          pointerMoveEventKey_ = olEvents.listen(map, 'pointermove', handlePointerMove_);\n        }\n      };\n\n      /**\n       * Unlisten the map events.\n       */\n      const deactivate_ = function() {\n        if (clickEventKey_ !== null) {\n          olEvents.unlistenByKey(clickEventKey_);\n          clickEventKey_ = null;\n        }\n        if (pointerMoveEventKey_ !== null) {\n          olEvents.unlistenByKey(pointerMoveEventKey_);\n          pointerMoveEventKey_ = null;\n        }\n        if (scope.$eval(attrs['ngeoMapQueryAutoclear']) !== false) {\n          ngeoMapQuerent.clear();\n        }\n      };\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoMapQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            activate_();\n          } else {\n            deactivate_();\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoMapQuery', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/query/mapQueryComponent.js","/**\n * @module app.bboxquery\n*/\nconst exports = {};\n\nimport './bboxquery.css';\nimport './common_dependencies.js';\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoQueryModule from 'ngeo/query/module.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} */\napp.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoDatasourceDataSources.module.name,\n  ngeoMapModule.name,\n  ngeoMiscBtnComponent.name,\n  ngeoQueryModule.name\n]);\n\n\napp.module.value('ngeoQueryOptions', {\n  'limit': 20\n});\n\n\n/**\n * A sample component to display the result.\n *\n * @type {!angular.Component}\n */\napp.queryresultComponent = {\n  controller: 'AppQueryresultController',\n  controllerAs: 'qrCtrl',\n  templateUrl: 'partials/queryresult.html'\n};\n\napp.module.component('appQueryresult', app.queryresultComponent);\n\n\n/**\n * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query service.\n * @constructor\n *//* @ngInject\n */\napp.QueryresultController = function(ngeoQueryResult) {\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @export\n   */\n  this.result = ngeoQueryResult;\n\n};\n\n\napp.module.controller('AppQueryresultController', app.QueryresultController);\n\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo collection of\n *     data sources objects.\n * @constructor\n *//* @ngInject\n */\napp.MainController = function($scope, ngeoDataSources) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.queryActive = true;\n\n  ngeoDataSources.push(new ngeoDatasourceOGC({\n    id: 1,\n    name: 'bus_stop',\n    visible: true,\n    wfsUrl: 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/mapserv_proxy',\n    ogcLayers: [{\n      name: 'bus_stop',\n      queryable: true\n    }]\n  }));\n  const busStopLayer = new olLayerImage({\n    'source': new olSourceImageWMS({\n      'url': 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/mapserv_proxy',\n      params: {'LAYERS': 'bus_stop'}\n    })\n  });\n\n  ngeoDataSources.push(new ngeoDatasourceOGC({\n    id: 2,\n    name: 'information',\n    visible: true,\n    wfsUrl: 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/mapserv_proxy',\n    ogcLayers: [{\n      name: 'information',\n      queryable: true\n    }]\n  }));\n  const informationLayer = new olLayerImage({\n    'source': new olSourceImageWMS({\n      'url': 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/mapserv_proxy',\n      params: {'LAYERS': 'information'}\n    })\n  });\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      }),\n      informationLayer,\n      busStopLayer\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [537635, 152640],\n      zoom: 0\n    })\n  });\n\n};\n\napp.module.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/bboxquery.js","/**\n * @module ngeo.query.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoQueryService from 'ngeo/query/Service.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoQueryMapQueryComponent from 'ngeo/query/mapQueryComponent.js';\nimport ngeoQueryBboxQueryComponent from 'ngeo/query/bboxQueryComponent.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoQueryModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoQueryService.module.name,\n  ngeoQueryQuerent.module.name,\n  ngeoQueryMapQuerent.module.name,\n  ngeoQueryMapQueryComponent.name,\n  ngeoQueryBboxQueryComponent.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/query/module.js","/**\n * @module ngeo.query.Service\n*/\n// DEPRECATED\n\n// DEPRECATED\n\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\nimport * as olObj from 'ol/obj.js';\nimport olHas from 'ol/has.js';\nimport * as olExtent from 'ol/extent.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n// Moved to mapquerent.js\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\n//ngeo.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n//  sources: [],\n//  total: 0,\n//  pending: false\n//}));\n\n\n/**\n * The Query service provides a way to send WMS GetFeatureInfo and WFS GetFeature\n * requests from visible layer objects within a map. Those do not necessarily need to have\n * a WMS source. The Query service requires source configuration in order\n * for layers to actually be considered queryable.\n *\n * To know more about the specification of a source configuration, see\n * `ngeox.QuerySource`\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n * @param {ngeox.QueryOptions|undefined} ngeoQueryOptions The options to\n *     configure the ngeo query service with.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @ngdoc service\n * @ngname ngeoQuery\n *//* @ngInject\n */\nconst exports = function($http, $q, ngeoQueryResult, ngeoQueryOptions,\n  ngeoLayerHelper) {\n\n  const options = ngeoQueryOptions !== undefined ? ngeoQueryOptions : {};\n\n\n  /**\n   * @type {Object.<string, string>}\n   */\n  this.dimensions = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n    options.queryCountFirst : false;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.sourceIdsProperty_ = options.sourceIdsProperty !== undefined ?\n    options.sourceIdsProperty : exports.DEFAULT_SOURCE_IDS_PROPERTY_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.tolerancePx_ = options.tolerance !== undefined ?\n    options.tolerance : 3;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.featureNS_ = options.featureNS !== undefined ?\n    options.featureNS : 'http://mapserver.gis.umn.edu/mapserver';\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.featurePrefix_ = options.featurePrefix !== undefined ?\n    options.featurePrefix : 'feature';\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.geometryName_ = options.geometryName !== undefined ?\n    options.geometryName : 'geom';\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @private\n   */\n  this.result_ = ngeoQueryResult;\n\n  /**\n   * @type {Array.<ngeox.QuerySource>}\n   * @private\n   */\n  this.sources_ = [];\n\n  /**\n   * @type {Object.<number|string, ngeo.query.Service.QueryCacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * Promises that can be resolved to cancel started requests.\n   * @type {Array.<angular.$q.Deferred>}\n   * @private\n   */\n  this.requestCancelers_ = [];\n};\n\n\n/**\n * @const\n * @private\n */\nexports.DEFAULT_SOURCE_IDS_PROPERTY_ = 'querySourceIds';\n\n\n/**\n * Adds a new source to the query service.\n *\n * A source must at least have an `id` configured.  That id is then used to\n * associate the corresponding layer object within a map.\n *\n * A source will require a `ol.source.ImageWMS` or `ol.source.TileWMS` object.\n * You can either set it directly in the config, or use the one from a given\n * layer or let the query service create one for you using other source config\n * such as `url` and `params`.\n *\n * A source can be set with either a `format` and/or `infoFormat`, which will\n * determine how the returned features of a query will be read.\n *\n * This method will also create a result entry in the `ngeoQueryResult`\n * value service.\n *\n * @param {ngeox.QuerySource} source The source to add to the query service.\n * @export\n */\nexports.prototype.addSource = function(source) {\n  const sourceId = source.id;\n\n  goog.asserts.assert(sourceId, 'source.id should be thruthy');\n  goog.asserts.assert(!this.cache_[sourceId],\n    'no other source with the same id should be present');\n\n  // == wmsSource ==\n  // if the source doesn't have a wmsSource property set, it must at least have\n  // a layer that has one or have the required configuration options in order\n  // to create one.\n  if (!source.wmsSource) {\n    if (source.layer &&\n        (source.layer instanceof olLayerImage ||\n         source.layer instanceof olLayerTile)) {\n      const wmsSource = source.layer.getSource();\n      if (wmsSource &&\n          (wmsSource instanceof olSourceImageWMS ||\n           wmsSource instanceof olSourceTileWMS)) {\n        source.wmsSource = wmsSource;\n      }\n    } else {\n      goog.asserts.assert(source.url,\n        'url must be set when no layer or wmsSource is set in the source');\n      source.wmsSource = new olSourceImageWMS({\n        url: source.url,\n        params: {'LAYERS': source.layers}\n      });\n      source.getLayers = source.getLayers;\n    }\n  }\n  goog.asserts.assert(source.wmsSource, 'wmsSource should be thruthy');\n\n  // == format ==\n  if (!source.format) {\n    // GML is the default infoFormat if the source doesn't have one defined\n    if (!source.infoFormat) {\n      source.infoFormat = exports.QueryInfoFormatType.GML;\n    }\n\n    if (source.infoFormat === exports.QueryInfoFormatType.GML && source.layers) {\n      source.format = new olFormatWMSGetFeatureInfo({\n        layers: source.layers\n      });\n    }\n  } else if (!source.infoFormat) {\n    // == infoFormat ==\n    const format = source.format;\n    if (format instanceof olFormatWMSGetFeatureInfo) {\n      source.infoFormat = exports.QueryInfoFormatType.GML;\n    }\n  }\n  goog.asserts.assert(source.format, 'format should be thruthy');\n\n  this.sources_.push(source);\n\n  const sourceLabel = source.label !== undefined ? source.label : sourceId;\n\n  const sourceIdentifierAttributeField =\n      source.identifierAttributeField !== undefined ?\n        source.identifierAttributeField : sourceId;\n\n  const resultSource = /** @type {ngeox.QueryResultSource} */ ({\n    'features': [],\n    'id': sourceId,\n    'identifierAttributeField': sourceIdentifierAttributeField,\n    'label': sourceLabel,\n    'pending': false,\n    'queried': false\n  });\n\n  this.result_.sources.push(resultSource);\n\n  const cacheItem = {\n    'source': source,\n    'resultSource': resultSource\n  };\n  this.cache_[sourceId] = cacheItem;\n};\n\n\n/**\n * Add multiple sources at once in the order they are given.\n * @param {!Array.<!ngeox.QuerySource>} sources The sources to add to the query\n *     service.\n * @export\n */\nexports.prototype.addSources = function(sources) {\n  sources.forEach((source) => {\n    this.addSource(source);\n  });\n};\n\n\n/**\n * Clear the results.\n * @export\n */\nexports.prototype.clear = function() {\n  this.clearResult_();\n};\n\n\n/**\n * Remove all sources.\n * @export\n */\nexports.prototype.removeAllSources = function() {\n  this.result_.sources.length = 0;\n  this.sources_.length = 0;\n  this.cache_ = {};\n};\n\n\n/**\n * Issue a new request using a given map and a given object, which can be\n * a coordinate or extent.\n *\n * When given a coordinate, WMS GetFeatureInfo or WFS GetFeature requests will\n * be made. If a layer supports WFS, a GetFeature request with a bbox around the\n * coordinate are issued.\n *\n * For an extent, WFS GetFeature is used.\n *\n * @param {ol.Map} map The ol3 map object to fetch the layers from.\n * @param {ol.Coordinate|ol.Extent} object The coordinate or extent to issue\n *     the request with.\n * @export\n */\nexports.prototype.issue = function(map, object) {\n  this.cancelStillRunningRequests_();\n  this.clearResult_();\n\n  if (object.length === 2) {\n    this.issueIdentifyFeaturesRequests_(map, object);\n  } else {\n    goog.asserts.assert(object.length === 4, 'expecting extent');\n    this.issueGetFeatureRequests_(map, object);\n  }\n};\n\n\n/**\n * Issue WMS GetFeatureInfo or WFS GetFeature requests using the given\n * coordinate and map.\n * For each visible layer of the map, if that layer has a source configured\n * within this query service, then a query will be sent and the results\n * will be stocked in the `ngeoQueryResult`.\n *\n * For WMS GetFeatureInfo, gf multiple sources share the same url and use GML\n * as info format, then only one request will be sent for all these sources.\n *\n * NOTE: Only GML info format are currently supported.\n *\n * @param {ol.Map} map The ol3 map object to fetch the layers from.\n * @param {ol.Coordinate} coordinate The coordinate to issue the request with.\n * @private\n */\nexports.prototype.issueIdentifyFeaturesRequests_ = function(map, coordinate) {\n  const sources = this.getQueryableSources_(map, false);\n\n  this.doGetFeatureInfoRequests_(sources.wms, coordinate, map);\n  this.doGetFeatureRequestsWithCoordinate_(sources.wfs, coordinate, map);\n  this.updatePendingState_();\n};\n\n\n/**\n * Issue WFS GetFeature requests using the given extent for each visible layer\n * of the map.\n *\n * @param {ol.Map} map The ol3 map object to fetch the layers from.\n * @param {ol.Extent} extent The coordinate to issue the request with.\n * @private\n */\nexports.prototype.issueGetFeatureRequests_ = function(map, extent) {\n  const sources = this.getQueryableSources_(map, true);\n  this.doGetFeatureRequests_(sources.wfs, extent, map);\n  this.updatePendingState_();\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @param {boolean} wfsOnly Only get sources queryable via WFS.\n * @return {ngeo.query.Service.QueryableSources} Queryable sources.\n * @private\n */\nexports.prototype.getQueryableSources_ = function(map, wfsOnly) {\n\n  const wmsItemsByUrl =\n      /** @type {!Object.<string, !Array.<!ngeo.query.Service.QueryCacheItem>>} */ ({});\n  const wfsItemsByUrl =\n      /** @type {!Object.<string, !Array.<!ngeo.query.Service.QueryCacheItem>>} */ ({});\n\n  const layers = this.ngeoLayerHelper_.getFlatLayers(map.getLayerGroup());\n\n  layers.forEach(function(layer) {\n\n    // Skip layers that are not visible\n    if (!this.ngeoLayerHelper_.isLayerVisible(layer, map)) {\n      return;\n    }\n\n    // Skip layers that don't have one or more sources configured\n    const ids = this.getLayerSourceIds_(layer);\n    if (ids.length === 0) {\n      return;\n    }\n\n    let infoFormat;\n    let url;\n    let item;\n    for (let i = 0, len = ids.length; i < len; i++) {\n      const id = ids[i];\n      item = this.cache_[id];\n      if (!item) {\n        continue;\n      }\n\n      // If `validateLayerParams` is set, then the source config layer in the\n      // LAYERS params must be in the current LAYERS params of the layer\n      // wms source object.\n      if (item.source.validateLayerParams) {\n        goog.asserts.assert(\n          layer instanceof olLayerImage ||\n            layer instanceof olLayerTile,\n          'The layer should be an Image or Tile when using the ' +\n            'validateLayerParams option.'\n        );\n        const layerSource = layer.getSource();\n        goog.asserts.assert(\n          layerSource instanceof olSourceImageWMS ||\n            layerSource instanceof olSourceTileWMS,\n          'The layer source should be a WMS one when using the ' +\n            'validateLayerParams option.'\n        );\n        const resolution = map.getView().getResolution();\n        goog.asserts.assert(resolution);\n\n        // check if we have at least one child queryable at this resolution\n        if (item.source.getLayers(resolution).length === 0) {\n          continue;\n        }\n        // check if the layer is displayed\n        const layersFromParams = layerSource.getParams()['LAYERS'].split(',');\n        const layerIsOnTheMap = item.source.layers.some(layer => layersFromParams.indexOf(layer) > -1);\n        if (!layerIsOnTheMap) {\n          continue;\n        }\n      }\n\n      if (item.source.wfsQuery) {\n        // use WFS GetFeature\n        url = item.source.urlWfs || item.source.wmsSource.getUrl();\n        goog.asserts.assertString(url);\n        if (!wfsItemsByUrl[url]) {\n          wfsItemsByUrl[url] = [];\n        }\n        this.pushSourceIfUnique_(item, wfsItemsByUrl[url]);\n      } else if (!wfsOnly) {\n        // use WMF GetFeatureInfo\n        infoFormat = item.source.infoFormat;\n\n        // Sources that use GML as info format are combined together if they\n        // share the same server url\n        if (infoFormat === exports.QueryInfoFormatType.GML) {\n          url = item.source.wmsSource.getUrl();\n          goog.asserts.assertString(url);\n          if (!wmsItemsByUrl[url]) {\n            wmsItemsByUrl[url] = [];\n          }\n          this.pushSourceIfUnique_(item, wmsItemsByUrl[url]);\n        } else {\n          // TODO - support other kinds of infoFormats\n        }\n      }\n    }\n  }, this);\n\n  return {\n    wms: wmsItemsByUrl,\n    wfs: wfsItemsByUrl\n  };\n};\n\n\n/**\n * Push source if and only if not already in the array. it aims to add a unicity\n * constraint on sources.\n *\n * The 'id' of a source object is taken from the 'id' property of the\n * node object (in the tree). Under the wood, the 'id' property of a node is filled\n * regarding the layer attached to it. therefore, Two nodes with the same layer ,\n * attached will have the same 'id'. We must avoid multiple identical request.\n * @param  {ngeo.query.Service.QueryCacheItem} item  The QueryCache item to push in the array\n * @param  {Array.<ngeo.query.Service.QueryCacheItem>} array QueryCacheItem array\n * @return {boolean} true if the item has been added, false otherwise.\n * @private\n */\nexports.prototype.pushSourceIfUnique_ = function(item, array) {\n  const isUnique = array.indexOf(item) < 0;\n  if (isUnique) {\n    array.push(item);\n  }\n  return isUnique;\n};\n\n/**\n * @param {Object.<string, Array.<ngeo.query.Service.QueryCacheItem>>} wmsItemsByUrl Queryable\n *    layers for GetFeatureInfo\n * @param {ol.Coordinate} coordinate Query coordinate\n * @param {ol.Map} map Map\n * @private\n */\nexports.prototype.doGetFeatureInfoRequests_ = function(\n  wmsItemsByUrl, coordinate, map) {\n  const view = map.getView();\n  const projCode = view.getProjection().getCode();\n  const resolution = /** @type {number} */(view.getResolution());\n\n  angular.forEach(wmsItemsByUrl, function(items) {\n\n    items.forEach((item) => {\n      item['resultSource'].pending = true;\n      item['resultSource'].queried = true;\n    });\n\n    const layers = this.getLayersForItems_(items);\n    const lyrStr = layers.join(',');\n    const params = {\n      'INFO_FORMAT': items[0].source.infoFormat,\n      'FEATURE_COUNT': this.limit_,\n      'LAYERS': lyrStr,\n      'QUERY_LAYERS': lyrStr\n    };\n\n    Object.assign(params, this.getDimensionsParams_(items[0].source.dimensions));\n\n    const wmsGetFeatureInfoUrl = items[0].source.wmsSource.getGetFeatureInfoUrl(\n      coordinate, resolution, projCode);\n\n    this.$http_.get(wmsGetFeatureInfoUrl, {params: params, timeout: this.registerCanceler_().promise})\n      .then(function(items, response) {\n        items.forEach(function(item) {\n          item['resultSource'].pending = false;\n          const features = [];\n          item.source.format.readFeatures(response.data).forEach((feature) => {\n            goog.asserts.assert(feature);\n            features.push(feature);\n          });\n          this.setUniqueIds_(features, item.source.id);\n          item['resultSource'].features = features;\n          this.result_.total += features.length;\n        }, this);\n        this.updatePendingState_();\n      }.bind(this, items));\n  }, this);\n};\n\n\n/**\n * @param {Object.<string, string>} dimensions Source dimensions\n * @return {Object.<string, string>} Url parameters\n * @private\n */\nexports.prototype.getDimensionsParams_ = function(dimensions) {\n  const params = {};\n  if (dimensions) {\n    for (const key in dimensions) {\n      // get the value from the global dimensions\n      let value = this.dimensions[key];\n      if (value === undefined) {\n        // get the value from the layer default value\n        value = dimensions[key];\n      }\n      if (value !== undefined) {\n        params[key] = value;\n      }\n    }\n  }\n  return params;\n};\n\n\n/**\n * @param {Object.<string, Array.<ngeo.query.Service.QueryCacheItem>>} wfsItemsByUrl Queryable\n *    layers for GetFeature\n * @param {ol.Coordinate} coordinate Query coordinate\n * @param {ol.Map} map Map\n * @private\n */\nexports.prototype.doGetFeatureRequestsWithCoordinate_ = function(\n  wfsItemsByUrl, coordinate, map) {\n  const view = map.getView();\n  const bbox = this.getQueryBbox_(coordinate, view);\n  this.doGetFeatureRequests_(wfsItemsByUrl, bbox, map);\n};\n\n\n/**\n * @param {Object.<string, Array.<ngeo.query.Service.QueryCacheItem>>} wfsItemsByUrl Queryable\n *    layers for GetFeature\n * @param {ol.Extent} bbox Query bbox\n * @param {ol.Map} map Map\n * @private\n */\nexports.prototype.doGetFeatureRequests_ = function(\n  wfsItemsByUrl, bbox, map) {\n  const view = map.getView();\n  const projCode = view.getProjection().getCode();\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n\n  angular.forEach(wfsItemsByUrl, (items, url) => {\n    items.forEach((item) => {\n      const resolution = map.getView().getResolution();\n      goog.asserts.assert(resolution);\n      const layers = this.getLayersForItem_(item, resolution);\n\n      if (layers.length == 0 || layers[0] === '') {\n        // do not query source if no valid layers\n        return;\n      }\n\n      item['resultSource'].pending = true;\n      item['resultSource'].queried = true;\n\n      /** @type {olx.format.WFSWriteGetFeatureOptions} */\n      const getFeatureOptions = {\n        srsName: projCode,\n        featureNS: this.featureNS_,\n        featurePrefix: this.featurePrefix_,\n        featureTypes: layers,\n        outputFormat: 'GML3',\n        bbox: bbox,\n        geometryName: this.geometryName_\n      };\n\n      const sourceFormat = new olFormatWFS({\n        featureType: layers,\n        featureNS: this.featureNS_\n      });\n\n      const params = this.getDimensionsParams_(items[0].source.dimensions);\n\n      const getFeatures = function() {\n        /** @type {olx.format.WFSWriteGetFeatureOptions} */\n        const options = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (olObj.assign({\n          maxFeatures: this.limit_\n        }, getFeatureOptions));\n        const featureRequestXml = wfsFormat.writeGetFeature(options);\n        const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n\n        const canceler = this.registerCanceler_();\n        this.$http_.post(url, featureRequest, {params: params, timeout: canceler.promise})\n          .then((response) => {\n            item['resultSource'].pending = false;\n            const features = [];\n            sourceFormat.readFeatures(response.data).forEach((feature) => {\n              goog.asserts.assert(feature);\n              features.push(feature);\n            });\n            this.setUniqueIds_(features, item.source.id);\n            item['resultSource'].features = features;\n            this.result_.total += features.length;\n            this.updatePendingState_();\n          });\n      }.bind(this);\n\n      if (this.queryCountFirst_) {\n        const getCountOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (olObj.assign({\n          resultType: 'hits'\n        }, getFeatureOptions));\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(featureCountXml);\n\n        const canceler = this.registerCanceler_();\n        this.$http_.post(url, featureCountRequest, {timeout: canceler.promise})\n          .then((response) => {\n            const meta = sourceFormat.readFeatureCollectionMetadata(response.data);\n            if (meta['numberOfFeatures'] > this.limit_) {\n              item['resultSource'].pending = false;\n              item['resultSource'].features = [];\n              item['resultSource'].tooManyResults = true;\n              item['resultSource'].totalFeatureCount = meta['numberOfFeatures'];\n              this.updatePendingState_();\n            } else {\n              getFeatures();\n            }\n          });\n      } else {\n        getFeatures();\n      }\n    });\n  });\n};\n\n/**\n * Clear every features for all result sources and reset the total counter\n * as well.\n * @private\n */\nexports.prototype.clearResult_ = function() {\n  this.result_.total = 0;\n  this.result_.sources.forEach((source) => {\n    source.features.length = 0;\n    source.pending = false;\n    source.queried = false;\n    source.tooManyResults = false;\n    source.totalFeatureCount = undefined;\n  }, this);\n  this.result_.pending = false;\n};\n\n\n/**\n * Returns the source ids from an ol3 layer object.\n * @param {ol.layer.Base} layer The ol3 layer object.\n * @return {Array.<number|string>} ids The ids of the sources bound to that\n *     layer.\n * @private\n */\nexports.prototype.getLayerSourceIds_ = function(layer) {\n  const ids = layer.get(this.sourceIdsProperty_) || [];\n  goog.asserts.assertArray(ids);\n  const clone = ids.slice();\n  return clone;\n};\n\n\n/**\n * @param {!ngeo.query.Service.QueryCacheItem} item Cache item\n * @param {number} resolution returns the layers visible at this resolution.\n * @return {!Array.<string>} Layer names\n * @private\n */\nexports.prototype.getLayersForItem_ = function(item, resolution) {\n  if (item.source.getLayers) {\n    return item.source.getLayers(resolution);\n  } else {\n    goog.asserts.assert(item.source.layers);\n    return item.source.layers;\n  }\n};\n\n\n/**\n * @param {!Array.<!ngeo.query.Service.QueryCacheItem>} items Cache items\n * @param {number} resolution returns the layers visible at this resolution.\n * @return {!Array.<string>} Layer names\n * @private\n */\nexports.prototype.getLayersForItems_ = function(items, resolution) {\n  let layers = this.getLayersForItem_(items[0], resolution);\n  for (let i = 1, len = items.length; i < len; i++) {\n    layers = layers.concat(this.getLayersForItem_(items[i], resolution));\n  }\n  return layers;\n};\n\n\n/**\n * Make sure that feature ids are unique, because the same features might\n * be returned for different layers.\n * @param {!Array.<!ol.Feature>} features Features\n * @param {string|number} sourceId Source id.\n * @private\n */\nexports.prototype.setUniqueIds_ = function(features, sourceId) {\n  features.forEach((feature) => {\n    if (feature.getId() !== undefined) {\n      const id = `${sourceId}_${feature.getId()}`;\n      feature.setId(id);\n    }\n  });\n};\n\n\n/**\n * Construct a bbox around a coordinate with a tolerance relative to the\n * current resolution.\n * @param {ol.Coordinate} coordinate Coordinate\n * @param {ol.View} view View\n * @return {ol.Extent} Bbox\n * @private\n */\nexports.prototype.getQueryBbox_ = function(coordinate, view) {\n  const tolerance = this.tolerancePx_ * view.getResolution() * olHas.DEVICE_PIXEL_RATIO;\n\n  return olExtent.buffer(\n    olExtent.createOrUpdateFromCoordinate(coordinate),\n    tolerance);\n};\n\n\n/**\n * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n *    HTTP request.\n * @private\n */\nexports.prototype.registerCanceler_ = function() {\n  const canceler = this.$q_.defer();\n  this.requestCancelers_.push(canceler);\n  return canceler;\n};\n\n\n/**\n * @private\n */\nexports.prototype.cancelStillRunningRequests_ = function() {\n  this.requestCancelers_.forEach((canceler) => {\n    canceler.resolve();\n  });\n  this.requestCancelers_.length = 0;\n};\n\n\nexports.prototype.updatePendingState_ = function() {\n  let pendingSources = 0;\n  this.result_.sources.forEach((source) => {\n    if (source.pending) {\n      pendingSources++;\n    }\n  });\n  this.result_.pending = pendingSources > 0;\n};\n\n\n/**\n * @returns {number} The maximum number of features that are requested.\n * @public\n */\nexports.prototype.getLimit = function() {\n  return this.limit_;\n};\n\n/**\n * @enum {string}\n */\nexports.QueryInfoFormatType = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\n/**\n * @typedef {{\n *     resultSource: (ngeox.QueryResultSource),\n *     source: (ngeox.QuerySource)\n * }}\n */\nexports.QueryCacheItem;\n\n\n/**\n * @typedef {{\n *     wms: (Object.<string, Array.<ngeo.query.Service.QueryCacheItem>>),\n *     wfs: (Object.<string, Array.<ngeo.query.Service.QueryCacheItem>>)\n * }}\n */\nexports.QueryableSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuery', []);\nexports.module.service('ngeoQuery', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/query/Service.js","/**\n * @module ngeo.query.bboxQueryComponent\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olInteractionDragBox from 'ol/interaction/DragBox.js';\nimport olEventsCondition from 'ol/events/condition.js';\n\nconst exports = angular.module('ngeoBboxQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a \"bbox query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, drawing a bbox while CTRL or the 'meta' key is pressed\n * issues a request to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-bbox-query=\"\"\n *        ngeo-bbox-query-map=\"::ctrl.map\"\n *        ngeo-bbox-query-limit=\"50\"\n *        ngeo-bbox-query-active=\"ctrl.queryActive\">\n *        ngeo-bbox-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See the live example: [../examples/bboxquery.html](../examples/bboxquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @return {angular.Directive} The Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBboxQuery\n */\nexports.directive_ = function(ngeoMapQuerent) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      /**\n       * @type {ol.Map}\n       */\n      const map = scope.$eval(attrs['ngeoBboxQueryMap']);\n\n      const interaction = new olInteractionDragBox({\n        condition: olEventsCondition.platformModifierKeyOnly\n      });\n\n      /**\n       * Called when a bbox is drawn while this controller is active. Issue\n       * a request to the query service using the extent that was drawn.\n       * @param {ol.interaction.DragBox.Event} evt Event.\n       */\n      const handleBoxEnd = function(evt) {\n        const extent = interaction.getGeometry().getExtent();\n        ngeoMapQuerent.issue({\n          limit: scope.$eval(attrs['ngeoBboxQueryLimit']),\n          extent: extent,\n          map: map\n        });\n      };\n      interaction.on('boxend', handleBoxEnd);\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoBboxQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            // activate\n            map.addInteraction(interaction);\n          } else {\n            // deactivate\n            map.removeInteraction(interaction);\n            if (scope.$eval(attrs['ngeoBboxQueryAutoclear']) !== false) {\n              ngeoMapQuerent.clear();\n            }\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoBboxQuery', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/query/bboxQueryComponent.js"],"sourceRoot":""}