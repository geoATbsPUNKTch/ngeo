{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./src/utils.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/misc/decorate.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/CustomEvent.js","webpack:///./src/misc/debounce.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/statemanager/Location.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./examples/permalink.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/map/resizemap.js","webpack:///./src/statemanager/module.js","webpack:///./src/statemanager/Service.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js"],"names":["__webpack_exports__","__webpack_require__","exports","geometry","multiGeom","_MultiPoint2","default","appendPoint","_MultiLineString2","appendLineString","_MultiPolygon2","appendPolygon","navigator","userAgent","indexOf","hex","length","rgb","r","g","b","Error","colorZeroPadding","toString","queryString","queryData","pairs","substring","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","pair","value","indexOfEquals","name","decodeURIComponent","err","return","queryItem","key","push","encodeURIComponent","join","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","interaction","_asserts2","assertInstanceof","_Interaction2","Object","defineProperty","get","getActive","set","val","setActive","layer","_Base2","configurable","getVisible","setVisible","getOpacity","setOpacity","$scope","source","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","parent","decrementLoadCount_","decrement_","getLayers","on","olEvent","element","getSource","fail","$applyAsync","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","call","this","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","ol","prototype","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","forEach","unlistenByKey","ol_Image","ImageWMS","opt_options","options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","x","Math","floor","y","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","listen","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","axisOrientation","getAxisOrientation","bbox","substr","uri","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","olBase","_Event","type","detail","arguments","_Event2","inherits","_index","angular","module","_index2","requires","factory_","$timeout","func","wait","invokeApply","timeout","_len","args","Array","_key","context","cancel","apply","factory","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","i","res","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","_Collection2","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","location","history","history_","schema_","protocol","domain_","hostname","port_","port","parseInt","path_","pathname","queryData_","_utils2","decodeQueryString","search","fragment_","replaceState","error","getPath","getUriString","out","String","charAt","encodedQueryData","encodeQueryString","encodedFragment","hasParam","hasFragmentParam","getParam","getFragmentParam","getParamAsInt","goog","assertString","valueAsInt","isNaN","getParamAsFloat","valueAsFloat","parseFloat","getFragmentParamAsInt","getParamKeys","keys","getFragmentParamKeys","getParamKeysWithPrefix","prefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteParam","deleteFragmentParam","refresh","setPath","path","LocationFactory","$rootScope","$window","service","lastUri","$watch","newUri","$evalAsync","$broadcast","MockProvider","$locationProvider","absUrl","opt_path","host","replace","opt_search","opt_paramValue","opt_url","olObj","featureUidToGroupIndex_","groups_","source_","_Vector4","useSpatialIndex","layer_","_Vector2","style","styleFunction_","bind","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","assert","featureUid","getUid","features","removeFeature","clear","group","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","map","setMap","setStyle","createFunction","defaultMessage","defaultArgs","givenMessage","givenArgs","message","e","AssertionError","errorHandler_","errorHandler","ENABLE_ASSERTS","condition","opt_message","var_args","doAssertFailure_","slice","isNumber","typeOf","isString","isFunction","isObject","isArray","isBoolean","nodeType","dom","NodeType","ELEMENT","getType_","Function","displayName","constructor","_typeof","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","item","mapUid","previous","setAt","removeAt","insertAt","event","_CustomEvent2","current","dispatchEvent","updateDimensions","dimensions","baseBgLayer","layers","getArray","_Layer2","hasUpdates","updatedDimensions","_SyncDataSourcesMap2","directive_","ngeoSyncDataSourcesMap","restrict","link","scope","attrs","prop","$eval","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","_events2","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","view","getView","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","evt","target","_View2","_this","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","_DataSources2","manager","index","manager_","features_","index_","setFeatures","unlisten","handleFeatureAdd_","handleFeatureRemove_","$element","$attrs","mapExpr","recenter","attr","getSize","fit","zoom","setZoom","$","selected","selectedIndex","app","ngeo","_module2","_debounce2","_module4","mapComponent","controller","bindings","template","component","MapComponentController","ngeoLocation","ngeoDebounce","ngeoLocation_","ngeoDebounce_","$onInit","setCenter","z","getCenter","getZoom","drawComponent","DrawComponentController","scope_","featureSeq_","_this2","vectorSource","_Draw2","addInteraction","_decorate2","fhFormat","_FeatureHash2","stroke","_Stroke2","color","width","getFeatures","encodedFeatures","writeFeatures","readFeatures","addFeatures","clearLayer","MainController","_Tile2","_OSM2","vectorLayer","olColor","format","FeatureHashStyleType","LINE_STRING","POINT","POLYGON","FeatureHashStyleTypes_","LineString","Point","Polygon","MultiLineString","MultiPoint","MultiPolygon","FeatureHashLegacyProperties_","_TextFeature2","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","propertiesType","readFeature","readGeometry","writeFeature","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","styles","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","radius","getRadius","encodeStyleFill_","opt_propertyName","propertyName","fillColor","getColor","fillColorRgba","asArray","fillColorHex","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","flatCoordinates","decodeCoordinates_","lineString","_LineString2","setFlatCoordinates","_GeometryLayout2","XY","readMultiLineStringGeometry_","ends","lineStrings","ii","multiLineString","readPointGeometry_","point","_Point2","readMultiPointGeometry_","multiPoint","readPolygonGeometry_","rings","end","polygon","_Polygon2","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","_Fill2","_Circle2","fill","_Text2","setStyleProperties_","getGeometry","FeatureProperties","IS_TEXT","clone","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","array","includes","parts","keyVal","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","shift","result","dx","dy","encodedCoordinates","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","_Feature2","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","Feature","transformWithOptions","stateExpr","animationDelayKey","animationDelay","newVal","oldVal","cancelAnimationFrame","_Location2","_Service2","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","filter","_loop","some","keyRegexp","match","window","localStorage","console","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","updateState","object","RegExp","olArray","templateUrl","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","newLength","Number","sort","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","__WEBPACK_IMPORTED_MODULE_9__math_js__","coordinates","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","setCoordinates","__WEBPACK_IMPORTED_MODULE_0__index_js__","__WEBPACK_IMPORTED_MODULE_1__array_js__","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","squaredDistance","getCoordinates","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","points","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_POINT","intersectsExtent","setLayout","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","setFlatCoordinatesInternal","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","ends_","maxDelta_","maxDeltaRevision_","sqrt","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","m","opt_extrapolate","opt_interpolate","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","MULTI_LINE_STRING","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","multiPolygon","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","DrawEventType","Draw","Pointer","handleDownEvent","handleDownEvent_","handleEvent","handleUpEvent","handleUpEvent_","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","maxPoints_","maxPoints","Infinity","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","CIRCLE","opt_geometry","circle","Circle","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","concat","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","getDefaultStyleFunction","geometryName_","geometryName","condition_","noModifierKeys","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","ol_Object","getChangeEventType","Property","ACTIVE","updateState_","Style","createDefaultEditing","originalEvent","CONTEXTMENU","preventDefault","move","MapBrowserEventType","POINTERMOVE","pass","POINTERDRAG","pixel","clearTimeout","addToDrawing_","POINTERDOWN","handlePointerMove_","pointerEvent","pointerType","MouseSource","POINTER_TYPE","DBLCLICK","startDrawing_","setTimeout","MapBrowserPointerEvent","frameState","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","getPixelFromCoordinate","updateSketchFeatures_","setGeometryName","setGeometry","Event","last","sketchLineGeom","ring","getLinearRing","pop","removeLastPoint","splice","sketchFeature","extend","shouldStopEvent","sketchFeatures","overlaySource","getMap","active","createRegularPolygon","opt_sides","opt_angle","angle","atan","createBox","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","delta","getRadiusSquared_","computeExtent","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","circleExtent","intersectsCoordinate","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","setRadius","transform","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","placement","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding"],"mappings":"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","file":"permalink.min.js","sourcesContent":["/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.utils\n*/\nconst exports = {};\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.misc.decorate\n*/\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ngeo.misc.debounce\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n *//* @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.value('ngeoDataSources', new olCollection());\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.statemanager.Location\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n *//* @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n *//* @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/* eslint valid-jsdoc: 0, prefer-rest-params: 0,  */\n// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Utilities to check the preconditions, postconditions and\n * invariants runtime.\n *\n * Methods in this package should be given special treatment by the compiler\n * for type-inference. For example, <code>goog.asserts.assert(foo)</code>\n * will restrict <code>foo</code> to a truthy value.\n *\n * The compiler has an option to disable asserts. So code like:\n * <code>\n * var x = goog.asserts.assert(foo()); goog.asserts.assert(bar());\n * </code>\n * will be transformed into:\n * <code>\n * var x = foo();\n * </code>\n * The compiler will leave in foo() (because its return value is used),\n * but it will remove bar() because it assumes it does not have side-effects.\n *\n * @author agrieve@google.com (Andrew Grieve)\n */\n\nconst exports = {};\n\n/**\n * Throws an exception with the given message and \"Assertion failed\" prefixed\n * onto it.\n * @param {string} defaultMessage The message to use if givenMessage is empty.\n * @param {Array<*>} defaultArgs The substitution arguments for defaultMessage.\n * @param {string|undefined} givenMessage Message supplied by the caller.\n * @param {Array<*>} givenArgs The substitution arguments for givenMessage.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n * @private\n */\nexports.doAssertFailure_ = function(\n  defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  let message = 'Assertion failed';\n  let args;\n  if (givenMessage) {\n    message += `: ${givenMessage}`;\n    args = givenArgs;\n  } else if (defaultMessage) {\n    message += `: ${defaultMessage}`;\n    args = defaultArgs;\n  }\n  // The '' + works around an Opera 10 bug in the unit tests. Without it,\n  // a stack trace is added to var message above. With this, a stack trace is\n  // not added until this line (it causes the extra garbage to be added after\n  // the assertion message instead of in the middle of it).\n  const e = new exports.AssertionError(`${message}`, args || []);\n  exports.errorHandler_(e);\n};\n\n\n/**\n * Sets a custom error handler that can be used to customize the behavior of\n * assertion failures, for example by turning all assertion failures into log\n * messages.\n * @param {function(!goog.asserts.AssertionError)} errorHandler\n */\nexports.setErrorHandler = function(errorHandler) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_ = errorHandler;\n  }\n};\n\n\n/**\n * Checks if the condition evaluates to true if goog.asserts.ENABLE_ASSERTS is\n * true.\n * @template T\n * @param {T} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {T} The value of the condition.\n * @throws {goog.asserts.AssertionError} When the condition evaluates to false.\n */\nexports.assert = function(condition, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !condition) {\n    exports.doAssertFailure_(\n      '', null, opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return condition;\n};\n\n\n/**\n * Fails if goog.asserts.ENABLE_ASSERTS is true. This function is useful in case\n * when we want to add a check in the unreachable area like switch-case\n * statement:\n *\n * <pre>\n *  switch(type) {\n *    case FOO: doSomething(); break;\n *    case BAR: doSomethingElse(); break;\n *    default: goog.asserts.fail('Unrecognized type: ' + type);\n *      // We have only 2 types - \"default:\" section is unreachable code.\n *  }\n * </pre>\n *\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} Failure.\n */\nexports.fail = function(opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_(\n      new exports.AssertionError(\n        `Failure${opt_message ? `: ${opt_message}` : ''}`,\n        Array.prototype.slice.call(arguments, 1)));\n  }\n};\n\n\n/**\n * Checks if the value is a number if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {number} The value, guaranteed to be a number when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n */\nexports.assertNumber = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isNumber(value)) {\n    exports.doAssertFailure_(\n      'Expected number but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n\n/**\n * Checks if the value is a string if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {string} The value, guaranteed to be a string when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a string.\n */\nexports.assertString = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isString(value)) {\n    exports.doAssertFailure_(\n      'Expected string but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {string} */ (value);\n};\n\n\n/**\n * Checks if the value is a function if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Function} The value, guaranteed to be a function when asserts\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a function.\n */\nexports.assertFunction = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isFunction(value)) {\n    exports.doAssertFailure_(\n      'Expected function but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Function} */ (value);\n};\n\n\n/**\n * Checks if the value is an Object if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Object} The value, guaranteed to be a non-null object.\n * @throws {goog.asserts.AssertionError} When the value is not an object.\n */\nexports.assertObject = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isObject(value)) {\n    exports.doAssertFailure_(\n      'Expected object but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Object} */ (value);\n};\n\n\n/**\n * Checks if the value is an Array if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Array<?>} The value, guaranteed to be a non-null array.\n * @throws {goog.asserts.AssertionError} When the value is not an array.\n */\nexports.assertArray = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isArray(value)) {\n    exports.doAssertFailure_(\n      'Expected array but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Array<?>} */ (value);\n};\n\n\n/**\n * Checks if the value is a boolean if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {boolean} The value, guaranteed to be a boolean when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a boolean.\n */\nexports.assertBoolean = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isBoolean(value)) {\n    exports.doAssertFailure_(\n      'Expected boolean but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {boolean} */ (value);\n};\n\n\n/**\n * Checks if the value is a DOM Element if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Element} The value, likely to be a DOM Element when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not an Element.\n */\nexports.assertElement = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS &&\n      (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {\n    exports.doAssertFailure_(\n      'Expected Element but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Element} */ (value);\n};\n\n\n/**\n * Checks if the value is an instance of the user-defined type if\n * goog.asserts.ENABLE_ASSERTS is true.\n *\n * The compiler may tighten the type returned by this function.\n *\n * @param {?} value The value to check.\n * @param {function(new: T, ...)} type A user-defined constructor.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} When the value is not an instance of\n *     type.\n * @return {T}\n * @template T\n */\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !(value instanceof type)) {\n    exports.doAssertFailure_(\n      'Expected instanceof %s but got %s.',\n      [exports.getType_(type), exports.getType_(value)],\n      opt_message, Array.prototype.slice.call(arguments, 3));\n  }\n  return value;\n};\n\n\n/**\n * Checks that no enumerable keys are present in Object.prototype. Such keys\n * would break most code that use {@code for (var ... in ...)} loops.\n */\nexports.assertObjectPrototypeIsIntact = function() {\n  for (const key in Object.prototype) {\n    exports.fail(`${key} should not be enumerable in Object.prototype.`);\n  }\n};\n\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n * @param {*} value A constructor, object, or primitive.\n * @return {string} The best display name for the value, or 'unknown type name'.\n * @private\n */\nexports.getType_ = function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || 'unknown type name';\n  } else if (value instanceof Object) {\n    return value.constructor.displayName || value.constructor.name ||\n        Object.prototype.toString.call(value);\n  } else {\n    return value === null ? 'null' : typeof value;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapDirective from 'ngeo/map/directive.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap.js';\n\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', [\n  ngeoDatasourceSyncDataSourcesMap.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\nimport googAsserts from 'goog/asserts.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSyncDataSourcesMap', [\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('ngeoSyncDataSourcesMap', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module app.permalink\n*/\nconst exports = {};\n\nimport './permalink.css';\nimport './common_dependencies.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\n\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport olMap from 'ol/Map.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n\n/** @type {!angular.Module} **/\napp.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name,\n  ngeoMiscDebounce.name,\n  ngeoStatemanagerModule.name,\n]);\n\n/**\n * An application-specific map component that updates the URL in the browser\n * address bar when the map view changes. It also sets the initial view based\n * on the URL query params at init time.\n *\n * This component gets a reference to the map instance through the \"app-map\"\n * attribute.\n *\n * @type {!angular.Component}\n */\napp.mapComponent = {\n  controller: 'AppMapController as ctrl',\n  bindings: {\n    'map': '=appMap'\n  },\n  template: '<div ngeo-map=ctrl.map></div>'\n};\n\n\napp.module.component('appMap', app.mapComponent);\n\n\n/**\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @constructor\n *//* @ngInject\n */\napp.MapComponentController = function(ngeoLocation, ngeoDebounce) {\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n};\n\napp.module.controller('AppMapController', app.MapComponentController);\n\napp.MapComponentController.prototype.$onInit = function() {\n  const view = this.map.getView();\n\n  let zoom = this.ngeoLocation_.getParam('z');\n  zoom = zoom !== undefined ? +zoom : 4;\n\n  const x = this.ngeoLocation_.getParam('x');\n  const y = this.ngeoLocation_.getParam('y');\n  const center = (x !== undefined) && (y !== undefined) ?\n    [+x, +y] : [0, 0];\n\n  view.setCenter(center);\n  view.setZoom(zoom);\n\n  this.ngeoLocation_.updateParams({\n    'z': zoom,\n    'x': Math.round(center[0]),\n    'y': Math.round(center[1])\n  });\n\n  view.on('propertychange',\n    this.ngeoDebounce_(\n      /**\n       * @param {ol.Object.Event} e Object event.\n       */\n      (e) => {\n        const center = view.getCenter();\n        const params = {\n          'z': view.getZoom(),\n          'x': Math.round(center[0]),\n          'y': Math.round(center[1])\n        };\n        this.ngeoLocation_.updateParams(params);\n      }, 300, /* invokeApply */ true));\n};\n\n/**\n * A draw component that adds a simple draw tool.\n *\n * @type {!angular.Component}\n */\napp.drawComponent = {\n  controller: 'AppDrawController as ctrl',\n  bindings: {\n    'map': '=appDrawMap',\n    'layer': '=appDrawLayer'\n  },\n  template:\n      '<label>Enable drawing:' +\n      '<input type=\"checkbox\" ng-model=\"ctrl.interaction.active\" />' +\n      '</label><br>' +\n      '<button ng-click=\"ctrl.clearLayer()\">Clear layer</button>'\n};\n\n\napp.module.component('appDraw', app.drawComponent);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n * @constructor\n * @export\n *//* @ngInject\n */\napp.DrawComponentController = function($scope, ngeoLocation) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {ol.layer.Vector}\n   */\n  this.layer;\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.featureSeq_ = 0;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.interaction;\n};\n\napp.DrawComponentController.prototype.$onInit = function() {\n  const vectorSource = this.layer.getSource();\n\n  this.interaction = new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: vectorSource\n  });\n\n  this.interaction.setActive(false);\n  this.map.addInteraction(this.interaction);\n  ngeoMiscDecorate.interaction(this.interaction);\n\n  this.interaction.on('drawend', function(e) {\n    e.feature.set('id', ++this.featureSeq_);\n  }, this);\n\n  // Deal with the encoding and decoding of features in the URL.\n\n  const fhFormat = new ngeoFormatFeatureHash();\n\n  vectorSource.on('addfeature', (e) => {\n    const feature = e.feature;\n    feature.setStyle(new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: [255, 0, 0, 1],\n        width: 2\n      })\n    }));\n    const features = vectorSource.getFeatures();\n    const encodedFeatures = fhFormat.writeFeatures(features);\n    this.scope_.$applyAsync(() => {\n      this.ngeoLocation_.updateParams({'features': encodedFeatures});\n    });\n  });\n\n  const encodedFeatures = this.ngeoLocation_.getParam('features');\n  if (encodedFeatures !== undefined) {\n    const features = fhFormat.readFeatures(encodedFeatures);\n    this.featureSeq_ = features.length;\n    vectorSource.addFeatures(features);\n  }\n};\n\n\n/**\n * Clear the vector layer.\n * @export\n */\napp.DrawComponentController.prototype.clearLayer = function() {\n  this.layer.getSource().clear(true);\n  this.featureSeq_ = 0;\n  this.ngeoLocation_.deleteParam('features');\n};\n\napp.module.controller('AppDrawController', app.DrawComponentController);\n\n\n/**\n * @constructor\n */\napp.MainController = function() {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ]\n  });\n\n\n  const vectorSource = new olSourceVector();\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer = new olLayerVector({\n    source: vectorSource\n  });\n\n  // Use vectorLayer.setMap(map) rather than map.addLayer(vectorLayer). This\n  // makes the vector layer \"unmanaged\", meaning that it is always on top.\n  this.vectorLayer.setMap(this.map);\n\n};\n\n\napp.module.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/permalink.js","/**\n * @module ngeo.format.FeatureHash\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n\n/**\n * @enum {string}\n */\nngeo.format.FeatureHashStyleType = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nngeo.format.FeatureHashStyleTypes_ = {\n  'LineString': ngeo.format.FeatureHashStyleType.LINE_STRING,\n  'Point': ngeo.format.FeatureHashStyleType.POINT,\n  'Polygon': ngeo.format.FeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeo.format.FeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeo.format.FeatureHashStyleType.POINT,\n  'MultiPolygon': ngeo.format.FeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nngeo.format.FeatureHashLegacyProperties_ = {};\n\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  ngeo.format.FeatureHashLegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nol.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = ngeo.format.FeatureHashStyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeo.format.FeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeo.format.FeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeo.format.FeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeo.FeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (ngeo.format.FeatureHashLegacyProperties_[key]) {\n      clone[ngeo.format.FeatureHashLegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeo.FeatureProperties.ANGLE,\n    ngeo.FeatureProperties.OPACITY,\n    ngeo.FeatureProperties.SIZE,\n    ngeo.FeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeo.FeatureProperties.IS_CIRCLE,\n    ngeo.FeatureProperties.IS_RECTANGLE,\n    ngeo.FeatureProperties.IS_TEXT,\n    ngeo.FeatureProperties.SHOW_MEASURE,\n    ngeo.FeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (ol.array.includes(numProperties, key)) {\n    return +value;\n  } else if (ol.array.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && ngeo.format.FeatureHashLegacyProperties_[key]) {\n          key = ngeo.format.FeatureHashLegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (ol.format.Feature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.statemanager.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ngeo.statemanager.Service\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n *//* @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = _ol_coordinate_.squaredDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  const styles = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == MouseSource.POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      const center = coordinates[0];\n      const end = coordinates[1];\n      const radius = Math.sqrt(\n        _ol_coordinate_.squaredDistance(center, end));\n      const geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      const angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = _ol_geom_flat_deflate_.coordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 81\n// module chunks = 0 1 2 6 7 8 9 11 14","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 99\n// module chunks = 0 1 2 8 10 19 24"],"sourceRoot":""}