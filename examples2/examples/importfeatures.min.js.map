{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./node_modules/openlayers/src/ol/format/KML.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./examples/importfeatures.js","webpack:///./src/misc/filereaderComponent.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js"],"names":["__webpack_exports__","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","__WEBPACK_IMPORTED_MODULE_26__xml_js__","__webpack_require__","KML","opt_options","options","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","call","this","DEFAULT_STYLE_ARRAY_","createStyleDefaults_","defaultDataProjection","Object","__WEBPACK_IMPORTED_MODULE_18__proj_js__","defaultStyle_","defaultStyle","extractStyles_","undefined","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","__WEBPACK_IMPORTED_MODULE_0__index_js__","GX_NAMESPACE_URIS_","NAMESPACE_URIS_","SCHEMA_LOCATION_","DEFAULT_COLOR_","DEFAULT_FILL_STYLE_","__WEBPACK_IMPORTED_MODULE_19__style_Fill_js__","color","DEFAULT_IMAGE_STYLE_ANCHOR_","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_","__WEBPACK_IMPORTED_MODULE_21__style_IconAnchorUnits_js__","PIXELS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_","DEFAULT_IMAGE_STYLE_SIZE_","DEFAULT_IMAGE_STYLE_SRC_","DEFAULT_IMAGE_SCALE_MULTIPLIER_","DEFAULT_IMAGE_STYLE_","__WEBPACK_IMPORTED_MODULE_20__style_Icon_js__","anchor","anchorOrigin","__WEBPACK_IMPORTED_MODULE_22__style_IconOrigin_js__","BOTTOM_LEFT","anchorXUnits","anchorYUnits","crossOrigin","rotation","scale","size","src","DEFAULT_NO_IMAGE_STYLE_","DEFAULT_STROKE_STYLE_","__WEBPACK_IMPORTED_MODULE_23__style_Stroke_js__","width","DEFAULT_TEXT_STROKE_STYLE_","DEFAULT_TEXT_STYLE_","__WEBPACK_IMPORTED_MODULE_25__style_Text_js__","font","fill","stroke","DEFAULT_STYLE_","__WEBPACK_IMPORTED_MODULE_24__style_Style_js__","image","text","zIndex","ICON_ANCHOR_UNITS_MAP_","fraction","FRACTION","pixels","insetPixels","createNameStyleFunction_","foundStyle","name","textStyle","textOffset","textAlign","getImage","imageSize","getImageSize","length","imageScale","getScale","getText","foundText","clone","setFont","getFont","setScale","setFill","getFill","setStroke","getStroke","setText","setOffsetX","setOffsetY","setTextAlign","createFeatureStyleFunction_","style","styleUrl","sharedStyles","resolution","nameStyle","drawName","getGeometry","getType","__WEBPACK_IMPORTED_MODULE_10__geom_GeometryType_js__","POINT","get","concat","findStyle_","styleValue","Array","isArray","readColor_","node","s","getAllTextContent","m","exec","hexColor","parseInt","substr","readFlatCoordinates_","flatCoordinates","re","x","parseFloat","y","z","push","readURI_","trim","baseURI","window","location","href","URL","readVec2_","xunits","getAttribute","yunits","origin","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale_","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","readDecimal","readStyleMapValue_","objectStack","pushParseAndPop","STYLE_MAP_PARSERS_","IconStyleParser_","object","ICON_STYLE_PARSERS_","styleObject","IconObject","drawIcon","keys","hotSpot","offset","test","w","h","heading","__WEBPACK_IMPORTED_MODULE_17__math_js__","imageStyle","offsetOrigin","LabelStyleParser_","LABEL_STYLE_PARSERS_","LineStyleParser_","LINE_STYLE_PARSERS_","strokeStyle","PolyStyleParser_","POLY_STYLE_PARSERS_","fillStyle","outline","readFlatLinearRing_","FLAT_LINEAR_RING_PARSERS_","gxCoordParser_","readGxMultiTrack_","lineStrings","GX_MULTITRACK_GEOMETRY_PARSERS_","multiLineString","__WEBPACK_IMPORTED_MODULE_12__geom_MultiLineString_js__","setLineStrings","readGxTrack_","gxTrackObject","whens","GX_TRACK_PARSERS_","i","ii","Math","min","lineString","__WEBPACK_IMPORTED_MODULE_11__geom_LineString_js__","setFlatCoordinates","__WEBPACK_IMPORTED_MODULE_9__geom_GeometryLayout_js__","XYZM","readIcon_","iconObject","ICON_PARSERS_","readFlatCoordinatesFromNode_","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLineString_","properties","EXTRUDE_AND_ALTITUDE_MODE_PARSERS_","XYZ","setProperties","readLinearRing_","polygon","__WEBPACK_IMPORTED_MODULE_16__geom_Polygon_js__","readMultiGeometry_","geometries","MULTI_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryCollection_js__","multiGeometry","homogeneous","type","geometry","layout","point","getLayout","getFlatCoordinates","__WEBPACK_IMPORTED_MODULE_2__array_js__","__WEBPACK_IMPORTED_MODULE_13__geom_MultiPoint_js__","setCommonGeometryProperties_","LINE_STRING","POLYGON","__WEBPACK_IMPORTED_MODULE_14__geom_MultiPolygon_js__","setPolygons","GEOMETRY_COLLECTION","__WEBPACK_IMPORTED_MODULE_3__asserts_js__","readPoint_","__WEBPACK_IMPORTED_MODULE_15__geom_Point_js__","readPolygon_","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","ends","readStyle_","STYLE_PARSERS_","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","set","DataParser_","parseNode","DATA_PARSERS_","featureObject","value","displayName","ExtendedDataParser_","EXTENDED_DATA_PARSERS_","RegionParser_","REGION_PARSERS_","PairDataParser_","pairObject","PAIR_PARSERS_","key","Style","PlacemarkStyleMapParser_","styleMapValue","placemarkObject","SchemaDataParser_","SCHEMA_DATA_PARSERS_","SimpleDataParser_","data","readString","LatLonAltBoxParser_","LAT_LON_ALT_BOX_PARSERS_","regionObject","extent","LodParser_","LOD_PARSERS_","lodObject","innerBoundaryIsParser_","flatLinearRing","INNER_BOUNDARY_IS_PARSERS_","outerBoundaryIsParser_","OUTER_BOUNDARY_IS_PARSERS_","LinkParser_","LINK_PARSERS_","whenParser_","when","Date","parse","isNaN","makeStructureNS","makeObjectPropertySetter","Data","SchemaData","LatLonAltBox","Lod","altitudeMode","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","extrude","readBoolean","tessellate","coordinates","makeReplacer","innerBoundaryIs","outerBoundaryIs","coord","Icon","LinearRing","LineString","makeArrayPusher","MultiGeometry","Point","Polygon","Track","NETWORK_LINK_PARSERS_","ExtendedData","Region","Link","address","description","open","phoneNumber","visibility","PLACEMARK_PARSERS_","StyleMap","MultiTrack","SimpleData","IconStyle","LabelStyle","LineStyle","PolyStyle","Pair","prototype","readDocumentOrFolder_","parsersNS","Document","makeArrayExtender","Folder","Placemark","readPlacemark_","readSharedStyle_","bind","readSharedStyleMap_","features","feature","__WEBPACK_IMPORTED_MODULE_1__Feature_js__","id","setId","__WEBPACK_IMPORTED_MODULE_5__format_Feature_js__","setGeometry","styleFunction","setStyle","styleUri","readFeature","readFeatureFromNode","namespaceURI","getReadOptions","readFeatures","readFeaturesFromNode","localName","n","firstElementChild","nextElementSibling","fs","readName","source","isDocument","readNameFromDocument","isNode","readNameFromNode","doc","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","obj","readRegion","regions","readRegionFromDocument","readRegionFromNode","readProjection","writeColorTextNode_","rgba","__WEBPACK_IMPORTED_MODULE_4__color_js__","abgr","hex","toString","writeStringTextNode","join","writeCoordinatesTextNode_","context","stride","dimension","d","XY","XYM","writeDataNode_","pair","setAttribute","pushSerializeAndPop","EXTENDEDDATA_NODE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","writeDataNodeName_","writeCDATASection","writeDataNodeValue_","writeDocument_","DOCUMENT_SERIALIZERS_","DOCUMENT_NODE_FACTORY_","writeExtendedData_","namesAndValues","names","values","DATA_NODE_FACTORY_","writeIcon_","icon","parentNode","orderedKeys","ICON_SEQUENCE_","makeSequence","ICON_SERIALIZERS_","GX_NODE_FACTORY_","writeIconStyle_","getSrc","getSize","iconImageSize","iconProperties","getAnchor","getOrigin","getRotation","ICON_STYLE_SEQUENCE_","ICON_STYLE_SERIALIZERS_","writeLabelStyle_","getColor","LABEL_STYLE_SEQUENCE_","LABEL_STYLE_SERIALIZERS_","writeLineStyle_","getWidth","LINE_STYLE_SEQUENCE_","LINE_STYLE_SERIALIZERS_","writeMultiGeometry_","factory","getGeometries","GEOMETRY_NODE_FACTORY_","MULTI_POINT","getPoints","POINT_NODE_FACTORY_","MULTI_LINE_STRING","getLineStrings","LINE_STRING_NODE_FACTORY_","MULTI_POLYGON","getPolygons","POLYGON_NODE_FACTORY_","MULTI_GEOMETRY_SERIALIZERS_","writeBoundaryIs_","linearRing","BOUNDARY_IS_SERIALIZERS_","LINEAR_RING_NODE_FACTORY_","writePlacemark_","getId","getProperties","filter","getGeometryName","sort","v","PLACEMARK_SERIALIZERS_","EXTENDEDDATA_NODE_FACTORY_","getStyleFunction","styles","PLACEMARK_SEQUENCE_","writePrimitiveGeometry_","getStride","PRIMITIVE_GEOMETRY_SEQUENCE_","PRIMITIVE_GEOMETRY_SERIALIZERS_","writePolygon_","linearRings","getLinearRings","outerRing","shift","POLYGON_SERIALIZERS_","INNER_BOUNDARY_NODE_FACTORY_","OUTER_BOUNDARY_NODE_FACTORY_","writePolyStyle_","POLY_STYLE_SERIALIZERS_","COLOR_NODE_FACTORY_","writeScaleTextNode_","writeDecimalTextNode","round","writeStyle_","STYLE_SEQUENCE_","STYLE_SERIALIZERS_","writeVec2_","vec2","KML_SEQUENCE_","KML_SERIALIZERS_","makeChildAppender","GEOMETRY_TYPE_TO_NODENAME_","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","writeBooleanTextNode","opt_nodeName","createElementNS","makeSimpleNodeFactory","writeFeatures","writeFeaturesNode","adaptOptions","kml","xmlnsUri","xmlSchemaInstanceUri","setAttributeNS","_ol_Image_","pixelRatio","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","ol","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","forEach","unlistenByKey","ol_Image","ImageWMS","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","floor","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","listen","CHANGE","handleImageChange","getImageLoadFunction","asserts","getCode","WMSServerType","dpi","axisOrientation","getAxisOrientation","bbox","uri","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","olBase","_Event","exports","detail","arguments","_Event2","default","inherits","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","res","fixedTileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__string_js__","module","angular","_Collection2","_index2","requires","_index","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","olObj","featureUidToGroupIndex_","groups_","source_","_Vector4","useSpatialIndex","layer_","_Vector2","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","_asserts2","assert","featureUid","getUid","removeFeature","clear","group","isEmpty","getLayer","getFeatureOverlay","_Style2","defaultFunction","_FeatureOverlay2","init","map","setMap","createFunction","service","defaultMessage","defaultArgs","givenMessage","givenArgs","message","args","e","AssertionError","errorHandler_","errorHandler","ENABLE_ASSERTS","condition","opt_message","var_args","doAssertFailure_","slice","goog","isNumber","typeOf","isString","isFunction","isObject","isBoolean","dom","NodeType","ELEMENT","getType_","fail","Function","constructor","_typeof","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","getLayers","item","layer","mapUid","previous","setAt","removeAt","insertAt","event","_CustomEvent2","current","dispatchEvent","updateDimensions","dimensions","baseBgLayer","layers","getArray","assertInstanceof","_Layer2","hasUpdates","updatedDimensions","getSource","refresh","olExtent","app","ngeo","_module2","_filereaderComponent2","MainController","$scope","_this","kmlFormat_","_KML2","vectorSource_","_Map2","_Tile2","_OSM2","view","_View2","zoom","fileReaderSupported","fileContent","$watch","importKml_","vectorSource","featureProjection","addFeatures","mapSize","getView","fit","controller","component_","$window","restrict","scope","supported","link","element","attrs","on","changeEvent","fileReader","FileReader","onload","evt","$apply","target","result","readAsText","files","directive","_SyncDataSourcesMap2","directive_","ngeoSyncDataSourcesMap","prop","$eval","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","_events2","start","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","_DataSources2","manager","index","manager_","features_","index_","setFeatures","unlisten","handleFeatureAdd_","handleFeatureRemove_","$element","$attrs","mapExpr","recenter","attr","setZoom","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","newVal","oldVal","cancelAnimationFrame","olArray","templateUrl","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","newLength","Number","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","_this2","$applyAsync","__WEBPACK_IMPORTED_MODULE_9__math_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","setCoordinates","appendPoint","__WEBPACK_IMPORTED_MODULE_1__array_js__","multiPoint","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","j","squaredDistance","getCoordinates","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","points","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","intersectsExtent","setLayout","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","setFlatCoordinatesInternal","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","ends_","maxDelta_","maxDeltaRevision_","appendLineString","sqrt","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","len","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","endss","polygons","jj","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","__WEBPACK_IMPORTED_MODULE_6__obj_js__","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getGeometriesArray","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","rotate","angle","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","__WEBPACK_IMPORTED_MODULE_0__xml_js__","readBooleanString","readDateTime","dateTime","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","bool","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","XMLSerializer","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","readFeatureFromDocument","readFeaturesFromDocument","readGeometry","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeature","writeFeatureNode","serializeToString","writeGeometry","writeGeometryNode","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","placement","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotateWithView","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setMaxAngle","setPlacement","setRotation","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding"],"mappings":"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","file":"importfeatures.min.js","sourcesContent":["/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.KMLOptions=} opt_options Options.\n * @api\n */\nconst KML = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!KML.DEFAULT_STYLE_ARRAY_) {\n    KML.createStyleDefaults_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : KML.DEFAULT_STYLE_ARRAY_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {Object.<string, (Array.<ol.style.Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.GX_NAMESPACE_URIS_ = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.NAMESPACE_URIS_ = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nKML.SCHEMA_LOCATION_ = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @return {Array.<ol.style.Style>} Default style.\n * @private\n */\nKML.createStyleDefaults_ = function() {\n  /**\n   * @const\n   * @type {ol.Color}\n   * @private\n   */\n  KML.DEFAULT_COLOR_ = [255, 255, 255, 1];\n\n  /**\n   * @const\n   * @type {ol.style.Fill}\n   * @private\n   */\n  KML.DEFAULT_FILL_STYLE_ = new Fill({\n    color: KML.DEFAULT_COLOR_\n  });\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_ = [20, 2]; // FIXME maybe [8, 32] ?\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SIZE_ = [64, 64];\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SRC_ =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_ = 0.5;\n\n  /**\n   * @const\n   * @type {ol.style.Image}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ = new Icon({\n    anchor: KML.DEFAULT_IMAGE_STYLE_ANCHOR_,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_,\n    anchorYUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_,\n    size: KML.DEFAULT_IMAGE_STYLE_SIZE_,\n    src: KML.DEFAULT_IMAGE_STYLE_SRC_\n  });\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_NO_IMAGE_STYLE_ = 'NO_IMAGE';\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_STROKE_STYLE_ = new Stroke({\n    color: KML.DEFAULT_COLOR_,\n    width: 1\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STROKE_STYLE_ = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Text}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STYLE_ = new Text({\n    font: 'bold 16px Helvetica',\n    fill: KML.DEFAULT_FILL_STYLE_,\n    stroke: KML.DEFAULT_TEXT_STROKE_STYLE_,\n    scale: 0.8\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Style}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ = new Style({\n    fill: KML.DEFAULT_FILL_STYLE_,\n    image: KML.DEFAULT_IMAGE_STYLE_,\n    text: KML.DEFAULT_TEXT_STYLE_,\n    stroke: KML.DEFAULT_STROKE_STYLE_,\n    zIndex: 0\n  });\n\n  /**\n   * @const\n   * @type {Array.<ol.style.Style>}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ARRAY_ = [KML.DEFAULT_STYLE_];\n\n  return KML.DEFAULT_STYLE_ARRAY_;\n};\n\n\n/**\n * @const\n * @type {Object.<string, ol.style.IconAnchorUnits>}\n * @private\n */\nKML.ICON_ANCHOR_UNITS_MAP_ = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {ol.style.Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {ol.style.Style} style Style.\n * @private\n */\nKML.createNameStyleFunction_ = function(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || KML.DEFAULT_TEXT_STYLE_.getFont());\n    textStyle.setScale(foundText.getScale() || KML.DEFAULT_TEXT_STYLE_.getScale());\n    textStyle.setFill(foundText.getFill() || KML.DEFAULT_TEXT_STYLE_.getFill());\n    textStyle.setStroke(foundText.getStroke() || KML.DEFAULT_TEXT_STROKE_STYLE_);\n  } else {\n    textStyle = KML.DEFAULT_TEXT_STYLE_.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles Shared\n *          styles.\n * @param {boolean|undefined} showPointNames true to show names for point\n *          placemarks.\n * @return {ol.FeatureStyleFunction} Feature style function.\n * @private\n */\nKML.createFeatureStyleFunction_ = function(style, styleUrl,\n  defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n         * @param {number} resolution Resolution.\n         * @return {Array.<ol.style.Style>} Style.\n         * @this {ol.Feature}\n         */\n    function(resolution) {\n      let drawName = showPointNames;\n      /** @type {ol.style.Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        if (this.getGeometry()) {\n          drawName = (this.getGeometry().getType() ===\n                        GeometryType.POINT);\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (this.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(style[0],\n            name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = KML.findStyle_(styleUrl, defaultStyle,\n          sharedStyles);\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(foundStyle[0],\n            name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = KML.createNameStyleFunction_(defaultStyle[0],\n          name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|string|undefined} styleValue Style value.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<ol.style.Style>} Style.\n * @private\n */\nKML.findStyle_ = function(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return KML.findStyle_(\n      sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.Color|undefined} Color.\n */\nKML.readColor_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nKML.readFlatCoordinates_ = function(node) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {string} URI.\n */\nKML.readURI_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.KMLVec2_} Vec2.\n */\nKML.readVec2_ = function(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: KML.ICON_ANCHOR_UNITS_MAP_[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: KML.ICON_ANCHOR_UNITS_MAP_[yunits],\n    origin: origin\n  };\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {number|undefined} Scale.\n */\nKML.readScale_ = function(node) {\n  return XSD.readDecimal(node);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>|string|undefined} StyleMap.\n */\nKML.readStyleMapValue_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(undefined,\n    KML.STYLE_MAP_PARSERS_, node, objectStack);\n};\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.IconStyleParser_ = function(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = KML.DEFAULT_IMAGE_STYLE_SRC_;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {ol.KMLVec2_|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === KML.DEFAULT_IMAGE_STYLE_SRC_) {\n    anchor = KML.DEFAULT_IMAGE_STYLE_ANCHOR_;\n    anchorXUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_;\n    anchorYUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == KML.DEFAULT_IMAGE_STYLE_SRC_) {\n      size = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n      if (scale === undefined) {\n        scale = KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = KML.DEFAULT_NO_IMAGE_STYLE_;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LabelStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LABEL_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {ol.Color} */\n          ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LineStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LINE_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PolyStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.POLY_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline =\n      /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nKML.readFlatLinearRing_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.FLAT_LINEAR_RING_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.gxCoordParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nKML.readGxMultiTrack_ = function(node, objectStack) {\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    KML.GX_MULTITRACK_GEOMETRY_PARSERS_, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readGxTrack_ = function(node, objectStack) {\n  const gxTrackObject = _ol_xml_.pushParseAndPop(\n    /** @type {ol.KMLGxTrackObject_} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), KML.GX_TRACK_PARSERS_, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  let i, ii;\n  for (i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii;\n    ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object} Icon object.\n */\nKML.readIcon_ = function(node, objectStack) {\n  const iconObject = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_PARSERS_, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nKML.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readLineString_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readLinearRing_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n      [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\nKML.readMultiGeometry_ = function(node, objectStack) {\n  const geometries = _ol_xml_.pushParseAndPop([],\n    KML.MULTI_GEOMETRY_PARSERS_, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {ol.geom.Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry, i, ii;\n  for (i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {ol.geom.Geometry} */ (multiGeometry);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Point|undefined} Point.\n */\nKML.readPoint_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readPolygon_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    KML.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>} Style.\n */\nKML.readStyle_ = function(node, objectStack) {\n  const styleObject = _ol_xml_.pushParseAndPop(\n    {}, KML.STYLE_PARSERS_, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {ol.style.Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : KML.DEFAULT_FILL_STYLE_);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {ol.style.Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : KML.DEFAULT_IMAGE_STYLE_);\n  if (imageStyle == KML.DEFAULT_NO_IMAGE_STYLE_) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {ol.style.Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : KML.DEFAULT_TEXT_STYLE_);\n  let strokeStyle = /** @type {ol.style.Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : KML.DEFAULT_STROKE_STYLE_);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n};\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {ol.geom.MultiPoint|ol.geom.MultiLineString|ol.geom.MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<ol.geom.Geometry>} geometries List of geometries.\n * @private\n */\nKML.setCommonGeometryProperties_ = function(multiGeometry,\n  geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let geometry, i, hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (i = 0; i < ii; ++i) {\n    geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.DataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  _ol_xml_.parseNode(KML.DATA_PARSERS_, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.ExtendedDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.EXTENDED_DATA_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.RegionParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.REGION_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PairDataParser_ = function(node, objectStack) {\n  const pairObject = _ol_xml_.pushParseAndPop(\n    {}, KML.PAIR_PARSERS_, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {ol.style.Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PlacemarkStyleMapParser_ = function(node, objectStack) {\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SchemaDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.SCHEMA_DATA_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SimpleDataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = XSD.readString(node);\n    const featureObject =\n        /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LatLonAltBoxParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LAT_LON_ALT_BOX_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LodParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LOD_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.INNER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.OUTER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LinkParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.LINK_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.whenParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'displayName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'value': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTENDED_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': KML.DataParser_,\n    'SchemaData': KML.SchemaDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.REGION_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LatLonAltBox': KML.LatLonAltBoxParser_,\n    'Lod': KML.LodParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LAT_LON_ALT_BOX_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'minAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'north': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'south': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'east': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'west': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'minLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'minFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'tessellate': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RING_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RINGS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'innerBoundaryIs': KML.innerBoundaryIsParser_,\n    'outerBoundaryIs': KML.outerBoundaryIsParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_TRACK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'when': KML.whenParser_\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'coord': KML.gxCoordParser_\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GEOMETRY_FLAT_COORDINATES_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'y': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'w': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'h': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeObjectPropertySetter(KML.readIcon_),\n    'heading': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'hotSpot': _ol_xml_.makeObjectPropertySetter(KML.readVec2_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.INNER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LABEL_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINE_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'width': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.MULTI_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeArrayPusher(KML.readLineString_),\n    'LinearRing': _ol_xml_.makeArrayPusher(KML.readLinearRing_),\n    'MultiGeometry': _ol_xml_.makeArrayPusher(KML.readMultiGeometry_),\n    'Point': _ol_xml_.makeArrayPusher(KML.readPoint_),\n    'Polygon': _ol_xml_.makeArrayPusher(KML.readPolygon_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_MULTITRACK_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.GX_NAMESPACE_URIS_, {\n    'Track': _ol_xml_.makeArrayPusher(KML.readGxTrack_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.NETWORK_LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'Link': KML.LinkParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.OUTER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PAIR_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'key': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PLACEMARK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'MultiGeometry': _ol_xml_.makeObjectPropertySetter(\n      KML.readMultiGeometry_, 'geometry'),\n    'LineString': _ol_xml_.makeObjectPropertySetter(\n      KML.readLineString_, 'geometry'),\n    'LinearRing': _ol_xml_.makeObjectPropertySetter(\n      KML.readLinearRing_, 'geometry'),\n    'Point': _ol_xml_.makeObjectPropertySetter(\n      KML.readPoint_, 'geometry'),\n    'Polygon': _ol_xml_.makeObjectPropertySetter(\n      KML.readPolygon_, 'geometry'),\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'StyleMap': KML.PlacemarkStyleMapParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'MultiTrack': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxMultiTrack_, 'geometry'),\n      'Track': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxTrack_, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.POLY_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'fill': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'outline': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.SCHEMA_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'SimpleData': KML.SimpleDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': KML.IconStyleParser_,\n    'LabelStyle': KML.LabelStyleParser_,\n    'LineStyle': KML.LineStyleParser_,\n    'PolyStyle': KML.PolyStyleParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_MAP_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Pair': KML.PairDataParser_\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  const parsersNS = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Document': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': _ol_xml_.makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n  /** @type {Array.<ol.Feature>} */\n  const features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({'geometry': null},\n    KML.PLACEMARK_PARSERS_, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  const feature = new Feature();\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n\n  const geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    const style = object['Style'];\n    const styleUrl = object['styleUrl'];\n    const styleFunction = KML.createFeatureStyleFunction_(\n      style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n      this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    const style = KML.readStyle_(node, objectStack);\n    if (style) {\n      let styleUri;\n      let baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        const url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  let styleUri;\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return null;\n  }\n  const feature = this.readPlacemark_(\n    node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return [];\n  }\n  let features;\n  const localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    let n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Souce.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'name') {\n      return XSD.readString(n);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  const networkLinks = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  const networkLinks = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  const networkLinks = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.NETWORK_LINK_PARSERS_,\n        n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  const regions = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  const regions = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  const regions = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'Region') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.REGION_PARSERS_,\n        n, []);\n      regions.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {ol.Color|string} color Color.\n * @private\n */\nKML.writeColorTextNode_ = function(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  let i;\n  for (i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  XSD.writeStringTextNode(node, abgr.join(''));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeCoordinatesTextNode_ = function(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  let d, i;\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  XSD.writeStringTextNode(node, text);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeDataNode_ = function(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n * @private\n */\nKML.writeDataNodeName_ = function(node, name) {\n  XSD.writeCDATASection(node, name);\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n * @private\n */\nKML.writeDataNodeValue_ = function(node, value) {\n  XSD.writeStringTextNode(node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writeDocument_ = function(node, features, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.DOCUMENT_SERIALIZERS_,\n    KML.DOCUMENT_NODE_FACTORY_, features, objectStack, undefined,\n    this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeExtendedData_ = function(node, namesAndValues, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      KML.DATA_NODE_FACTORY_, [{name: names[i], value: values[i]}], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIcon_ = function(node, icon, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = KML.ICON_SEQUENCE_[parentNode.namespaceURI];\n  let values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.ICON_SERIALIZERS_, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      KML.ICON_SEQUENCE_[KML.GX_NAMESPACE_URIS_[0]];\n  values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_SERIALIZERS_,\n    KML.GX_NODE_FACTORY_, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIconStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {ol.KMLVec2_} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.ICON_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLabelStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      KML.LABEL_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LABEL_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLineStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.LINE_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LINE_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeMultiGeometry_ = function(node, geometry, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<ol.geom.Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    factory = KML.GEOMETRY_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {ol.geom.MultiPoint} */ (geometry).getPoints();\n    factory = KML.POINT_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {ol.geom.MultiLineString} */ (geometry)).getLineStrings();\n    factory = KML.LINE_STRING_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {ol.geom.MultiPolygon} */ (geometry)).getPolygons();\n    factory = KML.POLYGON_NODE_FACTORY_;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.MULTI_GEOMETRY_SERIALIZERS_, factory,\n    geometries, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeBoundaryIs_ = function(node, linearRing, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.BOUNDARY_IS_SERIALIZERS_,\n    KML.LINEAR_RING_NODE_FACTORY_, [linearRing], objectStack);\n};\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writePlacemark_ = function(node, feature, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = _ol_xml_.makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      KML.EXTENDEDDATA_NODE_FACTORY_, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction.call(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PLACEMARK_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    KML.GEOMETRY_NODE_FACTORY_, [geometry], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePrimitiveGeometry_ = function(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PRIMITIVE_GEOMETRY_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PRIMITIVE_GEOMETRY_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolygon_ = function(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  // inner rings\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.INNER_BOUNDARY_NODE_FACTORY_,\n    linearRings, objectStack);\n  // outer ring\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.OUTER_BOUNDARY_NODE_FACTORY_,\n    [outerRing], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolyStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.POLY_STYLE_SERIALIZERS_,\n    KML.COLOR_NODE_FACTORY_, [style.getColor()], objectStack);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n * @private\n */\nKML.writeScaleTextNode_ = function(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  XSD.writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {ol.KMLVec2_} vec2 Vec2.\n * @private\n */\nKML.writeVec2_ = function(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.KML_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.KML_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Document': _ol_xml_.makeChildAppender(KML.writeDocument_),\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.DOCUMENT_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.EXTENDEDDATA_NODE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': _ol_xml_.makeChildAppender(KML.writeDataNode_),\n    'value': _ol_xml_.makeChildAppender(KML.writeDataNodeValue_),\n    'displayName': _ol_xml_.makeChildAppender(KML.writeDataNodeName_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nKML.GEOMETRY_TYPE_TO_NODENAME_ = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'href'\n  ],\n  _ol_xml_.makeStructureNS(KML.GX_NAMESPACE_URIS_, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'y': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'w': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'h': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeChildAppender(KML.writeIcon_),\n    'heading': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'hotSpot': _ol_xml_.makeChildAppender(KML.writeVec2_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LABEL_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LABEL_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LINE_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LINE_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'width': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.BOUNDARY_IS_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.MULTI_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'GeometryCollection': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PLACEMARK_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PLACEMARK_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': _ol_xml_.makeChildAppender(\n      KML.writeExtendedData_),\n    'MultiGeometry': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_),\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'Style': _ol_xml_.makeChildAppender(KML.writeStyle_),\n    'address': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'description': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'open': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'phoneNumber': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'styleUrl': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'visibility': _ol_xml_.makeChildAppender(\n      XSD.writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'tessellate': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'altitudeMode': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'coordinates': _ol_xml_.makeChildAppender(\n      KML.writeCoordinatesTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLYGON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLY_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': _ol_xml_.makeChildAppender(KML.writeIconStyle_),\n    'LabelStyle': _ol_xml_.makeChildAppender(KML.writeLabelStyle_),\n    'LineStyle': _ol_xml_.makeChildAppender(KML.writeLineStyle_),\n    'PolyStyle': _ol_xml_.makeChildAppender(KML.writePolyStyle_)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GX_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  return _ol_xml_.createElementNS(KML.GX_NAMESPACE_URIS_[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.DOCUMENT_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GEOMETRY_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      KML.GEOMETRY_TYPE_TO_NODENAME_[/** @type {ol.geom.Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.COLOR_NODE_FACTORY_ = _ol_xml_.makeSimpleNodeFactory('color');\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.DATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Data');\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.EXTENDEDDATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.INNER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POINT_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINE_STRING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINEAR_RING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POLYGON_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Polygon');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.OUTER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const kml = _ol_xml_.createElementNS(KML.NAMESPACE_URIS_[4], 'kml');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:gx',\n    KML.GX_NAMESPACE_URIS_[0]);\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(kml, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    KML.SCHEMA_LOCATION_);\n\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: kml};\n  const properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  const orderedKeys = KML.KML_SEQUENCE_[kml.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.KML_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n    this);\n  return kml;\n};\nexport default KML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/KML.js\n// module id = 151\n// module chunks = 0 1 2 10","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.value('ngeoDataSources', new olCollection());\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/* eslint valid-jsdoc: 0, prefer-rest-params: 0,  */\n// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Utilities to check the preconditions, postconditions and\n * invariants runtime.\n *\n * Methods in this package should be given special treatment by the compiler\n * for type-inference. For example, <code>goog.asserts.assert(foo)</code>\n * will restrict <code>foo</code> to a truthy value.\n *\n * The compiler has an option to disable asserts. So code like:\n * <code>\n * var x = goog.asserts.assert(foo()); goog.asserts.assert(bar());\n * </code>\n * will be transformed into:\n * <code>\n * var x = foo();\n * </code>\n * The compiler will leave in foo() (because its return value is used),\n * but it will remove bar() because it assumes it does not have side-effects.\n *\n * @author agrieve@google.com (Andrew Grieve)\n */\n\nconst exports = {};\n\n/**\n * Throws an exception with the given message and \"Assertion failed\" prefixed\n * onto it.\n * @param {string} defaultMessage The message to use if givenMessage is empty.\n * @param {Array<*>} defaultArgs The substitution arguments for defaultMessage.\n * @param {string|undefined} givenMessage Message supplied by the caller.\n * @param {Array<*>} givenArgs The substitution arguments for givenMessage.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n * @private\n */\nexports.doAssertFailure_ = function(\n  defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  let message = 'Assertion failed';\n  let args;\n  if (givenMessage) {\n    message += `: ${givenMessage}`;\n    args = givenArgs;\n  } else if (defaultMessage) {\n    message += `: ${defaultMessage}`;\n    args = defaultArgs;\n  }\n  // The '' + works around an Opera 10 bug in the unit tests. Without it,\n  // a stack trace is added to var message above. With this, a stack trace is\n  // not added until this line (it causes the extra garbage to be added after\n  // the assertion message instead of in the middle of it).\n  const e = new exports.AssertionError(`${message}`, args || []);\n  exports.errorHandler_(e);\n};\n\n\n/**\n * Sets a custom error handler that can be used to customize the behavior of\n * assertion failures, for example by turning all assertion failures into log\n * messages.\n * @param {function(!goog.asserts.AssertionError)} errorHandler\n */\nexports.setErrorHandler = function(errorHandler) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_ = errorHandler;\n  }\n};\n\n\n/**\n * Checks if the condition evaluates to true if goog.asserts.ENABLE_ASSERTS is\n * true.\n * @template T\n * @param {T} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {T} The value of the condition.\n * @throws {goog.asserts.AssertionError} When the condition evaluates to false.\n */\nexports.assert = function(condition, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !condition) {\n    exports.doAssertFailure_(\n      '', null, opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return condition;\n};\n\n\n/**\n * Fails if goog.asserts.ENABLE_ASSERTS is true. This function is useful in case\n * when we want to add a check in the unreachable area like switch-case\n * statement:\n *\n * <pre>\n *  switch(type) {\n *    case FOO: doSomething(); break;\n *    case BAR: doSomethingElse(); break;\n *    default: goog.asserts.fail('Unrecognized type: ' + type);\n *      // We have only 2 types - \"default:\" section is unreachable code.\n *  }\n * </pre>\n *\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} Failure.\n */\nexports.fail = function(opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_(\n      new exports.AssertionError(\n        `Failure${opt_message ? `: ${opt_message}` : ''}`,\n        Array.prototype.slice.call(arguments, 1)));\n  }\n};\n\n\n/**\n * Checks if the value is a number if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {number} The value, guaranteed to be a number when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n */\nexports.assertNumber = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isNumber(value)) {\n    exports.doAssertFailure_(\n      'Expected number but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n\n/**\n * Checks if the value is a string if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {string} The value, guaranteed to be a string when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a string.\n */\nexports.assertString = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isString(value)) {\n    exports.doAssertFailure_(\n      'Expected string but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {string} */ (value);\n};\n\n\n/**\n * Checks if the value is a function if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Function} The value, guaranteed to be a function when asserts\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a function.\n */\nexports.assertFunction = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isFunction(value)) {\n    exports.doAssertFailure_(\n      'Expected function but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Function} */ (value);\n};\n\n\n/**\n * Checks if the value is an Object if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Object} The value, guaranteed to be a non-null object.\n * @throws {goog.asserts.AssertionError} When the value is not an object.\n */\nexports.assertObject = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isObject(value)) {\n    exports.doAssertFailure_(\n      'Expected object but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Object} */ (value);\n};\n\n\n/**\n * Checks if the value is an Array if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Array<?>} The value, guaranteed to be a non-null array.\n * @throws {goog.asserts.AssertionError} When the value is not an array.\n */\nexports.assertArray = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isArray(value)) {\n    exports.doAssertFailure_(\n      'Expected array but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Array<?>} */ (value);\n};\n\n\n/**\n * Checks if the value is a boolean if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {boolean} The value, guaranteed to be a boolean when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a boolean.\n */\nexports.assertBoolean = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isBoolean(value)) {\n    exports.doAssertFailure_(\n      'Expected boolean but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {boolean} */ (value);\n};\n\n\n/**\n * Checks if the value is a DOM Element if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Element} The value, likely to be a DOM Element when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not an Element.\n */\nexports.assertElement = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS &&\n      (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {\n    exports.doAssertFailure_(\n      'Expected Element but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Element} */ (value);\n};\n\n\n/**\n * Checks if the value is an instance of the user-defined type if\n * goog.asserts.ENABLE_ASSERTS is true.\n *\n * The compiler may tighten the type returned by this function.\n *\n * @param {?} value The value to check.\n * @param {function(new: T, ...)} type A user-defined constructor.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} When the value is not an instance of\n *     type.\n * @return {T}\n * @template T\n */\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !(value instanceof type)) {\n    exports.doAssertFailure_(\n      'Expected instanceof %s but got %s.',\n      [exports.getType_(type), exports.getType_(value)],\n      opt_message, Array.prototype.slice.call(arguments, 3));\n  }\n  return value;\n};\n\n\n/**\n * Checks that no enumerable keys are present in Object.prototype. Such keys\n * would break most code that use {@code for (var ... in ...)} loops.\n */\nexports.assertObjectPrototypeIsIntact = function() {\n  for (const key in Object.prototype) {\n    exports.fail(`${key} should not be enumerable in Object.prototype.`);\n  }\n};\n\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n * @param {*} value A constructor, object, or primitive.\n * @return {string} The best display name for the value, or 'unknown type name'.\n * @private\n */\nexports.getType_ = function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || 'unknown type name';\n  } else if (value instanceof Object) {\n    return value.constructor.displayName || value.constructor.name ||\n        Object.prototype.toString.call(value);\n  } else {\n    return value === null ? 'null' : typeof value;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapDirective from 'ngeo/map/directive.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module app.importfeatures\n*/\nconst exports = {};\n\nimport './importfeatures.css';\nimport './common_dependencies.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscFilereaderComponent from 'ngeo/misc/filereaderComponent.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n\n/** @type {!angular.Module} **/\napp.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name,\n  ngeoMiscFilereaderComponent.name,\n]);\n\n\n/**\n * @constructor\n * @param {angular.Scope} $scope Scope.\n * @export\n *//* @ngInject\n */\napp.MainController = function($scope) {\n\n  /**\n   * @private\n   * @type {ol.format.KML}\n   */\n  this.kmlFormat_ = new olFormatKML();\n\n  /**\n   * @private\n   * @type {ol.source.Vector}\n   */\n  this.vectorSource_ = new olSourceVector();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      }),\n      new olLayerVector({\n        source: this.vectorSource_\n      })\n    ],\n    view: new olView({\n      center: [0, 0],\n      zoom: 2\n    })\n  });\n\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.fileReaderSupported = undefined;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.fileContent = '';\n\n  $scope.$watch(() => this.fileContent, this.importKml_.bind(this));\n\n};\n\n\n/**\n * @param {string} kml KML document.\n * @private\n */\napp.MainController.prototype.importKml_ = function(kml) {\n  const map = this.map;\n  const vectorSource = this.vectorSource_;\n  const features = this.kmlFormat_.readFeatures(kml, {\n    featureProjection: 'EPSG:3857'\n  });\n  vectorSource.clear(true);\n  vectorSource.addFeatures(features);\n  const extent = vectorSource.getExtent();\n  const mapSize = map.getSize();\n  if (mapSize && !olExtent.isEmpty(extent)) {\n    map.getView().fit(extent, mapSize);\n  }\n};\n\n\napp.module.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/importfeatures.js","/**\n * @module ngeo.misc.filereaderComponent\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilereader', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * This directive is to used on an input file element. When a file is selected\n * the directive uses the browser `FileReader` API to read the file. The file\n * content is provided to the directive user through the assignable expression.\n * Only works for text files (`readAsText` used for reading the file). And does\n * not work in Internet Explorer 9.\n *\n * Example:\n *\n *      <input type=\"file\" ngeo-filereader=\"ctrl.fileContent\"\n *        ngeo-filereader-supported=\"ctrl.supported\"/>\n *\n * See our live example: [../examples/importfeatures.html](../examples/importfeatures.html)\n *\n * @htmlAttribute {string} ngeo-filereader The content of the file read.\n * @htmlAttribute {boolean=} ngeo-filereader-supported Whether the FileReader API is supported.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoFilereader\n */\nexports.component_ = function($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      'fileContent': '=ngeoFilereader',\n      'supported': '=?ngeoFilereaderSupported'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const supported = 'FileReader' in $window;\n      scope['supported'] = supported;\n      if (!supported) {\n        return;\n      }\n      element.on('change', (changeEvent) => {\n        /** @type {!FileReader} */\n        const fileReader = new $window.FileReader();\n        fileReader.onload = (\n          /**\n                 * @param {!ProgressEvent} evt Event.\n                 */\n          function(evt) {\n            scope.$apply(() => {\n              scope['fileContent'] = evt.target.result;\n            });\n          });\n        fileReader.readAsText(changeEvent.target.files[0]);\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoFilereader',\n  exports.component_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/filereaderComponent.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap.js';\n\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', [\n  ngeoDatasourceSyncDataSourcesMap.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\nimport googAsserts from 'goog/asserts.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSyncDataSourcesMap', [\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('ngeoSyncDataSourcesMap', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 72\n// module chunks = 0 1 2 3 4 5 7 9 10","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 80\n// module chunks = 0 1 2 5 10","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 98\n// module chunks = 0 1 2 10","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 99\n// module chunks = 0 1 2 8 10 19 24"],"sourceRoot":""}