{"version":3,"sources":["webpack:///./src/filters.js","webpack:///./src/misc/ToolActivate.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/utils.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.js","webpack:///./examples/createfeature.js","webpack:///./src/editing/createfeatureComponent.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/interaction/Measure.js"],"names":["__webpack_require__","olMath","_index2","default","Scalify","$filter","numberFilter","filterFn","scale","text","module","filter","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","undefined","Infinity","sign","Math","abs","nb_decimal","floor","log","factor","pow","round","decimal","unit","str_number","length","substring","groups","str_unit","index","unshift","join","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","opt_type","divisor","prefix","index_max","postfix","space","NumberCoordinates","coordinates","opt_fractionDigits","opt_template","template","x","y","fractionDigits","parseInt","replace","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","modulo","dms","d","m","s","_string2","padNumber","charAt","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","_index","toolContext","activePropertyName","this","getActive","setActive","newVal","__webpack_exports__","exports","angular","requires","push","name","btnGroupComponent_","$parse","restrict","controller","link","scope","element","attrs","assign","$watch","buttons_","some","buttonModel","newValue","directive","BtnGroupController","$scope","scope_","prototype","activate","forEach","expressionFn","i","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","on","$apply","$setViewValue","$viewValue","$render","toggleClass","geometry","multiGeom","_MultiPoint2","appendPoint","_MultiLineString2","appendLineString","_MultiPolygon2","appendPolygon","navigator","userAgent","indexOf","hex","rgb","r","g","b","Error","colorZeroPadding","toString","queryString","queryData","pairs","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","pair","value","indexOfEquals","decodeURIComponent","err","return","queryItem","key","encodeURIComponent","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","$rootScope","groups_","registerTool","groupName","tool","opt_defaultActivate","_this","entries","unlisten","oldVal","deactivateTools_","activateDefault_","defaultTool","_asserts2","ENABLE_ASSERTS","defaultTools","entry","assert","unregisterTool","splice","unregisterGroup","activateTool","deactivateTool","hasActiveTool","service","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","call","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","Object","ol","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","unlistenByKey","ol_Image","ImageWMS","opt_options","options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","listen","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","axisOrientation","getAxisOrientation","bbox","substr","uri","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","format","_Measure2","continueMsg","document","createElement","textContent","br","appendChild","inherits","createDrawInteraction","style","source","_Draw2","type","handleMeasure","callback","geom","goog","assertInstanceof","sketchFeature","getGeometry","_Polygon2","getMap","getView","output","getFormattedArea","precision","coord","getCoordinates","getInteriorPoint","_LineString2","getFormattedLength","getLastCoordinate","listenerKeys_","addListenerKey","uid","initListenerKey_","clearListenerKey","_events2","olBase","_Event","detail","arguments","_Event2","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","res","fixedTileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__string_js__","_Collection2","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","get","set","olObj","featureUidToGroupIndex_","source_","_Vector4","useSpatialIndex","layer_","_Vector2","styleFunction_","bind","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","featureUid","getUid","features","removeFeature","clear","group","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","map","setMap","setStyle","createFunction","defaultMessage","defaultArgs","givenMessage","givenArgs","message","args","e","AssertionError","errorHandler_","errorHandler","condition","opt_message","var_args","doAssertFailure_","Array","slice","isNumber","typeOf","isString","isFunction","isObject","isArray","isBoolean","nodeType","dom","NodeType","ELEMENT","getType_","fail","Function","displayName","constructor","_typeof","app","ngeo","_module2","_btnComponent2","_ToolActivateMgr2","_createfeatureComponent2","MainController","ngeoToolActivateMgr","pointGeomType","GeometryType","POINT","lineStringGeomType","LINE_STRING","polygonGeomType","POLYGON","vector","_Map2","layers","_Tile2","_OSM2","view","_View2","zoom","createPointActive","createPointToolActivate","_ToolActivate2","createLineStringActive","createLineStringToolActivate","createPolygonActive","createPolygonToolActivate","dummyActive","dummyToolActivate","_EventHelper2","directive_","bindToController","active","geomType","Controller_","gettextCatalog","$compile","$timeout","ngeoEventHelper","gettextCatalog_","compile_","filter_","timeout_","ngeoEventHelper_","interaction_","$onInit","interaction","MULTI_POINT","MULTI_LINE_STRING","helpMsg","getString","contMsg","_MeasureLength2","startMsg","MULTI_POLYGON","_MeasureArea2","addInteraction","handleDrawEnd_","event","sketch","getType","_utils2","toMulti","_Feature2","$onDestroy","_this2","removeInteraction","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","getLayers","item","layer","mapUid","previous","setAt","removeAt","insertAt","_CustomEvent2","current","dispatchEvent","updateDimensions","dimensions","baseBgLayer","getArray","_Layer2","hasUpdates","updatedDimensions","getSource","refresh","_SyncDataSourcesMap2","$window","ngeoSyncDataSourcesMap","prop","$eval","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","ngeoDataSources","ngeoDataSources_","map_","handleDataSourcesAdd_","$inject","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","evt","target","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","_DataSources2","manager","manager_","features_","index_","setFeatures","handleFeatureAdd_","handleFeatureRemove_","$element","$attrs","mapExpr","recenter","attr","getSize","fit","setZoom","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","olArray","templateUrl","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","keys","newLength","sort","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","$applyAsync","__WEBPACK_IMPORTED_MODULE_9__math_js__","MultiPoint","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","setCoordinates","__WEBPACK_IMPORTED_MODULE_0__index_js__","point","flatCoordinates","__WEBPACK_IMPORTED_MODULE_1__array_js__","getFlatCoordinates","clone","multiPoint","setFlatCoordinates","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","stride","ii","j","squaredDistance","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","points","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","intersectsExtent","setLayout","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XY","setFlatCoordinatesInternal","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","MultiLineString","ends_","maxDelta_","maxDeltaRevision_","lineString","multiLineString","sqrt","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","ends","lineStrings","offset","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","MultiPolygon","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","polygon","multiPolygon","len","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","endss","polygons","jj","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","DrawEventType","Draw","Pointer","handleDownEvent","handleDownEvent_","handleEvent","handleUpEvent","handleUpEvent_","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","maxPoints_","maxPoints","finishCondition_","finishCondition","functions","geometryFunction","CIRCLE","opt_geometry","circle","Circle","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","Point","LineString","Polygon","concat","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","getDefaultStyleFunction","geometryName_","geometryName","condition_","noModifierKeys","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","ol_Object","getChangeEventType","Property","ACTIVE","updateState_","styles","Style","createDefaultEditing","originalEvent","CONTEXTMENU","preventDefault","move","MapBrowserEventType","POINTERMOVE","pass","POINTERDRAG","pixel","clearTimeout","addToDrawing_","POINTERDOWN","handlePointerMove_","pointerEvent","pointerType","MouseSource","POINTER_TYPE","DBLCLICK","startDrawing_","setTimeout","MapBrowserPointerEvent","frameState","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","dx","dy","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","getPixelFromCoordinate","Feature","updateSketchFeatures_","setGeometryName","setGeometry","Event","last","sketchLineGeom","ring","getLinearRing","pop","removeLastPoint","extend","shouldStopEvent","sketchFeatures","overlaySource","addFeatures","createRegularPolygon","opt_sides","opt_angle","radius","angle","atan","createBox","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","delta","getRadius","getRadiusSquared_","getCenter","computeExtent","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","circleExtent","intersectsCoordinate","setCenter","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","setRadius","transform","olDom","olSphere","MeasureBaseOptions","_Interaction2","handleEvent_","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","decimals","displayHelpTooltip_","displayHelpTooltip","changeEventKey_","postcomposeEventKey_","fill","_Fill2","color","stroke","_Stroke2","width","vectorLayer_","drawInteraction_","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","SPHERE_WGS84","_EPSG2","RADIUS","geodesicArea","getFormattedCircleArea","PI","c1","c2","haversineDistance","getFormattedPoint","dragging","removeChildren","setPosition","getDrawInteraction","prevMap","createMeasureTooltip_","measure","innerHTML","classList","add","setOffset","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","_Overlay2","positioning","addOverlay","removeOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement"],"mappings":"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","file":"createfeature.min.js","sourcesContent":["/**\n * @module ngeo.filters\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport * as olMath from 'ol/math.js';\nimport olString from 'ol/string.js';\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nngeoBase.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoScalify', ngeoBase.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nngeoBase.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoNumber', ngeoBase.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nngeoBase.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoUnitPrefix', ngeoBase.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nngeoBase.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoNumberCoordinates', ngeoBase.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nngeoBase.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoDMSCoordinates', ngeoBase.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * @return {function(?):string} The filter function.\n *//* @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nngeoBase.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nngeoBase.module.filter('ngeoTrustHtml', ngeoBase.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filters.js","/**\n * @module ngeo.misc.ToolActivate\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivate.js","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.misc.btnComponent\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n *//* @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach(function(expressionFn, i) {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  }, this);\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/btnComponent.js","/**\n * @module ngeo.utils\n*/\nconst exports = {};\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.misc.ToolActivateMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n *//* @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivateMgr.js","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.interaction.MeasureArea\n*/\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the polygon.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click starting point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nol.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = goog.asserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  goog.asserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureArea.js","/**\n * @module ngeo.interaction.MeasureLength\n*/\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the line.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click last point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nol.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = goog.asserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  goog.asserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureLength.js","/**\n * @module ngeo.misc.EventHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n *//* @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.value('ngeoDataSources', new olCollection());\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/* eslint valid-jsdoc: 0, prefer-rest-params: 0,  */\n// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Utilities to check the preconditions, postconditions and\n * invariants runtime.\n *\n * Methods in this package should be given special treatment by the compiler\n * for type-inference. For example, <code>goog.asserts.assert(foo)</code>\n * will restrict <code>foo</code> to a truthy value.\n *\n * The compiler has an option to disable asserts. So code like:\n * <code>\n * var x = goog.asserts.assert(foo()); goog.asserts.assert(bar());\n * </code>\n * will be transformed into:\n * <code>\n * var x = foo();\n * </code>\n * The compiler will leave in foo() (because its return value is used),\n * but it will remove bar() because it assumes it does not have side-effects.\n *\n * @author agrieve@google.com (Andrew Grieve)\n */\n\nconst exports = {};\n\n/**\n * Throws an exception with the given message and \"Assertion failed\" prefixed\n * onto it.\n * @param {string} defaultMessage The message to use if givenMessage is empty.\n * @param {Array<*>} defaultArgs The substitution arguments for defaultMessage.\n * @param {string|undefined} givenMessage Message supplied by the caller.\n * @param {Array<*>} givenArgs The substitution arguments for givenMessage.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n * @private\n */\nexports.doAssertFailure_ = function(\n  defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  let message = 'Assertion failed';\n  let args;\n  if (givenMessage) {\n    message += `: ${givenMessage}`;\n    args = givenArgs;\n  } else if (defaultMessage) {\n    message += `: ${defaultMessage}`;\n    args = defaultArgs;\n  }\n  // The '' + works around an Opera 10 bug in the unit tests. Without it,\n  // a stack trace is added to var message above. With this, a stack trace is\n  // not added until this line (it causes the extra garbage to be added after\n  // the assertion message instead of in the middle of it).\n  const e = new exports.AssertionError(`${message}`, args || []);\n  exports.errorHandler_(e);\n};\n\n\n/**\n * Sets a custom error handler that can be used to customize the behavior of\n * assertion failures, for example by turning all assertion failures into log\n * messages.\n * @param {function(!goog.asserts.AssertionError)} errorHandler\n */\nexports.setErrorHandler = function(errorHandler) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_ = errorHandler;\n  }\n};\n\n\n/**\n * Checks if the condition evaluates to true if goog.asserts.ENABLE_ASSERTS is\n * true.\n * @template T\n * @param {T} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {T} The value of the condition.\n * @throws {goog.asserts.AssertionError} When the condition evaluates to false.\n */\nexports.assert = function(condition, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !condition) {\n    exports.doAssertFailure_(\n      '', null, opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return condition;\n};\n\n\n/**\n * Fails if goog.asserts.ENABLE_ASSERTS is true. This function is useful in case\n * when we want to add a check in the unreachable area like switch-case\n * statement:\n *\n * <pre>\n *  switch(type) {\n *    case FOO: doSomething(); break;\n *    case BAR: doSomethingElse(); break;\n *    default: goog.asserts.fail('Unrecognized type: ' + type);\n *      // We have only 2 types - \"default:\" section is unreachable code.\n *  }\n * </pre>\n *\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} Failure.\n */\nexports.fail = function(opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_(\n      new exports.AssertionError(\n        `Failure${opt_message ? `: ${opt_message}` : ''}`,\n        Array.prototype.slice.call(arguments, 1)));\n  }\n};\n\n\n/**\n * Checks if the value is a number if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {number} The value, guaranteed to be a number when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n */\nexports.assertNumber = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isNumber(value)) {\n    exports.doAssertFailure_(\n      'Expected number but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n\n/**\n * Checks if the value is a string if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {string} The value, guaranteed to be a string when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a string.\n */\nexports.assertString = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isString(value)) {\n    exports.doAssertFailure_(\n      'Expected string but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {string} */ (value);\n};\n\n\n/**\n * Checks if the value is a function if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Function} The value, guaranteed to be a function when asserts\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a function.\n */\nexports.assertFunction = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isFunction(value)) {\n    exports.doAssertFailure_(\n      'Expected function but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Function} */ (value);\n};\n\n\n/**\n * Checks if the value is an Object if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Object} The value, guaranteed to be a non-null object.\n * @throws {goog.asserts.AssertionError} When the value is not an object.\n */\nexports.assertObject = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isObject(value)) {\n    exports.doAssertFailure_(\n      'Expected object but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Object} */ (value);\n};\n\n\n/**\n * Checks if the value is an Array if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Array<?>} The value, guaranteed to be a non-null array.\n * @throws {goog.asserts.AssertionError} When the value is not an array.\n */\nexports.assertArray = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isArray(value)) {\n    exports.doAssertFailure_(\n      'Expected array but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Array<?>} */ (value);\n};\n\n\n/**\n * Checks if the value is a boolean if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {boolean} The value, guaranteed to be a boolean when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a boolean.\n */\nexports.assertBoolean = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isBoolean(value)) {\n    exports.doAssertFailure_(\n      'Expected boolean but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {boolean} */ (value);\n};\n\n\n/**\n * Checks if the value is a DOM Element if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Element} The value, likely to be a DOM Element when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not an Element.\n */\nexports.assertElement = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS &&\n      (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {\n    exports.doAssertFailure_(\n      'Expected Element but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Element} */ (value);\n};\n\n\n/**\n * Checks if the value is an instance of the user-defined type if\n * goog.asserts.ENABLE_ASSERTS is true.\n *\n * The compiler may tighten the type returned by this function.\n *\n * @param {?} value The value to check.\n * @param {function(new: T, ...)} type A user-defined constructor.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} When the value is not an instance of\n *     type.\n * @return {T}\n * @template T\n */\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !(value instanceof type)) {\n    exports.doAssertFailure_(\n      'Expected instanceof %s but got %s.',\n      [exports.getType_(type), exports.getType_(value)],\n      opt_message, Array.prototype.slice.call(arguments, 3));\n  }\n  return value;\n};\n\n\n/**\n * Checks that no enumerable keys are present in Object.prototype. Such keys\n * would break most code that use {@code for (var ... in ...)} loops.\n */\nexports.assertObjectPrototypeIsIntact = function() {\n  for (const key in Object.prototype) {\n    exports.fail(`${key} should not be enumerable in Object.prototype.`);\n  }\n};\n\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n * @param {*} value A constructor, object, or primitive.\n * @return {string} The best display name for the value, or 'unknown type name'.\n * @private\n */\nexports.getType_ = function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || 'unknown type name';\n  } else if (value instanceof Object) {\n    return value.constructor.displayName || value.constructor.name ||\n        Object.prototype.toString.call(value);\n  } else {\n    return value === null ? 'null' : typeof value;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.js","/**\n * @module app.createfeature\n*/\nconst exports = {};\n\nimport './createfeature.css';\nimport './common_dependencies.js';\n/** @suppress {extraRequire} */\nimport ngeoEditingCreatefeatureComponent from 'ngeo/editing/createfeatureComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport olCollection from 'ol/Collection.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n\n/** @type {!angular.Module} **/\napp.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscToolActivateMgr.module.name,\n  ngeoEditingCreatefeatureComponent.name,\n]);\n\n\n/**\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n *//* @ngInject\n */\napp.MainController = function(ngeoToolActivateMgr) {\n\n  /**\n   * @type {ol.Collection}\n   * @export\n   */\n  this.features = new olCollection();\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.pointGeomType = ngeo.GeometryType.POINT;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.lineStringGeomType = ngeo.GeometryType.LINE_STRING;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.polygonGeomType = ngeo.GeometryType.POLYGON;\n\n  const vector = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: false,\n      features: this.features\n    })\n  });\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      }),\n      vector\n    ],\n    view: new olView({\n      center: [0, 0],\n      zoom: 3\n    })\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.createPointActive = false;\n\n  const createPointToolActivate = new ngeoMiscToolActivate(\n    this,\n    'createPointActive'\n  );\n  ngeoToolActivateMgr.registerTool(\n    'mapTools',\n    createPointToolActivate,\n    false\n  );\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.createLineStringActive = false;\n\n  const createLineStringToolActivate = new ngeoMiscToolActivate(\n    this,\n    'createLineStringActive'\n  );\n  ngeoToolActivateMgr.registerTool(\n    'mapTools',\n    createLineStringToolActivate,\n    false\n  );\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.createPolygonActive = false;\n\n  const createPolygonToolActivate = new ngeoMiscToolActivate(\n    this,\n    'createPolygonActive'\n  );\n  ngeoToolActivateMgr.registerTool(\n    'mapTools',\n    createPolygonToolActivate,\n    false\n  );\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.dummyActive = true;\n\n  const dummyToolActivate = new ngeoMiscToolActivate(\n    this,\n    'dummyActive'\n  );\n  ngeoToolActivateMgr.registerTool(\n    'mapTools',\n    dummyToolActivate,\n    true\n  );\n};\n\n\napp.module.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/createfeature.js","/**\n * @module ngeo.editing.createfeatureComponent\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilters from 'ngeo/filters.js';\n\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('ngeoCreatefeature', [\n  ngeoMiscEventHelper.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * A directive used to draw vector features of a single geometry type using\n * either a 'draw' or 'measure' interaction. Once a feature is finished being\n * drawn, it is added to a collection of features.\n *\n * The geometry types supported are:\n *  - Point\n *  - LineString\n *  - Polygon\n *\n * Example:\n *\n *     <a\n *       href\n *       translate\n *       ngeo-btn\n *       ngeo-createfeature\n *       ngeo-createfeature-active=\"ctrl.createPointActive\"\n *       ngeo-createfeature-features=\"ctrl.features\"\n *       ngeo-createfeature-geom-type=\"ctrl.pointGeomType\"\n *       ngeo-createfeature-map=\"::ctrl.map\"\n *       class=\"btn btn-default ngeo-createfeature-point\"\n *       ng-class=\"{active: ctrl.createPointActive}\"\n *       ng-model=\"ctrl.createPointActive\">\n *     </a>\n *\n * @htmlAttribute {boolean} ngeo-createfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Collection} ngeo-createfeature-features The collection of\n *     features where to add those created by this directive.\n * @htmlAttribute {string} ngeo-createfeature-geom-type Determines the type\n *     of geometry this directive should draw.\n * @htmlAttribute {ol.Map} ngeo-createfeature-map The map.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoCreatefeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoCreatefeatureController',\n    bindToController: true,\n    scope: {\n      'active': '=ngeoCreatefeatureActive',\n      'features': '=ngeoCreatefeatureFeatures',\n      'geomType': '=ngeoCreatefeatureGeomType',\n      'map': '=ngeoCreatefeatureMap'\n    }\n  };\n};\n\nexports.directive('ngeoCreatefeature', exports.directive_);\n\n\n/**\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n *//* @ngInject\n * @ngdoc controller\n * @ngname ngeoCreatefeatureController\n */\nexports.Controller_ = function(gettextCatalog, $compile, $filter, $scope,\n  $timeout, ngeoEventHelper) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {ol.Collection.<!ol.Feature>|!ol.source.Vector}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.$compile}\n   * @private\n   */\n  this.compile_ = $compile;\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * The draw or measure interaction responsible of drawing the vector feature.\n   * The actual type depends on the geometry type.\n   * @type {ol.interaction.Interaction}\n   * @private\n   */\n  this.interaction_;\n\n\n  // == Event listeners ==\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      this.interaction_.setActive(newVal);\n    }\n  );\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.active = this.active === true;\n  const gettextCatalog = this.gettextCatalog_;\n\n  // Create the draw or measure interaction depending on the geometry type\n  let interaction;\n  if (this.geomType === ngeoBase.GeometryType.POINT ||\n      this.geomType === ngeoBase.GeometryType.MULTI_POINT\n  ) {\n    interaction = new olInteractionDraw({\n      type: /** @type {ol.geom.GeometryType} */ ('Point')\n    });\n  } else if (this.geomType === ngeoBase.GeometryType.LINE_STRING ||\n      this.geomType === ngeoBase.GeometryType.MULTI_LINE_STRING\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing length');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click last point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureLength(\n      this.filter_('ngeoUnitPrefix'),\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  } else if (this.geomType === ngeoBase.GeometryType.POLYGON ||\n      this.geomType === ngeoBase.GeometryType.MULTI_POLYGON\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing area');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click starting point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureArea(\n      this.filter_('ngeoUnitPrefix'),\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  }\n\n  goog.asserts.assert(interaction);\n\n  interaction.setActive(this.active);\n  this.interaction_ = interaction;\n  this.map.addInteraction(interaction);\n\n  const uid = olBase.getUid(this);\n  if (interaction instanceof olInteractionDraw) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'drawend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  } else if (interaction instanceof ngeoInteractionMeasureLength ||\n     interaction instanceof ngeoInteractionMeasureArea) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'measureend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  }\n};\n\n\n/**\n * Called when a feature is finished being drawn. Add the feature to the\n * collection.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.Controller_.prototype.handleDrawEnd_ = function(event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  goog.asserts.assert(sketch);\n\n  // convert to multi if geomType is multi and feature is not\n  let geometry = sketch.getGeometry();\n  const type = geometry.getType();\n  if (this.geomType.indexOf('Multi') != type.indexOf('Multi')) {\n    geometry = ngeoUtils.toMulti(geometry);\n  }\n  const feature = new olFeature(geometry);\n  if (this.features instanceof olCollection) {\n    this.features.push(feature);\n  } else {\n    this.features.addFeature(feature);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the interaction from the map.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  this.timeout_(() => {\n    const uid = olBase.getUid(this);\n    this.ngeoEventHelper_.clearListenerKey(uid);\n    this.interaction_.setActive(false);\n    this.map.removeInteraction(this.interaction_);\n  }, 0);\n};\n\nexports.controller('ngeoCreatefeatureController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/editing/createfeatureComponent.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapDirective from 'ngeo/map/directive.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap.js';\n\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', [\n  ngeoDatasourceSyncDataSourcesMap.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\nimport googAsserts from 'goog/asserts.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSyncDataSourcesMap', [\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('ngeoSyncDataSourcesMap', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = _ol_coordinate_.squaredDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  const styles = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == MouseSource.POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      const center = coordinates[0];\n      const end = coordinates[1];\n      const radius = Math.sqrt(\n        _ol_coordinate_.squaredDistance(center, end));\n      const geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      const angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = _ol_geom_flat_deflate_.coordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 81\n// module chunks = 0 1 2 6 7 8 9 11 14","/**\n * @module ngeo.interaction.Measure\n*/\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olDom from 'ol/dom.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nngeo.interaction.MeasureBaseOptions;\n\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ?\n    options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nol.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\nexports.SPHERE_WGS84 = new olSphere(olProjEPSG4326.RADIUS);\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(\n  polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (\n    polygon.clone().transform(projection, 'EPSG:4326'));\n  const coordinates = geom.getLinearRing(0).getCoordinates();\n  const area = Math.abs(exports.SPHERE_WGS84.geodesicArea(coordinates));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(\n  circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection,\n  precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = ol.proj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = ol.proj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += exports.SPHERE_WGS84.haversineDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(\n  point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js"],"sourceRoot":""}