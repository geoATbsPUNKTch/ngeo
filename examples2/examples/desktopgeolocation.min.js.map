{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/message/Notification.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/GeolocationProperty.js","webpack:///./node_modules/openlayers/src/ol/Geolocation.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.js","webpack:///./examples/desktopgeolocation.js","webpack:///./src/geolocation/desktop.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js"],"names":["__webpack_exports__","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","exports","prototype","showMessage","message","show","object","this","getMessageObjects","forEach","error","Type","ERROR","info","INFORMATION","success","SUCCESS","warn","WARNING","opt_type","msgObjects","msgObject","defaultType","push","msg","type","undefined","Array","isArray","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","call","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","Object","ol","getImage","handleImageError_","unlistenImage_","changed","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","unlistenByKey","ol_Image","ImageWMS","opt_options","options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","x","Math","floor","y","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","listen","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","axisOrientation","getAxisOrientation","bbox","substr","join","uri","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","__webpack_require__","olBase","$timeout","_Message2","default","timeout_","container","angular","element","document","body","append","container_","cache_","inherits","DEFAULT_DELAY_","notify","clear","uid","clearMessageByCacheItem_","parseInt","_this","_asserts2","assertString","classNames","el","target","html","addClass","delay","item","getUid","promise","alert","cancel","module","service","_index2","requires","name","_Event","detail","arguments","length","_Event2","GeolocationProperty","d","Geolocation","ol_Object","position_","transform_","watchId_","getChangeEventType","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","disposeInternal","set","has","GEOLOCATION","getTracking","navigator","geolocation","watchPosition","positionChange_","bind","positionError_","getTrackingOptions","clearWatch","position","coords","accuracy","altitude","altitudeAccuracy","heading","math","longitude","latitude","projectedPosition","speed","geometry","Polygon","applyTransform","dispatchEvent","getAccuracy","get","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","i","res","key","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","value","_Collection2","_index","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","olObj","featureUidToGroupIndex_","groups_","source_","_Vector4","useSpatialIndex","layer_","_Vector2","source","style","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","assert","featureUid","toString","features","removeFeature","group","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","map","setMap","setStyle","createFunction","defaultMessage","defaultArgs","givenMessage","givenArgs","args","e","AssertionError","errorHandler_","errorHandler","ENABLE_ASSERTS","condition","opt_message","var_args","doAssertFailure_","slice","goog","isNumber","typeOf","isString","isFunction","isObject","isBoolean","nodeType","dom","NodeType","ELEMENT","getType_","fail","Function","displayName","constructor","_typeof","app","ngeo","_desktop2","_module2","MainController","$scope","ngeoFeatureOverlayMgr","positionFeatureStyle","_Circle2","radius","fill","_Fill2","color","stroke","_Stroke2","width","accuracyFeatureStyle","desktopGeolocationOptions","zoom","_Map2","layers","_Tile2","_OSM2","view","_View2","controller","_FeatureOverlayMgr2","_Notification2","GeolocationEventType","directive_","restrict","scope","getDesktopMapFn","getDesktopGeolocationOptionsFn","directive","Controller_","$element","ngeoNotification","on","toggle","assertInstanceof","map_","assertObject","$scope_","notification_","featureOverlay_","geolocation_","_Geolocation2","getView","deactivate_","$emit","positionFeature_","_Feature2","accuracyFeature_","zoom_","active_","_events2","setGeometry","event","setPosition_","activate_","point","_Point2","setCenter","setZoom","_BackgroundLayerMgr2","_directive2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","getLayers","layer","mapUid","previous","setAt","removeAt","insertAt","_CustomEvent2","current","updateDimensions","dimensions","baseBgLayer","getArray","_Layer2","hasUpdates","updatedDimensions","getSource","refresh","_SyncDataSourcesMap2","$window","ngeoSyncDataSourcesMap","link","attrs","prop","$eval","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","ngeoDataSources","ngeoDataSources_","listenerKeys_","handleDataSourcesAdd_","$inject","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","evt","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","_DataSources2","manager","index","manager_","features_","index_","setFeatures","unlisten","handleFeatureAdd_","handleFeatureRemove_","$attrs","mapExpr","recenter","attr","getSize","fit","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","$watch","newVal","oldVal","cancelAnimationFrame","olArray","templateUrl","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","keys","newLength","Number","sort","numberSafeCompareFunction","optionsExpr","getOptions_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","_this2","$applyAsync","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_0__index_js__","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction"],"mappings":"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","file":"desktopgeolocation.min.js","sourcesContent":["/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.message.Message\n*/\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.message.Notification\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n *//* @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/GeolocationProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/GeolocationProperty.js\n// module id = null\n// module chunks = ","/**\n * @module ol/Geolocation\n */\nimport {inherits} from './index.js';\nimport GeolocationProperty from './GeolocationProperty.js';\nimport BaseObject from './Object.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport _ol_has_ from './has.js';\nimport {toRadians} from './math.js';\nimport {get as getProjection, getTransformFromProjections, identityTransform} from './proj.js';\n\n\n/**\n * @typedef {{tracking: (boolean|undefined),\n *     trackingOptions: (GeolocationPositionOptions|undefined),\n *     projection: ol.ProjectionLike}}\n */\nexport let GeolocationOptions;\n\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of `ol.Geolocation`.\n *\n * Example:\n *\n *     var geolocation = new ol.Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires error\n * @constructor\n * @extends {ol.Object}\n * @param {GeolocationOptions=} opt_options Options.\n * @param {boolean|undefined} opt_options.tracking Start Tracking. Default is\n *     `false`.\n * @param {GeolocationPositionOptions|undefined} opt_options.trackingOptions\n *     Tracking options. See\n *     {@link http://www.w3.org/TR/geolocation-API/#position_options_interface}.\n * @param {ol.ProjectionLike} opt_options.projection The projection the position\n *     is reported in.\n * @api\n */\nconst Geolocation = function(opt_options) {\n\n  BaseObject.call(this);\n\n  const options = opt_options || {};\n\n  /**\n   * The unprojected (EPSG:4326) device position.\n   * @private\n   * @type {ol.Coordinate}\n   */\n  this.position_ = null;\n\n  /**\n   * @private\n   * @type {ol.TransformFunction}\n   */\n  this.transform_ = identityTransform;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.watchId_ = undefined;\n\n  _ol_events_.listen(\n    this, BaseObject.getChangeEventType(GeolocationProperty.PROJECTION),\n    this.handleProjectionChanged_, this);\n  _ol_events_.listen(\n    this, BaseObject.getChangeEventType(GeolocationProperty.TRACKING),\n    this.handleTrackingChanged_, this);\n\n  if (options.projection !== undefined) {\n    this.setProjection(options.projection);\n  }\n  if (options.trackingOptions !== undefined) {\n    this.setTrackingOptions(options.trackingOptions);\n  }\n\n  this.setTracking(options.tracking !== undefined ? options.tracking : false);\n\n};\n\ninherits(Geolocation, BaseObject);\n\n\n/**\n * @inheritDoc\n */\nGeolocation.prototype.disposeInternal = function() {\n  this.setTracking(false);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @private\n */\nGeolocation.prototype.handleProjectionChanged_ = function() {\n  const projection = this.getProjection();\n  if (projection) {\n    this.transform_ = getTransformFromProjections(\n      getProjection('EPSG:4326'), projection);\n    if (this.position_) {\n      this.set(GeolocationProperty.POSITION, this.transform_(this.position_));\n    }\n  }\n};\n\n\n/**\n * @private\n */\nGeolocation.prototype.handleTrackingChanged_ = function() {\n  if (_ol_has_.GEOLOCATION) {\n    const tracking = this.getTracking();\n    if (tracking && this.watchId_ === undefined) {\n      this.watchId_ = navigator.geolocation.watchPosition(\n        this.positionChange_.bind(this),\n        this.positionError_.bind(this),\n        this.getTrackingOptions());\n    } else if (!tracking && this.watchId_ !== undefined) {\n      navigator.geolocation.clearWatch(this.watchId_);\n      this.watchId_ = undefined;\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {GeolocationPosition} position position event.\n */\nGeolocation.prototype.positionChange_ = function(position) {\n  const coords = position.coords;\n  this.set(GeolocationProperty.ACCURACY, coords.accuracy);\n  this.set(GeolocationProperty.ALTITUDE,\n    coords.altitude === null ? undefined : coords.altitude);\n  this.set(GeolocationProperty.ALTITUDE_ACCURACY,\n    coords.altitudeAccuracy === null ?\n      undefined : coords.altitudeAccuracy);\n  this.set(GeolocationProperty.HEADING, coords.heading === null ?\n    undefined : toRadians(coords.heading));\n  if (!this.position_) {\n    this.position_ = [coords.longitude, coords.latitude];\n  } else {\n    this.position_[0] = coords.longitude;\n    this.position_[1] = coords.latitude;\n  }\n  const projectedPosition = this.transform_(this.position_);\n  this.set(GeolocationProperty.POSITION, projectedPosition);\n  this.set(GeolocationProperty.SPEED,\n    coords.speed === null ? undefined : coords.speed);\n  const geometry = circularPolygon(this.position_, coords.accuracy);\n  geometry.applyTransform(this.transform_);\n  this.set(GeolocationProperty.ACCURACY_GEOMETRY, geometry);\n  this.changed();\n};\n\n/**\n * Triggered when the Geolocation returns an error.\n * @event error\n * @api\n */\n\n/**\n * @private\n * @param {GeolocationPositionError} error error object.\n */\nGeolocation.prototype.positionError_ = function(error) {\n  error.type = EventType.ERROR;\n  this.setTracking(false);\n  this.dispatchEvent(/** @type {{type: string, target: undefined}} */ (error));\n};\n\n\n/**\n * Get the accuracy of the position in meters.\n * @return {number|undefined} The accuracy of the position measurement in\n *     meters.\n * @observable\n * @api\n */\nGeolocation.prototype.getAccuracy = function() {\n  return (\n    /** @type {number|undefined} */ this.get(GeolocationProperty.ACCURACY)\n  );\n};\n\n\n/**\n * Get a geometry of the position accuracy.\n * @return {?ol.geom.Polygon} A geometry of the position accuracy.\n * @observable\n * @api\n */\nGeolocation.prototype.getAccuracyGeometry = function() {\n  return (\n    /** @type {?ol.geom.Polygon} */ this.get(GeolocationProperty.ACCURACY_GEOMETRY) || null\n  );\n};\n\n\n/**\n * Get the altitude associated with the position.\n * @return {number|undefined} The altitude of the position in meters above mean\n *     sea level.\n * @observable\n * @api\n */\nGeolocation.prototype.getAltitude = function() {\n  return (\n    /** @type {number|undefined} */ this.get(GeolocationProperty.ALTITUDE)\n  );\n};\n\n\n/**\n * Get the altitude accuracy of the position.\n * @return {number|undefined} The accuracy of the altitude measurement in\n *     meters.\n * @observable\n * @api\n */\nGeolocation.prototype.getAltitudeAccuracy = function() {\n  return (\n    /** @type {number|undefined} */ this.get(GeolocationProperty.ALTITUDE_ACCURACY)\n  );\n};\n\n\n/**\n * Get the heading as radians clockwise from North.\n * @return {number|undefined} The heading of the device in radians from north.\n * @observable\n * @api\n */\nGeolocation.prototype.getHeading = function() {\n  return (\n    /** @type {number|undefined} */ this.get(GeolocationProperty.HEADING)\n  );\n};\n\n\n/**\n * Get the position of the device.\n * @return {ol.Coordinate|undefined} The current position of the device reported\n *     in the current projection.\n * @observable\n * @api\n */\nGeolocation.prototype.getPosition = function() {\n  return (\n    /** @type {ol.Coordinate|undefined} */ this.get(GeolocationProperty.POSITION)\n  );\n};\n\n\n/**\n * Get the projection associated with the position.\n * @return {ol.proj.Projection|undefined} The projection the position is\n *     reported in.\n * @observable\n * @api\n */\nGeolocation.prototype.getProjection = function() {\n  return (\n    /** @type {ol.proj.Projection|undefined} */ this.get(GeolocationProperty.PROJECTION)\n  );\n};\n\n\n/**\n * Get the speed in meters per second.\n * @return {number|undefined} The instantaneous speed of the device in meters\n *     per second.\n * @observable\n * @api\n */\nGeolocation.prototype.getSpeed = function() {\n  return (\n    /** @type {number|undefined} */ this.get(GeolocationProperty.SPEED)\n  );\n};\n\n\n/**\n * Determine if the device location is being tracked.\n * @return {boolean} The device location is being tracked.\n * @observable\n * @api\n */\nGeolocation.prototype.getTracking = function() {\n  return (\n    /** @type {boolean} */ this.get(GeolocationProperty.TRACKING)\n  );\n};\n\n\n/**\n * Get the tracking options.\n * @see http://www.w3.org/TR/geolocation-API/#position-options\n * @return {GeolocationPositionOptions|undefined} PositionOptions as defined by\n *     the [HTML5 Geolocation spec\n *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n * @observable\n * @api\n */\nGeolocation.prototype.getTrackingOptions = function() {\n  return (\n    /** @type {GeolocationPositionOptions|undefined} */ this.get(GeolocationProperty.TRACKING_OPTIONS)\n  );\n};\n\n\n/**\n * Set the projection to use for transforming the coordinates.\n * @param {ol.ProjectionLike} projection The projection the position is\n *     reported in.\n * @observable\n * @api\n */\nGeolocation.prototype.setProjection = function(projection) {\n  this.set(GeolocationProperty.PROJECTION, getProjection(projection));\n};\n\n\n/**\n * Enable or disable tracking.\n * @param {boolean} tracking Enable tracking.\n * @observable\n * @api\n */\nGeolocation.prototype.setTracking = function(tracking) {\n  this.set(GeolocationProperty.TRACKING, tracking);\n};\n\n\n/**\n * Set the tracking options.\n * @see http://www.w3.org/TR/geolocation-API/#position-options\n * @param {GeolocationPositionOptions} options PositionOptions as defined by the\n *     [HTML5 Geolocation spec\n *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n * @observable\n * @api\n */\nGeolocation.prototype.setTrackingOptions = function(options) {\n  this.set(GeolocationProperty.TRACKING_OPTIONS, options);\n};\nexport default Geolocation;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Geolocation.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.value('ngeoDataSources', new olCollection());\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/* eslint valid-jsdoc: 0, prefer-rest-params: 0,  */\n// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Utilities to check the preconditions, postconditions and\n * invariants runtime.\n *\n * Methods in this package should be given special treatment by the compiler\n * for type-inference. For example, <code>goog.asserts.assert(foo)</code>\n * will restrict <code>foo</code> to a truthy value.\n *\n * The compiler has an option to disable asserts. So code like:\n * <code>\n * var x = goog.asserts.assert(foo()); goog.asserts.assert(bar());\n * </code>\n * will be transformed into:\n * <code>\n * var x = foo();\n * </code>\n * The compiler will leave in foo() (because its return value is used),\n * but it will remove bar() because it assumes it does not have side-effects.\n *\n * @author agrieve@google.com (Andrew Grieve)\n */\n\nconst exports = {};\n\n/**\n * Throws an exception with the given message and \"Assertion failed\" prefixed\n * onto it.\n * @param {string} defaultMessage The message to use if givenMessage is empty.\n * @param {Array<*>} defaultArgs The substitution arguments for defaultMessage.\n * @param {string|undefined} givenMessage Message supplied by the caller.\n * @param {Array<*>} givenArgs The substitution arguments for givenMessage.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n * @private\n */\nexports.doAssertFailure_ = function(\n  defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  let message = 'Assertion failed';\n  let args;\n  if (givenMessage) {\n    message += `: ${givenMessage}`;\n    args = givenArgs;\n  } else if (defaultMessage) {\n    message += `: ${defaultMessage}`;\n    args = defaultArgs;\n  }\n  // The '' + works around an Opera 10 bug in the unit tests. Without it,\n  // a stack trace is added to var message above. With this, a stack trace is\n  // not added until this line (it causes the extra garbage to be added after\n  // the assertion message instead of in the middle of it).\n  const e = new exports.AssertionError(`${message}`, args || []);\n  exports.errorHandler_(e);\n};\n\n\n/**\n * Sets a custom error handler that can be used to customize the behavior of\n * assertion failures, for example by turning all assertion failures into log\n * messages.\n * @param {function(!goog.asserts.AssertionError)} errorHandler\n */\nexports.setErrorHandler = function(errorHandler) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_ = errorHandler;\n  }\n};\n\n\n/**\n * Checks if the condition evaluates to true if goog.asserts.ENABLE_ASSERTS is\n * true.\n * @template T\n * @param {T} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {T} The value of the condition.\n * @throws {goog.asserts.AssertionError} When the condition evaluates to false.\n */\nexports.assert = function(condition, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !condition) {\n    exports.doAssertFailure_(\n      '', null, opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return condition;\n};\n\n\n/**\n * Fails if goog.asserts.ENABLE_ASSERTS is true. This function is useful in case\n * when we want to add a check in the unreachable area like switch-case\n * statement:\n *\n * <pre>\n *  switch(type) {\n *    case FOO: doSomething(); break;\n *    case BAR: doSomethingElse(); break;\n *    default: goog.asserts.fail('Unrecognized type: ' + type);\n *      // We have only 2 types - \"default:\" section is unreachable code.\n *  }\n * </pre>\n *\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} Failure.\n */\nexports.fail = function(opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_(\n      new exports.AssertionError(\n        `Failure${opt_message ? `: ${opt_message}` : ''}`,\n        Array.prototype.slice.call(arguments, 1)));\n  }\n};\n\n\n/**\n * Checks if the value is a number if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {number} The value, guaranteed to be a number when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n */\nexports.assertNumber = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isNumber(value)) {\n    exports.doAssertFailure_(\n      'Expected number but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n\n/**\n * Checks if the value is a string if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {string} The value, guaranteed to be a string when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a string.\n */\nexports.assertString = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isString(value)) {\n    exports.doAssertFailure_(\n      'Expected string but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {string} */ (value);\n};\n\n\n/**\n * Checks if the value is a function if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Function} The value, guaranteed to be a function when asserts\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a function.\n */\nexports.assertFunction = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isFunction(value)) {\n    exports.doAssertFailure_(\n      'Expected function but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Function} */ (value);\n};\n\n\n/**\n * Checks if the value is an Object if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Object} The value, guaranteed to be a non-null object.\n * @throws {goog.asserts.AssertionError} When the value is not an object.\n */\nexports.assertObject = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isObject(value)) {\n    exports.doAssertFailure_(\n      'Expected object but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Object} */ (value);\n};\n\n\n/**\n * Checks if the value is an Array if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Array<?>} The value, guaranteed to be a non-null array.\n * @throws {goog.asserts.AssertionError} When the value is not an array.\n */\nexports.assertArray = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isArray(value)) {\n    exports.doAssertFailure_(\n      'Expected array but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Array<?>} */ (value);\n};\n\n\n/**\n * Checks if the value is a boolean if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {boolean} The value, guaranteed to be a boolean when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a boolean.\n */\nexports.assertBoolean = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isBoolean(value)) {\n    exports.doAssertFailure_(\n      'Expected boolean but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {boolean} */ (value);\n};\n\n\n/**\n * Checks if the value is a DOM Element if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Element} The value, likely to be a DOM Element when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not an Element.\n */\nexports.assertElement = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS &&\n      (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {\n    exports.doAssertFailure_(\n      'Expected Element but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Element} */ (value);\n};\n\n\n/**\n * Checks if the value is an instance of the user-defined type if\n * goog.asserts.ENABLE_ASSERTS is true.\n *\n * The compiler may tighten the type returned by this function.\n *\n * @param {?} value The value to check.\n * @param {function(new: T, ...)} type A user-defined constructor.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} When the value is not an instance of\n *     type.\n * @return {T}\n * @template T\n */\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !(value instanceof type)) {\n    exports.doAssertFailure_(\n      'Expected instanceof %s but got %s.',\n      [exports.getType_(type), exports.getType_(value)],\n      opt_message, Array.prototype.slice.call(arguments, 3));\n  }\n  return value;\n};\n\n\n/**\n * Checks that no enumerable keys are present in Object.prototype. Such keys\n * would break most code that use {@code for (var ... in ...)} loops.\n */\nexports.assertObjectPrototypeIsIntact = function() {\n  for (const key in Object.prototype) {\n    exports.fail(`${key} should not be enumerable in Object.prototype.`);\n  }\n};\n\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n * @param {*} value A constructor, object, or primitive.\n * @return {string} The best display name for the value, or 'unknown type name'.\n * @private\n */\nexports.getType_ = function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || 'unknown type name';\n  } else if (value instanceof Object) {\n    return value.constructor.displayName || value.constructor.name ||\n        Object.prototype.toString.call(value);\n  } else {\n    return value === null ? 'null' : typeof value;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.js","/**\n * @module app.desktopgeolocation\n*/\nconst exports = {};\n\nimport './desktopgeolocation.css';\nimport './common_dependencies.js';\nimport olMap from 'ol/Map.js';\n\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoGeolocationDesktop from 'ngeo/geolocation/desktop.js';\n\n\n/** @type {!angular.Module} **/\napp.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoGeolocationDesktop.name,\n  ngeoMapModule.name\n]);\n\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @constructor\n *//* @ngInject\n */\napp.MainController = function($scope, ngeoFeatureOverlayMgr) {\n\n  const positionFeatureStyle = new olStyleStyle({\n    image: new olStyleCircle({\n      radius: 6,\n      fill: new olStyleFill({color: 'rgba(230, 100, 100, 1)'}),\n      stroke: new olStyleStroke({color: 'rgba(230, 40, 40, 1)', width: 2})\n    })\n  });\n\n  const accuracyFeatureStyle = new olStyleStyle({\n    fill: new olStyleFill({color: 'rgba(100, 100, 230, 0.3)'}),\n    stroke: new olStyleStroke({color: 'rgba(40, 40, 230, 1)', width: 2})\n  });\n\n  /**\n   * @type {ngeox.DesktopGeolocationDirectiveOptions}\n   * @export\n   */\n  this.desktopGeolocationOptions = {\n    positionFeatureStyle: positionFeatureStyle,\n    accuracyFeatureStyle: accuracyFeatureStyle,\n    zoom: 17\n  };\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [0, 0],\n      zoom: 4\n    })\n  });\n\n  ngeoFeatureOverlayMgr.init(this.map);\n};\n\n\napp.module.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/desktopgeolocation.js","/**\n * @module ngeo.geolocation.desktop\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeolocation from 'ol/Geolocation.js';\nimport olMap from 'ol/Map.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDesktopGeolocation', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @enum {string}\n */\nexports.GeolocationEventType = {\n  /**\n   * Triggered when an error occurs.\n   */\n  ERROR: 'desktop-geolocation-error'\n};\n\n\n/**\n * Provide a \"desktop geolocation\" directive.\n *\n * Example:\n *\n *      <button ngeo-desktop-geolocation=\"\"\n *        ngeo-desktop-geolocation-map=\"ctrl.map\"\n *        ngeo-desktop-geolocation-options=\"ctrl.desktopGeolocationOptions\">\n *      </button>\n *\n * See our live example: [../examples/desktopgeolocation.html](../examples/desktopgeolocation.html)\n *\n * @htmlAttribute {ol.Map} gmf-geolocation-map The map.\n * @htmlAttribute {ngeox.DesktopGeolocationDirectiveOptions} gmf-geolocation-options The options.\n * @return {angular.Directive} The Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoDesktopGeolocation\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    scope: {\n      'getDesktopMapFn': '&ngeoDesktopGeolocationMap',\n      'getDesktopGeolocationOptionsFn': '&ngeoDesktopGeolocationOptions'\n    },\n    controller: 'ngeoGeolocationDesktopController'\n  };\n};\n\n\nexports.directive('ngeoDesktopGeolocation', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope The directive's scope.\n * @param {angular.JQLite} $element Element.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoDesktopGeolocationController\n */\nexports.Controller_ = function($scope, $element,\n  ngeoFeatureOverlayMgr, ngeoNotification) {\n\n  $element.on('click', this.toggle.bind(this));\n\n  const map = $scope['getDesktopMapFn']();\n  goog.asserts.assertInstanceof(map, olMap);\n\n  /**\n   * @type {!ol.Map}\n   * @private\n   */\n  this.map_ = map;\n\n  const options = $scope['getDesktopGeolocationOptionsFn']() || {};\n  goog.asserts.assertObject(options);\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.notification_ = ngeoNotification;\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n  /**\n   * @type {ol.Geolocation}\n   * @private\n   */\n  this.geolocation_ = new olGeolocation({\n    projection: map.getView().getProjection()\n  });\n\n  // handle geolocation error.\n  this.geolocation_.on('error', function(error) {\n    this.deactivate_();\n    this.notification_.error(error.message);\n    $scope.$emit(exports.GeolocationEventType.ERROR, error);\n  }, this);\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.positionFeature_ = new olFeature();\n\n  if (options.positionFeatureStyle) {\n    this.positionFeature_.setStyle(options.positionFeatureStyle);\n  }\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.accuracyFeature_ = new olFeature();\n\n  if (options.accuracyFeatureStyle) {\n    this.accuracyFeature_.setStyle(options.accuracyFeatureStyle);\n  }\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.zoom_ = options.zoom;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.active_ = false;\n\n  olEvents.listen(this.geolocation_, 'change:accuracyGeometry', () => {\n    this.accuracyFeature_.setGeometry(this.geolocation_.getAccuracyGeometry());\n  });\n\n  olEvents.listen(this.geolocation_, 'change:position', (event) => {\n    this.setPosition_(event);\n  });\n\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.toggle = function() {\n  if (this.active_) {\n    this.deactivate_();\n  } else {\n    this.activate_();\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.activate_ = function() {\n  this.featureOverlay_.addFeature(this.positionFeature_);\n  this.featureOverlay_.addFeature(this.accuracyFeature_);\n  this.geolocation_.setTracking(true);\n  this.active_ = true;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.deactivate_ = function() {\n  this.featureOverlay_.clear();\n  this.active_ = false;\n  this.notification_.clear();\n};\n\n\n/**\n * @param {ol.Object.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.setPosition_ = function(event) {\n  const position = /** @type {ol.Coordinate} */ (this.geolocation_.getPosition());\n  const point = new olGeomPoint(position);\n\n  this.positionFeature_.setGeometry(point);\n  this.map_.getView().setCenter(position);\n\n  if (this.zoom_ !== undefined) {\n    this.map_.getView().setZoom(this.zoom_);\n  }\n\n  this.geolocation_.setTracking(false);\n};\n\nexports.controller('ngeoGeolocationDesktopController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/geolocation/desktop.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapDirective from 'ngeo/map/directive.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap.js';\n\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', [\n  ngeoDatasourceSyncDataSourcesMap.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\nimport googAsserts from 'goog/asserts.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSyncDataSourcesMap', [\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('ngeoSyncDataSourcesMap', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30"],"sourceRoot":""}