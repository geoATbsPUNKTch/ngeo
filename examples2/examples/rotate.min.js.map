{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/interaction/ModifyEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Modify.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./examples/rotate.js","webpack:///./src/map/scaleselector.js","webpack:///./src/interaction/Rotate.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js"],"names":["__webpack_exports__","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","call","this","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","Object","ol","prototype","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","undefined","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","forEach","unlistenByKey","ol_Image","ImageWMS","opt_options","options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","x","Math","floor","y","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","listen","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","axisOrientation","getAxisOrientation","bbox","substr","join","uri","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","ModifyEventType","Modify","features","Pointer","handleDownEvent","handleDownEvent_","handleDragEvent","handleDragEvent_","handleEvent","handleUpEvent","handleUpEvent_","condition_","condition","primaryAction","defaultDeleteCondition_","mapBrowserEvent","altKeyOnly","singleClick","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","always","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","RBush","pixelTolerance_","pixelTolerance","snappedToVertex_","changingFeature_","dragSegments_","overlay_","Vector","source","source_Vector","useSpatialIndex","wrapX","style","getDefaultStyleFunction","updateWhileAnimating","updateWhileInteracting","SEGMENT_WRITERS_","Point","writePointGeometry_","LineString","writeLineStringGeometry_","LinearRing","Polygon","writePolygonGeometry_","MultiPoint","writeMultiPointGeometry_","MultiLineString","writeMultiLineStringGeometry_","MultiPolygon","writeMultiPolygonGeometry_","Circle","writeCircleGeometry_","GeometryCollection","writeGeometryCollectionGeometry_","source_","Collection","getFeatures","VectorEventType","ADDFEATURE","handleSourceAdd_","REMOVEFEATURE","handleSourceRemove_","Error","features_","addFeature_","bind","CollectionEventType","ADD","handleFeatureAdd_","REMOVE","handleFeatureRemove_","lastPointerEvent_","MODIFY_SEGMENT_CIRCLE_CENTER_INDEX","MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX","feature","geometry","getGeometry","getType","map","getMap","isRendered","getActive","handlePointerAtPixel_","handleFeatureChange_","willModifyFeatures_","evt","dispatchEvent","Event","removeFeature_","removeFeatureSegmentData_","getLength","getSource","removeFeature","unlisten","rBush","nodesToRemove","node","push","i","length","remove","setActive","active","setMap","event","coordinates","getCoordinates","segmentData","segment","insert","points","ii","depth","index","slice","lines","j","jj","rings","polygons","k","kk","getCenter","centerSegmentData","circumferenceSegmentData","featureSegments","geometries","getGeometriesArray","createOrUpdateVertexFeature_","vertexFeature","setCoordinates","Feature","addFeature","compareIndexes_","a","b","pixel","pixelCoordinate","getCoordinateFromPixel","insertVertices","vertex","vertexExtent","segmentDataMatches","getInExtent","componentSegments","sort","segmentDataMatch","uid","Array","GeometryType","CIRCLE","closestVertex","closestOnSegmentData_","equals","LINE_STRING","MULTI_LINE_STRING","insertVertex_","apply","dragSegment","getStride","POINT","MULTI_POINT","POLYGON","MULTI_POLYGON","setCenter","setRadius","distance","setGeometryCoordinates_","update","MapBrowserPointerEvent","handled","getView","getInteracting","type","MapBrowserEventType","POINTERMOVE","handlingDownUpSequence","handlePointerMove_","SINGLECLICK","removePoint","sortByDistance","pointDistanceToSegmentDataSquared_","box","nodes","closestSegment","vertexPixel","getPixelFromCoordinate","dist","vertexSegments","pixel1","pixel2","squaredDist1","squaredDistance","squaredDist2","sqrt","min","pointCoordinates","circleGeometry","distanceToCenterSquared","distanceToCircumference","getRadius","squaredDistanceToSegment","getClosestPoint","closestOnSegment","splice","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","POINTERDRAG","removeVertex_","dragSegments","segmentsByFeature","component","left","newIndex","right","deleted","pop","segments","delta","forEachInExtent","array","Style","createDefaultEditing","mapBrowserPointerEvent","olBase","__webpack_require__","_Event","exports","detail","arguments","_Event2","default","inherits","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","res","key","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","module","angular","value","_Collection2","_index2","requires","name","_index","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","get","set","olObj","featureUidToGroupIndex_","groups_","_Vector4","layer_","_Vector2","styleFunction_","groupIndex","_asserts2","assert","featureUid","getUid","toString","clear","group","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","setStyle","createFunction","service","defaultMessage","defaultArgs","givenMessage","givenArgs","message","args","e","AssertionError","errorHandler_","errorHandler","ENABLE_ASSERTS","opt_message","var_args","doAssertFailure_","goog","isNumber","typeOf","isString","isFunction","isObject","isArray","isBoolean","nodeType","dom","NodeType","ELEMENT","getType_","fail","Function","displayName","constructor","_typeof","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","getLayers","item","layer","mapUid","previous","setAt","removeAt","insertAt","_CustomEvent2","current","updateDimensions","dimensions","baseBgLayer","layers","getArray","assertInstanceof","_Layer2","hasUpdates","updatedDimensions","refresh","_SyncDataSourcesMap2","directive_","$window","ngeoSyncDataSourcesMap","restrict","link","scope","element","attrs","prop","$eval","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","_events2","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","view","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","target","_View2","_this","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","_DataSources2","manager","manager_","index_","setFeatures","$scope","$element","$attrs","mapExpr","recenter","attr","getSize","fit","zoom","setZoom","on","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","$watch","newVal","oldVal","cancelAnimationFrame","app","ngeo","_module3","MainController","_Tile2","_OSM2","polygon","_Polygon2","_Feature2","vectorSource","vectorLayer","styles","fill","_Fill2","color","stroke","_Stroke2","width","_Circle2","text","_Text2","font","concat","interaction","_Rotate2","addInteraction","forEachFeatureAtPixel","controller","olArray","templateUrl","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","keys","newLength","Number","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","_this2","$applyAsync","olExtent","keyPressListenerKey_","feature_","coordinate_","centerCoordinate_","_Modify2","centerFeatures_","_Pointer2","handleDown_","handleDrag_","handleUp_","document","handleKeyUp_","_Geometry2","point","_Point2","getCenterCoordinate_","centerFeature","found","f","getFlatMidpoint","getFlatInteriorPoint","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","atan2","angle","rotate","keyCode","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_0__index_js__","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","placement","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","clone","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getText","getTextAlign","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding"],"mappings":"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","file":"rotate.min.js","sourcesContent":["/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/ModifyEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature modification start\n   * @event ol.interaction.Modify.Event#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ol.interaction.Modify.Event#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/ModifyEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Modify\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport ModifyEventType from '../interaction/ModifyEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ol.interaction.Modify.Event\n * @api\n */\nconst Modify = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Modify.handleDownEvent_,\n    handleDragEvent: Modify.handleDragEvent_,\n    handleEvent: Modify.handleEvent,\n    handleUpEvent: Modify.handleUpEvent_\n  });\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.primaryAction;\n\n\n  /**\n   * @private\n   * @param {ol.MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n    return _ol_events_condition_.altKeyOnly(mapBrowserEvent) &&\n      _ol_events_condition_.singleClick(mapBrowserEvent);\n  };\n\n  /**\n   * @type {ol.EventsConditionType}\n   * @private\n   */\n  this.deleteCondition_ = options.deleteCondition ?\n    options.deleteCondition : this.defaultDeleteCondition_;\n\n  /**\n   * @type {ol.EventsConditionType}\n   * @private\n   */\n  this.insertVertexCondition_ = options.insertVertexCondition ?\n    options.insertVertexCondition : _ol_events_condition_.always;\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * Segments intersecting {@link this.vertexFeature_} by segment uid.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.vertexSegments_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * Tracks if the next `singleclick` event should be ignored to prevent\n   * accidental deletion right after vertex creation.\n   * @type {boolean}\n   * @private\n   */\n  this.ignoreNextSingleClick_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new RBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = [];\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      Modify.getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'Circle': this.writeCircleGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_\n  };\n\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = null;\n\n  let features;\n  if (options.source) {\n    this.source_ = options.source;\n    features = new Collection(this.source_.getFeatures());\n    _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n      this.handleSourceAdd_, this);\n    _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n      this.handleSourceRemove_, this);\n  } else {\n    features = options.features;\n  }\n  if (!features) {\n    throw new Error('The modify interaction requires features or a source');\n  }\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = features;\n\n  this.features_.forEach(this.addFeature_.bind(this));\n  _ol_events_.listen(this.features_, CollectionEventType.ADD,\n    this.handleFeatureAdd_, this);\n  _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n    this.handleFeatureRemove_, this);\n\n  /**\n   * @type {ol.MapBrowserPointerEvent}\n   * @private\n   */\n  this.lastPointerEvent_ = null;\n\n};\n\ninherits(Modify, PointerInteraction);\n\n\n/**\n * @define {number} The segment index assigned to a circle's center when\n * breaking up a cicrle into ModifySegmentDataType segments.\n */\nModify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX = 0;\n\n/**\n * @define {number} The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n */\nModify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n    this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n  }\n  const map = this.getMap();\n  if (map && map.isRendered() && this.getActive()) {\n    this.handlePointerAtPixel_(this.lastPixel_, map);\n  }\n  _ol_events_.listen(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nModify.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYSTART, this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  _ol_events_.unlisten(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setActive = function(active) {\n  if (this.vertexFeature_ && !active) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  PointerInteraction.prototype.setActive.call(this, active);\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.source.Vector.Event} event Event.\n * @private\n */\nModify.prototype.handleSourceAdd_ = function(event) {\n  if (event.feature) {\n    this.features_.push(event.feature);\n  }\n};\n\n\n/**\n * @param {ol.source.Vector.Event} event Event.\n * @private\n */\nModify.prototype.handleSourceRemove_ = function(event) {\n  if (event.feature) {\n    this.features_.remove(event.feature);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureAdd_ = function(evt) {\n  this.addFeature_(/** @type {ol.Feature} */ (evt.element));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureChange_ = function(evt) {\n  if (!this.changingFeature_) {\n    const feature = /** @type {ol.Feature} */ (evt.target);\n    this.removeFeature_(feature);\n    this.addFeature_(feature);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nModify.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  let coordinates, i, ii, segmentData;\n  for (i = 0, ii = points.length; i < ii; ++i) {\n    coordinates = points[i];\n    segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n      feature: feature,\n      geometry: geometry,\n      depth: [i],\n      index: i,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  let i, ii, segment, segmentData;\n  for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    segment = coordinates.slice(i, i + 2);\n    segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: i,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = lines.length; j < jj; ++j) {\n    coordinates = lines[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nModify.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, k, kk, rings, segment, segmentData;\n  for (k = 0, kk = polygons.length; k < kk; ++k) {\n    rings = polygons[k];\n    for (j = 0, jj = rings.length; j < jj; ++j) {\n      coordinates = rings[j];\n      for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segment = coordinates.slice(i, i + 2);\n        segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j, k],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * We convert a circle into two segments.  The segment at index\n * {@link ol.interaction.Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX} is the\n * circle's center (a point).  The segment at index\n * {@link ol.interaction.Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX} is\n * the circumference, and is not a line segment.\n *\n * @param {ol.Feature} feature Feature.\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nModify.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCenter();\n  const centerSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const circumferenceSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const featureSegments = [centerSegmentData, circumferenceSegmentData];\n  centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n  this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n  this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nModify.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    this.SEGMENT_WRITERS_[geometries[i].getType()].call(\n      this, feature, geometries[i]);\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nModify.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nModify.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleDownEvent_ = function(evt) {\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  const pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const insertVertices = [];\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(Modify.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        const closestVertex = Modify.closestOnSegmentData_(pixelCoordinate, segmentDataMatch);\n        if (_ol_coordinate_.equals(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (_ol_coordinate_.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (_ol_coordinate_.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (let j = insertVertices.length - 1; j >= 0; --j) {\n      this.insertVertex_.apply(this, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleDragEvent_ = function(evt) {\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  const vertex = evt.coordinate;\n  for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    const dragSegment = this.dragSegments_[i];\n    const segmentData = dragSegment[0];\n    const depth = segmentData.depth;\n    const geometry = segmentData.geometry;\n    let coordinates;\n    const segment = segmentData.segment;\n    const index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX) {\n          this.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this.changingFeature_ = true;\n          geometry.setRadius(_ol_coordinate_.distance(geometry.getCenter(), vertex));\n          this.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleUpEvent_ = function(evt) {\n  let segmentData;\n  let geometry;\n  for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n    segmentData = this.dragSegments_[i][0];\n    geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      const coordinates = geometry.getCenter();\n      const centerSegmentData = segmentData.featureSegments[0];\n      const circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this.rBush_.update(boundingExtent(segmentData.segment),\n        segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Modify}\n * @api\n */\nModify.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nModify.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nModify.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return Modify.pointDistanceToSegmentDataSquared_(pixelCoordinate, a) -\n        Modify.pointDistanceToSegmentDataSquared_(pixelCoordinate, b);\n  };\n\n  const box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n    map.getView().getResolution() * this.pixelTolerance_);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = Modify.closestOnSegmentData_(pixelCoordinate, node);\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    let dist = _ol_coordinate_.distance(pixel, vertexPixel);\n    if (dist <= this.pixelTolerance_) {\n      const vertexSegments = {};\n\n      if (node.geometry.getType() === GeometryType.CIRCLE &&\n      node.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        this.snappedToVertex_ = true;\n        this.createOrUpdateVertexFeature_(vertex);\n      } else {\n        const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        const squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n        const squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((_ol_coordinate_.equals(closestSegment[0], segment[0]) &&\n              _ol_coordinate_.equals(closestSegment[1], segment[1]) ||\n              (_ol_coordinate_.equals(closestSegment[0], segment[1]) &&\n              _ol_coordinate_.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n      }\n\n      vertexSegments[getUid(closestSegment)] = true;\n      this.vertexSegments_ = vertexSegments;\n      return;\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {ol.Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {ol.ModifySegmentDataType} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nModify.pointDistanceToSegmentDataSquared_ = function(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    const circleGeometry = /** @type {ol.geom.Circle} */ (geometry);\n\n    if (segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n      const distanceToCenterSquared =\n            _ol_coordinate_.squaredDistance(circleGeometry.getCenter(), pointCoordinates);\n      const distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return _ol_coordinate_.squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n};\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {ol.Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {ol.ModifySegmentDataType} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {ol.Coordinate} The point closest to the specified line segment.\n */\nModify.closestOnSegmentData_ = function(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return _ol_coordinate_.closestOnSegment(pointCoordinates, segmentData.segment);\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} segmentData Segment data.\n * @param {ol.Coordinate} vertex Vertex.\n * @private\n */\nModify.prototype.insertVertex_ = function(segmentData, vertex) {\n  const segment = segmentData.segment;\n  const feature = segmentData.feature;\n  const geometry = segmentData.geometry;\n  const depth = segmentData.depth;\n  const index = /** @type {number} */ (segmentData.index);\n  let coordinates;\n\n  while (vertex.length < geometry.getStride()) {\n    vertex.push(0);\n  }\n\n  switch (geometry.getType()) {\n    case GeometryType.MULTI_LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.MULTI_POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates.splice(index + 1, 0, vertex);\n      break;\n    default:\n      return;\n  }\n\n  this.setGeometryCoordinates_(geometry, coordinates);\n  const rTree = this.rBush_;\n  rTree.remove(segmentData);\n  this.updateSegmentIndices_(geometry, index, depth, 1);\n  const newSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    segment: [segment[0], vertex],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index\n  });\n  rTree.insert(boundingExtent(newSegmentData.segment),\n    newSegmentData);\n  this.dragSegments_.push([newSegmentData, 1]);\n\n  const newSegmentData2 = /** @type {ol.ModifySegmentDataType} */ ({\n    segment: [vertex, segment[1]],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index + 1\n  });\n  rTree.insert(boundingExtent(newSegmentData2.segment),\n    newSegmentData2);\n  this.dragSegments_.push([newSegmentData2, 0]);\n  this.ignoreNextSingleClick_ = true;\n};\n\n/**\n * Removes the vertex currently being pointed.\n * @return {boolean} True when a vertex was removed.\n * @api\n */\nModify.prototype.removePoint = function() {\n  if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n    const evt = this.lastPointerEvent_;\n    this.willModifyFeatures_(evt);\n    this.removeVertex_();\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes a vertex from all matching features.\n * @return {boolean} True when a vertex was removed.\n * @private\n */\nModify.prototype.removeVertex_ = function() {\n  const dragSegments = this.dragSegments_;\n  const segmentsByFeature = {};\n  let deleted = false;\n  let component, coordinates, dragSegment, geometry, i, index, left;\n  let newIndex, right, segmentData, uid;\n  for (i = dragSegments.length - 1; i >= 0; --i) {\n    dragSegment = dragSegments[i];\n    segmentData = dragSegment[0];\n    uid = getUid(segmentData.feature);\n    if (segmentData.depth) {\n      // separate feature components\n      uid += '-' + segmentData.depth.join('-');\n    }\n    if (!(uid in segmentsByFeature)) {\n      segmentsByFeature[uid] = {};\n    }\n    if (dragSegment[1] === 0) {\n      segmentsByFeature[uid].right = segmentData;\n      segmentsByFeature[uid].index = segmentData.index;\n    } else if (dragSegment[1] == 1) {\n      segmentsByFeature[uid].left = segmentData;\n      segmentsByFeature[uid].index = segmentData.index + 1;\n    }\n\n  }\n  for (uid in segmentsByFeature) {\n    right = segmentsByFeature[uid].right;\n    left = segmentsByFeature[uid].left;\n    index = segmentsByFeature[uid].index;\n    newIndex = index - 1;\n    if (left !== undefined) {\n      segmentData = left;\n    } else {\n      segmentData = right;\n    }\n    if (newIndex < 0) {\n      newIndex = 0;\n    }\n    geometry = segmentData.geometry;\n    coordinates = geometry.getCoordinates();\n    component = coordinates;\n    deleted = false;\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        if (coordinates[segmentData.depth[0]].length > 2) {\n          coordinates[segmentData.depth[0]].splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.LINE_STRING:\n        if (coordinates.length > 2) {\n          coordinates.splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.MULTI_POLYGON:\n        component = component[segmentData.depth[1]];\n        /* falls through */\n      case GeometryType.POLYGON:\n        component = component[segmentData.depth[0]];\n        if (component.length > 4) {\n          if (index == component.length - 1) {\n            index = 0;\n          }\n          component.splice(index, 1);\n          deleted = true;\n          if (index === 0) {\n            // close the ring again\n            component.pop();\n            component.push(component[0]);\n            newIndex = component.length - 1;\n          }\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (deleted) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n      const segments = [];\n      if (left !== undefined) {\n        this.rBush_.remove(left);\n        segments.push(left.segment[0]);\n      }\n      if (right !== undefined) {\n        this.rBush_.remove(right);\n        segments.push(right.segment[1]);\n      }\n      if (left !== undefined && right !== undefined) {\n        const newSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n          depth: segmentData.depth,\n          feature: segmentData.feature,\n          geometry: segmentData.geometry,\n          index: newIndex,\n          segment: segments\n        });\n        this.rBush_.insert(boundingExtent(newSegmentData.segment),\n          newSegmentData);\n      }\n      this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n      if (this.vertexFeature_) {\n        this.overlay_.getSource().removeFeature(this.vertexFeature_);\n        this.vertexFeature_ = null;\n      }\n      dragSegments.length = 0;\n    }\n\n  }\n  return deleted;\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nModify.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {number} index Index.\n * @param {Array.<number>|undefined} depth Depth.\n * @param {number} delta Delta (1 or -1).\n * @private\n */\nModify.prototype.updateSegmentIndices_ = function(\n  geometry, index, depth, delta) {\n  this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n    if (segmentDataMatch.geometry === geometry &&\n        (depth === undefined || segmentDataMatch.depth === undefined ||\n        equals(segmentDataMatch.depth, depth)) &&\n        segmentDataMatch.index > index) {\n      segmentDataMatch.index += delta;\n    }\n  });\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nModify.getDefaultStyleFunction = function() {\n  const style = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Modify} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.ModifyEvent}\n * @param {ol.interaction.ModifyEventType} type Type.\n * @param {ol.Collection.<ol.Feature>} features The features modified.\n * @param {ol.MapBrowserPointerEvent} mapBrowserPointerEvent Associated\n *     {@link ol.MapBrowserPointerEvent}.\n */\nModify.Event = function(type, features, mapBrowserPointerEvent) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being modified.\n   * @type {ol.Collection.<ol.Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * Associated {@link ol.MapBrowserEvent}.\n   * @type {ol.MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserPointerEvent;\n};\ninherits(Modify.Event, Event);\nexport default Modify;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Modify.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.value('ngeoDataSources', new olCollection());\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/* eslint valid-jsdoc: 0, prefer-rest-params: 0,  */\n// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Utilities to check the preconditions, postconditions and\n * invariants runtime.\n *\n * Methods in this package should be given special treatment by the compiler\n * for type-inference. For example, <code>goog.asserts.assert(foo)</code>\n * will restrict <code>foo</code> to a truthy value.\n *\n * The compiler has an option to disable asserts. So code like:\n * <code>\n * var x = goog.asserts.assert(foo()); goog.asserts.assert(bar());\n * </code>\n * will be transformed into:\n * <code>\n * var x = foo();\n * </code>\n * The compiler will leave in foo() (because its return value is used),\n * but it will remove bar() because it assumes it does not have side-effects.\n *\n * @author agrieve@google.com (Andrew Grieve)\n */\n\nconst exports = {};\n\n/**\n * Throws an exception with the given message and \"Assertion failed\" prefixed\n * onto it.\n * @param {string} defaultMessage The message to use if givenMessage is empty.\n * @param {Array<*>} defaultArgs The substitution arguments for defaultMessage.\n * @param {string|undefined} givenMessage Message supplied by the caller.\n * @param {Array<*>} givenArgs The substitution arguments for givenMessage.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n * @private\n */\nexports.doAssertFailure_ = function(\n  defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  let message = 'Assertion failed';\n  let args;\n  if (givenMessage) {\n    message += `: ${givenMessage}`;\n    args = givenArgs;\n  } else if (defaultMessage) {\n    message += `: ${defaultMessage}`;\n    args = defaultArgs;\n  }\n  // The '' + works around an Opera 10 bug in the unit tests. Without it,\n  // a stack trace is added to var message above. With this, a stack trace is\n  // not added until this line (it causes the extra garbage to be added after\n  // the assertion message instead of in the middle of it).\n  const e = new exports.AssertionError(`${message}`, args || []);\n  exports.errorHandler_(e);\n};\n\n\n/**\n * Sets a custom error handler that can be used to customize the behavior of\n * assertion failures, for example by turning all assertion failures into log\n * messages.\n * @param {function(!goog.asserts.AssertionError)} errorHandler\n */\nexports.setErrorHandler = function(errorHandler) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_ = errorHandler;\n  }\n};\n\n\n/**\n * Checks if the condition evaluates to true if goog.asserts.ENABLE_ASSERTS is\n * true.\n * @template T\n * @param {T} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {T} The value of the condition.\n * @throws {goog.asserts.AssertionError} When the condition evaluates to false.\n */\nexports.assert = function(condition, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !condition) {\n    exports.doAssertFailure_(\n      '', null, opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return condition;\n};\n\n\n/**\n * Fails if goog.asserts.ENABLE_ASSERTS is true. This function is useful in case\n * when we want to add a check in the unreachable area like switch-case\n * statement:\n *\n * <pre>\n *  switch(type) {\n *    case FOO: doSomething(); break;\n *    case BAR: doSomethingElse(); break;\n *    default: goog.asserts.fail('Unrecognized type: ' + type);\n *      // We have only 2 types - \"default:\" section is unreachable code.\n *  }\n * </pre>\n *\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} Failure.\n */\nexports.fail = function(opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_(\n      new exports.AssertionError(\n        `Failure${opt_message ? `: ${opt_message}` : ''}`,\n        Array.prototype.slice.call(arguments, 1)));\n  }\n};\n\n\n/**\n * Checks if the value is a number if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {number} The value, guaranteed to be a number when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n */\nexports.assertNumber = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isNumber(value)) {\n    exports.doAssertFailure_(\n      'Expected number but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n\n/**\n * Checks if the value is a string if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {string} The value, guaranteed to be a string when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a string.\n */\nexports.assertString = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isString(value)) {\n    exports.doAssertFailure_(\n      'Expected string but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {string} */ (value);\n};\n\n\n/**\n * Checks if the value is a function if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Function} The value, guaranteed to be a function when asserts\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a function.\n */\nexports.assertFunction = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isFunction(value)) {\n    exports.doAssertFailure_(\n      'Expected function but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Function} */ (value);\n};\n\n\n/**\n * Checks if the value is an Object if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Object} The value, guaranteed to be a non-null object.\n * @throws {goog.asserts.AssertionError} When the value is not an object.\n */\nexports.assertObject = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isObject(value)) {\n    exports.doAssertFailure_(\n      'Expected object but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Object} */ (value);\n};\n\n\n/**\n * Checks if the value is an Array if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Array<?>} The value, guaranteed to be a non-null array.\n * @throws {goog.asserts.AssertionError} When the value is not an array.\n */\nexports.assertArray = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isArray(value)) {\n    exports.doAssertFailure_(\n      'Expected array but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Array<?>} */ (value);\n};\n\n\n/**\n * Checks if the value is a boolean if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {boolean} The value, guaranteed to be a boolean when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a boolean.\n */\nexports.assertBoolean = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isBoolean(value)) {\n    exports.doAssertFailure_(\n      'Expected boolean but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {boolean} */ (value);\n};\n\n\n/**\n * Checks if the value is a DOM Element if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Element} The value, likely to be a DOM Element when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not an Element.\n */\nexports.assertElement = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS &&\n      (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {\n    exports.doAssertFailure_(\n      'Expected Element but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Element} */ (value);\n};\n\n\n/**\n * Checks if the value is an instance of the user-defined type if\n * goog.asserts.ENABLE_ASSERTS is true.\n *\n * The compiler may tighten the type returned by this function.\n *\n * @param {?} value The value to check.\n * @param {function(new: T, ...)} type A user-defined constructor.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} When the value is not an instance of\n *     type.\n * @return {T}\n * @template T\n */\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !(value instanceof type)) {\n    exports.doAssertFailure_(\n      'Expected instanceof %s but got %s.',\n      [exports.getType_(type), exports.getType_(value)],\n      opt_message, Array.prototype.slice.call(arguments, 3));\n  }\n  return value;\n};\n\n\n/**\n * Checks that no enumerable keys are present in Object.prototype. Such keys\n * would break most code that use {@code for (var ... in ...)} loops.\n */\nexports.assertObjectPrototypeIsIntact = function() {\n  for (const key in Object.prototype) {\n    exports.fail(`${key} should not be enumerable in Object.prototype.`);\n  }\n};\n\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n * @param {*} value A constructor, object, or primitive.\n * @return {string} The best display name for the value, or 'unknown type name'.\n * @private\n */\nexports.getType_ = function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || 'unknown type name';\n  } else if (value instanceof Object) {\n    return value.constructor.displayName || value.constructor.name ||\n        Object.prototype.toString.call(value);\n  } else {\n    return value === null ? 'null' : typeof value;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapDirective from 'ngeo/map/directive.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap.js';\n\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', [\n  ngeoDatasourceSyncDataSourcesMap.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\nimport googAsserts from 'goog/asserts.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSyncDataSourcesMap', [\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('ngeoSyncDataSourcesMap', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module app.rotate\n*/\nconst exports = {};\n\nimport './rotate.css';\nimport './common_dependencies.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\n\nimport olCollection from 'ol/Collection.js';\nimport olFeature from 'ol/Feature.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n\n/** @type {!angular.Module} **/\napp.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name\n]);\n\n\n/** @type {!angular.Module} **/\nconst module = angular.module('app', ['ngeo']);\n\n\n/**\n * @constructor\n *//* @ngInject\n */\napp.MainController = function() {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [-10997148, 4569099],\n      zoom: 4\n    })\n  });\n\n  const map = this.map;\n\n  const polygon = new olGeomPolygon([[\n    [-9e6, 4e6], [-11e6, 4e6], [-11e6, 6e6], [-9e6, 6e6]\n  ]]);\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.features = new olCollection();\n\n  this.features.push(new olFeature({\n    geometry: polygon\n  }));\n\n  const vectorSource = new olSourceVector({\n    features: this.features\n  });\n  const vectorLayer = new olLayerVector({\n    source: vectorSource\n  });\n\n  // Use vectorLayer.setMap(map) rather than map.addLayer(vectorLayer). This\n  // makes the vector layer \"unmanaged\", meaning that it is always on top.\n  vectorLayer.setMap(map);\n\n\n  const style = (function() {\n    const styles = {};\n    styles['Polygon'] = [\n      new olStyleStyle({\n        fill: new olStyleFill({\n          color: [255, 255, 255, 0.5]\n        })\n      }),\n      new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: 5\n        })\n      }),\n      new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [0, 153, 255, 1],\n          width: 3\n        })\n      })\n    ];\n    styles['Point'] = new olStyleStyle({\n      image: new olStyleCircle(),\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#ffffff'\n        })\n      })\n    });\n\n    styles['GeometryCollection'] = styles['Polygon'].concat(styles['Point']);\n\n    return function(feature, resolution) {\n      return styles[feature.getGeometry().getType()];\n    };\n  })();\n\n  /**\n   * @type {ngeo.interaction.Rotate}\n   * @export\n   */\n  this.interaction = new ngeoInteractionRotate(\n    /** @type {olx.interaction.ModifyOptions} */({\n      features: this.features,\n      layers: [vectorLayer],\n      style: style\n    }));\n\n  const interaction = this.interaction;\n  interaction.setActive(false);\n  map.addInteraction(interaction);\n\n  map.on('singleclick', function(evt) {\n    const feature = this.map.forEachFeatureAtPixel(evt.pixel,\n      feature => feature);\n    if (feature) {\n      this.interaction.setActive(true);\n    }\n  }, this);\n};\n\n\nmodule.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/rotate.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ngeo.interaction.Rotate\n*/\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olCollection from 'ol/Collection.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  const style = options.style ? options.style : olInteractionModify.getDefaultStyleFunction();\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(this.addFeature_, this);\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(this.removeFeature_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifystart'), this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olGeomLineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olGeomPolygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Rotate.js","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 99\n// module chunks = 0 1 2 8 10 19 24"],"sourceRoot":""}