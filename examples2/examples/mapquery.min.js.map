{"version":3,"sources":["webpack:///./src/filters.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./src/misc/ToolActivate.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/utils.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/rule/Rule.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./node_modules/openlayers/src/ol/format/JSONFeature.js","webpack:///./node_modules/openlayers/src/ol/format/GeoJSON.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/misc/Time.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./node_modules/openlayers/src/ol/format/KML.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/query/Querent.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/Attribute.js","webpack:///./src/datasource/OGC.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./src/download/service.js","webpack:///./node_modules/openlayers/src/ol/format/GPX.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/query/MapQuerent.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./src/filter/RuleHelper.js","webpack:///./src/rule/Date.js","webpack:///./src/rule/Geometry.js","webpack:///./src/rule/Select.js","webpack:///./src/rule/Text.js","webpack:///./src/WFSDescribeFeatureType.js","webpack:///./node_modules/openlayers/src/ol/format/WMSCapabilities.js","webpack:///./src/CustomEvent.js","webpack:///./src/datasource/Helper.js","webpack:///./src/format/WFSAttribute.js","webpack:///./src/query/mapQueryComponent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./examples/mapquery.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/interaction/Measure.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js"],"names":["__webpack_require__","olMath","_index2","default","Scalify","$filter","numberFilter","filterFn","scale","text","module","filter","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","undefined","Infinity","sign","Math","abs","nb_decimal","floor","log","factor","pow","round","decimal","unit","str_number","length","substring","groups","str_unit","index","unshift","join","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","opt_type","divisor","prefix","index_max","postfix","space","NumberCoordinates","coordinates","opt_fractionDigits","opt_template","template","x","y","fractionDigits","parseInt","replace","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","modulo","dms","d","m","s","_string2","padNumber","charAt","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","__WEBPACK_IMPORTED_MODULE_0__xml_js__","XML","prototype","read","source","isDocument","this","readFromDocument","isNode","readFromNode","doc","parse","node","__webpack_exports__","_index","toolContext","activePropertyName","getActive","setActive","newVal","exports","angular","requires","push","name","btnGroupComponent_","$parse","restrict","controller","link","scope","element","attrs","assign","$watch","buttons_","some","buttonModel","newValue","directive","BtnGroupController","$scope","scope_","activate","forEach","expressionFn","i","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","on","$apply","$setViewValue","$viewValue","$render","toggleClass","geometry","multiGeom","_MultiPoint2","appendPoint","_MultiLineString2","appendLineString","_MultiPolygon2","appendPolygon","navigator","userAgent","indexOf","hex","rgb","r","g","b","Error","colorZeroPadding","toString","queryString","queryData","pairs","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","pair","value","indexOfEquals","decodeURIComponent","err","return","queryItem","key","encodeURIComponent","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","options","_classCallCheck","active_","active","expression","lowerBoundary_","lowerBoundary","operator_","operator","upperBoundary_","upperBoundary","isCustom_","isCustom","name_","operators_","operators","propertyName_","propertyName","type_","goog","asserts","assert","type","listenerKeys","_createClass","getExpression","setExpression","ol","Observable","unByKey","get","set","OperatorType","BETWEEN","TemporalOperatorType","DURING","EQUAL_TO","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","LESSER_THAN","LESSER_THAN_OR_EQUAL_TO","LIKE","NOT_EQUAL_TO","SpatialOperatorType","CONTAINS","INTERSECTS","WITHIN","BEGINS","ENDS","EQUALS","XLink","readHref","getAttributeNS","unitPrefixFormat","numberFormat","opt_options","_Measure2","call","continueMsg","document","createElement","textContent","_asserts2","inherits","createDrawInteraction","style","_DrawAzimut2","handleMeasure","callback","geom","assertInstanceof","sketchFeature","getGeometry","_GeometryCollection2","line","getGeometries","_LineString2","getFormattedAzimutRadius","getMap","getView","getProjection","proj","Projection","decimals","precision","getLastCoordinate","projection","formatLength","formatAzimut","output","getFormattedAzimut","getFormattedLength","format","getAzimut","coords","getCoordinates","dx","dy","rad","acos","sqrt","PI","JSONFeature","format_Feature","getObject","object","JSON","Object","getType","FormatType","readFeature","readFeatureFromObject","getReadOptions","readFeatures","readFeaturesFromObject","readGeometry","readGeometryFromObject","readProjection","readProjectionFromObject","writeFeature","feature","stringify","writeFeatureObject","writeFeatures","features","writeFeaturesObject","writeGeometry","writeGeometryObject","format_JSONFeature","GeoJSON","defaultDataProjection","featureProjection","defaultFeatureProjection","geometryName_","geometryName","extractGeometryName_","extractGeometryName","GEOMETRY_READERS","Point","LineString","Polygon","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","geometries","map","GEOMETRY_WRITERS","right","rightHanded","getGeometriesArray","obj","Circle","geometryReader","geometryWriter","geoJSONFeature","Feature","setGeometryName","geometry_name","setGeometry","id","setId","properties","setProperties","geoJSONFeatures","ii","crs","adaptOptions","getId","getProperties","getGeometryName","objects","olFunctions","_Pointer2","handleDownEvent","handleDownEvent_","handleEvent","handleEvent_","handleUpEvent","handleUpEvent_","downPx_","source_","started_","sketchFeature_","sketchPoint_","squaredClickTolerance_","sketchLayer_","_Vector2","_Vector4","useSpatialIndex","wrapX","_Draw2","getDefaultStyleFunction","_events2","listen","updateState_","event","pixel","downPx","clickPx","pass","handlePointerMove_","finishDrawing_","startDrawing_","mapBrowserEvent","modifyDrawing_","createOrUpdateSketchPoint_","coordinate","slice","_Feature2","_Point2","updateSketchFeatures_","sketchPointGeom","setCoordinates","sketchFeatures","getSource","clear","addFeatures","start","circle","_Circle2","dispatchEvent","Event","last","setRadius","getLength","abortDrawing_","shouldStopEvent","FALSE","setMap","addFeature","$rootScope","groups_","registerTool","groupName","tool","opt_defaultActivate","_this","entries","unlisten","oldVal","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterTool","splice","unregisterGroup","activateTool","deactivateTool","hasActiveTool","service","getOptions","time","minDate","Date","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","mode","getTime","values","getUTCDate","localDate","getUTCFullYear","getUTCMonth","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","featureType","featureNS_","featureNS","gmlFormat_","gmlFormat","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","schemaLocation_","schemaLocation","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_0__index_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","readFeaturesFromNode","context","__WEBPACK_IMPORTED_MODULE_9__obj_js__","objectStack","FEATURE_COLLECTION_PARSERS","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","GMLNS","makeArrayPusher","readFeaturesInternal","pushParseAndPop","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","n","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","FEATURE_COLLECTION_PARSERS_","http://www.opengis.net/gml","boundedBy","makeObjectPropertySetter","readGeometryElement","result","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","readNonNegativeIntegerString","getAttribute","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","readNonNegativeInteger","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","parseNode","INSERT_RESULTS_PARSERS_","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","makeChildAppender","writeStringTextNode","writeFeature_","gmlVersion","child","createElementNS","appendChild","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","writeFeatureElement","writeOgcFidFilter_","fid","setAttribute","getTypeName_","featurePrefix","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","keys","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","pushSerializeAndPop","hasZ","srsName","TRANSACTION_SERIALIZERS_","makeSimpleNodeFactory","writeProperty_","writeGeometryElement","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","item","writeFilterCondition_","GETFEATURE_SERIALIZERS_","getTagName","writeBboxFilter_","writeOgcPropertyName_","extent","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","begin","writeTimeInstant_","end","writeLogicalFilter_","conditions","condition","writeNotFilter_","writeComparisonFilter_","matchCase","writeOgcLiteral_","writeIsNullFilter_","writeIsBetweenFilter_","writeIsLikeFilter_","wildCard","singleChar","escapeChar","pattern","writeOgcExpression_","tagName","property","timeInstant","timePosition","Query","During","And","Or","Not","BBOX","Contains","Intersects","Within","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","featureTypes","writeGetFeature","handle","outputFormat","maxFeatures","resultType","startIndex","count","bbox","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","and","Array","isArray","writeTransaction","inserts","updates","deletes","version","baseObj","gmlOptions","nativeElements","readProjectionFromDocument","readProjectionFromNode","firstElementChild","nextElementSibling","childNodes","__WEBPACK_IMPORTED_MODULE_10__proj_js__","pop","__WEBPACK_IMPORTED_MODULE_8__xml_js__","GML2","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","readFlatCoordinates_","getAllTextContent","containerSrs","axisOrientation","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","trim","z","flatCoordinates","parseFloat","substr","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","innerBoundaryIsParser_","flatLinearRing","RING_PARSERS","outerBoundaryIsParser_","GEOMETRY_FLAT_COORDINATES_PARSERS_","makeReplacer","FLAT_LINEAR_RINGS_PARSERS_","innerBoundaryIs","outerBoundaryIs","GEOMETRY_PARSERS_","readPoint","readMultiPoint","readLineString","readMultiLineString","LinearRing","readLinearRing","readPolygon","readMultiPolygon","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","nodeName","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","dataProjection","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","namespaceURI","writeCoordinates_","segments","writeCurveSegments_","points","len","parts","point","getCoords_","writeSurfaceOrPolygon_","rings","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","polygon","writeRing_","ring","linearRing","writeLinearRing_","opt_srsName","opt_hasZ","writeMultiCurveOrLineString_","curve","lines","getLineStrings","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","getPoints","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","polygons","getPolygons","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","pointMember","lineStringMember","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","polygonMember","lowerCorner","upperCorner","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","featureMember","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","localName","defaultPrefix","ft","uri","candidate","ns","parsersNS","p","parsers","readFeatureElement","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","test","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","setFlatCoordinates","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","XYZ","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","lineStrings","MULTILINESTRING_PARSERS_","multiLineString","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","setLineStrings","MULTIPOLYGON_PARSERS_","multiPolygon","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","setPolygons","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","lineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","flatLinearRings","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","ends","__WEBPACK_IMPORTED_MODULE_1__array_js__","pointMembers","lineStringMembers","polygonMembers","readGeometryFromNode","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","__WEBPACK_IMPORTED_MODULE_26__xml_js__","KML","DEFAULT_STYLE_ARRAY_","createStyleDefaults_","__WEBPACK_IMPORTED_MODULE_18__proj_js__","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS_","NAMESPACE_URIS_","SCHEMA_LOCATION_","DEFAULT_COLOR_","DEFAULT_FILL_STYLE_","__WEBPACK_IMPORTED_MODULE_19__style_Fill_js__","color","DEFAULT_IMAGE_STYLE_ANCHOR_","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_","__WEBPACK_IMPORTED_MODULE_21__style_IconAnchorUnits_js__","PIXELS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_","DEFAULT_IMAGE_STYLE_SIZE_","DEFAULT_IMAGE_STYLE_SRC_","DEFAULT_IMAGE_SCALE_MULTIPLIER_","DEFAULT_IMAGE_STYLE_","__WEBPACK_IMPORTED_MODULE_20__style_Icon_js__","anchor","anchorOrigin","__WEBPACK_IMPORTED_MODULE_22__style_IconOrigin_js__","BOTTOM_LEFT","anchorXUnits","anchorYUnits","crossOrigin","rotation","size","src","DEFAULT_NO_IMAGE_STYLE_","DEFAULT_STROKE_STYLE_","__WEBPACK_IMPORTED_MODULE_23__style_Stroke_js__","width","DEFAULT_TEXT_STROKE_STYLE_","DEFAULT_TEXT_STYLE_","__WEBPACK_IMPORTED_MODULE_25__style_Text_js__","font","fill","stroke","DEFAULT_STYLE_","__WEBPACK_IMPORTED_MODULE_24__style_Style_js__","image","zIndex","ICON_ANCHOR_UNITS_MAP_","fraction","FRACTION","pixels","insetPixels","createNameStyleFunction_","foundStyle","textStyle","textOffset","textAlign","getImage","imageSize","getImageSize","imageScale","getScale","getText","foundText","clone","setFont","getFont","setScale","setFill","getFill","setStroke","getStroke","setText","setOffsetX","setOffsetY","setTextAlign","createFeatureStyleFunction_","styleUrl","sharedStyles","resolution","nameStyle","drawName","__WEBPACK_IMPORTED_MODULE_10__geom_GeometryType_js__","POINT","concat","findStyle_","styleValue","readColor_","exec","hexColor","re","readURI_","baseURI","window","location","href","URL","readVec2_","xunits","yunits","origin","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale_","readDecimal","readStyleMapValue_","STYLE_MAP_PARSERS_","IconStyleParser_","ICON_STYLE_PARSERS_","styleObject","IconObject","drawIcon","hotSpot","offset","w","h","heading","__WEBPACK_IMPORTED_MODULE_17__math_js__","imageStyle","offsetOrigin","LabelStyleParser_","LABEL_STYLE_PARSERS_","LineStyleParser_","LINE_STYLE_PARSERS_","strokeStyle","PolyStyleParser_","POLY_STYLE_PARSERS_","fillStyle","outline","FLAT_LINEAR_RING_PARSERS_","gxCoordParser_","readGxMultiTrack_","GX_MULTITRACK_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_MultiLineString_js__","readGxTrack_","gxTrackObject","whens","GX_TRACK_PARSERS_","min","__WEBPACK_IMPORTED_MODULE_11__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_GeometryLayout_js__","XYZM","readIcon_","iconObject","ICON_PARSERS_","readLineString_","EXTRUDE_AND_ALTITUDE_MODE_PARSERS_","readLinearRing_","__WEBPACK_IMPORTED_MODULE_16__geom_Polygon_js__","readMultiGeometry_","MULTI_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryCollection_js__","multiGeometry","homogeneous","layout","getLayout","getFlatCoordinates","__WEBPACK_IMPORTED_MODULE_2__array_js__","__WEBPACK_IMPORTED_MODULE_13__geom_MultiPoint_js__","setCommonGeometryProperties_","LINE_STRING","POLYGON","__WEBPACK_IMPORTED_MODULE_14__geom_MultiPolygon_js__","GEOMETRY_COLLECTION","__WEBPACK_IMPORTED_MODULE_3__asserts_js__","readPoint_","__WEBPACK_IMPORTED_MODULE_15__geom_Point_js__","readPolygon_","readStyle_","STYLE_PARSERS_","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DataParser_","DATA_PARSERS_","featureObject","displayName","ExtendedDataParser_","EXTENDED_DATA_PARSERS_","RegionParser_","REGION_PARSERS_","PairDataParser_","pairObject","PAIR_PARSERS_","Style","PlacemarkStyleMapParser_","styleMapValue","placemarkObject","SchemaDataParser_","SCHEMA_DATA_PARSERS_","SimpleDataParser_","data","readString","LatLonAltBoxParser_","LAT_LON_ALT_BOX_PARSERS_","regionObject","LodParser_","LOD_PARSERS_","lodObject","INNER_BOUNDARY_IS_PARSERS_","OUTER_BOUNDARY_IS_PARSERS_","LinkParser_","LINK_PARSERS_","whenParser_","when","isNaN","makeStructureNS","Data","SchemaData","LatLonAltBox","Lod","altitudeMode","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","extrude","readBoolean","tessellate","Icon","MultiGeometry","Track","NETWORK_LINK_PARSERS_","ExtendedData","Region","Link","address","description","open","phoneNumber","visibility","PLACEMARK_PARSERS_","StyleMap","MultiTrack","SimpleData","IconStyle","LabelStyle","LineStyle","PolyStyle","Pair","readDocumentOrFolder_","Document","makeArrayExtender","Folder","Placemark","readPlacemark_","readSharedStyle_","bind","readSharedStyleMap_","__WEBPACK_IMPORTED_MODULE_1__Feature_js__","__WEBPACK_IMPORTED_MODULE_5__format_Feature_js__","styleFunction","setStyle","styleUri","readFeatureFromNode","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeColorTextNode_","rgba","__WEBPACK_IMPORTED_MODULE_4__color_js__","abgr","writeCoordinatesTextNode_","stride","dimension","XY","XYM","writeDataNode_","EXTENDEDDATA_NODE_SERIALIZERS_","writeDataNodeName_","writeCDATASection","writeDataNodeValue_","writeDocument_","DOCUMENT_SERIALIZERS_","DOCUMENT_NODE_FACTORY_","writeExtendedData_","namesAndValues","names","DATA_NODE_FACTORY_","writeIcon_","icon","orderedKeys","ICON_SEQUENCE_","makeSequence","ICON_SERIALIZERS_","GX_NODE_FACTORY_","writeIconStyle_","getSrc","getSize","iconImageSize","iconProperties","getAnchor","getOrigin","getRotation","ICON_STYLE_SEQUENCE_","ICON_STYLE_SERIALIZERS_","writeLabelStyle_","getColor","LABEL_STYLE_SEQUENCE_","LABEL_STYLE_SERIALIZERS_","writeLineStyle_","getWidth","LINE_STYLE_SEQUENCE_","LINE_STYLE_SERIALIZERS_","writeMultiGeometry_","factory","MULTI_POINT","POINT_NODE_FACTORY_","MULTI_LINE_STRING","LINE_STRING_NODE_FACTORY_","MULTI_POLYGON","POLYGON_NODE_FACTORY_","MULTI_GEOMETRY_SERIALIZERS_","writeBoundaryIs_","BOUNDARY_IS_SERIALIZERS_","LINEAR_RING_NODE_FACTORY_","writePlacemark_","sort","v","PLACEMARK_SERIALIZERS_","EXTENDEDDATA_NODE_FACTORY_","getStyleFunction","styles","PLACEMARK_SEQUENCE_","writePrimitiveGeometry_","getStride","PRIMITIVE_GEOMETRY_SEQUENCE_","PRIMITIVE_GEOMETRY_SERIALIZERS_","writePolygon_","linearRings","outerRing","shift","POLYGON_SERIALIZERS_","INNER_BOUNDARY_NODE_FACTORY_","OUTER_BOUNDARY_NODE_FACTORY_","writePolyStyle_","POLY_STYLE_SERIALIZERS_","COLOR_NODE_FACTORY_","writeScaleTextNode_","writeDecimalTextNode","writeStyle_","STYLE_SEQUENCE_","STYLE_SERIALIZERS_","writeVec2_","vec2","KML_SEQUENCE_","KML_SERIALIZERS_","GEOMETRY_TYPE_TO_NODENAME_","writeBooleanTextNode","writeFeaturesNode","kml","xmlnsUri","xmlSchemaInstanceUri","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","XSD","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","olObj","olUri","olExtent","$http","$q","ngeoRuleHelper","ngeoWMSTime","http_","q_","ngeoRuleHelper_","ngeoWMSTime_","requestCancelers_","wmsGetCapabilitiesPromises_","wmtsGetCapabilitiesPromises_","$inject","promises","cancelStillRunningRequests_","queryableDataSources","dataSources","getQueryableDataSources","combinedWFSDataSources","getCombinableWFSDataSources_","wfs","issueCombinedWFS_","combinedWMSDataSources","getCombinableWMSDataSources_","wms","issueCombinedWMS_","all","then","handleCombinedQueryResult_","assertNumber","getResolution","dataSource","isDataSourceQueryable_","supportsWFS","supportsAttributes","ogcLayerNames","getOGCLayerNames","url","appendParams","assertString","wfsUrl","REQUEST","SERVICE","VERSION","TYPENAME","response","_WFSDescribeFeatureType2","layerCapabilities","layerName","found","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","layerCapability","wmsFindLayerCapability","baseUrl","opt_cache","cache","promise","_WMSCapabilities2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_WMTSCapabilities2","combinedHash","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","hash","dataSourceIdStr","dataSourceId","limit","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","tooManyFeatures","totalFeatureCount","readAndTypeFeatures_","setUniqueIds_","getSetOlFormatTypes_","wfsFormat","wmsFormat","opt_types","types","setLayers","getLayers","combinedDataSources","_this2","view","getCode","wfsCount","tolerancePx","tolerance","buffer","createOrUpdateFromCoordinate","_WFS2","xmlSerializer","XMLSerializer","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_loop","getFeatureCommonOptions","params","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","wfsFeatureNS","wfsFeaturePrefix","wfsOutputFormat","activeDimensions","getInRangeOGCLayerNames","createFilter","incTime","filterRules","timeRangeValue","getFeatureDefer","defer","handleQueryResult_","countPromise","getCountOptions","featureCountXml","featureCountRequest","serializeToString","canceler","registerCanceler_","post","headers","Content-Type","timeout","resolve","numberOfFeatures","getFeatureOptions","featureRequestXml","featureRequest","_iterator6","FEATURE_COUNT","projCode","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","LAYERS","INFO_FORMAT","activeDimensionsSet","filterString","filtrableLayerName","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmsInfoFormat","wmsUrl","getFiltrableOGCLayerName","createFilterString","timeProperty","formatWMSTimeParam","filterParamValue","filterParamValues","wmsSource","_ImageWMS2","wmsGetFeatureInfoUrl","getGetFeatureInfoUrl","combinableDataSources","notCombinableDataSources","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","combinableForWFS","combined","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","combinableDataSource","combinableWithDataSourceForWFS","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","combinableForWMS","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","combinableWithDataSourceForWMS","ds","res","queryable","visible","inRange","isAnyOGCLayerInRange","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","CombinedDataSources","_RuleHelper2","_WMSTime2","_ol_Image_","pixelRatio","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","unlistenByKey","ol_Image","ImageWMS","source_Image","attributions","resolutions","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","FORMAT","TRANSPARENT","QUERY_LAYERS","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getPixelRatio","getExtent","CHANGE","handleImageChange","getImageLoadFunction","WMSServerType","dpi","getUrl","setImageLoadFunction","setUrl","updateParams","string","compareVersions","attribute","ngeo","AttributeType","GEOMETRY","geomType","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","FilterCondition","AND","filterRules_","filtrable_","filtrable","copyable_","copyable","dimensions_","dimensions","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","ogcType_","ogcType","Type","WMS","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeUpperValue_","timeUpperValue","wfsFeatureNS_","WFSFeatureNS","wfsFeaturePrefix_","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","WFSOutputFormat","GML3","wfsUrl_","wmsInfoFormat_","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","layers","ogcLayer","_GML4","_GML2","wfsFormat_","supportsWMS","_WMSGetFeatureInfo2","wmsFormat_","_inherits","_DataSource2","_get","attributes","updateGeometryNameFromAttributes_","haveTheSameActiveDimensions","queryableOnly","arguments","layerNames","maxRes","maxResolution","minRes","minResolution","share","myActive","itsActive","range","lower","upper","config","guessServiceTypeByUrl","WMTS","QGISSERVER","geoserver","mapserver","qgisserver","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","__WEBPACK_IMPORTED_MODULE_2__extent_js__","readFlatPos_","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","writeGeometryNode","Filter","tagName_","filter_Filter","LogicalNary","filter_LogicalNary","apply","filter_And","Bbox","filter_Bbox","Spatial","filter_Spatial","filter_Contains","Comparison","filter_Comparison","filter_During","ComparisonBinary","opt_matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","filter_Intersects","IsBetween","filter_IsBetween","IsLike","opt_wildCard","opt_singleChar","opt_escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","filter_Not","NotEqualTo","filter_NotEqualTo","filter_Or","filter_Within","_ol_format_filter_","Function","or","not","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","olArray","olColor","$injector","$filter_","decimals_","has","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","filterName","assertFunction","projection_","download_","setProjection","opt_select","getStyle","supportsVertex_","getVertexStyle","getHaloStyle_","GeometryType","getLineStringStyle_","getPointStyle_","CIRCLE","RECTANGLE","getPolygonStyle_","TEXT","getTextStyle_","constructor","strokeWidth","getStrokeProperty","showLabel","getShowLabelProperty","showMeasure","getShowMeasureProperty","getRGBAColorProperty","_Style2","_Stroke2","textLabelValues","getMeasure","getNameProperty","textLabelValue","createTextStyle_","getSizeProperty","radius","_Fill2","offsetY","optNumber","attrib","getNumber","opacity","getOpacityProperty","fillColor","azimut","FeatureProperties","AZIMUT","getRadiusLine","angle","offsetX","cos","sin","getAngleProperty","createEditingStyles","white","blue","console","opt_incGeomFunc","incGeomFunc","_RegularShape2","innerMultiCoordinates","multiCoordinates","supported","includes","haloSize","getFilteredFeatureValues","ANGLE","getColorProperty","COLOR","fromString","NAME","OPACITY","SHOW_MEASURE","assertBoolean","SHOW_LABEL","SIZE","STROKE","export","formatType","GPX","exportGPX","exportKML","_GPX2","export_","_KML2","fileName","opt_mimeType","mimeType","clones","writeOptions","_Text2","measure","_MeasureAzimut2","getFormattedArea","getFormattedPoint","args","_toConsumableArray","IS_TEXT","IS_CIRCLE","IS_RECTANGLE","panMapToFeature","opt_panDuration","panDuration","assertArray","calculateExtent","intersectsExtent","mapCenter","getCenter","featureCenter","getCoordinateAt","getInteriorPoint","animate","duration","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","_service2","factory_","content","opt_fileType","fileType","_utils2","isSafari","blob","Blob","saveAs","readExtensions_","readExtensions","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","RTE_PARSERS","cmt","desc","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","appendCoordinate","ele","readDateTime","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","writeNonNegativeIntegerTextNode","makeArraySerializer","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","geometryLayout","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","writeDateTimeTextNode","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","GPX_SERIALIZERS","hasM","applyLayoutOptions_","__WEBPACK_IMPORTED_MODULE_7__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_6__geom_GeometryLayout_js__","handleReadExtensions_","extensionsNode","featureReader","gpx","olBase","gettextCatalog","gettextCatalog_","_Time2","formatTimeValue","opt_useISOFormat","opt_toUTC","date","utc","yearResolution","monthResolution","dayResolution","getString","toISOString","wmsTimeProperty","times","sources","total","pending","ngeoDataSources","ngeoDataSourcesHelper","ngeoQuerent","ngeoQueryResult","ngeoDataSources_","ngeoDataSourcesHelper_","ngeoQuerent_","result_","limit_","queryCountFirst_","queryCountFirst","tolerancePx_","dataSourceNames_","getArray","issue","handleResult_","queried","tooManyResults","idStr","getDataSource","label","querentResultItem","typeSeparatedFeatures","filteredProperties","alias","unset","featuresByType","_DataSources2","_Querent2","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","layers_","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","featureIdentifier_","layerIdentifier_","readFeatures_","layer","toRemove","layerFeatures","gmlFeatures","__WEBPACK_IMPORTED_MODULE_4__obj_js__","writeFeatureNode","ngeoFeatureHelper","ngeoFeatureHelper_","opt_isCustom","rules","createRuleFromAttribute","rule","DATE","DATETIME","_Date2","_Rule2","_Geometry2","NUMBER","SELECT","_Select2","choices","optionsList","createRule","selectOptions","sourceRule","destRule","serializeRule","featureProperties","mainFilter","createFilterFromRule_","_filter2","OR","NOT","timeFilter","createTimeFilterFromDataSource_","filterNode","rot","rsot","rtot","spatialTypes","numericTypes","beginValue","endValue","moment","add","subtract","selectedChoices","selectedChoice","numericExpression","stringExpression","String","momentEnd","startValue","_FeatureHelper2","_Rule","feature_","format_","_GeoJSON2","updatingExpression_","updatingGeometry_","geometryChangeListenerKey_","getChangeEventType","handleFeatureGeometryChange_","setGeometryFromExpression_","registerGeometryChange_","evt","target","Geometry","handleGeometryChange_","choices_","_XML2","_xml2","readElement_","readComplexType_","COMPLEX_TYPE_PARSERS_","readComplexContent_","COMPLEX_CONTENT_PARSERS_","readExtension_","EXTENSION_PARSERS_","readSequence_","SEQUENCE_PARSERS_","complexType","complexContent","extension","sequence","__WEBPACK_IMPORTED_MODULE_4__xml_js__","WMSCapabilities","__WEBPACK_IMPORTED_MODULE_2__format_XML_js__","wmsCapabilityObject","readAttribution_","ATTRIBUTION_PARSERS_","readBoundingBox_","__WEBPACK_IMPORTED_MODULE_3__format_XSD_js__","readDecimalString","readEXGeographicBoundingBox_","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS_","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","readCapability_","CAPABILITY_PARSERS_","readService_","SERVICE_PARSERS_","readContactInformation_","CONTACT_INFORMATION_PARSERS_","readContactPersonPrimary_","CONTACT_PERSON_PARSERS_","readContactAddress_","CONTACT_ADDRESS_PARSERS_","readException_","EXCEPTION_PARSERS_","readCapabilityLayer_","parentLayerObject","layerObject","readBooleanString","cascaded","opaque","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","readDimension_","units","unitSymbol","multipleValues","nearestValue","current","readFormatOnlineresource_","FORMAT_ONLINERESOURCE_PARSERS_","readRequest_","REQUEST_PARSERS_","readDCPType_","DCPTYPE_PARSERS_","readHTTP_","readOperationType_","OPERATIONTYPE_PARSERS_","readSizedFormatOnlineresource_","formatOnlineresource","readAuthorityURL_","authorityObject","readMetadataURL_","metadataObject","readKeywordList_","KEYWORDLIST_PARSERS_","Service","Capability","Request","Exception","Name","KeywordList","OnlineResource","__WEBPACK_IMPORTED_MODULE_1__format_XLink_js__","ContactInformation","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","ContactPosition","ContactAddress","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","StateOrProvince","PostCode","CRS","EX_GeographicBoundingBox","BoundingBox","Attribution","AuthorityURL","MetadataURL","DataURL","FeatureListURL","MinScaleDenominator","MaxScaleDenominator","LogoURL","GetCapabilities","GetMap","GetFeatureInfo","DCPType","StyleSheetURL","StyleURL","Keyword","_Event","detail","_Event2","collection_","cache_","handleDataSourcesAdd_","handleDataSourcesRemove_","wfsDescribeFeatureTypeDefer","wfsDescribeFeatureType","ogcLayerName","_WFSAttribute2","setAttributes","_Attribute","complexTypeElements","readFromComplexTypeElement_","required","_Attribute2","setGeometryType","_MapQuerent2","directive_","ngeoMapQuerent","elem","$eval","clickEventKey_","pointerMoveEventKey_","handleMapClick_","dragging","getEventPixel","originalEvent","hit","forEachLayerAtPixel","sourceids","getTargetElement","cursor","cursorHover","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","getTilePixelRatio","fixedTileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__string_js__","_Collection2","inRange_","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","featureUidToGroupIndex_","layer_","styleFunction_","updateWhileAnimating","updateWhileInteracting","groupIndex","featureUid","getUid","removeFeature","group","isEmpty","getLayer","getFeatureOverlay","defaultFunction","_FeatureOverlay2","init","createFunction","defaultMessage","defaultArgs","givenMessage","givenArgs","message","e","AssertionError","errorHandler_","errorHandler","opt_message","var_args","doAssertFailure_","isNumber","typeOf","isString","isFunction","isObject","isBoolean","dom","NodeType","ELEMENT","getType_","fail","_typeof","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","mapUid","previous","setAt","removeAt","insertAt","_CustomEvent2","updateDimensions","baseBgLayer","_Layer2","hasUpdates","updatedDimensions","refresh","_SyncDataSourcesMap2","$window","ngeoSyncDataSourcesMap","prop","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","map_","listenerKeys_","handleViewResolutionChange_","syncDataSourcesToResolution_","_View2","syncDataSourceToResolution_","supportsDynamicInRange","unbindMap_","bindMap_","app","_module2","_btnComponent2","_ToolActivateMgr2","queryresultComponent","controllerAs","templateUrl","component","QueryresultController","MainController","ngeoToolActivateMgr","dummyActive","queryActive","_OGC2","busStopLayer","_Image2","informationLayer","_Tile2","_OSM2","zoom","queryToolActivate","_ToolActivate2","dummyToolActivate","getSetDummyActive","val","manager","manager_","features_","index_","setFeatures","handleFeatureAdd_","handleFeatureRemove_","$element","$attrs","mapExpr","recenter","attr","fit","setZoom","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","newLength","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","$applyAsync","__WEBPACK_IMPORTED_MODULE_9__math_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","multiPoint","closestPointXY","closestPoint","minSquaredDistance","j","squaredDistance","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","setLayout","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","setFlatCoordinatesInternal","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","ends_","maxDelta_","maxDeltaRevision_","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","endss","jj","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","rotate","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","proj4","projCodes","defs","code","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","transform","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","us-ft","ignoredChar","match","testkey","lkey","toLowerCase","projString","defData","paramName","paramVal","paramOutname","self","paramObj","a","reduce","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","r_a","R_A","zone","utmSouth","towgs84","datum_params","from_greenwich","pm","nadgrids","datumCode","legalAxis","parser","txt","Parser","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","root","stack","currentObject","mapit","thing","out","newObj","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","word","afterItem","newObjects","wkt_parser_D2R","d2r","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","that","EPSG","ESRI","IAU2000","WGS84","GOOGLE","lib_defs","codeWords","parseCode","extend","destination","msfnz","eccent","sinphi","cosphi","con","adjust_lon","tsfnz","phi","com","tan","phi2z","ts","dphi","eccnth","atan","identity","pt","projs","es","lon","lat","exp","projections_names","projStore","projections","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","srsCode","error","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","Proj","checkParams","datum_transform","dest","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","atan2","geocentricToGeodetic","adjust_axis","denorm","t","xin","yin","zin","toPoint","array","checkSanity","checkCoord","num","TypeError","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","top","mgrs_toPoint","ll","accuracy","utm","eccPrimeSquared","N","T","C","A","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","northing","easting","zoneNumber","zoneLetter","LetterDesignator","getLetterDesignator","LLtoUTM","seasting","snorthing","setParm","get100kSetForZone","setColumn","setRow","column","row","colOrigin","charCodeAt","rowOrigin","rowInt","rollover","colInt","fromCharCode","deg","radToDeg","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","warn","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","tan_phi","f","temp","asin","sinh","hypot","max","asinhy","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","APA","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","somerc","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","DrawEventType","Draw","Pointer","shouldHandle_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","maxPoints_","maxPoints","finishCondition_","finishCondition","functions","geometryFunction","opt_geometry","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchCoords_","sketchLine_","sketchLineCoords_","clickTolerance","overlay_","Vector","source_Vector","condition_","noModifierKeys","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","ol_Object","ACTIVE","createDefaultEditing","CONTEXTMENU","preventDefault","move","MapBrowserEventType","POINTERMOVE","POINTERDRAG","clearTimeout","addToDrawing_","POINTERDOWN","pointerEvent","pointerType","MouseSource","POINTER_TYPE","DBLCLICK","setTimeout","MapBrowserPointerEvent","frameState","circleMode","finishDrawing","atFinish_","stopPropagation","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","getPixelFromCoordinate","sketchLineGeom","getLinearRing","removeLastPoint","overlaySource","createRegularPolygon","opt_sides","opt_angle","createBox","__WEBPACK_IMPORTED_MODULE_1__string_js__","dateTime","bool","DOCUMENT","createCDATASection","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","toPrecision","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","delta","getRadius","getRadiusSquared_","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","circleExtent","intersectsCoordinate","setCenter","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","olDom","olSphere","interaction","MeasureBaseOptions","_Interaction2","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","displayHelpTooltip_","displayHelpTooltip","startMsg","changeEventKey_","postcomposeEventKey_","vectorLayer_","drawInteraction_","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","SPHERE_WGS84","_EPSG2","RADIUS","geodesicArea","getFormattedCircleArea","haversineDistance","helpMsg","removeChildren","setPosition","getDrawInteraction","prevMap","removeInteraction","addInteraction","createMeasureTooltip_","innerHTML","classList","setOffset","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","_Overlay2","positioning","addOverlay","removeOverlay","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","olProj","olProjProj4","epsg21781def","_proj4","register","setExtent","_somerc2","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","wkt-parser","deprecated","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","homepage","license","main","repository","scripts","build","build:tmerc","XMLFeature","xmlSerializer_","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","readFeatureFromDocument","readFeaturesFromDocument","readGeometryFromDocument","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","stroke_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotateWithView","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setMaxAngle","setPlacement","setRotation","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding"],"mappings":"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","file":"mapquery.min.js","sourcesContent":["/**\n * @module ngeo.filters\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport * as olMath from 'ol/math.js';\nimport olString from 'ol/string.js';\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nngeoBase.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoScalify', ngeoBase.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nngeoBase.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoNumber', ngeoBase.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nngeoBase.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoUnitPrefix', ngeoBase.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nngeoBase.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoNumberCoordinates', ngeoBase.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nngeoBase.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoDMSCoordinates', ngeoBase.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * @return {function(?):string} The filter function.\n *//* @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nngeoBase.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nngeoBase.module.filter('ngeoTrustHtml', ngeoBase.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filters.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 106\n// module chunks = 0 1 5 20","/**\n * @module ngeo.misc.ToolActivate\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivate.js","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.misc.btnComponent\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n *//* @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach(function(expressionFn, i) {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  }, this);\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/btnComponent.js","/**\n * @module ngeo.utils\n*/\nconst exports = {};\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.rule.Rule\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.rule.Rule}\n */\nconst exports = class {\n\n  /**\n   * The abstract class for all filter rules.\n   *\n   * Rules are used to define filters that can be applied on data sources.\n   * A rule is usually a combination of 3 things:\n   *\n   * - a property name, for example 'city_name'\n   * - an operator, for example 'is equal to'\n   * - and an expression, for example 'Chicoutimi'.\n   *\n   * A rule is useful to hold those properties and change them on the fly.\n   * For example, chaning an operator from 'is equal to' to 'like'.\n   *\n   * Also, a rule is especially useful for its `value` getter, which returns\n   * the combination of properties described above or `null` if there are some\n   * missing.  The `value` getter can be watched and used when the value is\n   * not null.\n   *\n   * When the operator is `between`, the `lowerBoundary` and `upperBoundary`\n   * properties are used instead of `expression`.\n   *\n   * @struct\n   * @param {!ngeox.rule.RuleOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * Whether the rule is active or not. Used by the `ngeo-rule` component.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = options.active === true;\n\n    /**\n     * The expression of the rule. The expression and boundaries are mutually\n     * exclusives.\n     *\n     * Note: exported (instead of private) due to the problem with the\n     * compiler. See the getter/setter methods below...  As a setter, the\n     * `expression` property would support being bond to an `ng-model`. Without\n     * it, it can't unless we expose the property directly.\n     *\n     * @type {?number|string}\n     * @export\n     */\n    this.expression = options.expression !== undefined ?\n      options.expression : null;\n\n    /**\n     * The lower boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.lowerBoundary_ = options. lowerBoundary !== undefined ?\n      options.lowerBoundary : null;\n\n    /**\n     * The rule operator.\n     * @type {?string}\n     * @private\n     */\n    this.operator_ = options.operator || null;\n\n    /**\n     * The upper boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.upperBoundary_ = options. upperBoundary !== undefined ?\n      options.upperBoundary : null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the rule is a custom one or not.\n     * @type {boolean}\n     * @private\n     */\n    this.isCustom_ = options.isCustom !== false;\n\n    /**\n     * The human-readable name of the rule.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n\n    /**\n     * A list of rule operators.\n     * @type {?Array.<string>}\n     * @private\n     */\n    this.operators_ = options.operators || null;\n\n    /**\n     * The property name (a.k.a. the attribute name).\n     * @type {string}\n     * @private\n     */\n    this.propertyName_ = options.propertyName;\n\n    /**\n     * The type of rule.\n     * @type {string}\n     * @private\n     */\n    this.type_ = goog.asserts.assert(options.type);\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @protected\n     */\n    this.listenerKeys = [];\n\n  }\n\n  // === Dynamic property getters/setters ===\n\n  /**\n   * @return {boolean} Active\n   * @export\n   */\n  get active() {\n    return this.active_;\n  }\n\n  /**\n   * @param {boolean} active Active\n   * @export\n   */\n  set active(active) {\n    this.active_ = active;\n  }\n\n  /**\n   * The `expression` property does not have conventionnal getter/setters\n   * method because of a limitation of the compiler. It doesn't support\n   * yet having such methods being extended in child classes.\n   *\n   * See: https://github.com/google/closure-compiler/issues/1089\n   *\n   * @return {?number|string} Expression\n   * @export\n   */\n  getExpression() {\n    return this.expression;\n  }\n\n  /**\n   * @param {?number|string} expression Expression\n   * @export\n   */\n  setExpression(expression) {\n    this.expression = expression;\n  }\n\n  /**\n   * @return {?number} Lower boundary\n   * @export\n   */\n  get lowerBoundary() {\n    return this.lowerBoundary_;\n  }\n\n  /**\n   * @param {?number} lowerBoundary Lower boundary\n   * @export\n   */\n  set lowerBoundary(lowerBoundary) {\n    this.lowerBoundary_ = lowerBoundary;\n  }\n\n  /**\n   * @return {?string} Operator\n   * @export\n   */\n  get operator() {\n    return this.operator_;\n  }\n\n  /**\n   * @param {?string} operator Operator\n   * @export\n   */\n  set operator(operator) {\n    this.operator_ = operator;\n  }\n\n  /**\n   * @return {?number} Upper boundary\n   * @export\n   */\n  get upperBoundary() {\n    return this.upperBoundary_;\n  }\n\n  /**\n   * @param {?number} upperBoundary Upper boundary\n   * @export\n   */\n  set upperBoundary(upperBoundary) {\n    this.upperBoundary_ = upperBoundary;\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {boolean} Is custom.\n   * @export\n   */\n  get isCustom() {\n    return this.isCustom_;\n  }\n\n  /**\n   * @return {string} name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Array.<string>} Operators\n   * @export\n   */\n  get operators() {\n    return this.operators_;\n  }\n\n  /**\n   * @return {string} Property name\n   * @export\n   */\n  get propertyName() {\n    return this.propertyName_;\n  }\n\n  /**\n   * @return {string} Type\n   * @export\n   */\n  get type() {\n    return this.type_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {?ngeox.rule.RuleSimpleValue|ngeox.rule.RuleRangeValue} Value.\n   * @export\n   */\n  get value() {\n    let value = null;\n\n    const expression = this.getExpression();\n    const lowerBoundary = this.lowerBoundary;\n    const operator = this.operator;\n    const propertyName = this.propertyName;\n    const upperBoundary = this.upperBoundary;\n\n    if (operator) {\n      if (operator === exports.OperatorType.BETWEEN ||\n          operator === exports.TemporalOperatorType.DURING) {\n        if (lowerBoundary !== null && upperBoundary !== null) {\n          value = {\n            operator,\n            lowerBoundary,\n            propertyName,\n            upperBoundary\n          };\n        }\n      } else {\n        if (expression !== null) {\n          value = {\n            expression,\n            operator,\n            propertyName\n          };\n        }\n      }\n    }\n\n    return value;\n  }\n\n  // === Other utility methods ===\n\n  /**\n   * Reset the following properties to `null`: expression, lowerBoundary,\n   * upperBoundary.\n   * @export\n   */\n  reset() {\n    if (this.getExpression() !== null) {\n      this.setExpression(null);\n    }\n    if (this.lowerBoundary !== null) {\n      this.lowerBoundary = null;\n    }\n    if (this.upperBoundary !== null) {\n      this.upperBoundary = null;\n    }\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    ol.Observable.unByKey(this.listenerKeys);\n    this.listenerKeys.length = 0;\n  }\n\n};\n\n\n/**\n * @enum {string}\n */\nexports.OperatorType = {\n  BETWEEN: '..',\n  EQUAL_TO: '=',\n  GREATER_THAN: '>',\n  GREATER_THAN_OR_EQUAL_TO: '>=',\n  LESSER_THAN: '<',\n  LESSER_THAN_OR_EQUAL_TO: '<=',\n  LIKE: '~',\n  NOT_EQUAL_TO: '!='\n};\n\n\n/**\n * @enum {string}\n */\nexports.SpatialOperatorType = {\n  CONTAINS: 'contains',\n  INTERSECTS: 'intersects',\n  WITHIN: 'within'\n};\n\n\n/**\n * @enum {string}\n */\nexports.TemporalOperatorType = {\n  BEGINS: '>=',\n  DURING: '..',\n  ENDS: '<=',\n  EQUALS: '='\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Rule.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 125\n// module chunks = 0 1 5","/**\n * @module ngeo.interaction.MeasureAzimut\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, opt_options) {\n\n  const options = opt_options || {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nol.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), ol.proj.Projection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureAzimut.js","/**\n * @module ol/format/JSONFeature\n */\nimport {inherits} from '../index.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst JSONFeature = function() {\n  FeatureFormat.call(this);\n};\n\ninherits(JSONFeature, FeatureFormat);\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.getType = function() {\n  return FormatType.JSON;\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeature = function(source, opt_options) {\n  return this.readFeatureFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeatures = function(source, opt_options) {\n  return this.readFeaturesFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.Feature} Feature.\n */\nJSONFeature.prototype.readFeatureFromObject = function(object, opt_options) {};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nJSONFeature.prototype.readFeaturesFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readGeometry = function(source, opt_options) {\n  return this.readGeometryFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nJSONFeature.prototype.readGeometryFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readProjection = function(source) {\n  return this.readProjectionFromObject(getObject(source));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nJSONFeature.prototype.readProjectionFromObject = function(object) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeature = function(feature, opt_options) {\n  return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeatureObject = function(feature, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeatures = function(features, opt_options) {\n  return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeaturesObject = function(features, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeGeometryObject = function(geometry, opt_options) {};\nexport default JSONFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/JSONFeature.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/GeoJSON\n */\n// TODO: serialize dataProjection as crs member when writing\n// see https://github.com/openlayers/openlayers/issues/2078\n\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @constructor\n * @extends {ol.format.JSONFeature}\n * @param {olx.format.GeoJSONOptions=} opt_options Options.\n * @api\n */\nconst GeoJSON = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  JSONFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection(\n    options.defaultDataProjection ?\n      options.defaultDataProjection : 'EPSG:4326');\n\n\n  if (options.featureProjection) {\n    this.defaultFeatureProjection = getProjection(options.featureProjection);\n  }\n\n  /**\n   * Name of the geometry attribute for features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * Look for the geometry name in the feature GeoJSON\n   * @type {boolean|undefined}\n   * @private\n   */\n  this.extractGeometryName_ = options.extractGeometryName;\n\n};\n\ninherits(GeoJSON, JSONFeature);\n\n\n/**\n * @const\n * @type {Object.<string, function(GeoJSONObject): ol.geom.Geometry>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n  'GeometryCollection': readGeometryCollectionGeometry\n};\n\n\n/**\n * @const\n * @type {Object.<string, function(ol.geom.Geometry, olx.format.WriteOptions=): (GeoJSONGeometry|GeoJSONGeometryCollection)>}\n */\nconst GEOMETRY_WRITERS = {\n  'Point': writePointGeometry,\n  'LineString': writeLineStringGeometry,\n  'Polygon': writePolygonGeometry,\n  'MultiPoint': writeMultiPointGeometry,\n  'MultiLineString': writeMultiLineStringGeometry,\n  'MultiPolygon': writeMultiPolygonGeometry,\n  'GeometryCollection': writeGeometryCollectionGeometry,\n  'Circle': writeEmptyGeometryCollectionGeometry\n};\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  const geometryReader = GEOMETRY_READERS[object.type];\n  return (\n    /** @type {ol.geom.Geometry} */ transformWithOptions(\n      geometryReader(object), false, opt_options)\n  );\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object.geometries.map(\n    /**\n       * @param {GeoJSONGeometry} geometry Geometry.\n       * @return {ol.geom.Geometry} geometry Geometry.\n       */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object.coordinates);\n}\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {ol.geom.Geometry} */ (\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {GeoJSONGeometryCollection} Empty GeoJSON geometry collection.\n */\nfunction writeEmptyGeometryCollectionGeometry(geometry) {\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: []\n  });\n}\n\n\n/**\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function(geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: geometries\n  });\n}\n\n\n/**\n * @param {ol.geom.LineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * @param {ol.geom.Point} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.Polygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * Read a feature from a GeoJSON Feature source.  Only works for Feature or\n * geometry types.  Use {@link ol.format.GeoJSON#readFeatures} to read\n * FeatureCollection source. If feature at source has an id, it will be used\n * as Feature id by calling {@link ol.Feature#setId} internally.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGeoJSON.prototype.readFeature;\n\n\n/**\n * Read all features from a GeoJSON source.  Works for all GeoJSON types.\n * If the source includes only geometries, features will be created with those\n * geometries.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGeoJSON.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeatureFromObject = function(object, opt_options) {\n  /**\n   * @type {GeoJSONFeature}\n   */\n  let geoJSONFeature = null;\n  if (object.type === 'Feature') {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n  } else {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ ({\n      type: 'Feature',\n      geometry: /** @type {GeoJSONGeometry|GeoJSONGeometryCollection} */ (object)\n    });\n  }\n\n  const geometry = readGeometry(geoJSONFeature.geometry, opt_options);\n  const feature = new Feature();\n  if (this.geometryName_) {\n    feature.setGeometryName(this.geometryName_);\n  } else if (this.extractGeometryName_ && geoJSONFeature.geometry_name !== undefined) {\n    feature.setGeometryName(geoJSONFeature.geometry_name);\n  }\n  feature.setGeometry(geometry);\n  if (geoJSONFeature.id !== undefined) {\n    feature.setId(geoJSONFeature.id);\n  }\n  if (geoJSONFeature.properties) {\n    feature.setProperties(geoJSONFeature.properties);\n  }\n  return feature;\n};\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeaturesFromObject = function(object, opt_options) {\n  const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  /** @type {Array.<ol.Feature>} */\n  let features = null;\n  if (geoJSONObject.type === 'FeatureCollection') {\n    const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */\n        (object);\n    features = [];\n    const geoJSONFeatures = geoJSONFeatureCollection.features;\n    let i, ii;\n    for (i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n      features.push(this.readFeatureFromObject(geoJSONFeatures[i],\n        opt_options));\n    }\n  } else {\n    features = [this.readFeatureFromObject(object, opt_options)];\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @api\n */\nGeoJSON.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readGeometryFromObject = function(object, opt_options) {\n  return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n};\n\n\n/**\n * Read the projection from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGeoJSON.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readProjectionFromObject = function(object) {\n  const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  const crs = geoJSONObject.crs;\n  let projection;\n  if (crs) {\n    if (crs.type == 'name') {\n      projection = getProjection(crs.properties.name);\n    } else {\n      assert(false, 36); // Unknown SRS type\n    }\n  } else {\n    projection = this.defaultDataProjection;\n  }\n  return /** @type {ol.proj.Projection} */ (projection);\n};\n\n\n/**\n * Encode a feature as a GeoJSON Feature string.\n *\n * @function\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeature;\n\n\n/**\n * Encode a feature as a GeoJSON Feature object.\n *\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeature} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeatureObject = function(feature, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n\n  const object = /** @type {GeoJSONFeature} */ ({\n    'type': 'Feature'\n  });\n  const id = feature.getId();\n  if (id !== undefined) {\n    object.id = id;\n  }\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    object.geometry = writeGeometry(geometry, opt_options);\n  } else {\n    object.geometry = null;\n  }\n  const properties = feature.getProperties();\n  delete properties[feature.getGeometryName()];\n  if (!isEmpty(properties)) {\n    object.properties = properties;\n  } else {\n    object.properties = null;\n  }\n  return object;\n};\n\n\n/**\n * Encode an array of features as GeoJSON.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features as a GeoJSON object.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeatureCollection} GeoJSON Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeaturesObject = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const objects = [];\n  let i, ii;\n  for (i = 0, ii = features.length; i < ii; ++i) {\n    objects.push(this.writeFeatureObject(features[i], opt_options));\n  }\n  return /** @type {GeoJSONFeatureCollection} */ ({\n    type: 'FeatureCollection',\n    features: objects\n  });\n};\n\n\n/**\n * Encode a geometry as a GeoJSON string.\n *\n * @function\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeGeometry;\n\n\n/**\n * Encode a geometry as a GeoJSON object.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeGeometryObject = function(geometry, opt_options) {\n  return writeGeometry(geometry, this.adaptOptions(opt_options));\n};\nexport default GeoJSON;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GeoJSON.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.interaction.DrawAzimut\n*/\nimport googAsserts from 'goog/asserts.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style !== undefined ?\n      options.style : olInteractionDraw.getDefaultStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nol.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), sketchFeature));\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/DrawAzimut.js","/**\n * @module ngeo.misc.ToolActivateMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n *//* @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivateMgr.js","/**\n * @module ngeo.misc.Time\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n *//* @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = new Date(time.minValue);\n  const maxDate = new Date(time.maxValue);\n\n  const minDefaultDate = (time.minDefValue) ?\n    new Date(time.minDefValue) : minDate;\n  const maxDefaultDate = (time.maxDefValue) ?\n    new Date(time.maxDefValue) : maxDate;\n\n  const defaultValues = (time.mode === 'range') ?\n    [minDefaultDate.getTime(), maxDefaultDate.getTime()] :\n    minDefaultDate.getTime();\n\n  return {\n    minDate: minDate.getTime(),\n    maxDate: maxDate.getTime(),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/Time.js","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 142\n// module chunks = 0 1","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 149\n// module chunks = 0 1","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 150\n// module chunks = 0 1","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.KMLOptions=} opt_options Options.\n * @api\n */\nconst KML = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!KML.DEFAULT_STYLE_ARRAY_) {\n    KML.createStyleDefaults_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : KML.DEFAULT_STYLE_ARRAY_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {Object.<string, (Array.<ol.style.Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.GX_NAMESPACE_URIS_ = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.NAMESPACE_URIS_ = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nKML.SCHEMA_LOCATION_ = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @return {Array.<ol.style.Style>} Default style.\n * @private\n */\nKML.createStyleDefaults_ = function() {\n  /**\n   * @const\n   * @type {ol.Color}\n   * @private\n   */\n  KML.DEFAULT_COLOR_ = [255, 255, 255, 1];\n\n  /**\n   * @const\n   * @type {ol.style.Fill}\n   * @private\n   */\n  KML.DEFAULT_FILL_STYLE_ = new Fill({\n    color: KML.DEFAULT_COLOR_\n  });\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_ = [20, 2]; // FIXME maybe [8, 32] ?\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SIZE_ = [64, 64];\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SRC_ =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_ = 0.5;\n\n  /**\n   * @const\n   * @type {ol.style.Image}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ = new Icon({\n    anchor: KML.DEFAULT_IMAGE_STYLE_ANCHOR_,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_,\n    anchorYUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_,\n    size: KML.DEFAULT_IMAGE_STYLE_SIZE_,\n    src: KML.DEFAULT_IMAGE_STYLE_SRC_\n  });\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_NO_IMAGE_STYLE_ = 'NO_IMAGE';\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_STROKE_STYLE_ = new Stroke({\n    color: KML.DEFAULT_COLOR_,\n    width: 1\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STROKE_STYLE_ = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Text}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STYLE_ = new Text({\n    font: 'bold 16px Helvetica',\n    fill: KML.DEFAULT_FILL_STYLE_,\n    stroke: KML.DEFAULT_TEXT_STROKE_STYLE_,\n    scale: 0.8\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Style}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ = new Style({\n    fill: KML.DEFAULT_FILL_STYLE_,\n    image: KML.DEFAULT_IMAGE_STYLE_,\n    text: KML.DEFAULT_TEXT_STYLE_,\n    stroke: KML.DEFAULT_STROKE_STYLE_,\n    zIndex: 0\n  });\n\n  /**\n   * @const\n   * @type {Array.<ol.style.Style>}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ARRAY_ = [KML.DEFAULT_STYLE_];\n\n  return KML.DEFAULT_STYLE_ARRAY_;\n};\n\n\n/**\n * @const\n * @type {Object.<string, ol.style.IconAnchorUnits>}\n * @private\n */\nKML.ICON_ANCHOR_UNITS_MAP_ = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {ol.style.Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {ol.style.Style} style Style.\n * @private\n */\nKML.createNameStyleFunction_ = function(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || KML.DEFAULT_TEXT_STYLE_.getFont());\n    textStyle.setScale(foundText.getScale() || KML.DEFAULT_TEXT_STYLE_.getScale());\n    textStyle.setFill(foundText.getFill() || KML.DEFAULT_TEXT_STYLE_.getFill());\n    textStyle.setStroke(foundText.getStroke() || KML.DEFAULT_TEXT_STROKE_STYLE_);\n  } else {\n    textStyle = KML.DEFAULT_TEXT_STYLE_.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles Shared\n *          styles.\n * @param {boolean|undefined} showPointNames true to show names for point\n *          placemarks.\n * @return {ol.FeatureStyleFunction} Feature style function.\n * @private\n */\nKML.createFeatureStyleFunction_ = function(style, styleUrl,\n  defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n         * @param {number} resolution Resolution.\n         * @return {Array.<ol.style.Style>} Style.\n         * @this {ol.Feature}\n         */\n    function(resolution) {\n      let drawName = showPointNames;\n      /** @type {ol.style.Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        if (this.getGeometry()) {\n          drawName = (this.getGeometry().getType() ===\n                        GeometryType.POINT);\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (this.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(style[0],\n            name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = KML.findStyle_(styleUrl, defaultStyle,\n          sharedStyles);\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(foundStyle[0],\n            name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = KML.createNameStyleFunction_(defaultStyle[0],\n          name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|string|undefined} styleValue Style value.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<ol.style.Style>} Style.\n * @private\n */\nKML.findStyle_ = function(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return KML.findStyle_(\n      sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.Color|undefined} Color.\n */\nKML.readColor_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nKML.readFlatCoordinates_ = function(node) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {string} URI.\n */\nKML.readURI_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.KMLVec2_} Vec2.\n */\nKML.readVec2_ = function(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: KML.ICON_ANCHOR_UNITS_MAP_[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: KML.ICON_ANCHOR_UNITS_MAP_[yunits],\n    origin: origin\n  };\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {number|undefined} Scale.\n */\nKML.readScale_ = function(node) {\n  return XSD.readDecimal(node);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>|string|undefined} StyleMap.\n */\nKML.readStyleMapValue_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(undefined,\n    KML.STYLE_MAP_PARSERS_, node, objectStack);\n};\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.IconStyleParser_ = function(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = KML.DEFAULT_IMAGE_STYLE_SRC_;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {ol.KMLVec2_|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === KML.DEFAULT_IMAGE_STYLE_SRC_) {\n    anchor = KML.DEFAULT_IMAGE_STYLE_ANCHOR_;\n    anchorXUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_;\n    anchorYUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == KML.DEFAULT_IMAGE_STYLE_SRC_) {\n      size = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n      if (scale === undefined) {\n        scale = KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = KML.DEFAULT_NO_IMAGE_STYLE_;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LabelStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LABEL_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {ol.Color} */\n          ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LineStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LINE_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PolyStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.POLY_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline =\n      /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nKML.readFlatLinearRing_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.FLAT_LINEAR_RING_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.gxCoordParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nKML.readGxMultiTrack_ = function(node, objectStack) {\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    KML.GX_MULTITRACK_GEOMETRY_PARSERS_, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readGxTrack_ = function(node, objectStack) {\n  const gxTrackObject = _ol_xml_.pushParseAndPop(\n    /** @type {ol.KMLGxTrackObject_} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), KML.GX_TRACK_PARSERS_, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  let i, ii;\n  for (i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii;\n    ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object} Icon object.\n */\nKML.readIcon_ = function(node, objectStack) {\n  const iconObject = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_PARSERS_, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nKML.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readLineString_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readLinearRing_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n      [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\nKML.readMultiGeometry_ = function(node, objectStack) {\n  const geometries = _ol_xml_.pushParseAndPop([],\n    KML.MULTI_GEOMETRY_PARSERS_, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {ol.geom.Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry, i, ii;\n  for (i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {ol.geom.Geometry} */ (multiGeometry);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Point|undefined} Point.\n */\nKML.readPoint_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readPolygon_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    KML.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>} Style.\n */\nKML.readStyle_ = function(node, objectStack) {\n  const styleObject = _ol_xml_.pushParseAndPop(\n    {}, KML.STYLE_PARSERS_, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {ol.style.Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : KML.DEFAULT_FILL_STYLE_);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {ol.style.Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : KML.DEFAULT_IMAGE_STYLE_);\n  if (imageStyle == KML.DEFAULT_NO_IMAGE_STYLE_) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {ol.style.Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : KML.DEFAULT_TEXT_STYLE_);\n  let strokeStyle = /** @type {ol.style.Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : KML.DEFAULT_STROKE_STYLE_);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n};\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {ol.geom.MultiPoint|ol.geom.MultiLineString|ol.geom.MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<ol.geom.Geometry>} geometries List of geometries.\n * @private\n */\nKML.setCommonGeometryProperties_ = function(multiGeometry,\n  geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let geometry, i, hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (i = 0; i < ii; ++i) {\n    geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.DataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  _ol_xml_.parseNode(KML.DATA_PARSERS_, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.ExtendedDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.EXTENDED_DATA_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.RegionParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.REGION_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PairDataParser_ = function(node, objectStack) {\n  const pairObject = _ol_xml_.pushParseAndPop(\n    {}, KML.PAIR_PARSERS_, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {ol.style.Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PlacemarkStyleMapParser_ = function(node, objectStack) {\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SchemaDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.SCHEMA_DATA_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SimpleDataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = XSD.readString(node);\n    const featureObject =\n        /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LatLonAltBoxParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LAT_LON_ALT_BOX_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LodParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LOD_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.INNER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.OUTER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LinkParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.LINK_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.whenParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'displayName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'value': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTENDED_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': KML.DataParser_,\n    'SchemaData': KML.SchemaDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.REGION_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LatLonAltBox': KML.LatLonAltBoxParser_,\n    'Lod': KML.LodParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LAT_LON_ALT_BOX_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'minAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'north': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'south': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'east': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'west': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'minLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'minFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'tessellate': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RING_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RINGS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'innerBoundaryIs': KML.innerBoundaryIsParser_,\n    'outerBoundaryIs': KML.outerBoundaryIsParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_TRACK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'when': KML.whenParser_\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'coord': KML.gxCoordParser_\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GEOMETRY_FLAT_COORDINATES_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'y': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'w': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'h': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeObjectPropertySetter(KML.readIcon_),\n    'heading': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'hotSpot': _ol_xml_.makeObjectPropertySetter(KML.readVec2_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.INNER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LABEL_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINE_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'width': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.MULTI_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeArrayPusher(KML.readLineString_),\n    'LinearRing': _ol_xml_.makeArrayPusher(KML.readLinearRing_),\n    'MultiGeometry': _ol_xml_.makeArrayPusher(KML.readMultiGeometry_),\n    'Point': _ol_xml_.makeArrayPusher(KML.readPoint_),\n    'Polygon': _ol_xml_.makeArrayPusher(KML.readPolygon_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_MULTITRACK_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.GX_NAMESPACE_URIS_, {\n    'Track': _ol_xml_.makeArrayPusher(KML.readGxTrack_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.NETWORK_LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'Link': KML.LinkParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.OUTER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PAIR_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'key': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PLACEMARK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'MultiGeometry': _ol_xml_.makeObjectPropertySetter(\n      KML.readMultiGeometry_, 'geometry'),\n    'LineString': _ol_xml_.makeObjectPropertySetter(\n      KML.readLineString_, 'geometry'),\n    'LinearRing': _ol_xml_.makeObjectPropertySetter(\n      KML.readLinearRing_, 'geometry'),\n    'Point': _ol_xml_.makeObjectPropertySetter(\n      KML.readPoint_, 'geometry'),\n    'Polygon': _ol_xml_.makeObjectPropertySetter(\n      KML.readPolygon_, 'geometry'),\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'StyleMap': KML.PlacemarkStyleMapParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'MultiTrack': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxMultiTrack_, 'geometry'),\n      'Track': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxTrack_, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.POLY_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'fill': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'outline': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.SCHEMA_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'SimpleData': KML.SimpleDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': KML.IconStyleParser_,\n    'LabelStyle': KML.LabelStyleParser_,\n    'LineStyle': KML.LineStyleParser_,\n    'PolyStyle': KML.PolyStyleParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_MAP_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Pair': KML.PairDataParser_\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  const parsersNS = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Document': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': _ol_xml_.makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n  /** @type {Array.<ol.Feature>} */\n  const features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({'geometry': null},\n    KML.PLACEMARK_PARSERS_, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  const feature = new Feature();\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n\n  const geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    const style = object['Style'];\n    const styleUrl = object['styleUrl'];\n    const styleFunction = KML.createFeatureStyleFunction_(\n      style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n      this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    const style = KML.readStyle_(node, objectStack);\n    if (style) {\n      let styleUri;\n      let baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        const url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  let styleUri;\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return null;\n  }\n  const feature = this.readPlacemark_(\n    node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return [];\n  }\n  let features;\n  const localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    let n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Souce.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'name') {\n      return XSD.readString(n);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  const networkLinks = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  const networkLinks = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  const networkLinks = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.NETWORK_LINK_PARSERS_,\n        n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  const regions = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  const regions = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  const regions = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'Region') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.REGION_PARSERS_,\n        n, []);\n      regions.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {ol.Color|string} color Color.\n * @private\n */\nKML.writeColorTextNode_ = function(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  let i;\n  for (i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  XSD.writeStringTextNode(node, abgr.join(''));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeCoordinatesTextNode_ = function(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  let d, i;\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  XSD.writeStringTextNode(node, text);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeDataNode_ = function(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n * @private\n */\nKML.writeDataNodeName_ = function(node, name) {\n  XSD.writeCDATASection(node, name);\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n * @private\n */\nKML.writeDataNodeValue_ = function(node, value) {\n  XSD.writeStringTextNode(node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writeDocument_ = function(node, features, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.DOCUMENT_SERIALIZERS_,\n    KML.DOCUMENT_NODE_FACTORY_, features, objectStack, undefined,\n    this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeExtendedData_ = function(node, namesAndValues, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      KML.DATA_NODE_FACTORY_, [{name: names[i], value: values[i]}], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIcon_ = function(node, icon, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = KML.ICON_SEQUENCE_[parentNode.namespaceURI];\n  let values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.ICON_SERIALIZERS_, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      KML.ICON_SEQUENCE_[KML.GX_NAMESPACE_URIS_[0]];\n  values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_SERIALIZERS_,\n    KML.GX_NODE_FACTORY_, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIconStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {ol.KMLVec2_} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.ICON_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLabelStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      KML.LABEL_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LABEL_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLineStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.LINE_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LINE_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeMultiGeometry_ = function(node, geometry, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<ol.geom.Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    factory = KML.GEOMETRY_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {ol.geom.MultiPoint} */ (geometry).getPoints();\n    factory = KML.POINT_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {ol.geom.MultiLineString} */ (geometry)).getLineStrings();\n    factory = KML.LINE_STRING_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {ol.geom.MultiPolygon} */ (geometry)).getPolygons();\n    factory = KML.POLYGON_NODE_FACTORY_;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.MULTI_GEOMETRY_SERIALIZERS_, factory,\n    geometries, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeBoundaryIs_ = function(node, linearRing, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.BOUNDARY_IS_SERIALIZERS_,\n    KML.LINEAR_RING_NODE_FACTORY_, [linearRing], objectStack);\n};\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writePlacemark_ = function(node, feature, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = _ol_xml_.makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      KML.EXTENDEDDATA_NODE_FACTORY_, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction.call(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PLACEMARK_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    KML.GEOMETRY_NODE_FACTORY_, [geometry], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePrimitiveGeometry_ = function(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PRIMITIVE_GEOMETRY_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PRIMITIVE_GEOMETRY_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolygon_ = function(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  // inner rings\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.INNER_BOUNDARY_NODE_FACTORY_,\n    linearRings, objectStack);\n  // outer ring\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.OUTER_BOUNDARY_NODE_FACTORY_,\n    [outerRing], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolyStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.POLY_STYLE_SERIALIZERS_,\n    KML.COLOR_NODE_FACTORY_, [style.getColor()], objectStack);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n * @private\n */\nKML.writeScaleTextNode_ = function(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  XSD.writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {ol.KMLVec2_} vec2 Vec2.\n * @private\n */\nKML.writeVec2_ = function(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.KML_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.KML_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Document': _ol_xml_.makeChildAppender(KML.writeDocument_),\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.DOCUMENT_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.EXTENDEDDATA_NODE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': _ol_xml_.makeChildAppender(KML.writeDataNode_),\n    'value': _ol_xml_.makeChildAppender(KML.writeDataNodeValue_),\n    'displayName': _ol_xml_.makeChildAppender(KML.writeDataNodeName_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nKML.GEOMETRY_TYPE_TO_NODENAME_ = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'href'\n  ],\n  _ol_xml_.makeStructureNS(KML.GX_NAMESPACE_URIS_, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'y': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'w': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'h': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeChildAppender(KML.writeIcon_),\n    'heading': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'hotSpot': _ol_xml_.makeChildAppender(KML.writeVec2_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LABEL_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LABEL_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LINE_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LINE_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'width': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.BOUNDARY_IS_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.MULTI_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'GeometryCollection': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PLACEMARK_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PLACEMARK_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': _ol_xml_.makeChildAppender(\n      KML.writeExtendedData_),\n    'MultiGeometry': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_),\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'Style': _ol_xml_.makeChildAppender(KML.writeStyle_),\n    'address': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'description': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'open': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'phoneNumber': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'styleUrl': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'visibility': _ol_xml_.makeChildAppender(\n      XSD.writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'tessellate': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'altitudeMode': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'coordinates': _ol_xml_.makeChildAppender(\n      KML.writeCoordinatesTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLYGON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLY_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': _ol_xml_.makeChildAppender(KML.writeIconStyle_),\n    'LabelStyle': _ol_xml_.makeChildAppender(KML.writeLabelStyle_),\n    'LineStyle': _ol_xml_.makeChildAppender(KML.writeLineStyle_),\n    'PolyStyle': _ol_xml_.makeChildAppender(KML.writePolyStyle_)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GX_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  return _ol_xml_.createElementNS(KML.GX_NAMESPACE_URIS_[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.DOCUMENT_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GEOMETRY_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      KML.GEOMETRY_TYPE_TO_NODENAME_[/** @type {ol.geom.Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.COLOR_NODE_FACTORY_ = _ol_xml_.makeSimpleNodeFactory('color');\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.DATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Data');\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.EXTENDEDDATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.INNER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POINT_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINE_STRING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINEAR_RING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POLYGON_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Polygon');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.OUTER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const kml = _ol_xml_.createElementNS(KML.NAMESPACE_URIS_[4], 'kml');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:gx',\n    KML.GX_NAMESPACE_URIS_[0]);\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(kml, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    KML.SCHEMA_LOCATION_);\n\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: kml};\n  const properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  const orderedKeys = KML.KML_SEQUENCE_[kml.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.KML_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n    this);\n  return kml;\n};\nexport default KML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/KML.js\n// module id = 151\n// module chunks = 0 1 2 10","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.query.Querent\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport ngeoWFSDescribeFeatureType from 'ngeo/WFSDescribeFeatureType.js';\nimport olFormatWMSCapabilities from 'ol/format/WMSCapabilities.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olUri from 'ol/uri.js';\nimport * as olExtent from 'ol/extent.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Querent is a service that issues all sorts of queries using\n   * ngeo data sources. It does not store the result. Instead, it returns it\n   * using promises. Any component that inject this service can use it to\n   * make it issue its own queries and do whatever it wants with the result.\n   *\n   * It supports sending OGC requests and parse the response, such as:\n   * - WFS DescribeFeatureType\n   * - WFS GetFeature\n   * - WMS GetCapabilites\n   * - WMS GetFeatureInfo\n   * - WMTS GetCapabilities\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   *//* @ngInject\n   */\n  constructor($http, $q, ngeoRuleHelper, ngeoWMSTime) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n\n    // === Other properties ===\n\n    /**\n     * Promises that can be resolved to cancel started requests.\n     * @type {!Array.<angular.$q.Deferred>}\n     * @private\n     */\n    this.requestCancelers_ = [];\n\n    /**\n     * Cache of promises for WMS GetCapabilities requests. They key is the\n     * online resource base url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmsGetCapabilitiesPromises_ = {};\n\n    /**\n     * Cache of promises for WMST GetCapabilities requests. They key is the\n     * url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmtsGetCapabilitiesPromises_ = {};\n  }\n\n\n  // === PUBLIC methods ===\n\n  /**\n   * Issue WMS GetFeatureInfo and/or WFS GetFeature requests using the given\n   * data sources, map and optional filters.\n   *\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  issue(options) {\n\n    const promises = [];\n    const map = options.map;\n\n    // (1) Cancel requests that are still running\n    this.cancelStillRunningRequests_();\n\n    // (2) Get queryable data sources\n    let queryableDataSources;\n    if (options.queryableDataSources) {\n      queryableDataSources = options.queryableDataSources;\n    } else {\n      const dataSources = options.dataSources;\n      goog.asserts.assert(dataSources, 'DataSources should be set');\n      queryableDataSources = this.getQueryableDataSources(dataSources, map);\n    }\n\n    // (3) Combine data sources that support WFS and issue WFS queries.\n    //     The 'bbox' ('extent' option) is not required for WFS requests to\n    //     be issued.\n    const combinedWFSDataSources = this.getCombinableWFSDataSources_(\n      queryableDataSources.wfs);\n    promises.push(this.issueCombinedWFS_(combinedWFSDataSources, options));\n\n    // (4) Combine data sources that support WMS and issue WMS queries.\n    //     Only occurs if the `coordinate` option is set, because it's required\n    //     by WMS GetFeatureInfo requests.\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const combinedWMSDataSources = this.getCombinableWMSDataSources_(\n        queryableDataSources.wms);\n      promises.push(this.issueCombinedWMS_(combinedWMSDataSources, options));\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Browse a given list of data sources. Return 2 lists of data sources that\n   * are queryable, the first one being those that support WFS and the other\n   * WMS only. This means that WFS is always favored first, then WMS.\n   *\n   * The map view resolution determines if the inner ogc layers are in range.\n   *\n   * @param {!Array.<!ngeo.datasource.DataSource>} dataSources Data sources\n   * @param {ol.Map} map Map.\n   * @return {!ngeox.QueryableDataSources} Queryable data sources.\n   * @export\n   */\n  getQueryableDataSources(dataSources, map) {\n\n    const queryableDataSources = {\n      wfs: [],\n      wms: []\n    };\n    const resolution = goog.asserts.assertNumber(map.getView().getResolution());\n\n    for (const dataSource of dataSources) {\n\n      // (1) Skip data source that can't be queried\n      if (!this.isDataSourceQueryable_(dataSource, resolution)) {\n        continue;\n      }\n\n      if (dataSource instanceof ngeoDatasourceOGC) {\n        // (2) Split data sources\n        if (dataSource.supportsWFS) {\n          queryableDataSources.wfs.push(dataSource);\n        } else {\n          queryableDataSources.wms.push(dataSource);\n        }\n      }\n    }\n\n    return queryableDataSources;\n  }\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  wfsDescribeFeatureType(dataSource) {\n\n    goog.asserts.assert(\n      dataSource.supportsAttributes,\n      `The data source must support WFS, have a single OGCLayer that\n      is queryable in order to issue WFS DescribeFeatureType requests`\n    );\n\n    const ogcLayerNames = dataSource.getOGCLayerNames();\n\n    const url = olUri.appendParams(\n      goog.asserts.assertString(dataSource.wfsUrl),\n      {\n        'REQUEST': 'DescribeFeatureType',\n        'SERVICE': 'WFS',\n        'VERSION': '2.0.0',\n        'TYPENAME': ogcLayerNames\n      }\n    );\n\n    return this.http_.get(url).then((response) => {\n      const format = new ngeoWFSDescribeFeatureType();\n      return format.read(response.data);\n    });\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMS layer capabilities\n   * @param {string} layerName Name of the WMS layer\n   * @return {?Object} Found WMS layer capability\n   * @export\n   */\n  wmsFindLayerCapability(layerCapabilities, layerName) {\n\n    let found = null;\n\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Name'] === layerName) {\n        found = layerCapability;\n        break;\n      } else if (layerCapability['Layer']) {\n        found = this.wmsFindLayerCapability(\n          layerCapability['Layer'], layerName);\n        if (found) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * @param {string} baseUrl Base url of the WMS server.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmsGetCapabilities(baseUrl, opt_cache) {\n\n    const cache = opt_cache !== false;\n\n    const params = {\n      'REQUEST': 'GetCapabilities',\n      'SERVICE': 'WMS',\n      'VERSION': '1.3.0'\n    };\n\n    const url = olUri.appendParams(baseUrl, params);\n    let promise;\n\n    if (!cache || !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.wmsGetCapabilitiesPromises_[baseUrl];\n    }\n\n    goog.asserts.assert(promise);\n\n    if (cache && !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      this.wmsGetCapabilitiesPromises_[baseUrl] = promise;\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMTS layer capabilities\n   * @param {string} layerName Name of the WMTS layer, a.k.a. the identifier.\n   * @return {?Object} Found WTMS layer capability\n   * @export\n   */\n  wmtsFindLayerCapability(layerCapabilities, layerName) {\n    let found = null;\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Identifier'] === layerName) {\n        found = layerCapability;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {string} url Url of the WMTS server. Note that it must contain\n   *     all required arguments.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmtsGetCapabilities(url, opt_cache) {\n\n    const cache = opt_cache !== false;\n    let promise;\n\n    if (!cache || !this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMTSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.wmtsGetCapabilitiesPromises_[url];\n    }\n\n    goog.asserts.assert(promise);\n\n    if (cache && !this.wmtsGetCapabilitiesPromises_[url]) {\n      this.wmtsGetCapabilitiesPromises_[url] = promise;\n    }\n\n    return promise;\n  }\n\n\n  // === PRIVATE methods ===\n\n  /**\n   * Handles the response of multiple promises that did either\n   * WMS GetFeatureInfo or WFS GetFeature requests, in which the result is\n   * a hash with key being the data source id and value the array of features.\n   *\n   * The response object itself is an array, one item being one result per\n   * promise. The idea is to return a single hash by combining the result\n   * objects.\n   *\n   * The keys are always unique, i.e. there can be multiple result objects for\n   * the same data source id.\n   *\n   * @param {!Array.<ngeox.QuerentResult>} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleCombinedQueryResult_(response) {\n    const combinedHash = {};\n    for (const hash of response) {\n      for (const dataSourceIdStr in hash) {\n        const dataSourceId = Number(dataSourceIdStr);\n        combinedHash[dataSourceId] = hash[dataSourceId];\n      }\n    }\n    return combinedHash;\n  }\n\n\n  /**\n   * Handles the result of a single WMS GetFeatureInfo or WFS GetFeature\n   * request. Read features from the response and return them.\n   *\n   * @param {!Array.<!ngeo.datasource.OGC>} dataSources List of\n   *     queryable data sources that were used to do the query.\n   * @param {number} limit The maximum number of features to get with the query.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {angular.$http.Response|number} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleQueryResult_(dataSources, limit, wfs, response) {\n    const hash = {};\n\n    for (const dataSource of dataSources) {\n      let features;\n      let tooManyFeatures;\n      let totalFeatureCount;\n\n      if (typeof response === 'number') {\n        features = [];\n        tooManyFeatures = true;\n        totalFeatureCount = response;\n      } else {\n        if (dataSource instanceof ngeoDatasourceOGC) {\n          features = this.readAndTypeFeatures_(dataSource, response.data, wfs);\n        } else {\n          features = [];\n        }\n      }\n      const dataSourceId = dataSource.id;\n      this.setUniqueIds_(features, dataSource.id);\n      hash[dataSourceId] = {\n        features,\n        limit,\n        tooManyFeatures,\n        totalFeatureCount\n      };\n    }\n\n    return hash;\n  }\n\n  /**\n   * Read and assign the type of the feature to each feature in the data.\n   * The type will be stocked in the properties of the features as\n   * \"ngeo_feature_type_\".\n   * @param {ngeo.datasource.OGC} dataSource used to read the features.\n   * @param {Document | Node | Object | string} data the response data.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @return {Array.<ol.Feature>} returned features with a type in each features.\n   * @private\n   */\n  readAndTypeFeatures_(dataSource, data, wfs) {\n    const features = [];\n    let readFeatures;\n    // Copy the types to be able to set it AND iterate on it.\n    const featureTypes = this.getSetOlFormatTypes_(dataSource, wfs).slice();\n    featureTypes.forEach((type) => {\n      // Assign temporarily a single feature type to read features separately.\n      this.getSetOlFormatTypes_(dataSource, wfs, [type]);\n      if (wfs) {\n        readFeatures = dataSource.wfsFormat.readFeatures(data);\n      } else {\n        readFeatures = dataSource.wmsFormat.readFeatures(data);\n      }\n      if (readFeatures.length > 0) {\n        readFeatures.forEach((feature) => {\n          feature.set('ngeo_feature_type_', type);\n          features.push(feature);\n        });\n      }\n    });\n    // Re-set the value to the datasource.xxxFormat to be able to re-use\n    // it later (in another query);\n    this.getSetOlFormatTypes_(dataSource, wfs, featureTypes);\n    return features;\n  }\n\n  /**\n   * Return the types defined in the format of the datasource. Can set the\n   * types if one is given.\n   * @param {ngeo.datasource.OGC} dataSource that contains the format object.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {Array.<string>=} opt_types An array of type if you want to set the\n   *     type of the format object.\n   * @return {Array.<string>} The types defined in the format.\n   * @private\n   */\n  getSetOlFormatTypes_(dataSource, wfs, opt_types) {\n    let types;\n    if (wfs) {\n      if (opt_types) {\n        dataSource.wfsFormat.setFeatureType(opt_types);\n      }\n      types = dataSource.wfsFormat.getFeatureType();\n    } else {\n      if (opt_types) {\n        dataSource.wmsFormat.setLayers(opt_types);\n      }\n      types = dataSource.wmsFormat.getLayers();\n    }\n    if (!types) {\n      return [];\n    }\n    return (Array.isArray(types)) ? types : [types];\n  }\n\n  /**\n   * Issue WFS GetFeature requests using the given combined data sources, map\n   * and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWFS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const maxFeatures = goog.asserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = goog.asserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const srsName = projection.getCode();\n    const wfsCount = options.wfsCount === true;\n\n    // (1) Extent (bbox), which is optional, i.e. its value can stay undefined\n    let bbox;\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const tolerancePx = options.tolerancePx;\n      goog.asserts.assert(tolerancePx);\n      const tolerance = tolerancePx * resolution;\n      bbox = olExtent.buffer(\n        olExtent.createOrUpdateFromCoordinate(coordinate),\n        tolerance\n      );\n    } else {\n      bbox = options.extent;\n    }\n\n    // (2) Launch one request per combinaison of data sources\n    const wfsFormat = new olFormatWFS();\n    const xmlSerializer = new XMLSerializer();\n    for (const dataSources of combinedDataSources) {\n\n      let getFeatureCommonOptions;\n      let featureNS;\n      let featureTypes = [];\n      let url;\n      const params = {};\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!getFeatureCommonOptions) {\n          featureNS = dataSource.wfsFeatureNS;\n          const featurePrefix = dataSource.wfsFeaturePrefix;\n          const geometryName = dataSource.geometryName;\n          const outputFormat = dataSource.wfsOutputFormat;\n\n          getFeatureCommonOptions = {\n            bbox,\n            featureNS,\n            featurePrefix,\n            geometryName,\n            outputFormat,\n            srsName\n          };\n\n          url = dataSource.wfsUrl;\n\n          // All data sources combined share the same active dimensions\n          olObj.assign(params, dataSource.activeDimensions);\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        featureTypes = featureTypes.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Add filter, if any. If the case, then only one data source\n        //     is expected to be used for this request.\n        let filter;\n        if (options.filter) {\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            filter: options.filter,\n            incTime: true\n          });\n        } else if ((dataSource.filterRules && dataSource.filterRules.length) ||\n            dataSource.timeRangeValue) {\n\n          goog.asserts.assert(\n            dataSources.length === 1,\n            `A data source having filterRules or timeRangeValue should issue\n            a single query, alone.`\n          );\n\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            incTime: true,\n            srsName: srsName\n          });\n        }\n\n        if (filter) {\n          getFeatureCommonOptions['filter'] = filter;\n        }\n      }\n\n      goog.asserts.assert(getFeatureCommonOptions);\n      getFeatureCommonOptions.featureTypes = featureTypes;\n      goog.asserts.assert(url);\n\n      // (4) Build query then launch\n      //\n      //     If we require to do a WFS GetFeature request with\n      //     `resultType: 'hits'` first, do so. In that case, if there would\n      //     be too many features returned, no GetFeature is done thereafter\n      //     and the data sources will return empty arrays in the returned\n      //     response.\n      //\n      //     If we do not need to count features first, then proceed with\n      //     an normal WFS GetFeature request.\n      const getFeatureDefer = this.q_.defer();\n      promises.push(\n        getFeatureDefer.promise.then(\n          this.handleQueryResult_.bind(this, dataSources, maxFeatures, true)\n        )\n      );\n\n      // (4.1) Count, if required\n      let countPromise;\n      if (wfsCount) {\n        const getCountOptions =\n            /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n            olObj.assign(\n              {\n                resultType: 'hits'\n              },\n              getFeatureCommonOptions\n            )\n          );\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(\n          featureCountXml);\n        const canceler = this.registerCanceler_();\n        countPromise = this.http_.post(\n          url,\n          featureCountRequest,\n          {\n            params: params,\n            headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n            timeout: canceler.promise\n          }\n        ).then(((response) => {\n          const meta = dataSources[0].wfsFormat.readFeatureCollectionMetadata(\n            response.data\n          );\n          return meta['numberOfFeatures'];\n        }).bind(this));\n      } else {\n        countPromise = this.q_.resolve();\n      }\n\n      // (4.2) After count, do GetFeature (if required)\n      countPromise.then((numberOfFeatures) => {\n        // `true` is returned if a count request was made AND there would\n        // be too many features.\n        if (numberOfFeatures === undefined || numberOfFeatures < maxFeatures) {\n\n          const getFeatureOptions =\n              /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n              olObj.assign(\n                {\n                  maxFeatures\n                },\n                getFeatureCommonOptions\n              )\n            );\n          const featureRequestXml = wfsFormat.writeGetFeature(\n            getFeatureOptions);\n          const featureRequest = xmlSerializer.serializeToString(\n            featureRequestXml);\n          goog.asserts.assertString(url);\n          const canceler = this.registerCanceler_();\n          this.http_.post(\n            url,\n            featureRequest,\n            {\n              params: params,\n              headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n              timeout: canceler.promise\n            }\n          ).then((response) => {\n            getFeatureDefer.resolve(response);\n          });\n\n        } else {\n          getFeatureDefer.resolve(numberOfFeatures);\n        }\n      });\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Issue WMS GetFeatureInfo requests using the given combined data sources,\n   * map and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWMS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const FEATURE_COUNT = goog.asserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = goog.asserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const projCode = projection.getCode();\n\n    // (1) Coordinate, which is required to issue WMS GetFeatureInfo requests\n    const coordinate = options.coordinate;\n    goog.asserts.assert(coordinate);\n\n    // (2) Launch one request per combinaison of data sources\n    for (const dataSources of combinedDataSources) {\n\n      let url;\n      let LAYERS = [];\n      let INFO_FORMAT;\n      let activeDimensionsSet = false;\n      const params = {};\n      let filterString = null;\n      let filtrableLayerName = null;\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!INFO_FORMAT) {\n          INFO_FORMAT = dataSource.wmsInfoFormat;\n          url = dataSource.wmsUrl;\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        LAYERS = LAYERS.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Manage active dimensions, which are added directly to the\n        //     query parameters. Note that this occurs only ONCE, i.e.\n        //     for the first data source, because all data sources here have\n        //     been combined together, therefore they share the same active\n        //     dimensions.\n        if (!activeDimensionsSet) {\n          olObj.assign(params, dataSource.activeDimensions);\n          activeDimensionsSet = true;\n        }\n\n        // (d) Add filter, if any. If there is a filter on the data source,\n        //     then it is expected that one request will be sent for this\n        //     data source only.\n        if (dataSource.filterRules && dataSource.filterRules.length) {\n          goog.asserts.assert(dataSources.length === 1);\n          filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n          filterString = this.ngeoRuleHelper_.createFilterString({\n            dataSource: dataSource,\n            srsName: projCode\n          });\n        }\n\n        // (e) Add TIME parameter if the data source has a time range value.\n        //     If that's the case, then it is expected that one request will be\n        //     sent for this data source only.\n        if (dataSource.timeRangeValue !== null && dataSource.timeProperty) {\n          goog.asserts.assert(dataSources.length === 1);\n          params['TIME'] = this.ngeoWMSTime_.formatWMSTimeParam(\n            dataSource.timeProperty,\n            dataSource.timeRangeValue\n          );\n        }\n      }\n\n      params['LAYERS'] = LAYERS;\n      params['QUERY_LAYERS'] = LAYERS;\n\n      // Manage 'FILTER' parameter\n      if (filterString && filtrableLayerName) {\n        let filterParamValue = null;\n        if (LAYERS.length === 1) {\n          // When there's only one layer in the `LAYERS` parameters, then\n          // the filter string is given as-is.\n          filterParamValue = filterString;\n        } else {\n          // When there's more then one layer, then each filter must be wrapped\n          // between parenthesis and the order must also match the `LAYERS`\n          // parameter as well.\n          const filterParamValues = [];\n          for (let i = 0, ii = LAYERS.length; i < ii; i++) {\n            if (LAYERS[i] === filtrableLayerName) {\n              filterParamValues.push(`(${filterString})`);\n            } else {\n              filterParamValues.push('()');\n            }\n          }\n          filterParamValue = filterParamValues.join('');\n        }\n        params['FILTER'] = filterParamValue;\n      }\n\n      goog.asserts.assert(url);\n      const wmsSource = new olSourceImageWMS({\n        params,\n        url\n      });\n\n      // (4) Build query url, then launch\n      const wmsGetFeatureInfoUrl = goog.asserts.assertString(\n        wmsSource.getGetFeatureInfoUrl(\n          coordinate, resolution, projCode, {\n            // Without extern, quoting is necessary\n            'FEATURE_COUNT': FEATURE_COUNT,\n            'INFO_FORMAT': INFO_FORMAT\n          }\n        )\n      );\n\n      const canceler = this.registerCanceler_();\n      promises.push(\n        this.http_.get(\n          wmsGetFeatureInfoUrl,\n          {\n            timeout: canceler.promise\n          }\n        ).then(\n          this.handleQueryResult_.bind(this, dataSources, FEATURE_COUNT, false)\n        )\n      );\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WFS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWFSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWFS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWFS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WMS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWMSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWMS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWMS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * Checks if a data source can be queried, which requires it to be:\n   * - visible\n   * - in range\n   * - queryable (using the native getter)\n   * - have at least one OGC layer in range of current map view resolution.\n   *\n   * @param {ngeo.datasource.DataSource} ds Data source\n   * @param {number} res Resolution.\n   * @return {boolean} Whether the data source is queryable\n   * @private\n   */\n  isDataSourceQueryable_(ds, res) {\n    let queryable = ds.visible && ds.inRange && ds.queryable;\n    if (queryable && ds instanceof ngeoDatasourceOGC) {\n      const ogcDS = /** @type {!ngeo.datasource.OGC} */ (ds);\n      queryable = ogcDS.isAnyOGCLayerInRange(res, true);\n    }\n    return queryable;\n  }\n\n  /**\n   * Make sure that feature ids are unique, because the same features might\n   * be returned for different layers.\n   * @param {Array.<ol.Feature>} features Features\n   * @param {number} dataSourceId Data source id.\n   * @private\n   */\n  setUniqueIds_(features, dataSourceId) {\n    features.forEach((feature) => {\n      if (feature.getId() !== undefined) {\n        const id = `${dataSourceId}_${feature.getId()}`;\n        feature.setId(id);\n      }\n    });\n  }\n\n  /**\n   * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n   *    HTTP request.\n   * @private\n   */\n  registerCanceler_() {\n    const canceler = this.q_.defer();\n    this.requestCancelers_.push(canceler);\n    return canceler;\n  }\n\n  /**\n   * @private\n   */\n  cancelStillRunningRequests_() {\n    for (const canceler of this.requestCancelers_) {\n      canceler.resolve();\n    }\n    this.requestCancelers_.length = 0;\n  }\n};\n\n\n/**\n * @typedef {!Array.<!Array.<!ngeo.datasource.OGC>>}\n */\nexports.CombinedDataSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuerent', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoQuerent', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/query/Querent.js","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.Attribute\n*/\nconst exports = {};\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeo.AttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Attribute.js","/**\n * @module ngeo.datasource.OGC\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoBase.FilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoBase.AttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 167\n// module chunks = 0 1","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.FeatureHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilters from 'ngeo/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n *//* @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    goog.asserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoBase.GeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoBase.GeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoBase.GeometryType.CIRCLE:\n    case ngeoBase.GeometryType.POLYGON:\n    case ngeoBase.GeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoBase.GeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  goog.asserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        offsetY: -(size + 10 / 2 + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return goog.asserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return goog.asserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoBase.FeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            offsetY: -(8 / 2 + 4)\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoBase.GeometryType.LINE_STRING,\n    ngeoBase.GeometryType.POLYGON,\n    ngeoBase.GeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoBase.GeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoBase.GeometryType.LINE_STRING:\n    case ngeoBase.GeometryType.CIRCLE:\n    case ngeoBase.GeometryType.POLYGON:\n    case ngeoBase.GeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoBase.GeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  goog.asserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoBase.FeatureProperties.ANGLE)));\n  goog.asserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = goog.asserts.assertString(feature.get(ngeoBase.FeatureProperties.COLOR));\n\n  goog.asserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = goog.asserts.assertString(feature.get(ngeoBase.FeatureProperties.NAME));\n  goog.asserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoBase.FeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoBase.FeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return goog.asserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoBase.FeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return goog.asserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoBase.FeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoBase.FeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  goog.asserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoBase.GeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoBase.FeatureProperties.AZIMUT);\n      goog.asserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  goog.asserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoBase.FeatureProperties.IS_TEXT)) {\n      type = ngeoBase.GeometryType.TEXT;\n    } else {\n      type = ngeoBase.GeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoBase.GeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoBase.FeatureProperties.IS_CIRCLE)) {\n      type = ngeoBase.GeometryType.CIRCLE;\n    } else if (feature.get(ngeoBase.FeatureProperties.IS_RECTANGLE)) {\n      type = ngeoBase.GeometryType.RECTANGLE;\n    } else {\n      type = ngeoBase.GeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoBase.GeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoBase.GeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoBase.GeometryType.MULTI_LINE_STRING;\n  }\n\n  goog.asserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  goog.asserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    goog.asserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoFeatureHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/FeatureHelper.js","/**\n * @module ngeo.download.service\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/download/service.js","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.GPXOptions=} opt_options Options.\n * @api\n */\nconst GPX = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(ol.Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (ol.Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst GPX_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeArrayPusher(readRte),\n    'trk': _ol_xml_.makeArrayPusher(readTrk),\n    'wpt': _ol_xml_.makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst LINK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkText'),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTE_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTEPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKSEG_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst WPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime),\n    'magvar': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'geoidheight': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'sym': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'fix': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'sat': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'hdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'vdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'pdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'ageofdgpsdata': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'dgpsid': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst LINK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst RTE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'rtept': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTEPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst TRK_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'trkseg': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRKSEG_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': _ol_xml_.makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst WPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst WPT_TYPE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'time': _ol_xml_.makeChildAppender(XSD.writeDateTimeTextNode),\n    'magvar': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'geoidheight': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'sym': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'fix': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'sat': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'hdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'vdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'pdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'ageofdgpsdata': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'dgpsid': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {ol.Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return _ol_xml_.createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst GPX_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeChildAppender(writeRte),\n    'trk': _ol_xml_.makeChildAppender(writeTrk),\n    'wpt': _ol_xml_.makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {ol.geom.GeometryLayout} Layout.\n */\nGPX.applyLayoutOptions_ = function(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  _ol_xml_.parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop(\n    {}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (rteValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (trkValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  _ol_xml_.parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates);\n  const geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {ol.LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = GPX.applyLayoutOptions_(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const feature = features[i];\n    if (this.readExtensions_) {\n      const extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  const feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<ol.Feature>} */\n    const features = _ol_xml_.pushParseAndPop([], GPX_PARSERS,\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  _ol_xml_.setAttributeNS(node, null, 'lat', coordinate[1]);\n  _ol_xml_.setAttributeNS(node, null, 'lon', coordinate[0]);\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  const orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    RTE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    TRK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  _ol_xml_.pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  const gpx = _ol_xml_.createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(gpx, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(gpx, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GPX.js\n// module id = 171\n// module chunks = 0 1 2","/**\n * @module ngeo.misc.WMSTime\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n *//* @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/WMSTime.js","/**\n * @module ngeo.query.MapQuerent\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport * as olObj from 'ol/obj.js';\n\n\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\nngeoBase.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n  sources: [],\n  total: 0,\n  pending: false\n}));\n\n\nconst exports = class {\n\n  /**\n   * The ngeo Map Querent is the service bound to a map that issues\n   * queries using the Querent service. The result is stored inside this\n   * service.\n   *\n   * NOTE: This will replace the ngeo.Query service.\n   *\n   * @struct\n   * @param {angular.$injector} $injector Main injector.\n   * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data source objects.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     sources helper service.\n   * @param {ngeo.query.Querent} ngeoQuerent The ngeo querent service.\n   * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   *//* @ngInject\n   */\n  constructor($injector, ngeoDataSources, ngeoDataSourcesHelper, ngeoQuerent,\n    ngeoQueryResult) {\n\n    const options = /** @type {ngeox.QueryOptions} */ (\n      $injector.has('ngeoQueryOptions') ?\n        $injector.get('ngeoQueryOptions') : {});\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.result_ = ngeoQueryResult;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n    /**\n     * When set, before making WFS GetFeature requests to fetch features,\n     * WFS GetFeature requests with `resultType = 'hits'` are made first. If\n     * the number of records for the request would exceed the limit, then\n     * no features are returned.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n      options.queryCountFirst : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerancePx_ = options.tolerance !== undefined ?\n      options.tolerance : 3;\n\n    /**\n     * A hash of data source names classified by ids.\n     * @type {Object.<number, string>}\n     * @private\n     */\n    this.dataSourceNames_ = {};\n  }\n\n  /**\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @export\n   */\n  issue(options) {\n    // (1) Clear previous result\n    this.clear();\n\n    // (2) Get queryable data sources, unless they are already set\n    let queryableDataSources;\n    if (options.dataSources === undefined &&\n        options.queryableDataSources === undefined\n    ) {\n      queryableDataSources = this.ngeoQuerent_.getQueryableDataSources(\n        this.ngeoDataSources_.getArray(),\n        options.map\n      );\n    }\n\n    // (3) Update query options, update the pending property and issue the\n    //     request.\n    const limit = options.limit !== undefined ? options.limit : this.limit_;\n    olObj.assign(options, {\n      queryableDataSources: queryableDataSources,\n      limit: limit,\n      tolerancePx: this.tolerancePx_,\n      wfsCount: this.queryCountFirst_\n    });\n    this.result_.pending = true;\n    this.ngeoQuerent_.issue(options).then(this.handleResult_.bind(this));\n  }\n\n  /**\n   * Clear result, i.e. clear all 'result source' from their features and other\n   * information.\n   * @export\n   */\n  clear() {\n    this.result_.total = 0;\n    for (const source of this.result_.sources) {\n      source.features.length = 0;\n      source.pending = false;\n      source.queried = false;\n      source.tooManyResults = false;\n      source.totalFeatureCount = undefined;\n    }\n    this.result_.sources.length = 0; // Clear previous result sources\n    this.result_.pending = false;\n  }\n\n  /**\n   * Called after a request to the querent service. Update the result.\n   *\n   * @param {ngeox.QuerentResult} response Response\n   * @private\n   */\n  handleResult_(response) {\n    let total = 0;\n\n    // (1) Update result sources, i.e. add them\n    for (const idStr in response) {\n      const id = Number(idStr);\n      const dataSource = this.ngeoDataSourcesHelper_.getDataSource(id);\n      let label = dataSource.name;\n      goog.asserts.assert(dataSource);\n\n      const querentResultItem = response[id];\n      const features = querentResultItem.features;\n      const limit = querentResultItem.limit;\n      const tooManyResults = querentResultItem.tooManyFeatures === true;\n      const totalFeatureCount = querentResultItem.totalFeatureCount;\n\n      const typeSeparatedFeatures = {};\n      features.forEach((feature) => {\n        const type = goog.asserts.assertString(feature.get('ngeo_feature_type_'));\n        if (!typeSeparatedFeatures[type]) {\n          typeSeparatedFeatures[type] = [];\n        }\n        // Use properties aliases if any\n        if (dataSource.attributes && dataSource.attributes.length) {\n          const properties = feature.getProperties();\n          const filteredProperties = {};\n          dataSource.attributes.forEach((attribute) => {\n            if (attribute.alias) {\n              filteredProperties[attribute.alias] = properties[attribute.name];\n              feature.unset(attribute.name, /* silent */ true);\n            } else {\n              // No alias is available => use the attribute as is.\n              filteredProperties[attribute.name] = properties[attribute.name];\n            }\n          });\n          feature.setProperties(filteredProperties, /* silent */ true);\n        }\n        typeSeparatedFeatures[type].push(feature);\n      });\n\n      for (const type in typeSeparatedFeatures) {\n        label = type ? type : label;\n        const featuresByType = typeSeparatedFeatures[type];\n        this.result_.sources.push({\n          features: featuresByType,\n          id: id,\n          label: label,\n          limit: limit,\n          pending: false,\n          queried: true,\n          tooManyResults: tooManyResults,\n          totalFeatureCount: totalFeatureCount\n        });\n        total += features.length;\n      }\n    }\n\n    // (2) Update total & pending\n    this.result_.total = total;\n    this.result_.pending = false;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoMapQuerent', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoMapQuerent', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/query/MapQuerent.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 190\n// module chunks = 0 1","/**\n * @module ngeo.filter.RuleHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport ngeoRuleDate from 'ngeo/rule/Date.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport ngeoRuleText from 'ngeo/rule/Text.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatFilter from 'ol/format/filter.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to create `ngeo.rule.Rule`\n   * objects.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoRuleHelper\n   *//* @ngInject\n   */\n  constructor(gettextCatalog, ngeoFeatureHelper, ngeoWMSTime) {\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.Attribute>} attributes Attributes.\n   * @param {boolean=} opt_isCustom Whether the created rules should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRulesFromAttributes(attributes, opt_isCustom) {\n    const rules = [];\n    for (const attribute of attributes) {\n      rules.push(this.createRuleFromAttribute(attribute, opt_isCustom));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.Attribute} attribute Attribute.\n   * @param {boolean=} opt_isCustom Whether the created rule should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRuleFromAttribute(attribute, opt_isCustom) {\n\n    let rule;\n    const isCustom = opt_isCustom === true;\n\n    /**\n     * @type {string}\n     */\n    const name = this.gettextCatalog_.getString(attribute.name);\n\n    // Todo: support geometry\n\n    switch (attribute.type) {\n      case ngeoBase.AttributeType.DATE:\n      case ngeoBase.AttributeType.DATETIME:\n        if (isCustom) {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.EQUALS,\n            operators: [\n              ngeoRuleRule.TemporalOperatorType.EQUALS,\n              ngeoRuleRule.TemporalOperatorType.BEGINS,\n              ngeoRuleRule.TemporalOperatorType.ENDS\n            ],\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        } else {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.DURING,\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        }\n        break;\n      case ngeoBase.AttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry({\n          name: name,\n          operator: ngeoRuleRule.SpatialOperatorType.WITHIN,\n          operators: [\n            ngeoRuleRule.SpatialOperatorType.CONTAINS,\n            ngeoRuleRule.SpatialOperatorType.INTERSECTS,\n            ngeoRuleRule.SpatialOperatorType.WITHIN\n          ],\n          propertyName: attribute.name,\n          type: attribute.type\n        });\n        break;\n      case ngeoBase.AttributeType.NUMBER:\n        if (isCustom) {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.EQUAL_TO,\n            operators: [\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.GREATER_THAN,\n              ngeoRuleRule.OperatorType.GREATER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.LESSER_THAN,\n              ngeoRuleRule.OperatorType.LESSER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name,\n            type: ngeoBase.AttributeType.NUMBER\n          });\n        } else {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.BETWEEN,\n            propertyName: attribute.name,\n            type: ngeoBase.AttributeType.NUMBER\n          });\n        }\n        break;\n      case ngeoBase.AttributeType.SELECT:\n        rule = new ngeoRuleSelect({\n          choices: goog.asserts.assert(attribute.choices),\n          name: name,\n          propertyName: attribute.name\n        });\n        break;\n      default:\n        if (isCustom) {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            operators: [\n              ngeoRuleRule.OperatorType.LIKE,\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name\n          });\n        } else {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            propertyName: attribute.name\n          });\n        }\n        break;\n    }\n\n    return rule;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions>} optionsList List of options\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRules(optionsList) {\n    const rules = [];\n    for (const options of optionsList) {\n      rules.push(this.createRule(options));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions} options Options\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRule(options) {\n    let rule;\n    switch (options.type) {\n      case ngeoBase.AttributeType.DATE:\n      case ngeoBase.AttributeType.DATETIME:\n        rule = new ngeoRuleDate(options);\n        break;\n      case ngeoBase.AttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry(options);\n        break;\n      case ngeoBase.AttributeType.SELECT:\n        const selectOptions = /** @type {!ngeox.rule.SelectOptions} */ (\n          options);\n        goog.asserts.assert(selectOptions.choices);\n        rule = new ngeoRuleSelect(selectOptions);\n        break;\n      default:\n        rule = new ngeoRuleText(options);\n        break;\n    }\n    return rule;\n  }\n\n  /**\n   * Create a new `ngeo.rule.Rule` object using an other given rule.\n   *\n   * @param {!ngeo.rule.Rule} rule Original rule to clone.\n   * @return {!ngeo.rule.Rule} A clone rule.\n   * @export\n   */\n  cloneRule(rule) {\n\n    let clone;\n\n    let expression = rule.getExpression();\n    if (expression === null) {\n      expression = undefined;\n    }\n    const isCustom = rule.isCustom;\n    const lowerBoundary = rule.lowerBoundary !== null ? rule.lowerBoundary :\n      undefined;\n    const name = rule.name;\n    const operator = rule.operator !== null ? rule.operator : undefined;\n    const operators = rule.operators ? rule.operators.slice(0) : undefined;\n    const propertyName = rule.propertyName;\n    const type = rule.type !== null ? rule.type : undefined;\n    const upperBoundary = rule.upperBoundary !== null ? rule.upperBoundary :\n      undefined;\n\n    const options = {\n      expression,\n      isCustom,\n      lowerBoundary,\n      name,\n      operator,\n      operators,\n      propertyName,\n      type,\n      upperBoundary\n    };\n\n    if (rule instanceof ngeoRuleDate) {\n      clone = new ngeoRuleDate(options);\n    } else if (rule instanceof ngeoRuleGeometry) {\n      clone = new ngeoRuleGeometry(options);\n      clone.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(rule.feature)\n      );\n    } else if (rule instanceof ngeoRuleSelect) {\n      options.choices = rule.choices.slice(0);\n      clone = new ngeoRuleSelect(options);\n    } else if (rule instanceof ngeoRuleText) {\n      clone = new ngeoRuleText(options);\n    } else {\n      clone = new ngeoRuleRule(options);\n    }\n\n    return clone;\n  }\n\n  /**\n   * Extend the dynamic properties from a source rule to destination rule.\n   * The source rule remains unchanged, while the destination rule changes.\n   *\n   * @param {!ngeo.rule.Rule} sourceRule Source rule to collect the dynamic\n   *     properties from.\n   * @param {!ngeo.rule.Rule} destRule Destination rule where the dynamic\n   *     properties are set.\n   * @export\n   */\n  extendRule(sourceRule, destRule) {\n\n    if (destRule.getExpression() !== sourceRule.getExpression()) {\n      destRule.setExpression(sourceRule.getExpression());\n    }\n\n    if (destRule.lowerBoundary !== sourceRule.lowerBoundary) {\n      destRule.lowerBoundary = sourceRule.lowerBoundary;\n    }\n\n    if (destRule.operator !== sourceRule.operator) {\n      destRule.operator = sourceRule.operator;\n    }\n\n    if (destRule.upperBoundary !== sourceRule.upperBoundary) {\n      destRule.upperBoundary = sourceRule.upperBoundary;\n    }\n\n    if (sourceRule instanceof ngeoRuleGeometry &&\n       destRule instanceof ngeoRuleGeometry\n    ) {\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(destRule.feature);\n      destRule.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(sourceRule.feature)\n      );\n    }\n  }\n\n  /**\n   * @param {!Array.<!ngeo.rule.Rule>} rules Rules\n   * @return {!Array.<!ngeox.rule.AnyOptions>} List of serialized rule options.\n   * @export\n   */\n  serializeRules(rules) {\n    return rules.map((rule) => {\n      const serializedRule = this.serializeRule(rule);\n      return serializedRule;\n    });\n  }\n\n  /**\n   * Selialize a rule into options to re-create it later.\n   * @param {!ngeo.rule.Rule} rule Rule to serialize.\n   * @return {!ngeox.rule.AnyOptions} Serialized rule options.\n   * @export\n   */\n  serializeRule(rule) {\n    const obj = {\n      name: rule.name,\n      propertyName: rule.propertyName,\n      type: rule.type\n    };\n\n    if (rule.expression !== null) {\n      obj.expression = rule.expression;\n    }\n\n    if (rule.lowerBoundary !== null) {\n      obj.lowerBoundary = rule.lowerBoundary;\n    }\n\n    if (rule.operator !== null) {\n      obj.operator = rule.operator;\n    }\n\n    if (rule.operators !== null) {\n      obj.operators = rule.operators.slice(0);\n    }\n\n    if (rule.upperBoundary !== null) {\n      obj.upperBoundary = rule.upperBoundary;\n    }\n\n    if (rule instanceof ngeoRuleGeometry) {\n      obj.featureProperties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        rule.feature);\n    }\n\n    if (rule instanceof ngeoRuleSelect) {\n      obj.choices = rule.choices;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Create a `ol.format.filter.Filter` object for a given data source.\n   * See the `ngeox.CreateFilterOptions` to learn more.\n   *\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?ol.format.filter.Filter} Filter.\n   * @export\n   */\n  createFilter(options) {\n\n    const dataSource = /** @type {ngeo.datasource.OGC} */ (options.dataSource);\n    let mainFilter = null;\n\n    if (options.filter) {\n      mainFilter = options.filter;\n    } else {\n      const rules = options.filterRules || dataSource.filterRules;\n      const conditions = [];\n\n      if (rules && rules.length) {\n        for (const rule of rules) {\n          const filter = this.createFilterFromRule_(\n            rule,\n            dataSource,\n            options.srsName\n          );\n          if (filter) {\n            conditions.push(filter);\n          }\n        }\n      }\n\n      const condition = dataSource.filterCondition;\n      if (conditions.length === 1) {\n        mainFilter = conditions[0];\n      } else if (conditions.length >= 2) {\n        if (condition === ngeoBase.FilterCondition.AND) {\n          mainFilter = olFormatFilter.and.apply(null, conditions);\n        } else if (condition === ngeoBase.FilterCondition.OR ||\n                   condition === ngeoBase.FilterCondition.NOT\n        ) {\n          mainFilter = olFormatFilter.or.apply(null, conditions);\n        }\n      }\n      if (mainFilter && condition === ngeoBase.FilterCondition.NOT) {\n        mainFilter = olFormatFilter.not(mainFilter);\n      }\n    }\n\n    if (options.incTime) {\n      const timeFilter = this.createTimeFilterFromDataSource_(dataSource);\n      if (timeFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              timeFilter\n            ]\n          );\n        } else {\n          mainFilter = timeFilter;\n        }\n      }\n    }\n\n    return mainFilter;\n  }\n\n  /**\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?string} Filter string.\n   * @export\n   */\n  createFilterString(options) {\n    let filterString = null;\n    const filter = this.createFilter(options);\n    if (filter) {\n      const filterNode = olFormatWFS.writeFilter(filter);\n      const xmlSerializer = new XMLSerializer();\n      filterString = xmlSerializer.serializeToString(filterNode);\n    }\n    return filterString;\n  }\n\n  /**\n   * @param {ngeo.rule.Rule} rule Rule.\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *     set on geometries when this is not provided.\n   * @return {?ol.format.filter.Filter} filter Filter;\n   * @private\n   */\n  createFilterFromRule_(rule, dataSource, opt_srsName) {\n\n    let filter = null;\n\n    const value = rule.value;\n    if (!value) {\n      return null;\n    }\n\n    const expression = value.expression;\n    const lowerBoundary = value.lowerBoundary;\n    const operator = value.operator;\n    const propertyName = value.propertyName;\n    const upperBoundary = value.upperBoundary;\n\n    const rot =  ngeoRuleRule.OperatorType;\n    const rsot = ngeoRuleRule.SpatialOperatorType;\n    const rtot = ngeoRuleRule.TemporalOperatorType;\n\n    const spatialTypes = [\n      rsot.CONTAINS,\n      rsot.INTERSECTS,\n      rsot.WITHIN\n    ];\n\n    const numericTypes = [\n      rot.GREATER_THAN,\n      rot.GREATER_THAN_OR_EQUAL_TO,\n      rot.LESSER_THAN,\n      rot.LESSER_THAN_OR_EQUAL_TO\n    ];\n\n    if (rule instanceof ngeoRuleDate) {\n      let beginValue;\n      let endValue;\n\n      if (operator === rtot.DURING) {\n        beginValue = moment(lowerBoundary).format('YYYY-MM-DD');\n        endValue = moment(upperBoundary).format('YYYY-MM-DD');\n      } else if (operator === rtot.EQUALS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n        endValue = moment(\n          expression\n        ).add(\n          1, 'days'\n        ).subtract(\n          1, 'seconds'\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n      } else if (operator === rtot.BEGINS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n        // NOTE: end value is CURRENT + 30 years\n        endValue = moment(\n          expression\n        ).add(\n          30, 'years'\n        ).format(\n          'YYYY-MM-DD'\n        );\n      } else if (operator === rtot.ENDS) {\n        // NOTE: begin value is hardcoded to 1970-01-01\n        beginValue = '1970-01-01';\n        endValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n      }\n      if (beginValue && endValue) {\n        filter = olFormatFilter.during(\n          propertyName,\n          beginValue,\n          endValue\n        );\n      }\n    } else if (rule instanceof ngeoRuleSelect) {\n      const selectedChoices = rule.selectedChoices;\n      if (selectedChoices.length === 1) {\n        filter = olFormatFilter.equalTo(\n          propertyName,\n          selectedChoices[0]\n        );\n      } else if (selectedChoices.length >= 2) {\n        const conditions = [];\n        for (const selectedChoice of selectedChoices) {\n          conditions.push(\n            olFormatFilter.equalTo(\n              propertyName,\n              selectedChoice\n            )\n          );\n        }\n        filter = olFormatFilter.or.apply(null, conditions);\n      }\n    } else if (olArray.includes(spatialTypes, operator)) {\n      const geometryName = dataSource.geometryName;\n      goog.asserts.assertInstanceof(rule, ngeoRuleGeometry);\n      const geometry = goog.asserts.assert(rule.geometry);\n      if (operator === rsot.CONTAINS) {\n        filter = olFormatFilter.contains(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.INTERSECTS) {\n        filter = olFormatFilter.intersects(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.WITHIN) {\n        filter = olFormatFilter.within(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      }\n    } else if (olArray.includes(numericTypes, operator)) {\n      const numericExpression = goog.asserts.assertNumber(expression);\n      if (operator === rot.GREATER_THAN) {\n        filter = olFormatFilter.greaterThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.GREATER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.greaterThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN) {\n        filter = olFormatFilter.lessThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.lessThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      }\n    } else if (operator === rot.BETWEEN) {\n      filter = olFormatFilter.between(\n        propertyName,\n        lowerBoundary,\n        upperBoundary\n      );\n    } else if (operator === rot.EQUAL_TO) {\n      filter = olFormatFilter.equalTo(\n        propertyName,\n        expression\n      );\n    } else if (operator === rot.LIKE) {\n      const stringExpression = String(expression)\n        .replace(/!/g, '!!')\n        .replace(/\\./g, '!.')\n        .replace(/\\*/g, '!*');\n      filter = olFormatFilter.like(\n        propertyName,\n        `*${stringExpression}*`,\n        '*', /* wildCard */\n        '.', /* singleChar */\n        '!', /* escapeChar */\n        false /* matchCase */\n      );\n    } else if (operator === rot.NOT_EQUAL_TO) {\n      filter = olFormatFilter.notEqualTo(\n        propertyName,\n        expression\n      );\n    }\n\n    return filter;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * time properties within the data source.\n   * @param {ngeo.datasource.OGC} dataSource Data source from which to\n   *     create the filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createTimeFilterFromDataSource_(dataSource) {\n    let filter = null;\n    const range = dataSource.timeRangeValue;\n    const timeProperty = dataSource.timeProperty;\n    const name = dataSource.timeAttributeName;\n\n    if (range && timeProperty && name) {\n\n      if (range.end !== undefined) {\n        // Case 1: the range has both 'start' and 'end' values.  Use them to\n        //         create a During filter.\n\n        const values = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        ).split('/');\n\n        filter = olFormatFilter.during(name, values[0], values[1]);\n      } else {\n\n        // Case 2: we only have a 'start' value. We need to calculate the 'end'\n        //         using the resolution of the time property.\n\n        const resolution = timeProperty.resolution || 'seconds';\n        const value = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        );\n        let momentEnd;\n\n        switch (resolution) {\n          case 'year':\n            momentEnd = moment(value).add(1, 'years').subtract(1, 'seconds');\n            break;\n          case 'month':\n            momentEnd = moment(value).add(1, 'months').subtract(1, 'seconds');\n            break;\n          case 'day':\n            momentEnd = moment(value).add(1, 'days').subtract(1, 'seconds');\n            break;\n          default:\n            //case \"second\":\n            // This would require a TContains filter, which neither OpenLayers\n            // and MapServer support. Skip...\n        }\n\n        if (momentEnd) {\n          const startValue = moment(value).format('YYYY-MM-DD HH:mm:ss');\n          const endValue = momentEnd.format('YYYY-MM-DD HH:mm:ss');\n          filter = olFormatFilter.during(name, startValue, endValue);\n        }\n      }\n    }\n\n    return filter;\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRuleHelper', [\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoRuleHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/RuleHelper.js","/**\n * @module ngeo.rule.Date\n*/\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A date rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.DateOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = options.type || ngeo.AttributeType.DATE;\n\n    super(options);\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Date.js","/**\n * @module ngeo.rule.Geometry\n*/\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A rule bound to the geometry of a `ol.Feature` object. Changes made\n   * to the geometry are applied to the `expression` property of the rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.GeometryOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = ngeo.AttributeType.GEOMETRY;\n\n    super(options);\n\n    // === STATIC properties ===\n\n    const properties = options.featureProperties || {};\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature(properties);\n\n    /**\n     * @type {!ol.format.GeoJSON}\n     * @private\n     */\n    this.format_ = new olFormatGeoJSON();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingExpression_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingGeometry_ = false;\n\n    /**\n     * @type {?ol.EventsKey}\n     * @private\n     */\n    this.geometryChangeListenerKey_ = null;\n\n    this.listenerKeys.push(\n      olEvents.listen(\n        this.feature_,\n        ol.Object.getChangeEventType(this.feature.getGeometryName()),\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    this.setGeometryFromExpression_();\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {!ol.Feature} Feature.\n   * @export\n   */\n  get feature() {\n    return this.feature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setExpression(expression) {\n    this.updatingExpression_ = true;\n    super.setExpression(expression);\n\n    if (!this.updatingGeometry_) {\n      this.setGeometryFromExpression_();\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingExpression_ = false;\n  }\n\n  // === Calculated property getters/setters ===\n\n  /**\n   * @return {?ol.geom.Geometry} Geometry\n   * @export\n   */\n  get geometry() {\n    return this.feature_.getGeometry() || null;\n  }\n\n  /**\n   * @param {?ol.geom.Geometry} geometry Geometry\n   * @export\n   */\n  set geometry(geometry) {\n    this.feature_.setGeometry(geometry);\n  }\n\n  // === Other methods ===\n\n  /**\n   * Called when the geometry property in the feature changes. Update the\n   * expression accordingly.\n   * @private\n   */\n  handleFeatureGeometryChange_() {\n    if (this.updatingExpression_) {\n      return;\n    }\n\n    this.updatingGeometry_ = true;\n\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.expression = this.format_.writeGeometry(geometry);\n    } else {\n      this.expression = null;\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Called when the geometry of the features changes. Update the expression\n   * accordingly.\n   * @param {ol.Object.Event} evt Event\n   * @private\n   */\n  handleGeometryChange_(evt) {\n    const geometry = goog.asserts.assertInstanceof(\n      evt.target, ol.geom.Geometry\n    );\n    this.updatingGeometry_ = true;\n    this.expression = this.format_.writeGeometry(geometry);\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Set geometry property using the expression property.\n   * @private\n   */\n  setGeometryFromExpression_() {\n    let geometry = null;\n    if (this.expression) {\n      // An expression can only have a string value with a geometry rule.\n      const expression = goog.asserts.assertString(this.expression);\n      geometry = this.format_.readGeometry(expression);\n    }\n    this.geometry = geometry;\n  }\n\n  /**\n   * Unlisten the feature geometry change event, then listen to it if the\n   * feature has a geometry.\n   * @private\n   */\n  registerGeometryChange_() {\n\n    // (1) Unlisten\n    if (this.geometryChangeListenerKey_ !== null) {\n      ol.Observable.unByKey(this.geometryChangeListenerKey_);\n      this.geometryChangeListenerKey_ = null;\n    }\n\n    // (2) Listen, if geom\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.geometryChangeListenerKey_ = olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      );\n    }\n  }\n\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Geometry.js","/**\n * @module ngeo.rule.Select\n*/\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A select rule, which allows the selection of multiple values among a list\n   * of choices.\n   *\n   * The expression property holds the list of selected choices, which is\n   * comma-separated.\n   *\n   * @struct\n   * @param {!ngeox.rule.SelectOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = ngeoRuleRule.OperatorType.EQUAL_TO;\n    options.type = ngeo.AttributeType.SELECT;\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.choices_ = options.choices;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {Array.<string>} Choices\n   * @export\n   */\n  get choices() {\n    return this.choices_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {Array.<string>} Selected choices\n   * @export\n   */\n  get selectedChoices() {\n    let selectedChoices;\n    if (this.expression) {\n      const stringExpression = String(this.expression);\n      selectedChoices = stringExpression.split(',');\n    } else {\n      selectedChoices = [];\n    }\n    return selectedChoices;\n  }\n\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Select.js","/**\n * @module ngeo.rule.Text\n*/\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A text rule, which always compares the value with the LIKE operator, by\n   * default.\n   *\n   * @struct\n   * @param {!ngeox.rule.TextOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = options.operator || ngeoRuleRule.OperatorType.LIKE;\n    options.type = ngeo.AttributeType.TEXT;\n\n    super(options);\n\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Text.js","/**\n * @module ngeo.WFSDescribeFeatureType\n*/\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\nimport olXml from 'ol/xml.js';\n\n/**\n * @classdesc\n * Format for reading WFS DescribeFeatureType data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst exports = function() {\n\n  olFormatXML.call(this);\n\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * Read a WFS DescribeFeatureType document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WFS DescribeFeatureType.\n * @api\n */\nexports.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromNode = function(node) {\n  let result = {};\n  result = olXml.pushParseAndPop(\n    result,\n    exports.PARSERS_,\n    node,\n    []\n  );\n  return result;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Attributes.\n */\nexports.readElement_ = function(node, objectStack) {\n  const attributes = {};\n  for (let i = 0, len = node.attributes.length; i < len; i++) {\n    const attribute = node.attributes.item(i);\n    attributes[attribute.name] = attribute.value;\n  }\n  if (objectStack.length === 1) {\n    // remove namespace from type\n    attributes['type'] = attributes['type'].split(':').pop();\n  }\n  return attributes;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexType_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const object = olXml.pushParseAndPop(\n    {'name': name},\n    exports.COMPLEX_TYPE_PARSERS_,\n    node, objectStack\n  );\n  // flatten\n  object['complexContent'] =\n    object['complexContent']['extension']['sequence']['element'];\n  return object;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexContent_ = function(\n  node, objectStack\n) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.COMPLEX_CONTENT_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readExtension_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.EXTENSION_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readSequence_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.SEQUENCE_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nexports.NAMESPACE_URIS_ = [\n  null,\n  'http://www.w3.org/2001/XMLSchema'\n];\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    ),\n    'complexType': olXml.makeObjectPropertyPusher(\n      exports.readComplexType_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_TYPE_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'complexContent': olXml.makeObjectPropertySetter(\n      exports.readComplexContent_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_CONTENT_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'extension': olXml.makeObjectPropertySetter(\n      exports.readExtension_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.EXTENSION_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'sequence': olXml.makeObjectPropertySetter(\n      exports.readSequence_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.SEQUENCE_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    )\n  }));\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/WFSDescribeFeatureType.js","/**\n * @module ol/format/WMSCapabilities\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMSCapabilities = function() {\n\n  XML.call(this);\n\n  /**\n   * @type {string|undefined}\n   */\n  this.version = undefined;\n};\n\ninherits(WMSCapabilities, XML);\n\n\n/**\n * Read a WMS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMS capabilities.\n * @api\n */\nWMSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMSCapabilities.prototype.readFromNode = function(node) {\n  this.version = node.getAttribute('version').trim();\n  const wmsCapabilityObject = _ol_xml_.pushParseAndPop({\n    'version': this.version\n  }, WMSCapabilities.PARSERS_, node, []);\n  return wmsCapabilityObject ? wmsCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMSCapabilities.readAttribution_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.ATTRIBUTION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nWMSCapabilities.readBoundingBox_ = function(node, objectStack) {\n  const extent = [\n    XSD.readDecimalString(node.getAttribute('minx')),\n    XSD.readDecimalString(node.getAttribute('miny')),\n    XSD.readDecimalString(node.getAttribute('maxx')),\n    XSD.readDecimalString(node.getAttribute('maxy'))\n  ];\n\n  const resolutions = [\n    XSD.readDecimalString(node.getAttribute('resx')),\n    XSD.readDecimalString(node.getAttribute('resy'))\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions\n  };\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Extent|undefined} Bounding box object.\n */\nWMSCapabilities.readEXGeographicBoundingBox_ = function(node, objectStack) {\n  const geographicBoundingBox = _ol_xml_.pushParseAndPop(\n    {},\n    WMSCapabilities.EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS_,\n    node, objectStack);\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  const westBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['westBoundLongitude']);\n  const southBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['southBoundLatitude']);\n  const eastBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['eastBoundLongitude']);\n  const northBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['northBoundLatitude']);\n  if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude, southBoundLatitude,\n    eastBoundLongitude, northBoundLatitude\n  ];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Capability object.\n */\nWMSCapabilities.readCapability_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.CAPABILITY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Service object.\n */\nWMSCapabilities.readService_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.SERVICE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Contact information object.\n */\nWMSCapabilities.readContactInformation_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.CONTACT_INFORMATION_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Contact person object.\n */\nWMSCapabilities.readContactPersonPrimary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.CONTACT_PERSON_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Contact address object.\n */\nWMSCapabilities.readContactAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.CONTACT_ADDRESS_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<string>|undefined} Format array.\n */\nWMSCapabilities.readException_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WMSCapabilities.EXCEPTION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Layer object.\n */\nWMSCapabilities.readCapabilityLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nWMSCapabilities.readLayer_ = function(node, objectStack) {\n  const parentLayerObject = /**  @type {Object.<string,*>} */\n        (objectStack[objectStack.length - 1]);\n\n  const layerObject = _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.LAYER_PARSERS_, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  let queryable =\n        XSD.readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  let cascaded = XSD.readNonNegativeIntegerString(\n    node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  let opaque = XSD.readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  let noSubsets =\n        XSD.readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  let fixedWidth =\n        XSD.readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  let fixedHeight =\n        XSD.readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  const addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function(key) {\n    if (key in parentLayerObject) {\n      const childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  const replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n    'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n  replaceKeys.forEach(function(key) {\n    if (!(key in layerObject)) {\n      const parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nWMSCapabilities.readDimension_ = function(node, objectStack) {\n  const dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': XSD.readBooleanString(\n      node.getAttribute('multipleValues')),\n    'nearestValue': XSD.readBooleanString(\n      node.getAttribute('nearestValue')),\n    'current': XSD.readBooleanString(node.getAttribute('current')),\n    'values': XSD.readString(node)\n  };\n  return dimensionObject;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nWMSCapabilities.readFormatOnlineresource_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.FORMAT_ONLINERESOURCE_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nWMSCapabilities.readRequest_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.REQUEST_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nWMSCapabilities.readDCPType_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.DCPTYPE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nWMSCapabilities.readHTTP_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.HTTP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nWMSCapabilities.readOperationType_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.OPERATIONTYPE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nWMSCapabilities.readSizedFormatOnlineresource_ = function(node, objectStack) {\n  const formatOnlineresource =\n        WMSCapabilities.readFormatOnlineresource_(node, objectStack);\n  if (formatOnlineresource) {\n    const size = [\n      XSD.readNonNegativeIntegerString(node.getAttribute('width')),\n      XSD.readNonNegativeIntegerString(node.getAttribute('height'))\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nWMSCapabilities.readAuthorityURL_ = function(node, objectStack) {\n  const authorityObject =\n        WMSCapabilities.readFormatOnlineresource_(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nWMSCapabilities.readMetadataURL_ = function(node, objectStack) {\n  const metadataObject =\n        WMSCapabilities.readFormatOnlineresource_(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMSCapabilities.readStyle_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.STYLE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Keyword list.\n */\nWMSCapabilities.readKeywordList_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WMSCapabilities.KEYWORDLIST_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wms'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Service': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readService_),\n    'Capability': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readCapability_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CAPABILITY_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Request': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readRequest_),\n    'Exception': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readException_),\n    'Layer': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readCapabilityLayer_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.SERVICE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'KeywordList': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readKeywordList_),\n    'OnlineResource': _ol_xml_.makeObjectPropertySetter(\n      XLink.readHref),\n    'ContactInformation': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readContactInformation_),\n    'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AccessConstraints': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'LayerLimit': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CONTACT_INFORMATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'ContactPersonPrimary': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readContactPersonPrimary_),\n    'ContactPosition': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'ContactAddress': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readContactAddress_),\n    'ContactVoiceTelephone': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'ContactFacsimileTelephone': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'ContactElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CONTACT_PERSON_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'ContactPerson': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'ContactOrganization': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CONTACT_ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'AddressType': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'StateOrProvince': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.EXCEPTION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Format': _ol_xml_.makeArrayPusher(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'KeywordList': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readKeywordList_),\n    'CRS': _ol_xml_.makeObjectPropertyPusher(XSD.readString),\n    'EX_GeographicBoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readEXGeographicBoundingBox_),\n    'BoundingBox': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readBoundingBox_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readDimension_),\n    'Attribution': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readAttribution_),\n    'AuthorityURL': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readAuthorityURL_),\n    'Identifier': _ol_xml_.makeObjectPropertyPusher(XSD.readString),\n    'MetadataURL': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readMetadataURL_),\n    'DataURL': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readFormatOnlineresource_),\n    'FeatureListURL': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readFormatOnlineresource_),\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readStyle_),\n    'MinScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'MaxScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readLayer_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.ATTRIBUTION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'OnlineResource': _ol_xml_.makeObjectPropertySetter(\n      XLink.readHref),\n    'LogoURL': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readSizedFormatOnlineresource_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS_ =\n    _ol_xml_.makeStructureNS(WMSCapabilities.NAMESPACE_URIS_, {\n      'westBoundLongitude': _ol_xml_.makeObjectPropertySetter(\n        XSD.readDecimal),\n      'eastBoundLongitude': _ol_xml_.makeObjectPropertySetter(\n        XSD.readDecimal),\n      'southBoundLatitude': _ol_xml_.makeObjectPropertySetter(\n        XSD.readDecimal),\n      'northBoundLatitude': _ol_xml_.makeObjectPropertySetter(\n        XSD.readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.REQUEST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'GetCapabilities': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readOperationType_),\n    'GetMap': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readOperationType_),\n    'GetFeatureInfo': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readOperationType_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.OPERATIONTYPE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Format': _ol_xml_.makeObjectPropertyPusher(XSD.readString),\n    'DCPType': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readDCPType_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.DCPTYPE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readHTTP_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readFormatOnlineresource_),\n    'Post': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readFormatOnlineresource_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readSizedFormatOnlineresource_),\n    'StyleSheetURL': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readFormatOnlineresource_),\n    'StyleURL': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readFormatOnlineresource_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.FORMAT_ONLINERESOURCE_PARSERS_ =\n    _ol_xml_.makeStructureNS(WMSCapabilities.NAMESPACE_URIS_, {\n      'Format': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'OnlineResource': _ol_xml_.makeObjectPropertySetter(\n        XLink.readHref)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.KEYWORDLIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Keyword': _ol_xml_.makeArrayPusher(XSD.readString)\n  });\nexport default WMSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSCapabilities.js\n// module id = 209\n// module chunks = 0 1","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ngeo.datasource.Helper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoFormatWFSAttribute from 'ngeo/format/WFSAttribute.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport olEvents from 'ol/events.js';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to manipulate or get data sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo data source\n   *     collection.\n   * @param {ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @ngdoc service\n   * @ngname ngeoDataSourcesHelper\n   *//* @ngInject\n   */\n  constructor($q, ngeoDataSources, ngeoQuerent) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = ngeoDataSources;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Object.<number, ngeo.datasource.DataSource>}\n     * @private\n     */\n    this.cache_ = {};\n\n    // Events\n\n    olEvents.listen(ngeoDataSources, 'add', this.handleDataSourcesAdd_, this);\n    olEvents.listen(ngeoDataSources, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n  /**\n   * @return {ngeox.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?ngeo.datasource.DataSource} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return this.cache_[id] || null;\n  }\n\n  /**\n   * Get the attributes of a data source. If they are not set, they are obtained\n   * from the querent service using a WFS DescribeFeatureType request, then set\n   * in the data source.\n   *\n   * Please, note that in order to be dynamically set, the data source must\n   * only have 1 ogcLayer set and be queryable.\n   *\n   * @param {ngeo.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  getDataSourceAttributes(dataSource) {\n\n    const wfsDescribeFeatureTypeDefer = this.q_.defer();\n\n    if (dataSource.attributes) {\n      wfsDescribeFeatureTypeDefer.resolve(dataSource.attributes);\n    } else {\n      this.ngeoQuerent_.wfsDescribeFeatureType(\n        dataSource\n      ).then((featureType) => {\n        // We know, at this point, that there's only one definition that\n        // was returned.  Just to be sure, let's do a bunch of assertions.\n        const ogcLayerName = dataSource.getOGCLayerNames()[0];\n        goog.asserts.assertString(\n          ogcLayerName, 'The data source should have only one ogcLayer.');\n        const element = featureType.element[0];\n        goog.asserts.assert(element.name === ogcLayerName);\n        goog.asserts.assert(\n          featureType.complexType[0].name === element.type);\n\n        const complexContent = featureType['complexType'][0]['complexContent'];\n        const attributes = new ngeoFormatWFSAttribute().read(complexContent);\n\n        // Set the attributes in the data source\n        dataSource.setAttributes(attributes);\n\n        wfsDescribeFeatureTypeDefer.resolve(attributes);\n      });\n    }\n\n    return wfsDescribeFeatureTypeDefer.promise;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. Add it\n   * to the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = goog.asserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    this.cache_[dataSource.id] = dataSource;\n  }\n\n  /**\n   * Called when a data source is removed from the ngeo collection. Remove it\n   * from the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = goog.asserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    delete this.cache_[dataSource.id];\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSourcesHelper', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoDataSourcesHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Helper.js","/**\n * @module ngeo.format.WFSAttribute\n*/\nimport ngeoAttribute from 'ngeo/Attribute.js';\n\nconst exports = class {\n\n\n  /**\n   * A format that reads the complexType from a WFS DescribeFeatureType\n   * response for a single set of attributes and return an array of\n   * `ngeox.Attribute`.\n   */\n\n\n  /**\n   * @param {Array.<Object>} complexTypeElements Complex type element\n   * @return {Array.<ngeox.Attribute>} Attributes\n   */\n  read(complexTypeElements) {\n    return complexTypeElements.map(this.readFromComplexTypeElement_);\n  }\n\n\n  /**\n   * @param {Object} object Complex type element\n   * @return {ngeox.Attribute} Attribute\n   * @private\n   */\n  readFromComplexTypeElement_(object) {\n\n    const name = goog.asserts.assertString(object['name']);\n    const alias = 'alias' in object ?\n      goog.asserts.assertString(object['alias']) : null;\n    const required = object['minOccurs'] != '0';\n\n    const attribute = {\n      name,\n      alias,\n      required\n    };\n\n    const type = goog.asserts.assertString(object['type']);\n\n    if (!ngeoAttribute.setGeometryType(attribute, type)) {\n      if (type === 'gml:TimeInstantType') {\n        attribute.type = ngeo.AttributeType.DATETIME;\n      } else if (type === 'double') {\n        attribute.type = ngeo.AttributeType.NUMBER;\n      } else {\n        attribute.type = ngeo.AttributeType.TEXT;\n      }\n    }\n\n    return attribute;\n  }\n\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/WFSAttribute.js","/**\n * @module ngeo.query.mapQueryComponent\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olEvents from 'ol/events.js';\n\nconst exports = angular.module('ngeoMapQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a \"map query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, clicks made on the map are listened by the directive\n * and a request gets issued to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-map-query=\"\"\n *        ngeo-map-query-map=\"::ctrl.map\"\n *        ngeo-map-query-active=\"ctrl.queryActive\"\n *        ngeo-map-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See our live example: [../examples/mapquery.html](../examples/mapquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @param {angular.$injector} $injector Main injector.\n * @return {angular.Directive} The Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoMapQuery\n */\nexports.directive_ = function(ngeoMapQuerent, $injector) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      const map = scope.$eval(attrs['ngeoMapQueryMap']);\n      let clickEventKey_ = null;\n      let pointerMoveEventKey_ = null;\n\n      /**\n       * Called when the map is clicked while this controller is active. Issue\n       * a request to the query service using the coordinate that was clicked.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handleMapClick_ = function(evt) {\n        const coordinate = evt.coordinate;\n        ngeoMapQuerent.issue({\n          coordinate,\n          map\n        });\n      };\n\n      /**\n       * Called when the pointer is moved while this controller is active.\n       * Change the mouse pointer when hovering a non-transparent pixel on the\n       * map.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handlePointerMove_ = function(evt) {\n        if (!evt.dragging) {\n          const pixel = map.getEventPixel(evt.originalEvent);\n          const queryable = function(layer) {\n            const visible = layer.get('visible');\n            const sourceids = layer.get('querySourceIds');\n            return visible && !!sourceids;\n          };\n          const hit = map.forEachLayerAtPixel(pixel, () => true, undefined, queryable);\n          map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n        }\n      };\n\n      /**\n       * Listen to the map events.\n       */\n      const activate_ = function() {\n        clickEventKey_ = olEvents.listen(map, 'singleclick', handleMapClick_);\n        const queryOptions = /** @type {ngeox.QueryOptions} */ (\n          $injector.has('ngeoQueryOptions') ? $injector.get('ngeoQueryOptions') : {}\n        );\n        if (queryOptions.cursorHover) {\n          pointerMoveEventKey_ = olEvents.listen(map, 'pointermove', handlePointerMove_);\n        }\n      };\n\n      /**\n       * Unlisten the map events.\n       */\n      const deactivate_ = function() {\n        if (clickEventKey_ !== null) {\n          olEvents.unlistenByKey(clickEventKey_);\n          clickEventKey_ = null;\n        }\n        if (pointerMoveEventKey_ !== null) {\n          olEvents.unlistenByKey(pointerMoveEventKey_);\n          pointerMoveEventKey_ = null;\n        }\n        if (scope.$eval(attrs['ngeoMapQueryAutoclear']) !== false) {\n          ngeoMapQuerent.clear();\n        }\n      };\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoMapQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            activate_();\n          } else {\n            deactivate_();\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoMapQuery', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/query/mapQueryComponent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.value('ngeoDataSources', new olCollection());\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/* eslint valid-jsdoc: 0, prefer-rest-params: 0,  */\n// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Utilities to check the preconditions, postconditions and\n * invariants runtime.\n *\n * Methods in this package should be given special treatment by the compiler\n * for type-inference. For example, <code>goog.asserts.assert(foo)</code>\n * will restrict <code>foo</code> to a truthy value.\n *\n * The compiler has an option to disable asserts. So code like:\n * <code>\n * var x = goog.asserts.assert(foo()); goog.asserts.assert(bar());\n * </code>\n * will be transformed into:\n * <code>\n * var x = foo();\n * </code>\n * The compiler will leave in foo() (because its return value is used),\n * but it will remove bar() because it assumes it does not have side-effects.\n *\n * @author agrieve@google.com (Andrew Grieve)\n */\n\nconst exports = {};\n\n/**\n * Throws an exception with the given message and \"Assertion failed\" prefixed\n * onto it.\n * @param {string} defaultMessage The message to use if givenMessage is empty.\n * @param {Array<*>} defaultArgs The substitution arguments for defaultMessage.\n * @param {string|undefined} givenMessage Message supplied by the caller.\n * @param {Array<*>} givenArgs The substitution arguments for givenMessage.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n * @private\n */\nexports.doAssertFailure_ = function(\n  defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  let message = 'Assertion failed';\n  let args;\n  if (givenMessage) {\n    message += `: ${givenMessage}`;\n    args = givenArgs;\n  } else if (defaultMessage) {\n    message += `: ${defaultMessage}`;\n    args = defaultArgs;\n  }\n  // The '' + works around an Opera 10 bug in the unit tests. Without it,\n  // a stack trace is added to var message above. With this, a stack trace is\n  // not added until this line (it causes the extra garbage to be added after\n  // the assertion message instead of in the middle of it).\n  const e = new exports.AssertionError(`${message}`, args || []);\n  exports.errorHandler_(e);\n};\n\n\n/**\n * Sets a custom error handler that can be used to customize the behavior of\n * assertion failures, for example by turning all assertion failures into log\n * messages.\n * @param {function(!goog.asserts.AssertionError)} errorHandler\n */\nexports.setErrorHandler = function(errorHandler) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_ = errorHandler;\n  }\n};\n\n\n/**\n * Checks if the condition evaluates to true if goog.asserts.ENABLE_ASSERTS is\n * true.\n * @template T\n * @param {T} condition The condition to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {T} The value of the condition.\n * @throws {goog.asserts.AssertionError} When the condition evaluates to false.\n */\nexports.assert = function(condition, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !condition) {\n    exports.doAssertFailure_(\n      '', null, opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return condition;\n};\n\n\n/**\n * Fails if goog.asserts.ENABLE_ASSERTS is true. This function is useful in case\n * when we want to add a check in the unreachable area like switch-case\n * statement:\n *\n * <pre>\n *  switch(type) {\n *    case FOO: doSomething(); break;\n *    case BAR: doSomethingElse(); break;\n *    default: goog.asserts.fail('Unrecognized type: ' + type);\n *      // We have only 2 types - \"default:\" section is unreachable code.\n *  }\n * </pre>\n *\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} Failure.\n */\nexports.fail = function(opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS) {\n    exports.errorHandler_(\n      new exports.AssertionError(\n        `Failure${opt_message ? `: ${opt_message}` : ''}`,\n        Array.prototype.slice.call(arguments, 1)));\n  }\n};\n\n\n/**\n * Checks if the value is a number if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {number} The value, guaranteed to be a number when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a number.\n */\nexports.assertNumber = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isNumber(value)) {\n    exports.doAssertFailure_(\n      'Expected number but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {number} */ (value);\n};\n\n\n/**\n * Checks if the value is a string if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {string} The value, guaranteed to be a string when asserts enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a string.\n */\nexports.assertString = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isString(value)) {\n    exports.doAssertFailure_(\n      'Expected string but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {string} */ (value);\n};\n\n\n/**\n * Checks if the value is a function if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Function} The value, guaranteed to be a function when asserts\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a function.\n */\nexports.assertFunction = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isFunction(value)) {\n    exports.doAssertFailure_(\n      'Expected function but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Function} */ (value);\n};\n\n\n/**\n * Checks if the value is an Object if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Object} The value, guaranteed to be a non-null object.\n * @throws {goog.asserts.AssertionError} When the value is not an object.\n */\nexports.assertObject = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isObject(value)) {\n    exports.doAssertFailure_(\n      'Expected object but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Object} */ (value);\n};\n\n\n/**\n * Checks if the value is an Array if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Array<?>} The value, guaranteed to be a non-null array.\n * @throws {goog.asserts.AssertionError} When the value is not an array.\n */\nexports.assertArray = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isArray(value)) {\n    exports.doAssertFailure_(\n      'Expected array but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Array<?>} */ (value);\n};\n\n\n/**\n * Checks if the value is a boolean if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {boolean} The value, guaranteed to be a boolean when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not a boolean.\n */\nexports.assertBoolean = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !goog.isBoolean(value)) {\n    exports.doAssertFailure_(\n      'Expected boolean but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {boolean} */ (value);\n};\n\n\n/**\n * Checks if the value is a DOM Element if goog.asserts.ENABLE_ASSERTS is true.\n * @param {*} value The value to check.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @return {!Element} The value, likely to be a DOM Element when asserts are\n *     enabled.\n * @throws {goog.asserts.AssertionError} When the value is not an Element.\n */\nexports.assertElement = function(value, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS &&\n      (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {\n    exports.doAssertFailure_(\n      'Expected Element but got %s: %s.', [goog.typeOf(value), value],\n      opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return /** @type {!Element} */ (value);\n};\n\n\n/**\n * Checks if the value is an instance of the user-defined type if\n * goog.asserts.ENABLE_ASSERTS is true.\n *\n * The compiler may tighten the type returned by this function.\n *\n * @param {?} value The value to check.\n * @param {function(new: T, ...)} type A user-defined constructor.\n * @param {string=} opt_message Error message in case of failure.\n * @param {...*} var_args The items to substitute into the failure message.\n * @throws {goog.asserts.AssertionError} When the value is not an instance of\n *     type.\n * @return {T}\n * @template T\n */\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  if (exports.ENABLE_ASSERTS && !(value instanceof type)) {\n    exports.doAssertFailure_(\n      'Expected instanceof %s but got %s.',\n      [exports.getType_(type), exports.getType_(value)],\n      opt_message, Array.prototype.slice.call(arguments, 3));\n  }\n  return value;\n};\n\n\n/**\n * Checks that no enumerable keys are present in Object.prototype. Such keys\n * would break most code that use {@code for (var ... in ...)} loops.\n */\nexports.assertObjectPrototypeIsIntact = function() {\n  for (const key in Object.prototype) {\n    exports.fail(`${key} should not be enumerable in Object.prototype.`);\n  }\n};\n\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n * @param {*} value A constructor, object, or primitive.\n * @return {string} The best display name for the value, or 'unknown type name'.\n * @private\n */\nexports.getType_ = function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || 'unknown type name';\n  } else if (value instanceof Object) {\n    return value.constructor.displayName || value.constructor.name ||\n        Object.prototype.toString.call(value);\n  } else {\n    return value === null ? 'null' : typeof value;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapDirective from 'ngeo/map/directive.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap.js';\n\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', [\n  ngeoDatasourceSyncDataSourcesMap.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\nimport googAsserts from 'goog/asserts.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSyncDataSourcesMap', [\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('ngeoSyncDataSourcesMap', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module app.mapquery\n*/\nconst exports = {};\n\nimport './mapquery.css';\nimport './common_dependencies.js';\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\n\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQueryComponent from 'ngeo/query/mapQueryComponent.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\napp.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoDatasourceDataSources.module.name,\n  ngeoMapModule.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\napp.module.value('ngeoQueryOptions', {\n  'limit': 20\n});\n\n\n/**\n * A sample component to display the result.\n *\n * @type {!angular.Component}\n */\napp.queryresultComponent = {\n  controller: 'AppQueryresultController',\n  controllerAs: 'qrCtrl',\n  templateUrl: 'partials/queryresult.html'\n};\n\napp.module.component('appQueryresult', app.queryresultComponent);\n\n\n/**\n * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query service.\n * @constructor\n *//* @ngInject\n */\napp.QueryresultController = function(ngeoQueryResult) {\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @export\n   */\n  this.result = ngeoQueryResult;\n\n};\n\n\napp.module.controller('AppQueryresultController', app.QueryresultController);\n\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {ngeox.datasource.DataSources} ngeoDataSources Ngeo collection of\n *     data sources objects.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr The ngeo ToolActivate\n *     manager.\n * @constructor\n *//* @ngInject\n */\napp.MainController = function($scope, ngeoDataSources, ngeoToolActivateMgr) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.dummyActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.queryActive = true;\n\n  ngeoDataSources.push(new ngeoDatasourceOGC({\n    id: 1,\n    name: 'bus_stop',\n    visible: true,\n    wmsUrl: 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/mapserv_proxy',\n    ogcLayers: [{\n      name: 'bus_stop',\n      queryable: true\n    }]\n  }));\n  const busStopLayer = new olLayerImage({\n    'source': new olSourceImageWMS({\n      'url': 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/mapserv_proxy',\n      params: {'LAYERS': 'bus_stop'}\n    })\n  });\n\n  ngeoDataSources.push(new ngeoDatasourceOGC({\n    id: 2,\n    name: 'information',\n    visible: true,\n    wmsUrl: 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/mapserv_proxy',\n    ogcLayers: [{\n      name: 'information',\n      queryable: true\n    }]\n  }));\n  const informationLayer = new olLayerImage({\n    'source': new olSourceImageWMS({\n      'url': 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/mapserv_proxy',\n      params: {'LAYERS': 'information'}\n    })\n  });\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      }),\n      informationLayer,\n      busStopLayer\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [537635, 152640],\n      zoom: 0\n    })\n  });\n\n  const queryToolActivate = new ngeoMiscToolActivate(this, 'queryActive');\n  ngeoToolActivateMgr.registerTool('mapTools', queryToolActivate, true);\n\n  const dummyToolActivate = new ngeoMiscToolActivate(this, 'dummyActive');\n  ngeoToolActivateMgr.registerTool('mapTools', dummyToolActivate);\n\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\napp.MainController.prototype.getSetDummyActive = function(val) {\n  if (val !== undefined) {\n    this.dummyActive = val;\n  } else {\n    return this.dummyActive;\n  }\n};\n\n\napp.module.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/mapquery.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 21 22 23 24 25 26 27 28 29 30","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 72\n// module chunks = 0 1 2 3 4 5 7 9 10","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 73\n// module chunks = 0 1 3 4 5 12 13 17 18","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 75\n// module chunks = 0 1 3 4 5 12 13 17 18","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = _ol_coordinate_.squaredDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  const styles = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == MouseSource.POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      const center = coordinates[0];\n      const end = coordinates[1];\n      const radius = Math.sqrt(\n        _ol_coordinate_.squaredDistance(center, end));\n      const geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      const angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 80\n// module chunks = 0 1 2 5 10","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = _ol_geom_flat_deflate_.coordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 81\n// module chunks = 0 1 2 6 7 8 9 11 14","/**\n * @module ngeo.interaction.Measure\n*/\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olDom from 'ol/dom.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nngeo.interaction.MeasureBaseOptions;\n\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ?\n    options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nol.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\nexports.SPHERE_WGS84 = new olSphere(olProjEPSG4326.RADIUS);\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(\n  polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (\n    polygon.clone().transform(projection, 'EPSG:4326'));\n  const coordinates = geom.getLinearRing(0).getCoordinates();\n  const area = Math.abs(exports.SPHERE_WGS84.geodesicArea(coordinates));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(\n  circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection,\n  precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = ol.proj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = ol.proj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += exports.SPHERE_WGS84.haversineDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(\n  point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js","/**\n * @module ngeo.proj.EPSG21781\n*/\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n*/\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 94\n// module chunks = 0 1 3 4 5 12 13 17 18","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 98\n// module chunks = 0 1 2 10","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 99\n// module chunks = 0 1 2 8 10 19 24"],"sourceRoot":""}