{"version":3,"sources":["webpack:///./src/misc/ToolActivate.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.prod.js","webpack:///./examples/googlestreetview.js","webpack:///./src/googlestreetview/module.js","webpack:///./src/googlestreetview/component.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js"],"names":["_ngeo","__webpack_require__","toolContext","activePropertyName","this","getActive","setActive","newVal","d","__webpack_exports__","DEFAULT_WMS_VERSION","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","exports","$rootScope","groups_","scope_","prototype","registerTool","groupName","tool","opt_defaultActivate","_this","entries","unlisten","$watch","oldVal","deactivateTools_","activateDefault_","push","defaultTool","_asserts2","default","ENABLE_ASSERTS","defaultTools","forEach","entry","assert","unregisterTool","i","length","splice","unregisterGroup","activateTool","deactivateTool","hasActiveTool","module","angular","service","_ngeo2","requires","name","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","call","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","Object","ol","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","undefined","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","unlistenByKey","ol_Image","ImageWMS","opt_options","options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","assign","x","Math","floor","y","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","listen","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","bbox","axisOrientation","getAxisOrientation","substr","join","uri","appendParams","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","type","detail","arguments","_Event2","_ol2","inherits","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","res","key","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","value","get","set","_Collection2","featureUidToGroupIndex_","source_","_Vector4","useSpatialIndex","layer_","_Vector2","source","style","styleFunction_","bind","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","featureUid","getUid","toString","features","removeFeature","clear","group","_obj2","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","map","setMap","setStyle","createFunction","condition","opt_message","var_args","e","Error","code","app","ngeo","_module4","_module2","_ToolActivateMgr2","MainController","ngeoFeatureOverlayMgr","ngeoToolActivateMgr","radius","text","_Text2","fill","_Fill2","color","font","offsetY","stroke","_Stroke2","width","_Map2","layers","_Tile2","_OSM2","view","_View2","zoom","googleStreetViewActive","googleStreetViewToolActivate","_ToolActivate2","dummyActive","dummyToolActivate","controller","_component2","_FeatureOverlayMgr2","googlestreetview","Controller_","_class","$element","$scope","active","handleActiveChange_","featureStyle","feature_","_Feature2","featureOverlay_","goog","listenerKeys_","location","noDataAtLocation","panorama_","google","maps","StreetViewPanorama","pov","heading","pitch","panoramaListener_","point_","_Point2","setGeometry","streetViewService_","StreetViewService","panoramaPositionChanging_","_this2","handleLocationChange_","isActive","hasLocation","handleReadyChange_","hasData","show","oldShow","setVisible","event","addListener","handlePanoramaPositionChange_","removeListener","keys","_events2","handleMapClick_","_Observable2","unByKey","oldLocation","Array","isArray","_array2","equals","setCoordinates","lonLat","toLonLat_","getPanorama","lat","lng","handleStreetViewServiceGetPanorama_","evt","$apply","ready","oldReady","data","status","panorama","StreetViewStatus","OK","setPosition","latLng","position","getPosition","fromLonLat_","_proj2","fromLonLat","getView","toLonLat","component","bindings","templateUrl","baseModuleTemplateUrl","_BackgroundLayerMgr2","_directive2","_recenter2","_resizemap2","_scaleselector2","mapUids_","getLayers","item","layer","mapUid","previous","setAt","removeAt","insertAt","_CustomEvent2","current","dispatchEvent","updateDimensions","dimensions","baseBgLayer","getArray","assertInstanceof","_Layer2","hasUpdates","updatedDimensions","getSource","refresh","directive_","$window","ngeoSyncDataSourcesMap","restrict","link","scope","element","attrs","prop","$eval","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","ngeoDataSources","ngeoDataSources_","map_","handleDataSourcesAdd_","$inject","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","target","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","manager","index","manager_","features_","index_","setFeatures","handleFeatureAdd_","handleFeatureRemove_","$attrs","mapExpr","recenter","attr","getSize","fit","setZoom","on","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","newLength","Number","sort","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","$applyAsync","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_0__index_js__","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","_ol_style_Text_","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","placement","POINT","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","clone","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getText","getTextAlign","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding"],"mappings":"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","file":"googlestreetview.min.js","sourcesContent":["/**\n * @module ngeo.misc.ToolActivate\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivate.js","/**\n * @type {string} Default WMS version.\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.misc.ToolActivateMgr\n*/\nimport ngeoBase from 'ngeo';\nimport googAsserts from 'goog/asserts';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n *//* @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivateMgr.js","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nvar _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nvar ImageWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var extent = getForViewAndSize(coordinate, resolution, 0,\n      ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n      extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var imageResolution = resolution / pixelRatio;\n\n  var center = getCenter(extent);\n  var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n  var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n  var image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  var params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return _ol_uri_.appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n    imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.CustomEvent\n*/\nimport olBase from 'ol';\nimport olEventsEvent from 'ol/events/Event';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nvar TileWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var params = options.params || {};\n\n  var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, params) {\n\n  var urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    var tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  var url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    var index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return _ol_uri_.appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  var i = 0;\n  var res = [];\n  for (var key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo';\nimport olCollection from 'ol/Collection';\n\n\nngeoBase.module.value('ngeoDataSources', new olCollection());\n\n\n/**\n * @typedef {!ol.Collection.<!ngeo.datasource.DataSource>}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olLayerVector from 'ol/layer/Vector';\nimport olObj from 'ol/obj';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleStyle from 'ol/style/Style';\nimport googAsserts from 'goog/asserts';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {};\nexports.assertNumber = function(value, opt_message, var_args) {};\nexports.assertString = function(value, opt_message, var_args) {};\nexports.assertFunction = function(value, opt_message, var_args) {};\nexports.assertObject = function(value, opt_message, var_args) {};\nexports.assertArray = function(value, opt_message, var_args) {};\nexports.assertBoolean = function(value, opt_message, var_args) {};\nexports.assertElement = function(value, opt_message, var_args) {};\nexports.assertInstanceof = function(value, type, opt_message, var_args) {};\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.prod.js","/**\n * @module app.googlestreetview\n*/\nconst exports = {};\n\nimport 'examples/googlestreetview.css';\nimport './common_dependencies.js';\nimport olMap from 'ol/Map';\n\nimport olView from 'ol/View';\nimport olLayerTile from 'ol/layer/Tile';\nimport olSourceOSM from 'ol/source/OSM';\nimport olStyleFill from 'ol/style/Fill';\nimport olStyleStroke from 'ol/style/Stroke';\nimport olStyleStyle from 'ol/style/Style';\nimport olStyleText from 'ol/style/Text';\nimport ngeoGooglestreetviewModule from 'ngeo/googlestreetview/module';\nimport ngeoMapModule from 'ngeo/map/module';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr';\n\n\n/** @type {!angular.Module} **/\napp.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name,\n  ngeoGooglestreetviewModule.name,\n  ngeoMiscToolActivateMgr.module.name\n]);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n *     manager.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n *//* @ngInject\n */\napp.MainController = function(ngeoFeatureOverlayMgr, ngeoToolActivateMgr) {\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.radius = 500;\n\n  /**\n   * @type {!ol.style.Style}\n   * @export\n   */\n  this.style = new olStyleStyle({\n    text: new olStyleText({\n      fill: new olStyleFill({color: '#279B61'}),\n      font: 'normal 30px FontAwesome',\n      offsetY: -15,\n      stroke: new olStyleStroke({color: '#ffffff', width: 3}),\n      text: '\\uf041'\n    })\n  });\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [-7910687, 6178318],\n      zoom: 17\n    })\n  });\n\n  ngeoFeatureOverlayMgr.init(this.map);\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.googleStreetViewActive = true;\n\n  const googleStreetViewToolActivate = new ngeoMiscToolActivate(\n    this,\n    'googleStreetViewActive'\n  );\n  ngeoToolActivateMgr.registerTool(\n    'mapTools',\n    googleStreetViewToolActivate,\n    true\n  );\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.dummyActive = false;\n\n  const dummyToolActivate = new ngeoMiscToolActivate(\n    this,\n    'dummyActive'\n  );\n  ngeoToolActivateMgr.registerTool(\n    'mapTools',\n    dummyToolActivate,\n    false\n  );\n};\n\n\napp.module.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/googlestreetview.js","/**\n * @module ngeo.googlestreetview.module\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoGooglestreetviewComponent from 'ngeo/googlestreetview/component';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGooglestreetviewModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoGooglestreetviewComponent.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/googlestreetview/module.js","/**\n * @module ngeo.googlestreetview.component\n*/\nimport olArray from 'ol/array';\nimport olEvents from 'ol/events';\nimport olProj from 'ol/proj';\nimport olFeature from 'ol/Feature';\nimport olObservable from 'ol/Observable';\nimport olGeomPoint from 'ol/geom/Point';\nimport ngeoBase from 'ngeo';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGooglestreetview', [\n  ngeoMapFeatureOverlayMgr.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * @private\n */\nngeoBase.googlestreetview.Controller_ = class {\n\n  /**\n   * @param {angular.JQLite} $element Element.\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n   *     manager.\n   * @private\n   *//* @ngInject\n   * @ngdoc controller\n   * @ngname NgeoGooglestreetviewController\n   */\n  constructor($element, $scope, ngeoFeatureOverlayMgr) {\n\n    // Binding properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    $scope.$watch(\n      () => this.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    /**\n     * Style for the feature.\n     * @type {ol.style.Style|Array.<ol.style.Style>|\n     *     ol.FeatureStyleFunction|ol.StyleFunction|undefined}\n     * @export\n     */\n    this.featureStyle;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {number|undefined}\n     * @export\n     */\n    this.radius;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n\n    // Inner properties\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature();\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @private\n     */\n    this.featureOverlay_ = goog.asserts.assert(\n      ngeoFeatureOverlayMgr.getFeatureOverlay()\n    );\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * The current location in the OpenLayers' map view projection.\n     * @type {?ol.Coordinate}\n     * @private\n     */\n    this.location = null;\n\n    /**\n     * Flag that determines whether there's data at a given location or not.\n     * @type {boolean}\n     * @export\n     */\n    this.noDataAtLocation = false;\n\n    /**\n     * @type {!google.maps.StreetViewPanorama}\n     * @private\n     */\n    this.panorama_ = new google.maps.StreetViewPanorama(\n      $element[0],\n      {\n        pov: {\n          heading: 0,\n          pitch: 0\n        },\n        visible: false,\n        zoom: 1\n      }\n    );\n\n    /**\n     * @type {?google.maps.MapsEventListener}\n     * @private\n     */\n    this.panoramaListener_ = null;\n\n    /**\n     * @type {ol.geom.Point}\n     * @private\n     */\n    this.point_ = new olGeomPoint([0, 0]);\n\n    this.feature_.setGeometry(this.point_);\n\n    /**\n     * @type {google.maps.StreetViewService}\n     * @private\n     */\n    this.streetViewService_ = new google.maps.StreetViewService();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panoramaPositionChanging_ = false;\n  }\n\n  /**\n   * Called on initialization of the controller.\n   */\n  $onInit() {\n\n    // === Watchers ===\n\n    // (1) Watch for any change in the location\n    this.scope_.$watch(\n      () => this.location,\n      this.handleLocationChange_.bind(this)\n    );\n\n    // (2) Watch for both the active and location. When we have both, the\n    //     state is considered 'ready'.\n    this.scope_.$watch(\n      () => {\n        const isActive = this.active;\n        const hasLocation = this.location !== null;\n        return isActive && hasLocation;\n      },\n      this.handleReadyChange_.bind(this)\n    );\n\n    // (3) Watcher to manage the visibility of the panorama.\n    this.scope_.$watch(\n      () => {\n        const isActive = this.active;\n        const hasLocation = this.location !== null;\n        const hasData = this.noDataAtLocation === false;\n        return isActive && hasLocation && hasData;\n      },\n      (show, oldShow) => {\n        if (show === oldShow) {\n          return;\n        }\n\n        this.panorama_.setVisible(show);\n\n        if (show) {\n          this.panoramaListener_ = google.maps.event.addListener(\n            this.panorama_,\n            'position_changed',\n            this.handlePanoramaPositionChange_.bind(this)\n          );\n        } else if (this.panoramaListener_) {\n          google.maps.event.removeListener(this.panoramaListener_);\n          this.panoramaListener_ = null;\n        }\n      }\n    );\n\n\n    // Other initialization\n    if (this.featureStyle) {\n      this.feature_.setStyle(this.featureStyle);\n    }\n\n  }\n\n  /**\n   * Called when the 'active' property of this component changes.\n   * @param {boolean} active Active.\n   * @private\n   */\n  handleActiveChange_(active) {\n\n    const keys = this.listenerKeys_;\n\n    if (active) {\n      keys.push(\n        olEvents.listen(this.map, 'click', this.handleMapClick_, this)\n      );\n    } else {\n      olObservable.unByKey(keys);\n      keys.length = 0;\n    }\n  }\n\n  /**\n   * Called when the 'location' property of this component changes.\n   * @param {?ol.Coordinate} location Location, in OL map view projection.\n   * @param {?ol.Coordinate} oldLocation The previous location.\n   * @private\n   */\n  handleLocationChange_(location, oldLocation) {\n\n    // (1) No need to do anything if the old value equals the new value\n    if (location === oldLocation || (\n      Array.isArray(location) && Array.isArray(oldLocation) &&\n        olArray.equals(location, oldLocation)\n    )) {\n      return;\n    }\n\n    // (2) Update point coordinates\n    this.point_.setCoordinates(location);\n\n    // (3) Update StreetView location\n    if (location && !this.panoramaPositionChanging_) {\n      const lonLat = this.toLonLat_(location);\n      this.streetViewService_.getPanorama({\n        location: {\n          lat: lonLat[1],\n          lng: lonLat[0]\n        },\n        radius: this.radius\n      }, this.handleStreetViewServiceGetPanorama_.bind(this));\n    }\n  }\n\n  /**\n   * Called when the map is clicked while this component is active. Update the\n   * location accordingly.\n   * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n   * @private\n   */\n  handleMapClick_(evt) {\n    this.location = evt.coordinate;\n    this.scope_.$apply();\n  }\n\n  /**\n   * Called when the component 'virtual ready' state changes.\n   *\n   * When ready:\n   *  - add the feature to the overlay\n   *\n   * When not ready:\n   *  - remove the feature from the overlay\n   *\n   * @param {boolean} ready Whether the component is ready or not.\n   * @param {boolean} oldReady Previous ready value.\n   * @private\n   */\n  handleReadyChange_(ready, oldReady) {\n\n    if (ready === oldReady) {\n      return;\n    }\n\n    if (ready) {\n      this.featureOverlay_.addFeature(this.feature_);\n    } else {\n      this.featureOverlay_.removeFeature(this.feature_);\n    }\n  }\n\n  /**\n   * @param {google.maps.StreetViewPanoramaData} data Data.\n   * @param {google.maps.StreetViewStatus} status Status.\n   * @private\n   */\n  handleStreetViewServiceGetPanorama_(data, status) {\n\n    const panorama = this.panorama_;\n\n    if (status === google.maps.StreetViewStatus.OK) {\n      this.noDataAtLocation = false;\n      panorama.setPosition(data.location.latLng);\n    } else {\n      this.noDataAtLocation = true;\n    }\n\n    this.scope_.$apply();\n  }\n\n  /**\n   * Called when the panorama position changes. Update the location.\n   * @private\n   */\n  handlePanoramaPositionChange_() {\n    this.panoramaPositionChanging_ = true;\n    const position = this.panorama_.getPosition();\n    const lonLat = [position.lng(), position.lat()];\n    const location = this.fromLonLat_(lonLat);\n    this.location = location;\n    this.scope_.$apply();\n    this.panoramaPositionChanging_ = false;\n  }\n\n\n  // Utility methods\n\n  /**\n   * @param {!ol.Coordinate} lonLat LonLat coordinate.\n   * @return {ol.Coordinate} Map view projection coordinate.\n   */\n  fromLonLat_(lonLat) {\n    return olProj.fromLonLat(\n      lonLat,\n      this.map.getView().getProjection()\n    );\n  }\n\n  /**\n   * @param {!ol.Coordinate} coordinate Map view projection coordinate.\n   * @return {ol.Coordinate} LonLat coordinate.\n   */\n  toLonLat_(coordinate) {\n    return olProj.toLonLat(\n      coordinate,\n      this.map.getView().getProjection()\n    );\n  }\n};\n\n\nexports.component('ngeoGooglestreetview', {\n  bindings: {\n    'active': '<',\n    'featureStyle': '<?',\n    'map': '<',\n    'radius': '<?'\n  },\n  controller: ngeoBase.googlestreetview.Controller_,\n  templateUrl: () => `${ngeoBase.baseModuleTemplateUrl}/googlestreetview/component.html`\n});\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/googlestreetview/component.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr';\nimport ngeoMapDirective from 'ngeo/map/directive';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr';\nimport ngeoMapRecenter from 'ngeo/map/recenter';\nimport ngeoMapResizemap from 'ngeo/map/resizemap';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport ngeoCustomEvent from 'ngeo/CustomEvent';\nimport olBase from 'ol';\nimport olObservable from 'ol/Observable';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerLayer from 'ol/layer/Layer';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\nimport olSourceTileWMS from 'ol/source/TileWMS';\nimport olSourceWMTS from 'ol/source/WMTS';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap';\n\nimport olEvents from 'ol/events';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources';\n\nimport olEvents from 'ol/events';\nimport olObservable from 'ol/Observable';\nimport olView from 'ol/View';\nimport googAsserts from 'goog/asserts';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\nngeoBase.module.service(\n  'ngeoSyncDataSourcesMap', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olEvents from 'ol/events';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo';\nimport olArray from 'ol/array';\nimport olMap from 'ol/Map';\nimport olEvents from 'ol/events';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nvar OSM = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  var crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  var url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nvar XYZ = function(opt_options) {\n  var options = opt_options || {};\n  var projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/style/Text\n */\nimport _ol_style_Fill_ from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nvar _ol_style_Text_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new _ol_style_Fill_({color: _ol_style_Text_.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\n_ol_style_Text_.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\n_ol_style_Text_.prototype.clone = function() {\n  return new _ol_style_Text_({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\n_ol_style_Text_.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\n_ol_style_Text_.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\n_ol_style_Text_.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\n_ol_style_Text_.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\n_ol_style_Text_.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\n_ol_style_Text_.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_Text_.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\n_ol_style_Text_.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\n_ol_style_Text_.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\n_ol_style_Text_.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\n_ol_style_Text_.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\n_ol_style_Text_.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\n_ol_style_Text_.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_Text_.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\n_ol_style_Text_.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\n_ol_style_Text_.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\n_ol_style_Text_.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\n_ol_style_Text_.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\n_ol_style_Text_.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\n_ol_style_Text_.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\n_ol_style_Text_.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\n_ol_style_Text_.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\n_ol_style_Text_.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\n_ol_style_Text_.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\n_ol_style_Text_.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\n_ol_style_Text_.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\n_ol_style_Text_.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\n_ol_style_Text_.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\n_ol_style_Text_.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default _ol_style_Text_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 98\n// module chunks = 0 1 2 8 10 19 23"],"sourceRoot":""}