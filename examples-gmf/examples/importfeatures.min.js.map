{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./node_modules/openlayers/src/ol/format/KML.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.prod.js","webpack:///./examples/importfeatures.js","webpack:///./src/misc/filereaderComponent.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js"],"names":["__webpack_require__","d","__webpack_exports__","DEFAULT_WMS_VERSION","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","__WEBPACK_IMPORTED_MODULE_26__xml_js__","KML","opt_options","options","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","call","this","DEFAULT_STYLE_ARRAY_","createStyleDefaults_","defaultDataProjection","Object","__WEBPACK_IMPORTED_MODULE_18__proj_js__","defaultStyle_","defaultStyle","extractStyles_","undefined","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","__WEBPACK_IMPORTED_MODULE_0__index_js__","GX_NAMESPACE_URIS_","NAMESPACE_URIS_","SCHEMA_LOCATION_","DEFAULT_COLOR_","DEFAULT_FILL_STYLE_","__WEBPACK_IMPORTED_MODULE_19__style_Fill_js__","color","DEFAULT_IMAGE_STYLE_ANCHOR_","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_","__WEBPACK_IMPORTED_MODULE_21__style_IconAnchorUnits_js__","PIXELS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_","DEFAULT_IMAGE_STYLE_SIZE_","DEFAULT_IMAGE_STYLE_SRC_","DEFAULT_IMAGE_SCALE_MULTIPLIER_","DEFAULT_IMAGE_STYLE_","__WEBPACK_IMPORTED_MODULE_20__style_Icon_js__","anchor","anchorOrigin","__WEBPACK_IMPORTED_MODULE_22__style_IconOrigin_js__","BOTTOM_LEFT","anchorXUnits","anchorYUnits","crossOrigin","rotation","scale","size","src","DEFAULT_NO_IMAGE_STYLE_","DEFAULT_STROKE_STYLE_","__WEBPACK_IMPORTED_MODULE_23__style_Stroke_js__","width","DEFAULT_TEXT_STROKE_STYLE_","DEFAULT_TEXT_STYLE_","__WEBPACK_IMPORTED_MODULE_25__style_Text_js__","font","fill","stroke","DEFAULT_STYLE_","__WEBPACK_IMPORTED_MODULE_24__style_Style_js__","image","text","zIndex","ICON_ANCHOR_UNITS_MAP_","fraction","FRACTION","pixels","insetPixels","createNameStyleFunction_","foundStyle","name","textStyle","textOffset","textAlign","getImage","imageSize","getImageSize","length","imageScale","getScale","getText","foundText","clone","setFont","getFont","setScale","setFill","getFill","setStroke","getStroke","setText","setOffsetX","setOffsetY","setTextAlign","createFeatureStyleFunction_","style","styleUrl","sharedStyles","resolution","nameStyle","drawName","getGeometry","getType","__WEBPACK_IMPORTED_MODULE_10__geom_GeometryType_js__","POINT","get","concat","findStyle_","styleValue","Array","isArray","readColor_","node","s","getAllTextContent","m","exec","hexColor","parseInt","substr","readFlatCoordinates_","flatCoordinates","re","x","parseFloat","y","z","push","readURI_","trim","baseURI","window","location","href","URL","readVec2_","origin","xunits","getAttribute","yunits","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale_","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","readDecimal","readStyleMapValue_","objectStack","pushParseAndPop","STYLE_MAP_PARSERS_","IconStyleParser_","object","ICON_STYLE_PARSERS_","styleObject","IconObject","drawIcon","keys","offset","hotSpot","test","w","h","heading","__WEBPACK_IMPORTED_MODULE_17__math_js__","imageStyle","offsetOrigin","LabelStyleParser_","LABEL_STYLE_PARSERS_","LineStyleParser_","LINE_STYLE_PARSERS_","strokeStyle","PolyStyleParser_","POLY_STYLE_PARSERS_","fillStyle","outline","readFlatLinearRing_","FLAT_LINEAR_RING_PARSERS_","gxCoordParser_","readGxMultiTrack_","lineStrings","GX_MULTITRACK_GEOMETRY_PARSERS_","multiLineString","__WEBPACK_IMPORTED_MODULE_12__geom_MultiLineString_js__","setLineStrings","readGxTrack_","gxTrackObject","whens","GX_TRACK_PARSERS_","i","ii","Math","min","lineString","__WEBPACK_IMPORTED_MODULE_11__geom_LineString_js__","setFlatCoordinates","__WEBPACK_IMPORTED_MODULE_9__geom_GeometryLayout_js__","XYZM","readIcon_","iconObject","ICON_PARSERS_","readFlatCoordinatesFromNode_","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLineString_","properties","EXTRUDE_AND_ALTITUDE_MODE_PARSERS_","XYZ","setProperties","readLinearRing_","polygon","__WEBPACK_IMPORTED_MODULE_16__geom_Polygon_js__","readMultiGeometry_","multiGeometry","geometries","MULTI_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryCollection_js__","geometry","layout","homogeneous","type","point","getLayout","getFlatCoordinates","__WEBPACK_IMPORTED_MODULE_2__array_js__","__WEBPACK_IMPORTED_MODULE_13__geom_MultiPoint_js__","setCommonGeometryProperties_","LINE_STRING","POLYGON","__WEBPACK_IMPORTED_MODULE_14__geom_MultiPolygon_js__","setPolygons","GEOMETRY_COLLECTION","__WEBPACK_IMPORTED_MODULE_3__asserts_js__","readPoint_","__WEBPACK_IMPORTED_MODULE_15__geom_Point_js__","readPolygon_","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","ends","readStyle_","STYLE_PARSERS_","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","set","DataParser_","parseNode","DATA_PARSERS_","featureObject","value","displayName","ExtendedDataParser_","EXTENDED_DATA_PARSERS_","RegionParser_","REGION_PARSERS_","PairDataParser_","pairObject","PAIR_PARSERS_","key","Style","PlacemarkStyleMapParser_","styleMapValue","placemarkObject","SchemaDataParser_","SCHEMA_DATA_PARSERS_","SimpleDataParser_","data","readString","LatLonAltBoxParser_","LAT_LON_ALT_BOX_PARSERS_","regionObject","extent","LodParser_","LOD_PARSERS_","lodObject","innerBoundaryIsParser_","flatLinearRing","INNER_BOUNDARY_IS_PARSERS_","outerBoundaryIsParser_","OUTER_BOUNDARY_IS_PARSERS_","LinkParser_","LINK_PARSERS_","whenParser_","when","Date","parse","isNaN","makeStructureNS","makeObjectPropertySetter","Data","SchemaData","LatLonAltBox","Lod","altitudeMode","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","extrude","readBoolean","tessellate","coordinates","makeReplacer","innerBoundaryIs","outerBoundaryIs","coord","Icon","LinearRing","LineString","makeArrayPusher","MultiGeometry","Point","Polygon","Track","NETWORK_LINK_PARSERS_","ExtendedData","Region","Link","address","description","open","phoneNumber","visibility","PLACEMARK_PARSERS_","StyleMap","MultiTrack","SimpleData","IconStyle","LabelStyle","LineStyle","PolyStyle","Pair","prototype","readDocumentOrFolder_","parsersNS","Document","makeArrayExtender","Folder","Placemark","readPlacemark_","readSharedStyle_","bind","readSharedStyleMap_","features","feature","__WEBPACK_IMPORTED_MODULE_1__Feature_js__","id","setId","__WEBPACK_IMPORTED_MODULE_5__format_Feature_js__","setGeometry","styleFunction","setStyle","styleUri","readFeature","readFeatureFromNode","namespaceURI","getReadOptions","readFeatures","readFeaturesFromNode","localName","n","firstElementChild","nextElementSibling","fs","readName","source","isDocument","readNameFromDocument","isNode","readNameFromNode","doc","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","obj","readRegion","regions","readRegionFromDocument","readRegionFromNode","readProjection","writeColorTextNode_","rgba","__WEBPACK_IMPORTED_MODULE_4__color_js__","abgr","hex","toString","writeStringTextNode","join","writeCoordinatesTextNode_","dimension","context","stride","XY","XYM","writeDataNode_","pair","setAttribute","pushSerializeAndPop","EXTENDEDDATA_NODE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","writeDataNodeName_","writeCDATASection","writeDataNodeValue_","writeDocument_","DOCUMENT_SERIALIZERS_","DOCUMENT_NODE_FACTORY_","writeExtendedData_","namesAndValues","names","values","DATA_NODE_FACTORY_","writeIcon_","icon","parentNode","orderedKeys","ICON_SEQUENCE_","makeSequence","ICON_SERIALIZERS_","GX_NODE_FACTORY_","writeIconStyle_","getSrc","getSize","iconImageSize","iconProperties","getAnchor","getOrigin","getRotation","ICON_STYLE_SEQUENCE_","ICON_STYLE_SERIALIZERS_","writeLabelStyle_","getColor","LABEL_STYLE_SEQUENCE_","LABEL_STYLE_SERIALIZERS_","writeLineStyle_","getWidth","LINE_STYLE_SEQUENCE_","LINE_STYLE_SERIALIZERS_","writeMultiGeometry_","factory","getGeometries","GEOMETRY_NODE_FACTORY_","MULTI_POINT","getPoints","POINT_NODE_FACTORY_","MULTI_LINE_STRING","getLineStrings","LINE_STRING_NODE_FACTORY_","MULTI_POLYGON","getPolygons","POLYGON_NODE_FACTORY_","MULTI_GEOMETRY_SERIALIZERS_","writeBoundaryIs_","linearRing","BOUNDARY_IS_SERIALIZERS_","LINEAR_RING_NODE_FACTORY_","writePlacemark_","getId","getProperties","filter","getGeometryName","sort","v","PLACEMARK_SERIALIZERS_","EXTENDEDDATA_NODE_FACTORY_","getStyleFunction","styles","PLACEMARK_SEQUENCE_","writePrimitiveGeometry_","getStride","PRIMITIVE_GEOMETRY_SEQUENCE_","PRIMITIVE_GEOMETRY_SERIALIZERS_","writePolygon_","linearRings","getLinearRings","outerRing","shift","POLYGON_SERIALIZERS_","INNER_BOUNDARY_NODE_FACTORY_","OUTER_BOUNDARY_NODE_FACTORY_","writePolyStyle_","POLY_STYLE_SERIALIZERS_","COLOR_NODE_FACTORY_","writeScaleTextNode_","writeDecimalTextNode","round","writeStyle_","STYLE_SEQUENCE_","STYLE_SERIALIZERS_","writeVec2_","vec2","KML_SEQUENCE_","KML_SERIALIZERS_","makeChildAppender","GEOMETRY_TYPE_TO_NODENAME_","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","writeBooleanTextNode","opt_nodeName","createElementNS","makeSimpleNodeFactory","writeFeatures","writeFeaturesNode","adaptOptions","kml","xmlnsUri","xmlSchemaInstanceUri","setAttributeNS","_ol_Image_","pixelRatio","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","ol","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","forEach","unlistenByKey","ol_Image","ImageWMS","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","assign","floor","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","listen","CHANGE","handleImageChange","getImageLoadFunction","asserts","getCode","WMSServerType","dpi","bbox","axisOrientation","getAxisOrientation","uri","appendParams","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","exports","detail","arguments","_Event2","default","_ol2","inherits","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","res","fixedTileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__string_js__","_ngeo","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","_ngeo2","module","_Collection2","featureUidToGroupIndex_","groups_","source_","_Vector4","useSpatialIndex","layer_","_Vector2","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","_asserts2","assert","featureUid","getUid","removeFeature","clear","group","_obj2","isEmpty","getLayer","getFeatureOverlay","_Style2","defaultFunction","_FeatureOverlay2","init","map","setMap","createFunction","angular","service","requires","condition","opt_message","var_args","e","Error","code","app","ngeo","_module2","_filereaderComponent2","MainController","$scope","_this","kmlFormat_","_KML2","vectorSource_","_Map2","layers","_Tile2","_OSM2","view","_View2","zoom","fileReaderSupported","fileContent","$watch","importKml_","vectorSource","featureProjection","addFeatures","mapSize","_extent2","getView","fit","controller","component_","$window","restrict","scope","supported","link","element","attrs","on","changeEvent","fileReader","FileReader","onload","evt","$apply","target","result","readAsText","files","directive","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","getLayers","item","layer","mapUid","previous","setAt","removeAt","insertAt","event","_CustomEvent2","current","dispatchEvent","updateDimensions","dimensions","baseBgLayer","getArray","assertInstanceof","_Layer2","hasUpdates","updatedDimensions","getSource","refresh","directive_","ngeoSyncDataSourcesMap","prop","$eval","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","_events2","start","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","manager","index","manager_","features_","index_","setFeatures","unlisten","handleFeatureAdd_","handleFeatureRemove_","$element","$attrs","mapExpr","recenter","attr","setZoom","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","newVal","oldVal","cancelAnimationFrame","templateUrl","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","goog","zoomLevels","newLength","Number","_array2","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","_this2","$applyAsync","__WEBPACK_IMPORTED_MODULE_9__math_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","setCoordinates","appendPoint","__WEBPACK_IMPORTED_MODULE_1__array_js__","slice","multiPoint","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","j","squaredDistance","getCoordinates","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","points","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","intersectsExtent","setLayout","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","setFlatCoordinatesInternal","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","ends_","maxDelta_","maxDeltaRevision_","appendLineString","sqrt","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","len","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","jj","endss","polygons","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","__WEBPACK_IMPORTED_MODULE_6__obj_js__","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getGeometriesArray","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","rotate","angle","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","__WEBPACK_IMPORTED_MODULE_0__xml_js__","readBooleanString","readDateTime","dateTime","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","bool","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","XMLSerializer","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","readFeatureFromDocument","readFeaturesFromDocument","readGeometry","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeature","writeFeatureNode","serializeToString","writeGeometry","writeGeometryNode","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","_ol_style_Text_","font_","rotation_","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","placement","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotateWithView","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setMaxAngle","setPlacement","setRotation","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding"],"mappings":"mDAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAGA,IAAAA,EAAA,yCCOAD,EAAA,GACAE,gBAAA,iBACAC,UAAA,YACAC,UAAA,YACAC,KAAA,+SCdAC,EAAAR,EAAA,IA2CAS,EAAA,SAAAC,GAEA,IAAAC,EAAAD,MAEAE,EAAA,EAAAC,KAAAC,MAEAL,EAAAM,sBACAN,EAAAO,uBAMAF,KAAAG,sBAAAC,OAAAC,EAAA,IAAAD,CAAA,aAMAJ,KAAAM,cAAAT,EAAAU,aACAV,EAAAU,aAAAZ,EAAAM,qBAMAD,KAAAQ,oBAAAC,IAAAZ,EAAAa,eACAb,EAAAa,cAMAV,KAAAW,kBAAAF,IAAAZ,EAAAe,aACAf,EAAAe,YAMAZ,KAAAa,iBAMAb,KAAAc,qBAAAL,IAAAZ,EAAAkB,gBACAlB,EAAAkB,gBAIAX,OAAAY,EAAA,SAAAZ,CAAAT,EAAAG,EAAA,GAQAH,EAAAsB,oBACA,qCASAtB,EAAAuB,iBACA,KACA,kCACA,kCACA,kCACA,kCASAvB,EAAAwB,iBAAA,sFAQAxB,EAAAO,qBAAA,WAwIA,OAlIAP,EAAAyB,gBAAA,eAOAzB,EAAA0B,oBAAA,IAAAC,EAAA,SACAC,MAAA5B,EAAAyB,iBAQAzB,EAAA6B,6BAAA,MAOA7B,EAAA8B,oCAAAC,EAAA,EAAAC,OAOAhC,EAAAiC,oCAAAF,EAAA,EAAAC,OAOAhC,EAAAkC,2BAAA,OAOAlC,EAAAmC,yBACA,+DAOAnC,EAAAoC,gCAAA,GAOApC,EAAAqC,qBAAA,IAAAC,EAAA,SACAC,OAAAvC,EAAA6B,4BACAW,aAAAC,EAAA,EAAAC,YACAC,aAAA3C,EAAA8B,oCACAc,aAAA5C,EAAAiC,oCACAY,YAAA,YACAC,SAAA,EACAC,MAAA/C,EAAAoC,gCACAY,KAAAhD,EAAAkC,0BACAe,IAAAjD,EAAAmC,2BAQAnC,EAAAkD,wBAAA,WAOAlD,EAAAmD,sBAAA,IAAAC,EAAA,SACAxB,MAAA5B,EAAAyB,eACA4B,MAAA,IAQArD,EAAAsD,2BAAA,IAAAF,EAAA,SACAxB,OAAA,YACAyB,MAAA,IAQArD,EAAAuD,oBAAA,IAAAC,EAAA,SACAC,KAAA,sBACAC,KAAA1D,EAAA0B,oBACAiC,OAAA3D,EAAAsD,2BACAP,MAAA,KAQA/C,EAAA4D,eAAA,IAAAC,EAAA,SACAH,KAAA1D,EAAA0B,oBACAoC,MAAA9D,EAAAqC,qBACA0B,KAAA/D,EAAAuD,oBACAI,OAAA3D,EAAAmD,sBACAa,OAAA,IAQAhE,EAAAM,sBAAAN,EAAA4D,gBAEA5D,EAAAM,sBASAN,EAAAiE,wBACAC,SAAAnC,EAAA,EAAAoC,SACAC,OAAArC,EAAA,EAAAC,OACAqC,YAAAtC,EAAA,EAAAC,QAUAhC,EAAAsE,yBAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,KACAC,GAAA,KACAC,EAAA,QACA,GAAAJ,EAAAK,WAAA,CACA,IAAAC,EAAAN,EAAAK,WAAAE,eAIA,GAHA,OAAAD,IACAA,EAAA7E,EAAAkC,2BAEA,GAAA2C,EAAAE,OAAA,CACA,IAAAC,EAAAT,EAAAK,WAAAK,WAGAP,EAAA,GAAAM,EAAAH,EAAA,KACAH,EAAA,IAAAM,EAAAH,EAAA,KACAF,EAAA,QAGA,UAAAJ,EAAAW,UAAA,CAGA,IAAAC,EAAAZ,EAAAW,WACAT,EAAAU,EAAAC,SACAC,QAAAF,EAAAG,WAAAtF,EAAAuD,oBAAA+B,WACAb,EAAAc,SAAAJ,EAAAF,YAAAjF,EAAAuD,oBAAA0B,YACAR,EAAAe,QAAAL,EAAAM,WAAAzF,EAAAuD,oBAAAkC,WACAhB,EAAAiB,UAAAP,EAAAQ,aAAA3F,EAAAsD,iCAEAmB,EAAAzE,EAAAuD,oBAAA6B,QAUA,OARAX,EAAAmB,QAAApB,GACAC,EAAAoB,WAAAnB,EAAA,IACAD,EAAAqB,WAAApB,EAAA,IACAD,EAAAsB,aAAApB,GAEA,IAAAd,EAAA,SACAE,KAAAU,KAiBAzE,EAAAgG,4BAAA,SAAAC,EAAAC,EACAtF,EAAAuF,EAAA/E,GAEA,gBAMAgF,GACA,IAEAC,EAFAC,EAAAlF,EAGAoD,EAAA,GAaA,GAZA8B,GACAjG,KAAAkG,gBACAD,EAAAjG,KAAAkG,cAAAC,YACAC,EAAA,QAAAC,OAIAJ,IACA9B,EAAiCnE,KAAAsG,IAAA,QACjCL,KAAA9B,GAGAyB,EACA,OAAAK,GACAD,EAAArG,EAAAsE,yBAAA2B,EAAA,GACAzB,GACAyB,EAAAW,OAAAP,IAEAJ,EAEA,GAAAC,EAAA,CACA,IAAA3B,EAAAvE,EAAA6G,WAAAX,EAAAtF,EACAuF,GACA,OAAAG,GACAD,EAAArG,EAAAsE,yBAAAC,EAAA,GACAC,GACAD,EAAAqC,OAAAP,IAEA9B,EAEA,OAAA+B,GACAD,EAAArG,EAAAsE,yBAAA1D,EAAA,GACA4D,GACA5D,EAAAgG,OAAAP,IAEAzF,IAcAZ,EAAA6G,WAAA,SAAAC,EAAAlG,EAAAuF,GACA,OAAAY,MAAAC,QAAAF,GACAA,EACG,iBAAAA,KAIHA,KAAAX,IAAA,IAAAW,KAAAX,IACAW,EAAA,IAAAA,GAEA9G,EAAA6G,WACAV,EAAAW,GAAAlG,EAAAuF,IAEAvF,GAUAZ,EAAAiH,WAAA,SAAAC,GACA,IAAAC,EAAApH,EAAA,QAAAqH,kBAAAF,GAAA,GAGAG,EAAA,gCAAmCC,KAAAH,GACnC,GAAAE,EAAA,CACA,IAAAE,EAAAF,EAAA,GACA,OACAG,SAAAD,EAAAE,OAAA,SACAD,SAAAD,EAAAE,OAAA,SACAD,SAAAD,EAAAE,OAAA,SACAD,SAAAD,EAAAE,OAAA,gBAcAzH,EAAA0H,qBAAA,SAAAR,GAQA,IAPA,IAMAG,EANAF,EAAApH,EAAA,QAAAqH,kBAAAF,GAAA,GACAS,KAGAC,EACA,8HAEAP,EAAAO,EAAAN,KAAAH,IAAA,CACA,IAAAU,EAAAC,WAAAT,EAAA,IACAU,EAAAD,WAAAT,EAAA,IACAW,EAAAX,EAAA,GAAAS,WAAAT,EAAA,MACAM,EAAAM,KAAAJ,EAAAE,EAAAC,GACAb,IAAAM,OAAAJ,EAAA,GAAAtC,QAEA,QAAAoC,EAGA,OAAAQ,GASA3H,EAAAkI,SAAA,SAAAhB,GACA,IAAAC,EAAApH,EAAA,QAAAqH,kBAAAF,GAAA,GAAAiB,OACAC,EAAAlB,EAAAkB,QAIA,OAHAA,GAAA,eAAAA,IACAA,EAAAC,OAAAC,SAAAC,MAEAH,EACA,IAAAI,IAAArB,EAAAiB,GACAG,KAEApB,GAUAnH,EAAAyI,UAAA,SAAAvB,GACA,IAEAwB,EAFAC,EAAAzB,EAAA0B,aAAA,UACAC,EAAA3B,EAAA0B,aAAA,UAeA,OAXAF,EAFA,gBAAAC,EACA,gBAAAE,EACApG,EAAA,EAAAC,YAEAD,EAAA,EAAAqG,SAGA,gBAAAD,EACApG,EAAA,EAAAsG,aAEAtG,EAAA,EAAAuG,WAIAnB,EAAAC,WAAAZ,EAAA0B,aAAA,MACAD,OAAA3I,EAAAiE,uBAAA0E,GACAZ,EAAAD,WAAAZ,EAAA0B,aAAA,MACAC,OAAA7I,EAAAiE,uBAAA4E,GACAH,WAUA1I,EAAAiJ,WAAA,SAAA/B,GACA,OAAAgC,EAAA,EAAAC,YAAAjC,IAUAlH,EAAAoJ,mBAAA,SAAAlC,EAAAmC,GACA,OAAAtJ,EAAA,QAAAuJ,qBAAAxI,EACAd,EAAAuJ,mBAAArC,EAAAmC,IAOArJ,EAAAwJ,iBAAA,SAAAtC,EAAAmC,GAOA,IAAAI,EAAA1J,EAAA,QAAAuJ,mBACQtJ,EAAA0J,oBAAAxC,EAAAmC,GACR,GAAAI,EAAA,CAGA,IAGAxG,EAQAV,EAAAI,EAAAC,EAXA+G,EAAsCN,IAAAtE,OAAA,GACtC6E,EAAA,SAAAH,IAAA,QACAI,IAAA,SAAAJ,IAAAhJ,OAAAqJ,KAAAF,GAAA7E,OAAA,EAEAwD,EACAqB,EAAA,KACArB,EACAtF,EAAAsF,EACGsB,IACH5G,EAAAjD,EAAAmC,0BAGA,IAkBA4H,EAlBAvH,EAAAC,EAAA,EAAAC,YACAsH,EACAP,EAAA,QACAO,GACAzH,GAAAyH,EAAAnC,EAAAmC,EAAAjC,GACApF,EAAAqH,EAAArB,OACA/F,EAAAoH,EAAAnB,OACArG,EAAAwH,EAAAtB,QACGzF,IAAAjD,EAAAmC,0BACHI,EAAAvC,EAAA6B,4BACAc,EAAA3C,EAAA8B,oCACAc,EAAA5C,EAAAiC,qCACG,4CAAAgI,KAAAhH,KACHV,GAAA,MACAI,EAAAZ,EAAA,EAAAoC,SACAvB,EAAAb,EAAA,EAAAoC,UAIA,IAQAnB,EARA6E,EACA+B,EAAA,EACA7B,EACA6B,EAAA,OACA9I,IAAA+G,QAAA/G,IAAAiH,IACAgC,GAAAlC,EAAAE,IAIA,IAQAjF,EARAoH,EACAN,EAAA,EACAO,EACAP,EAAA,OACA9I,IAAAoJ,QAAApJ,IAAAqJ,IACAnH,GAAAkH,EAAAC,IAIA,IAAAC,EACAX,EAAA,aACA3I,IAAAsJ,IACAtH,EAAArC,OAAA4J,EAAA,UAAA5J,CAAA2J,IAGA,IAAArH,EACA0G,EAAA,MAEA,GAAAI,EAAA,CACA5G,GAAAjD,EAAAmC,2BACAa,EAAAhD,EAAAkC,+BACApB,IAAAiC,IACAA,EAAA/C,EAAAoC,kCAIA,IAAAkI,EAAA,IAAAhI,EAAA,SACAC,SACAC,eACAG,eACAC,eACAC,YAAA,YACAkH,SACAQ,aAAA9H,EAAA,EAAAC,YACAI,WACAC,QACAC,OACAC,QAEA0G,EAAA,WAAAW,OAGAX,EAAA,WAAA3J,EAAAkD,0BAUAlD,EAAAwK,kBAAA,SAAAtD,EAAAmC,GAEA,IAAAI,EAAA1J,EAAA,QAAAuJ,mBACQtJ,EAAAyK,qBAAAvD,EAAAmC,GACR,GAAAI,EAAA,CAGA,IAAAE,EAAAN,IAAAtE,OAAA,GACAN,EAAA,IAAAjB,EAAA,SACAE,KAAA,IAAA/B,EAAA,SACAC,MACA,UAAA6H,IAAA,MAAAzJ,EAAAyB,iBAEAsB,MACA0G,EAAA,QAEAE,EAAA,UAAAlF,IASAzE,EAAA0K,iBAAA,SAAAxD,EAAAmC,GAMA,IAAAI,EAAA1J,EAAA,QAAAuJ,mBACQtJ,EAAA2K,oBAAAzD,EAAAmC,GACR,GAAAI,EAAA,CAGA,IAAAE,EAAAN,IAAAtE,OAAA,GACA6F,EAAA,IAAAxH,EAAA,SACAxB,MACA,UAAA6H,IAAA,MAAAzJ,EAAAyB,eACA4B,MAA6B,UAAAoG,IAAA,UAE7BE,EAAA,YAAAiB,IASA5K,EAAA6K,iBAAA,SAAA3D,EAAAmC,GAEA,IAAAI,EAAA1J,EAAA,QAAAuJ,mBACQtJ,EAAA8K,oBAAA5D,EAAAmC,GACR,GAAAI,EAAA,CAGA,IAAAE,EAAAN,IAAAtE,OAAA,GACAgG,EAAA,IAAApJ,EAAA,SACAC,MACA,UAAA6H,IAAA,MAAAzJ,EAAAyB,iBAEAkI,EAAA,UAAAoB,EACA,IAAArH,EAA0C+F,EAAA,UAC1C3I,IAAA4C,IACAiG,EAAA,KAAAjG,GAEA,IAAAsH,EACmCvB,EAAA,aACnC3I,IAAAkK,IACArB,EAAA,QAAAqB,KAWAhL,EAAAiL,oBAAA,SAAA/D,EAAAmC,GACA,OAAAtJ,EAAA,QAAAuJ,gBAAA,KACAtJ,EAAAkL,0BAAAhE,EAAAmC,IASArJ,EAAAmL,eAAA,SAAAjE,EAAAmC,GACA,IAEA1B,EADA0B,IAAAtE,OAAA,GACA4C,gBACAR,EAAApH,EAAA,QAAAqH,kBAAAF,GAAA,GAGAG,EADA,8HACAC,KAAAH,GACA,GAAAE,EAAA,CACA,IAAAQ,EAAAC,WAAAT,EAAA,IACAU,EAAAD,WAAAT,EAAA,IACAW,EAAAF,WAAAT,EAAA,IACAM,EAAAM,KAAAJ,EAAAE,EAAAC,EAAA,QAEAL,EAAAM,KAAA,UAWAjI,EAAAoL,kBAAA,SAAAlE,EAAAmC,GACA,IAAAgC,EAAAtL,EAAA,QAAAuJ,mBACAtJ,EAAAsL,gCAAApE,EAAAmC,GACA,GAAAgC,EAAA,CAGA,IAAAE,EAAA,IAAAC,EAAA,cAEA,OADAD,EAAAE,eAAAJ,GACAE,IAUAvL,EAAA0L,aAAA,SAAAxE,EAAAmC,GACA,IAAAsC,EAAA5L,EAAA,QAAAuJ,iBAEA3B,mBACAiE,UACO5L,EAAA6L,kBAAA3E,EAAAmC,GACP,GAAAsC,EAAA,CAGA,IAEAG,EAAAC,EAFApE,EAAAgE,EAAAhE,gBACAiE,EAAAD,EAAAC,MAEA,IAAAE,EAAA,EAAAC,EAAAC,KAAAC,IAAAtE,EAAA5C,OAAA6G,EAAA7G,QAAkE+G,EAAAC,IAClED,EACAnE,EAAA,EAAAmE,EAAA,GAAAF,EAAAE,GAEA,IAAAI,EAAA,IAAAC,EAAA,cAEA,OADAD,EAAAE,mBAAAC,EAAA,QAAAC,KAAA3E,GACAuE,IAUAlM,EAAAuM,UAAA,SAAArF,EAAAmC,GACA,IAAAmD,EAAAzM,EAAA,QAAAuJ,mBACQtJ,EAAAyM,cAAAvF,EAAAmC,GACR,OAAAmD,GAGA,MAWAxM,EAAA0M,6BAAA,SAAAxF,EAAAmC,GACA,OAAAtJ,EAAA,QAAAuJ,gBAAA,KACAtJ,EAAA2M,mCAAAzF,EAAAmC,IAUArJ,EAAA4M,gBAAA,SAAA1F,EAAAmC,GACA,IAAAwD,EAAA9M,EAAA,QAAAuJ,mBACAtJ,EAAA8M,mCAAA5F,EACAmC,GACA1B,EACA3H,EAAA0M,6BAAAxF,EAAAmC,GACA,GAAA1B,EAAA,CACA,IAAAuE,EAAA,IAAAC,EAAA,cAGA,OAFAD,EAAAE,mBAAAC,EAAA,QAAAU,IAAApF,GACAuE,EAAAc,cAAAH,GACAX,IAaAlM,EAAAiN,gBAAA,SAAA/F,EAAAmC,GACA,IAAAwD,EAAA9M,EAAA,QAAAuJ,mBACAtJ,EAAA8M,mCAAA5F,EACAmC,GACA1B,EACA3H,EAAA0M,6BAAAxF,EAAAmC,GACA,GAAA1B,EAAA,CACA,IAAAuF,EAAA,IAAAC,EAAA,cAIA,OAHAD,EAAAd,mBAAAC,EAAA,QAAAU,IAAApF,GACAA,EAAA5C,SACAmI,EAAAF,cAAAH,GACAK,IAaAlN,EAAAoN,mBAAA,SAAAlG,EAAAmC,GACA,IASAgE,EATAC,EAAAvN,EAAA,QAAAuJ,mBACAtJ,EAAAuN,wBAAArG,EAAAmC,GACA,IAAAiE,EACA,YAEA,OAAAA,EAAAvI,OACA,WAAAyI,EAAA,QAAAF,GAIA,IAEAG,EAAA3B,EAAAC,EASA2B,EACA/F,EAZAgG,GAAA,EACAC,EAAAN,EAAA,GAAA9G,UAEA,IAAAsF,EAAA,EAAAC,EAAAuB,EAAAvI,OAAqC+G,EAAAC,IAAQD,EAE7C,IADA2B,EAAAH,EAAAxB,IACAtF,WAAAoH,EAAA,CACAD,GAAA,EACA,MAGA,GAAAA,EAGA,GAAAC,GAAAnH,EAAA,QAAAC,MAAA,CACA,IAAAmH,EAAAP,EAAA,GAGA,IAFAI,EAAAG,EAAAC,YACAnG,EAAAkG,EAAAE,qBACAjC,EAAA,EAAAC,EAAAuB,EAAAvI,OAAyC+G,EAAAC,IAAQD,EACjD2B,EAAAH,EAAAxB,GACArL,OAAAuN,EAAA,OAAAvN,CAAAkH,EAAA8F,EAAAM,uBAEAV,EAAA,IAAAY,EAAA,eACA7B,mBAAAsB,EAAA/F,GACA3H,EAAAkO,6BAAAb,EAAAC,QACKM,GAAAnH,EAAA,QAAA0H,cACLd,EAAA,IAAA7B,EAAA,eACAC,eAAA6B,GACAtN,EAAAkO,6BAAAb,EAAAC,IACKM,GAAAnH,EAAA,QAAA2H,UACLf,EAAA,IAAAgB,EAAA,eACAC,YAAAhB,GACAtN,EAAAkO,6BAAAb,EAAAC,IACKM,GAAAnH,EAAA,QAAA8H,oBACLlB,EAAA,IAAAG,EAAA,QAAAF,GAEA7M,OAAA+N,EAAA,EAAA/N,EAAA,WAGA4M,EAAA,IAAAG,EAAA,QAAAF,GAEA,OAAqC,GAUrCtN,EAAAyO,WAAA,SAAAvH,EAAAmC,GACA,IAAAwD,EAAA9M,EAAA,QAAAuJ,mBACAtJ,EAAA8M,mCAAA5F,EACAmC,GACA1B,EACA3H,EAAA0M,6BAAAxF,EAAAmC,GACA,GAAA1B,EAAA,CACA,IAAAkG,EAAA,IAAAa,EAAA,cAGA,OAFAb,EAAAzB,mBAAAC,EAAA,QAAAU,IAAApF,GACAkG,EAAAb,cAAAH,GACAgB,IAaA7N,EAAA2O,aAAA,SAAAzH,EAAAmC,GACA,IAAAwD,EAAA9M,EAAA,QAAAuJ,mBACAtJ,EAAA8M,mCAAA5F,EACAmC,GACAuF,EAAA7O,EAAA,QAAAuJ,iBAAA,MACAtJ,EAAA6O,2BAAA3H,EAAAmC,GACA,GAAAuF,KAAA,IACA,IAGA9C,EAAAC,EAHAmB,EAAA,IAAAC,EAAA,cACAxF,EAAAiH,EAAA,GACAE,GAAAnH,EAAA5C,QAEA,IAAA+G,EAAA,EAAAC,EAAA6C,EAAA7J,OAA4C+G,EAAAC,IAAQD,EACpDrL,OAAAuN,EAAA,OAAAvN,CAAAkH,EAAAiH,EAAA9C,IACAgD,EAAA7G,KAAAN,EAAA5C,QAKA,OAHAmI,EAAAd,mBACAC,EAAA,QAAAU,IAAApF,EAAAmH,GACA5B,EAAAF,cAAAH,GACAK,IAaAlN,EAAA+O,WAAA,SAAA7H,EAAAmC,GACA,IAAAM,EAAA5J,EAAA,QAAAuJ,mBACQtJ,EAAAgP,eAAA9H,EAAAmC,GACR,IAAAM,EACA,YAEA,IAAAoB,EACA,cAAApB,EACAA,EAAA,UAAA3J,EAAA0B,oBACAgC,EAA0CiG,EAAA,UAC1C7I,IAAA4C,OACAqH,EAAA,MAEA,IAAAT,EACA,eAAAX,EACAA,EAAA,WAAA3J,EAAAqC,qBACAiI,GAAAtK,EAAAkD,0BACAoH,OAAAxJ,GAEA,IAAA2D,EACA,cAAAkF,EACAA,EAAA,UAAA3J,EAAAuD,oBACAqH,EACA,gBAAAjB,EACAA,EAAA,YAAA3J,EAAAmD,sBACA6H,EACArB,EAAA,QAIA,YAHA7I,IAAAkK,OACAJ,EAAA,OAEA,IAAA/G,EAAA,SACAH,KAAAqH,EACAjH,MAAAwG,EACA3G,OAAAiH,EACA7G,KAAAU,EACAT,YAAAlD,MAaAd,EAAAkO,6BAAA,SAAAb,EACAC,GACA,IAIAG,EAAA3B,EAAAmD,EAAAC,EAAAC,EAJApD,EAAAuB,EAAAvI,OACAqK,EAAA,IAAArI,MAAAuG,EAAAvI,QACAsK,EAAA,IAAAtI,MAAAuG,EAAAvI,QACAuK,EAAA,IAAAvI,MAAAuG,EAAAvI,QAGA,IADAkK,EAAAC,EAAAC,GAAA,EACArD,EAAA,EAAaA,EAAAC,IAAQD,EACrB2B,EAAAH,EAAAxB,GACAsD,EAAAtD,GAAA2B,EAAA9G,IAAA,WACA0I,EAAAvD,GAAA2B,EAAA9G,IAAA,cACA2I,EAAAxD,GAAA2B,EAAA9G,IAAA,gBACAsI,UAAAnO,IAAAsO,EAAAtD,GACAoD,UAAApO,IAAAuO,EAAAvD,GACAqD,KAAAG,EAAAxD,GAEAmD,GACA5B,EAAAkC,IAAA,UAAAH,GAEAF,GACA7B,EAAAkC,IAAA,aAAAF,GAEAF,GACA9B,EAAAkC,IAAA,eAAAD,IAUAtP,EAAAwP,YAAA,SAAAtI,EAAAmC,GACA,IAAA7E,EAAA0C,EAAA0B,aAAA,QACA7I,EAAA,QAAA0P,UAAAzP,EAAA0P,cAAAxI,EAAAmC,GACA,IAAAsG,EAAwCtG,IAAAtE,OAAA,GACxC,OAAAP,EACAmL,EAAAnL,GAAAmL,EAAAC,MACG,OAAAD,EAAAE,cACHF,IAAAE,aAAAF,EAAAC,cAEAD,EAAA,OASA3P,EAAA8P,oBAAA,SAAA5I,EAAAmC,GACAtJ,EAAA,QAAA0P,UAAAzP,EAAA+P,uBAAA7I,EAAAmC,IAQArJ,EAAAgQ,cAAA,SAAA9I,EAAAmC,GACAtJ,EAAA,QAAA0P,UAAAzP,EAAAiQ,gBAAA/I,EAAAmC,IAQArJ,EAAAkQ,gBAAA,SAAAhJ,EAAAmC,GACA,IAAA8G,EAAApQ,EAAA,QAAAuJ,mBACQtJ,EAAAoQ,cAAAlJ,EAAAmC,GACR,GAAA8G,EAAA,CAGA,IAAAE,EACAF,EAAA,IACA,GAAAE,GAAA,UAAAA,EAAA,CACA,IAAAnK,EACAiK,EAAA,SACAjK,IACAmD,IAAAtE,OAAA,GAAAmB,GAEA,IAAAoK,EACAH,EAAA,MACAG,IACAjH,IAAAtE,OAAA,GAAAuL,MAWAtQ,EAAAuQ,yBAAA,SAAArJ,EAAAmC,GACA,IAAAmH,EAAAxQ,EAAAoJ,mBAAAlC,EAAAmC,GACA,GAAAmH,EAAA,CAGA,IAAAC,EAAApH,IAAAtE,OAAA,GACAgC,MAAAC,QAAAwJ,GACAC,EAAA,MAAAD,EACG,iBAAAA,EACHC,EAAA,SAAAD,EAEA/P,OAAA+N,EAAA,EAAA/N,EAAA,QAUAT,EAAA0Q,kBAAA,SAAAxJ,EAAAmC,GACAtJ,EAAA,QAAA0P,UAAAzP,EAAA2Q,qBAAAzJ,EAAAmC,IASArJ,EAAA4Q,kBAAA,SAAA1J,EAAAmC,GACA,IAAA7E,EAAA0C,EAAA0B,aAAA,QACA,UAAApE,EAAA,CACA,IAAAqM,EAAA3H,EAAA,EAAA4H,WAAA5J,GAE0BmC,IAAAtE,OAAA,GAC1BP,GAAAqM,IAUA7Q,EAAA+Q,oBAAA,SAAA7J,EAAAmC,GACA,IAAAI,EAAA1J,EAAA,QAAAuJ,mBAA0CtJ,EAAAgR,yBAAA9J,EAAAmC,GAC1C,GAAAI,EAAA,CAGA,IAAAwH,EAAuC5H,IAAAtE,OAAA,GACvCmM,GACApJ,WAAA2B,EAAA,MACA3B,WAAA2B,EAAA,OACA3B,WAAA2B,EAAA,MACA3B,WAAA2B,EAAA,QAEAwH,EAAA,OAAAC,EACAD,EAAA,aAAAxH,EAAA,aACAwH,EAAA,YAAAnJ,WAAA2B,EAAA,aACAwH,EAAA,YAAAnJ,WAAA2B,EAAA,eASAzJ,EAAAmR,WAAA,SAAAjK,EAAAmC,GACA,IAAAI,EAAA1J,EAAA,QAAAuJ,mBAA0CtJ,EAAAoR,aAAAlK,EAAAmC,GAC1C,GAAAI,EAAA,CAGA,IAAA4H,EAAoChI,IAAAtE,OAAA,GACpCsM,EAAA,aAAAvJ,WAAA2B,EAAA,cACA4H,EAAA,aAAAvJ,WAAA2B,EAAA,cACA4H,EAAA,cAAAvJ,WAAA2B,EAAA,eACA4H,EAAA,cAAAvJ,WAAA2B,EAAA,iBASAzJ,EAAAsR,uBAAA,SAAApK,EAAAmC,GAEA,IAAAkI,EAAAxR,EAAA,QAAAuJ,qBAAAxI,EACAd,EAAAwR,2BAAAtK,EAAAmC,GACAkI,GAEAlI,IAAAtE,OAAA,GACAkD,KAAAsJ,IAUAvR,EAAAyR,uBAAA,SAAAvK,EAAAmC,GAEA,IAAAkI,EAAAxR,EAAA,QAAAuJ,qBAAAxI,EACAd,EAAA0R,2BAAAxK,EAAAmC,GACAkI,IAEAlI,IAAAtE,OAAA,GACA,GAAAwM,IAUAvR,EAAA2R,YAAA,SAAAzK,EAAAmC,GACAtJ,EAAA,QAAA0P,UAAAzP,EAAA4R,cAAA1K,EAAAmC,IASArJ,EAAA6R,YAAA,SAAA3K,EAAAmC,GACA,IAEAuC,EADAvC,IAAAtE,OAAA,GACA6G,MACAzE,EAAApH,EAAA,QAAAqH,kBAAAF,GAAA,GACA4K,EAAAC,KAAAC,MAAA7K,GACAyE,EAAA3D,KAAAgK,MAAAH,GAAA,EAAAA,IASA9R,EAAA0P,cAAA3P,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAsO,YAAA9P,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAA4H,YACAlB,MAAA7P,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAA4H,cASA9Q,EAAA+P,uBAAAhQ,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACA6Q,KAAApS,EAAAwP,YACA6C,WAAArS,EAAA0Q,oBASA1Q,EAAAiQ,gBAAAlQ,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACA+Q,aAAAtS,EAAA+Q,oBACAwB,IAAAvS,EAAAmR,aASAnR,EAAAgR,yBAAAjR,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAiR,aAAAzS,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAA4H,YACA2B,YAAA1S,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAC,aACAuJ,YAAA3S,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAC,aACAwJ,MAAA5S,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAC,aACAyJ,MAAA7S,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAC,aACA0J,KAAA9S,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAC,aACA2J,KAAA/S,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAC,eASAnJ,EAAAoR,aAAArR,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAwR,aAAAhT,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAC,aACA6J,aAAAjT,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAC,aACA8J,cAAAlT,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAC,aACA+J,cAAAnT,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAC,eASAnJ,EAAA8M,mCAAA/M,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACA4R,QAAApT,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAkK,aACAC,WAAAtT,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAkK,aACAZ,aAAAzS,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAA4H,cASA9Q,EAAAkL,0BAAAnL,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACA+R,YAAAvT,EAAA,QAAAwT,aAAAvT,EAAA0H,wBASA1H,EAAA6O,2BAAA9O,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAiS,gBAAAxT,EAAAsR,uBACAmC,gBAAAzT,EAAAyR,yBASAzR,EAAA6L,kBAAA9L,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAuQ,KAAA9R,EAAA6R,aACK9R,EAAA,QAAAmS,gBACLlS,EAAAsB,oBACAoS,MAAA1T,EAAAmL,kBASAnL,EAAA2M,mCAAA5M,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACA+R,YAAAvT,EAAA,QAAAwT,aAAAvT,EAAA0H,wBASA1H,EAAAyM,cAAA1M,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAgH,KAAAxI,EAAA,QAAAoS,yBAAAnS,EAAAkI,WACKnI,EAAA,QAAAmS,gBACLlS,EAAAsB,oBACAuG,EAAA9H,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAC,aACApB,EAAAhI,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAC,aACAe,EAAAnK,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAC,aACAgB,EAAApK,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAC,gBASAnJ,EAAA0J,oBAAA3J,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAoS,KAAA5T,EAAA,QAAAoS,yBAAAnS,EAAAuM,WACAnC,QAAArK,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAC,aACAa,QAAAjK,EAAA,QAAAoS,yBAAAnS,EAAAyI,WACA1F,MAAAhD,EAAA,QAAAoS,yBAAAnS,EAAAiJ,cASAjJ,EAAAwR,2BAAAzR,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAqS,WAAA7T,EAAA,QAAAwT,aAAAvT,EAAAiL,uBASAjL,EAAAyK,qBAAA1K,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAK,MAAA7B,EAAA,QAAAoS,yBAAAnS,EAAAiH,YACAlE,MAAAhD,EAAA,QAAAoS,yBAAAnS,EAAAiJ,cASAjJ,EAAA2K,oBAAA5K,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAK,MAAA7B,EAAA,QAAAoS,yBAAAnS,EAAAiH,YACA5D,MAAAtD,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAC,eASAnJ,EAAAuN,wBAAAxN,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAsS,WAAA9T,EAAA,QAAA+T,gBAAA9T,EAAA4M,iBACAgH,WAAA7T,EAAA,QAAA+T,gBAAA9T,EAAAiN,iBACA8G,cAAAhU,EAAA,QAAA+T,gBAAA9T,EAAAoN,oBACA4G,MAAAjU,EAAA,QAAA+T,gBAAA9T,EAAAyO,YACAwF,QAAAlU,EAAA,QAAA+T,gBAAA9T,EAAA2O,gBASA3O,EAAAsL,gCAAAvL,EAAA,QAAAmS,gBACAlS,EAAAsB,oBACA4S,MAAAnU,EAAA,QAAA+T,gBAAA9T,EAAA0L,gBASA1L,EAAAmU,sBAAApU,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACA6S,aAAApU,EAAA8P,oBACAuE,OAAArU,EAAAgQ,cACAsE,KAAAtU,EAAA2R,YACA4C,QAAAxU,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAA4H,YACA0D,YAAAzU,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAA4H,YACAtM,KAAAzE,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAA4H,YACA2D,KAAA1U,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAkK,aACAsB,YAAA3U,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAA4H,YACA6D,WAAA5U,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAkK,eASApT,EAAA4R,cAAA7R,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAgH,KAAAxI,EAAA,QAAAoS,yBAAAnS,EAAAkI,YASAlI,EAAA0R,2BAAA3R,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAqS,WAAA7T,EAAA,QAAAwT,aAAAvT,EAAAiL,uBASAjL,EAAAoQ,cAAArQ,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACA+O,MAAAvQ,EAAA,QAAAoS,yBAAAnS,EAAA+O,YACAsB,IAAAtQ,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAA4H,YACA5K,SAAAnG,EAAA,QAAAoS,yBAAAnS,EAAAkI,YASAlI,EAAA4U,mBAAA7U,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACA6S,aAAApU,EAAA8P,oBACAuE,OAAArU,EAAAgQ,cACA+D,cAAAhU,EAAA,QAAAoS,yBACAnS,EAAAoN,mBAAA,YACAyG,WAAA9T,EAAA,QAAAoS,yBACAnS,EAAA4M,gBAAA,YACAgH,WAAA7T,EAAA,QAAAoS,yBACAnS,EAAAiN,gBAAA,YACA+G,MAAAjU,EAAA,QAAAoS,yBACAnS,EAAAyO,WAAA,YACAwF,QAAAlU,EAAA,QAAAoS,yBACAnS,EAAA2O,aAAA,YACA2B,MAAAvQ,EAAA,QAAAoS,yBAAAnS,EAAA+O,YACA8F,SAAA7U,EAAAuQ,yBACAgE,QAAAxU,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAA4H,YACA0D,YAAAzU,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAA4H,YACAtM,KAAAzE,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAA4H,YACA2D,KAAA1U,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAkK,aACAsB,YAAA3U,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAA4H,YACA5K,SAAAnG,EAAA,QAAAoS,yBAAAnS,EAAAkI,UACAyM,WAAA5U,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAkK,cACKrT,EAAA,QAAAmS,gBACLlS,EAAAsB,oBACAwT,WAAA/U,EAAA,QAAAoS,yBACAnS,EAAAoL,kBAAA,YACA8I,MAAAnU,EAAA,QAAAoS,yBACAnS,EAAA0L,aAAA,eAUA1L,EAAA8K,oBAAA/K,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAK,MAAA7B,EAAA,QAAAoS,yBAAAnS,EAAAiH,YACAvD,KAAA3D,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAkK,aACApI,QAAAjL,EAAA,QAAAoS,yBAAAjJ,EAAA,EAAAkK,eASApT,EAAA2Q,qBAAA5Q,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAwT,WAAA/U,EAAA4Q,oBASA5Q,EAAAgP,eAAAjP,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAyT,UAAAhV,EAAAwJ,iBACAyL,WAAAjV,EAAAwK,kBACA0K,UAAAlV,EAAA0K,iBACAyK,UAAAnV,EAAA6K,mBASA7K,EAAAuJ,mBAAAxJ,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACA6T,KAAApV,EAAAkQ,kBAUAlQ,EAAAqV,UAAAC,sBAAA,SAAApO,EAAAmC,GAEA,IAAAkM,EAAAxV,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAiU,SAAAzV,EAAA,QAAA0V,kBAAApV,KAAAiV,sBAAAjV,MACAqV,OAAA3V,EAAA,QAAA0V,kBAAApV,KAAAiV,sBAAAjV,MACAsV,UAAA5V,EAAA,QAAA+T,gBAAAzT,KAAAuV,eAAAvV,MACAiQ,MAAAjQ,KAAAwV,iBAAAC,KAAAzV,MACAwU,SAAAxU,KAAA0V,oBAAAD,KAAAzV,QAGA2V,EAAAjW,EAAA,QAAAuJ,mBAAAiM,EAAArO,EAAAmC,EAAAhJ,MACA,OAAA2V,QAGA,GAWAhW,EAAAqV,UAAAO,eAAA,SAAA1O,EAAAmC,GACA,IAAAI,EAAA1J,EAAA,QAAAuJ,iBAAyCmE,SAAA,MACzCzN,EAAA4U,mBAAA1N,EAAAmC,GACA,GAAAI,EAAA,CAGA,IAAAwM,EAAA,IAAAC,EAAA,QACAC,EAAAjP,EAAA0B,aAAA,MACA,OAAAuN,GACAF,EAAAG,MAAAD,GAEA,IAAAjW,EAAkDmJ,EAAA,GAElDoE,EAAAhE,EAAA,SAOA,GANAgE,GACAhN,OAAA4V,EAAA,EAAA5V,CAAAgN,GAAA,EAAAvN,GAEA+V,EAAAK,YAAA7I,UACAhE,EAAA,SAEApJ,KAAAQ,eAAA,CACA,IAAAoF,EAAAwD,EAAA,MACAvD,EAAAuD,EAAA,SACA8M,EAAAvW,EAAAgG,4BACAC,EAAAC,EAAA7F,KAAAM,cAAAN,KAAAa,cACAb,KAAAc,iBACA8U,EAAAO,SAAAD,GAQA,cANA9M,EAAA,MAIAwM,EAAAjJ,cAAAvD,GAEAwM,IASAjW,EAAAqV,UAAAQ,iBAAA,SAAA3O,EAAAmC,GACA,IAAA8M,EAAAjP,EAAA0B,aAAA,MACA,UAAAuN,EAAA,CACA,IAAAlQ,EAAAjG,EAAA+O,WAAA7H,EAAAmC,GACA,GAAApD,EAAA,CACA,IAAAwQ,EACArO,EAAAlB,EAAAkB,QAIA,GAHAA,GAAA,eAAAA,IACAA,EAAAC,OAAAC,SAAAC,MAEAH,EAEAqO,EADA,IAAAjO,IAAA,IAAA2N,EAAA/N,GACAG,UAEAkO,EAAA,IAAAN,EAEA9V,KAAAa,cAAAuV,GAAAxQ,KAWAjG,EAAAqV,UAAAU,oBAAA,SAAA7O,EAAAmC,GACA,IAAA8M,EAAAjP,EAAA0B,aAAA,MACA,UAAAuN,EAAA,CAGA,IAAA3F,EAAAxQ,EAAAoJ,mBAAAlC,EAAAmC,GACA,GAAAmH,EAAA,CAGA,IAAAiG,EACArO,EAAAlB,EAAAkB,QAIA,GAHAA,GAAA,eAAAA,IACAA,EAAAC,OAAAC,SAAAC,MAEAH,EAEAqO,EADA,IAAAjO,IAAA,IAAA2N,EAAA/N,GACAG,UAEAkO,EAAA,IAAAN,EAEA9V,KAAAa,cAAAuV,GAAAjG,KAeAxQ,EAAAqV,UAAAqB,YAMA1W,EAAAqV,UAAAsB,oBAAA,SAAAzP,EAAAjH,GACA,IAAAQ,OAAAuN,EAAA,SAAAvN,CAAAT,EAAAuB,gBAAA2F,EAAA0P,cACA,YAEA,IAAAX,EAAA5V,KAAAuV,eACA1O,GAAA7G,KAAAwW,eAAA3P,EAAAjH,KACA,OAAAgW,GAGA,MAgBAjW,EAAAqV,UAAAyB,aAMA9W,EAAAqV,UAAA0B,qBAAA,SAAA7P,EAAAjH,GACA,IAAAQ,OAAAuN,EAAA,SAAAvN,CAAAT,EAAAuB,gBAAA2F,EAAA0P,cACA,SAEA,IAAAZ,EACAgB,EAAA9P,EAAA8P,UACA,eAAAA,GAAA,UAAAA,EAGA,OAFAhB,EAAA3V,KAAAiV,sBACApO,GAAA7G,KAAAwW,eAAA3P,EAAAjH,UAMG,gBAAA+W,EAAA,CACH,IAAAf,EAAA5V,KAAAuV,eACA1O,GAAA7G,KAAAwW,eAAA3P,EAAAjH,KACA,OAAAgW,GACAA,MAIG,UAAAe,EAAA,CAEH,IAAAC,EACA,IAFAjB,KAEAiB,EAAA/P,EAAAgQ,kBAAoCD,EAAGA,IAAAE,mBAAA,CACvC,IAAAC,EAAA/W,KAAA0W,qBAAAE,EAAAhX,GACAmX,GACA3W,OAAAuN,EAAA,OAAAvN,CAAAuV,EAAAoB,GAGA,OAAApB,EAEA,UAYAhW,EAAAqV,UAAAgC,SAAA,SAAAC,GACA,GAAAvX,EAAA,QAAAwX,WAAAD,GACA,OAAAjX,KAAAmX,qBAAyD,GACtD,GAAAzX,EAAA,QAAA0X,OAAAH,GACH,OAAAjX,KAAAqX,iBAAiD,GAC9C,oBAAAJ,EAAA,CACH,IAAAK,EAAA5X,EAAA,QAAAiS,MAAAsF,GACA,OAAAjX,KAAAmX,qBAAAG,KAWA3X,EAAAqV,UAAAmC,qBAAA,SAAAG,GACA,IAAAV,EACA,IAAAA,EAAAU,EAAAC,WAA0BX,EAAGA,IAAAY,YAC7B,GAAAZ,EAAAa,UAAAC,KAAAC,aAAA,CACA,IAAAxT,EAAAnE,KAAAqX,iBAAAT,GACA,GAAAzS,EACA,OAAAA,IAYAxE,EAAAqV,UAAAqC,iBAAA,SAAAxQ,GACA,IAAA+P,EACA,IAAAA,EAAA/P,EAAAgQ,kBAAkCD,EAAGA,IAAAE,mBACrC,GAAA1W,OAAAuN,EAAA,SAAAvN,CAAAT,EAAAuB,gBAAA0V,EAAAL,eACA,QAAAK,EAAAD,UACA,OAAA9N,EAAA,EAAA4H,WAAAmG,GAGA,IAAAA,EAAA/P,EAAAgQ,kBAAkCD,EAAGA,IAAAE,mBAAA,CACrC,IAAAH,EAAAC,EAAAD,UACA,GAAAvW,OAAAuN,EAAA,SAAAvN,CAAAT,EAAAuB,gBAAA0V,EAAAL,gBACA,YAAAI,GACA,UAAAA,GACA,aAAAA,GACA,OAAAA,GAAA,CACA,IAAAxS,EAAAnE,KAAAqX,iBAAAT,GACA,GAAAzS,EACA,OAAAA,KAeAxE,EAAAqV,UAAA4C,iBAAA,SAAAX,GACA,IAAAY,KACA,GAAAnY,EAAA,QAAAwX,WAAAD,GACA7W,OAAAuN,EAAA,OAAAvN,CAAAyX,EAAA7X,KAAA8X,6BAC4B,SACzB,GAAApY,EAAA,QAAA0X,OAAAH,GACH7W,OAAAuN,EAAA,OAAAvN,CAAAyX,EAAA7X,KAAA+X,yBACwB,SACrB,oBAAAd,EAAA,CACH,IAAAK,EAAA5X,EAAA,QAAAiS,MAAAsF,GACA7W,OAAAuN,EAAA,OAAAvN,CAAAyX,EAAA7X,KAAA8X,6BAAAR,IAEA,OAAAO,GAQAlY,EAAAqV,UAAA8C,6BAAA,SAAAR,GACA,IAAAV,EAAAiB,KACA,IAAAjB,EAAAU,EAAAC,WAA0BX,EAAGA,IAAAY,YAC7BZ,EAAAa,UAAAC,KAAAC,cACAvX,OAAAuN,EAAA,OAAAvN,CAAAyX,EAAA7X,KAAA+X,yBAAAnB,IAGA,OAAAiB,GAQAlY,EAAAqV,UAAA+C,yBAAA,SAAAlR,GACA,IAAA+P,EAAAiB,KACA,IAAAjB,EAAA/P,EAAAgQ,kBAAkCD,EAAGA,IAAAE,mBACrC,GAAA1W,OAAAuN,EAAA,SAAAvN,CAAAT,EAAAuB,gBAAA0V,EAAAL,eACA,eAAAK,EAAAD,UAAA,CACA,IAAAqB,EAAAtY,EAAA,QAAAuJ,mBAA2CtJ,EAAAmU,sBAC3C8C,MACAiB,EAAAjQ,KAAAoQ,GAGA,IAAApB,EAAA/P,EAAAgQ,kBAAkCD,EAAGA,IAAAE,mBAAA,CACrC,IAAAH,EAAAC,EAAAD,WACAvW,OAAAuN,EAAA,SAAAvN,CAAAT,EAAAuB,gBAAA0V,EAAAL,eACA,YAAAI,GACA,UAAAA,GACA,OAAAA,GACAvW,OAAAuN,EAAA,OAAAvN,CAAAyX,EAAA7X,KAAA+X,yBAAAnB,IAGA,OAAAiB,GAWAlY,EAAAqV,UAAAiD,WAAA,SAAAhB,GACA,IAAAiB,KACA,GAAAxY,EAAA,QAAAwX,WAAAD,GACA7W,OAAAuN,EAAA,OAAAvN,CAAA8X,EAAAlY,KAAAmY,uBAC4B,SACzB,GAAAzY,EAAA,QAAA0X,OAAAH,GACH7W,OAAAuN,EAAA,OAAAvN,CAAA8X,EAAAlY,KAAAoY,mBACwB,SACrB,oBAAAnB,EAAA,CACH,IAAAK,EAAA5X,EAAA,QAAAiS,MAAAsF,GACA7W,OAAAuN,EAAA,OAAAvN,CAAA8X,EAAAlY,KAAAmY,uBAAAb,IAEA,OAAAY,GAQAvY,EAAAqV,UAAAmD,uBAAA,SAAAb,GACA,IAAAV,EAAAsB,KACA,IAAAtB,EAAAU,EAAAC,WAA0BX,EAAGA,IAAAY,YAC7BZ,EAAAa,UAAAC,KAAAC,cACAvX,OAAAuN,EAAA,OAAAvN,CAAA8X,EAAAlY,KAAAoY,mBAAAxB,IAGA,OAAAsB,GASAvY,EAAAqV,UAAAoD,mBAAA,SAAAvR,GACA,IAAA+P,EAAAsB,KACA,IAAAtB,EAAA/P,EAAAgQ,kBAAkCD,EAAGA,IAAAE,mBACrC,GAAA1W,OAAAuN,EAAA,SAAAvN,CAAAT,EAAAuB,gBAAA0V,EAAAL,eACA,UAAAK,EAAAD,UAAA,CACA,IAAAqB,EAAAtY,EAAA,QAAAuJ,mBAA2CtJ,EAAAiQ,gBAC3CgH,MACAsB,EAAAtQ,KAAAoQ,GAGA,IAAApB,EAAA/P,EAAAgQ,kBAAkCD,EAAGA,IAAAE,mBAAA,CACrC,IAAAH,EAAAC,EAAAD,WACAvW,OAAAuN,EAAA,SAAAvN,CAAAT,EAAAuB,gBAAA0V,EAAAL,eACA,YAAAI,GACA,UAAAA,GACA,OAAAA,GACAvW,OAAAuN,EAAA,OAAAvN,CAAA8X,EAAAlY,KAAAoY,mBAAAxB,IAGA,OAAAsB,GAYAvY,EAAAqV,UAAAqD,eAQA1Y,EAAA2Y,oBAAA,SAAAzR,EAAAtF,GACA,IAGAkK,EAHA8M,EAAAnY,OAAAoY,EAAA,QAAApY,CAAAmB,GAEAkX,GAAA,KADA,GAAAF,EAAA7T,OAAA6T,EAAA,MACAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,IAAA9M,EAAA,EAAaA,EAAA,IAAOA,EAAA,CACpB,IAAAiN,EAAAvR,SAAAsR,EAAAhN,GAAA,IAAAkN,SAAA,IACAF,EAAAhN,GAAA,GAAAiN,EAAAhU,OAAA,IAAAgU,IAEA7P,EAAA,EAAA+P,oBAAA/R,EAAA4R,EAAAI,KAAA,MAUAlZ,EAAAmZ,0BAAA,SAAAjS,EAAAoM,EAAAjK,GACA,IAKA+P,EAWA5Z,EAAAsM,EAhBAuN,EAAAhQ,IAAAtE,OAAA,GAEA2I,EAAA2L,EAAA,OACAC,EAAAD,EAAA,OAGA3L,GAAArB,EAAA,QAAAkN,IACA7L,GAAArB,EAAA,QAAAmN,IACAJ,EAAA,EACG1L,GAAArB,EAAA,QAAAU,KACHW,GAAArB,EAAA,QAAAC,KACA8M,EAAA,EAEA3Y,OAAA+N,EAAA,EAAA/N,EAAA,MAIA,IAAAsL,EAAAuH,EAAAvO,OACAhB,EAAA,GACA,GAAAgI,EAAA,GAEA,IADAhI,GAAAuP,EAAA,GACA9T,EAAA,EAAeA,EAAA4Z,IAAe5Z,EAC9BuE,GAAA,IAAAuP,EAAA9T,GAEA,IAAAsM,EAAAwN,EAAoBxN,EAAAC,EAAQD,GAAAwN,EAE5B,IADAvV,GAAA,IAAAuP,EAAAxH,GACAtM,EAAA,EAAiBA,EAAA4Z,IAAe5Z,EAChCuE,GAAA,IAAAuP,EAAAxH,EAAAtM,GAIA0J,EAAA,EAAA+P,oBAAA/R,EAAAnD,IAUA/D,EAAAyZ,eAAA,SAAAvS,EAAAwS,EAAArQ,GACAnC,EAAAyS,aAAA,OAAAD,EAAAlV,MACA,IAAqC6U,GAAenS,QACpD0I,EAAA8J,EAAA9J,MAEA,iBAAAA,GACA,OAAAA,KAAAC,aACA9P,EAAA,QAAA6Z,oBAAAP,EAAArZ,EAAA6Z,+BACA9Z,EAAA,QAAA+Z,8BAAAlK,EAAAC,aAAAxG,GAAA,gBAGA,OAAAuG,YACA7P,EAAA,QAAA6Z,oBAAAP,EAAArZ,EAAA6Z,+BACA9Z,EAAA,QAAA+Z,8BAAAlK,SAAAvG,GAAA,WAGAtJ,EAAA,QAAA6Z,oBAAAP,EAAArZ,EAAA6Z,+BACA9Z,EAAA,QAAA+Z,8BAAAlK,GAAAvG,GAAA,WAUArJ,EAAA+Z,mBAAA,SAAA7S,EAAA1C,GACA0E,EAAA,EAAA8Q,kBAAA9S,EAAA1C,IASAxE,EAAAia,oBAAA,SAAA/S,EAAA0I,GACA1G,EAAA,EAAA+P,oBAAA/R,EAAA0I,IAWA5P,EAAAka,eAAA,SAAAhT,EAAA8O,EAAA3M,GACA,IAAqCgQ,GAAenS,QACpDnH,EAAA,QAAA6Z,oBAAAP,EAAArZ,EAAAma,sBACAna,EAAAoa,uBAAApE,EAAA3M,OAAAvI,EACAT,OAUAL,EAAAqa,mBAAA,SAAAnT,EAAAoT,EAAAjR,GAKA,IAJA,IAAqCgQ,GAAenS,QACpDqT,EAAAD,EAAAC,MAAAC,EAAAF,EAAAE,OACAzV,EAAAwV,EAAAxV,OAEA+G,EAAA,EAAiBA,EAAA/G,EAAY+G,IAC7B/L,EAAA,QAAA6Z,oBAAAP,EAAArZ,EAAA6Z,+BACA7Z,EAAAya,qBAAkCjW,KAAA+V,EAAAzO,GAAA8D,MAAA4K,EAAA1O,KAAiCzC,IAWnErJ,EAAA0a,WAAA,SAAAxT,EAAAyT,EAAAtR,GACA,IAAqCgQ,GAAenS,QACpD0T,EAAAvR,IAAAtE,OAAA,GAAAmC,KACA2T,EAAA7a,EAAA8a,eAAAF,EAAAhE,cACA4D,EAAAza,EAAA,QAAAgb,aAAAJ,EAAAE,GACA9a,EAAA,QAAA6Z,oBAAAP,EACArZ,EAAAgb,kBAAAjb,EAAA,QAAA+Z,6BACAU,EAAAnR,EAAAwR,GACAA,EACA7a,EAAA8a,eAAA9a,EAAAsB,mBAAA,IACAkZ,EAAAza,EAAA,QAAAgb,aAAAJ,EAAAE,GACA9a,EAAA,QAAA6Z,oBAAAP,EAAArZ,EAAAgb,kBACAhb,EAAAib,iBAAAT,EAAAnR,EAAAwR,IAUA7a,EAAAkb,gBAAA,SAAAhU,EAAAjB,EAAAoD,GACA,IAAqCgQ,GAAenS,QACpD2F,KACA5J,EAAAgD,EAAAkV,SACAnY,EAAAiD,EAAAmV,UACAC,EAAApV,EAAAnB,eACAwW,GACA/S,KAAAtF,GAGA,GAAAD,EAAA,CACAsY,EAAA,EAAAtY,EAAA,GACAsY,EAAA,EAAAtY,EAAA,GACA,IAAAT,EAAA0D,EAAAsV,YACA7S,EAAAzC,EAAAuV,YAOA,GALA9S,GAAA2S,GAAA,IAAA3S,EAAA,IAAAA,EAAA,KAAA1F,EAAA,KACAsY,EAAA,EAAA5S,EAAA,GACA4S,EAAA,EAAAD,EAAA,IAAA3S,EAAA,GAAA1F,EAAA,KAGAT,MAAA,KAAAS,EAAA,MAAAT,EAAA,KAAAS,EAAA,OACA,IAAiCgH,GACjCnC,EAAAtF,EAAA,GACAoG,OAAA5G,EAAA,EAAAC,OACA+F,EAAA/E,EAAA,GAAAT,EAAA,GACAsG,OAAA9G,EAAA,EAAAC,QAEA6K,EAAA,QAAA7C,GAIA6C,EAAA,KAAAyO,EAEA,IAAAvY,EAAAkD,EAAAhB,WACA,IAAAlC,IACA8J,EAAA,MAAA9J,GAGA,IAAAD,EAAAmD,EAAAwV,cACA,IAAA3Y,IACA+J,EAAA,QAAA/J,GAGA,IAAA8X,EAAAvR,IAAAtE,OAAA,GAAAmC,KACA2T,EAAA7a,EAAA0b,qBAAAd,EAAAhE,cACA4D,EAAAza,EAAA,QAAAgb,aAAAlO,EAAAgO,GACA9a,EAAA,QAAA6Z,oBAAAP,EAAArZ,EAAA2b,wBACA5b,EAAA,QAAA+Z,6BAAAU,EAAAnR,EAAAwR,IAUA7a,EAAA4b,iBAAA,SAAA1U,EAAAjB,EAAAoD,GACA,IAAqCgQ,GAAenS,QACpD2F,KACAnJ,EAAAuC,EAAAR,UACA/B,IACAmJ,EAAA,MAAAnJ,EAAAmY,YAEA,IAAA9Y,EAAAkD,EAAAhB,WACAlC,GAAA,IAAAA,IACA8J,EAAA,MAAA9J,GAEA,IAAA6X,EAAAvR,IAAAtE,OAAA,GAAAmC,KACA2T,EACA7a,EAAA8b,sBAAAlB,EAAAhE,cACA4D,EAAAza,EAAA,QAAAgb,aAAAlO,EAAAgO,GACA9a,EAAA,QAAA6Z,oBAAAP,EAAArZ,EAAA+b,yBACAhc,EAAA,QAAA+Z,6BAAAU,EAAAnR,EAAAwR,IAUA7a,EAAAgc,gBAAA,SAAA9U,EAAAjB,EAAAoD,GACA,IAAqCgQ,GAAenS,QACpD2F,GACAjL,MAAAqE,EAAA4V,WACAxY,MAAA4C,EAAAgW,YAEArB,EAAAvR,IAAAtE,OAAA,GAAAmC,KACA2T,EAAA7a,EAAAkc,qBAAAtB,EAAAhE,cACA4D,EAAAza,EAAA,QAAAgb,aAAAlO,EAAAgO,GACA9a,EAAA,QAAA6Z,oBAAAP,EAAArZ,EAAAmc,wBACApc,EAAA,QAAA+Z,6BAAAU,EAAAnR,EAAAwR,IAUA7a,EAAAoc,oBAAA,SAAAlV,EAAAuG,EAAApE,GAEA,IAGAiE,EAEA+O,EALAhD,GAAiBnS,QACjB0G,EAAAH,EAAAjH,UAKAoH,GAAAnH,EAAA,QAAA8H,qBACAjB,EAAuD,EAAAgP,gBACvDD,EAAArc,EAAAuc,wBACG3O,GAAAnH,EAAA,QAAA+V,aACHlP,EAA+C,EAAAmP,YAC/CJ,EAAArc,EAAA0c,qBACG9O,GAAAnH,EAAA,QAAAkW,mBACHrP,EACA,EAA4CsP,iBAC5CP,EAAArc,EAAA6c,2BACGjP,GAAAnH,EAAA,QAAAqW,eACHxP,EACA,EAAyCyP,cACzCV,EAAArc,EAAAgd,uBAEAvc,OAAA+N,EAAA,EAAA/N,EAAA,MAEAV,EAAA,QAAA6Z,oBAAAP,EACArZ,EAAAid,4BAAAZ,EACA/O,EAAAjE,IAUArJ,EAAAkd,iBAAA,SAAAhW,EAAAiW,EAAA9T,GACA,IAAqCgQ,GAAenS,QACpDnH,EAAA,QAAA6Z,oBAAAP,EACArZ,EAAAod,yBACApd,EAAAqd,2BAAAF,GAAA9T,IAaArJ,EAAAsd,gBAAA,SAAApW,EAAA+O,EAAA5M,GACA,IAAqCgQ,GAAenS,QAGpD+O,EAAAsH,SACArW,EAAAyS,aAAA,KAAA1D,EAAAsH,SAIA,IAAA1Q,EAAAoJ,EAAAuH,gBAGAC,GAAgBlJ,QAAA,EAAAC,YAAA,EAAAhQ,KAAA,EAAAiQ,KAAA,EAChBC,YAAA,EAAAxO,SAAA,EAAAyO,WAAA,GACA8I,EAAAxH,EAAAyH,mBAAA,EACA,IAAA5T,EAAArJ,OAAAqJ,KAAA+C,OAAyC8Q,OAAAF,OAAA,SAAAG,GACzC,OAAAH,EAAAG,KAGA,GAAA9T,EAAA/E,OAAA,GACA,IACAuV,GAA0BC,MAAAzQ,EAAA0Q,OAD1Bza,EAAA,QAAAgb,aAAAlO,EAAA/C,IAEA/J,EAAA,QAAA6Z,oBAAAP,EAAArZ,EAAA6d,uBACA7d,EAAA8d,4BAAAxD,GAAAjR,GAGA,IAAAkN,EAAAN,EAAA8H,mBACA,GAAAxH,EAAA,CAGA,IAAAyH,EAAAzH,EAAAnW,KAAA6V,EAAA,GACA,GAAA+H,EAAA,CACA,IAAA/X,EAAAc,MAAAC,QAAAgX,KAAA,GAAAA,EACA3d,KAAAW,eACA6L,EAAA,MAAA5G,GAEA,IAAAxB,EAAAwB,EAAAf,UACAT,IACAoI,EAAA,KAAApI,EAAAS,YAIA,IAAA0V,EAAAvR,IAAAtE,OAAA,GAAAmC,KACA2T,EAAA7a,EAAAie,oBAAArD,EAAAhE,cACA4D,EAAAza,EAAA,QAAAgb,aAAAlO,EAAAgO,GACA9a,EAAA,QAAA6Z,oBAAAP,EAAArZ,EAAA6d,uBACA9d,EAAA,QAAA+Z,6BAAAU,EAAAnR,EAAAwR,GAGA,IAAA3a,EAAmDmJ,EAAA,GACnDoE,EAAAwI,EAAA1P,cACAkH,IACAA,EAAAhN,OAAA4V,EAAA,EAAA5V,CAAAgN,GAAA,EAAAvN,IAEAH,EAAA,QAAA6Z,oBAAAP,EAAArZ,EAAA6d,uBACA7d,EAAAuc,wBAAA9O,GAAApE,IAUArJ,EAAAke,wBAAA,SAAAhX,EAAAuG,EAAApE,GACA,IAAA1B,EAAA8F,EAAAM,qBACqCsL,GAAenS,QACpDmS,EAAA,OAAA5L,EAAAK,YACAuL,EAAA,OAAA5L,EAAA0Q,YAGA,IAAAtR,EAAAY,EAAA+P,gBACA3Q,EAAAyG,YAAA3L,EAEA,IAAAiT,EAAAvR,IAAAtE,OAAA,GAAAmC,KACA2T,EAAA7a,EAAAoe,6BAAAxD,EAAAhE,cACA4D,EAAAza,EAAA,QAAAgb,aAAAlO,EAAAgO,GACA9a,EAAA,QAAA6Z,oBAAAP,EAAArZ,EAAAqe,gCACAte,EAAA,QAAA+Z,6BAAAU,EAAAnR,EAAAwR,IAUA7a,EAAAse,cAAA,SAAApX,EAAAgG,EAAA7D,GACA,IAAAkV,EAAArR,EAAAsR,iBACAC,EAAAF,EAAAG,QACqCrF,GAAenS,QAEpDnH,EAAA,QAAA6Z,oBAAAP,EACArZ,EAAA2e,qBACA3e,EAAA4e,6BACAL,EAAAlV,GAEAtJ,EAAA,QAAA6Z,oBAAAP,EACArZ,EAAA2e,qBACA3e,EAAA6e,8BACAJ,GAAApV,IAUArJ,EAAA8e,gBAAA,SAAA5X,EAAAjB,EAAAoD,GACA,IAAqCgQ,GAAenS,QACpDnH,EAAA,QAAA6Z,oBAAAP,EAAArZ,EAAA+e,wBACA/e,EAAAgf,qBAAA/Y,EAAA4V,YAAAxS,IASArJ,EAAAif,oBAAA,SAAA/X,EAAAnE,GAEAmG,EAAA,EAAAgW,qBAAAhY,EACA8E,KAAAmT,MAAA,IAAApc,GAAA,MAUA/C,EAAAof,YAAA,SAAAlY,EAAAjB,EAAAoD,GACA,IAAqCgQ,GAAenS,QACpD2F,KACA9B,EAAA9E,EAAAR,UACAmF,EAAA3E,EAAAN,YACA2E,EAAArE,EAAArB,WACAH,EAAAwB,EAAAf,UACAoF,aAAAhI,EAAA,UACAuK,EAAA,UAAAvC,GAEA7F,IACAoI,EAAA,WAAApI,GAEAmG,IACAiC,EAAA,UAAAjC,GAEAG,IACA8B,EAAA,UAAA9B,GAEA,IAAA6P,EAAAvR,IAAAtE,OAAA,GAAAmC,KACA2T,EAAA7a,EAAAqf,gBAAAzE,EAAAhE,cACA4D,EAAAza,EAAA,QAAAgb,aAAAlO,EAAAgO,GACA9a,EAAA,QAAA6Z,oBAAAP,EAAArZ,EAAAsf,mBACAvf,EAAA,QAAA+Z,6BAAAU,EAAAnR,EAAAwR,IASA7a,EAAAuf,WAAA,SAAArY,EAAAsY,GACAtY,EAAAyS,aAAA,IAAA6F,EAAA3X,GACAX,EAAAyS,aAAA,IAAA6F,EAAAzX,GACAb,EAAAyS,aAAA,SAAA6F,EAAA7W,QACAzB,EAAAyS,aAAA,SAAA6F,EAAA3W,SASA7I,EAAAyf,cAAA1f,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACA,yBASAvB,EAAA0f,iBAAA3f,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAiU,SAAAzV,EAAA,QAAA4f,kBAAA3f,EAAAka,gBACAvE,UAAA5V,EAAA,QAAA4f,kBAAA3f,EAAAsd,mBASAtd,EAAAma,sBAAApa,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAoU,UAAA5V,EAAA,QAAA4f,kBAAA3f,EAAAsd,mBASAtd,EAAA6Z,+BAAA9Z,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACA6Q,KAAArS,EAAA,QAAA4f,kBAAA3f,EAAAyZ,gBACA7J,MAAA7P,EAAA,QAAA4f,kBAAA3f,EAAAia,qBACApK,YAAA9P,EAAA,QAAA4f,kBAAA3f,EAAA+Z,sBASA/Z,EAAA4f,4BACA5L,MAAA,QACAH,WAAA,aACAD,WAAA,aACAK,QAAA,UACA4L,WAAA,gBACAC,gBAAA,gBACAC,aAAA,gBACAC,mBAAA,iBAQAhgB,EAAA8a,eAAA/a,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACA,QAEAxB,EAAA,QAAAmS,gBAAAlS,EAAAsB,oBACA,mBASAtB,EAAAgb,kBAAAjb,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAgH,KAAAxI,EAAA,QAAA4f,kBAAAzW,EAAA,EAAA+P,sBACKlZ,EAAA,QAAAmS,gBACLlS,EAAAsB,oBACAuG,EAAA9H,EAAA,QAAA4f,kBAAAzW,EAAA,EAAAgW,sBACAnX,EAAAhI,EAAA,QAAA4f,kBAAAzW,EAAA,EAAAgW,sBACAhV,EAAAnK,EAAA,QAAA4f,kBAAAzW,EAAA,EAAAgW,sBACA/U,EAAApK,EAAA,QAAA4f,kBAAAzW,EAAA,EAAAgW,yBASAlf,EAAA0b,qBAAA3b,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACA,qCASAvB,EAAA2b,wBAAA5b,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAoS,KAAA5T,EAAA,QAAA4f,kBAAA3f,EAAA0a,YACAtQ,QAAArK,EAAA,QAAA4f,kBAAAzW,EAAA,EAAAgW,sBACAlV,QAAAjK,EAAA,QAAA4f,kBAAA3f,EAAAuf,YACAxc,MAAAhD,EAAA,QAAA4f,kBAAA3f,EAAAif,uBASAjf,EAAA8b,sBAAA/b,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACA,kBASAvB,EAAA+b,yBAAAhc,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAK,MAAA7B,EAAA,QAAA4f,kBAAA3f,EAAA2Y,qBACA5V,MAAAhD,EAAA,QAAA4f,kBAAA3f,EAAAif,uBASAjf,EAAAkc,qBAAAnc,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACA,kBASAvB,EAAAmc,wBAAApc,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAK,MAAA7B,EAAA,QAAA4f,kBAAA3f,EAAA2Y,qBACAtV,MAAAtD,EAAA,QAAA4f,kBAAAzW,EAAA,EAAAgW,wBASAlf,EAAAod,yBAAArd,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAqS,WAAA7T,EAAA,QAAA4f,kBACA3f,EAAAke,2BASAle,EAAAid,4BAAAld,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAsS,WAAA9T,EAAA,QAAA4f,kBACA3f,EAAAke,yBACAlK,MAAAjU,EAAA,QAAA4f,kBACA3f,EAAAke,yBACAjK,QAAAlU,EAAA,QAAA4f,kBAAA3f,EAAAse,eACA0B,mBAAAjgB,EAAA,QAAA4f,kBACA3f,EAAAoc,uBASApc,EAAAie,oBAAAle,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACA,iEACA,qBASAvB,EAAA6d,uBAAA9d,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACA6S,aAAArU,EAAA,QAAA4f,kBACA3f,EAAAqa,oBACAtG,cAAAhU,EAAA,QAAA4f,kBACA3f,EAAAoc,qBACAvI,WAAA9T,EAAA,QAAA4f,kBACA3f,EAAAke,yBACAtK,WAAA7T,EAAA,QAAA4f,kBACA3f,EAAAke,yBACAlK,MAAAjU,EAAA,QAAA4f,kBACA3f,EAAAke,yBACAjK,QAAAlU,EAAA,QAAA4f,kBAAA3f,EAAAse,eACAhO,MAAAvQ,EAAA,QAAA4f,kBAAA3f,EAAAof,aACA7K,QAAAxU,EAAA,QAAA4f,kBAAAzW,EAAA,EAAA+P,qBACAzE,YAAAzU,EAAA,QAAA4f,kBACAzW,EAAA,EAAA+P,qBACAzU,KAAAzE,EAAA,QAAA4f,kBAAAzW,EAAA,EAAA+P,qBACAxE,KAAA1U,EAAA,QAAA4f,kBAAAzW,EAAA,EAAA+W,sBACAvL,YAAA3U,EAAA,QAAA4f,kBACAzW,EAAA,EAAA+P,qBACA/S,SAAAnG,EAAA,QAAA4f,kBAAAzW,EAAA,EAAA+P,qBACAtE,WAAA5U,EAAA,QAAA4f,kBACAzW,EAAA,EAAA+W,wBASAjgB,EAAAoe,6BAAAre,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACA,sDASAvB,EAAAqe,gCAAAte,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACA4R,QAAApT,EAAA,QAAA4f,kBAAAzW,EAAA,EAAA+W,sBACA5M,WAAAtT,EAAA,QAAA4f,kBAAAzW,EAAA,EAAA+W,sBACAzN,aAAAzS,EAAA,QAAA4f,kBAAAzW,EAAA,EAAA+P,qBACA3F,YAAAvT,EAAA,QAAA4f,kBACA3f,EAAAmZ,6BASAnZ,EAAA2e,qBAAA5e,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAkS,gBAAA1T,EAAA,QAAA4f,kBACA3f,EAAAkd,kBACA1J,gBAAAzT,EAAA,QAAA4f,kBACA3f,EAAAkd,oBASAld,EAAA+e,wBAAAhf,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAK,MAAA7B,EAAA,QAAA4f,kBAAA3f,EAAA2Y,uBASA3Y,EAAAqf,gBAAAtf,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACA,mDASAvB,EAAAsf,mBAAAvf,EAAA,QAAAmS,gBACAlS,EAAAuB,iBACAyT,UAAAjV,EAAA,QAAA4f,kBAAA3f,EAAAkb,iBACAjG,WAAAlV,EAAA,QAAA4f,kBAAA3f,EAAA4b,kBACA1G,UAAAnV,EAAA,QAAA4f,kBAAA3f,EAAAgc,iBACA7G,UAAApV,EAAA,QAAA4f,kBAAA3f,EAAA8e,mBAYA9e,EAAAib,iBAAA,SAAArL,EAAAvG,EAAA6W,GACA,OAAAngB,EAAA,QAAAogB,gBAAAngB,EAAAsB,mBAAA,GACA,MAAA4e,IAYAlgB,EAAAoa,uBAAA,SAAAxK,EAAAvG,EACA6W,GACA,IAAAtF,EAAAvR,IAAAtE,OAAA,GAAAmC,KACA,OAAAnH,EAAA,QAAAogB,gBAAAvF,EAAAhE,aAAA,cAYA5W,EAAAuc,uBAAA,SAAA3M,EAAAvG,EACA6W,GACA,GAAAtQ,EAAA,CACA,IAAAgL,EAAAvR,IAAAtE,OAAA,GAAAmC,KACA,OAAAnH,EAAA,QAAAogB,gBAAAvF,EAAAhE,aACA5W,EAAA4f,2BAAmE,EAAApZ,cAWnExG,EAAAgf,oBAAAjf,EAAA,QAAAqgB,sBAAA,SASApgB,EAAAya,mBACA1a,EAAA,QAAAqgB,sBAAA,QASApgB,EAAA8d,2BACA/d,EAAA,QAAAqgB,sBAAA,gBASApgB,EAAA4e,6BACA7e,EAAA,QAAAqgB,sBAAA,mBASApgB,EAAA0c,oBACA3c,EAAA,QAAAqgB,sBAAA,SASApgB,EAAA6c,0BACA9c,EAAA,QAAAqgB,sBAAA,cASApgB,EAAAqd,0BACAtd,EAAA,QAAAqgB,sBAAA,cASApgB,EAAAgd,sBACAjd,EAAA,QAAAqgB,sBAAA,WASApgB,EAAA6e,6BACA9e,EAAA,QAAAqgB,sBAAA,mBAaApgB,EAAAqV,UAAAgL,cAaArgB,EAAAqV,UAAAiL,kBAAA,SAAAtK,EAAA/V,GACAA,EAAAI,KAAAkgB,aAAAtgB,GACA,IAAAugB,EAAAzgB,EAAA,QAAAogB,gBAAAngB,EAAAuB,gBAAA,UACAkf,EAAA,gCACAC,EAAA,4CACA3gB,EAAA,QAAA4gB,eAAAH,EAAAC,EAAA,WACAzgB,EAAAsB,mBAAA,IACAvB,EAAA,QAAA4gB,eAAAH,EAAAC,EAAA,YAAAC,GACA3gB,EAAA,QAAA4gB,eAAAH,EAAAE,EAAA,qBACA1gB,EAAAwB,kBAEA,IAAqC6X,GAAenS,KAAAsZ,GACpD3T,KACAmJ,EAAAjR,OAAA,EACA8H,EAAA,SAAAmJ,EACG,GAAAA,EAAAjR,SACH8H,EAAA,UAAAmJ,EAAA,IAEA,IAAA6E,EAAA7a,EAAAyf,cAAAe,EAAA5J,cACA4D,EAAAza,EAAA,QAAAgb,aAAAlO,EAAAgO,GAIA,OAHA9a,EAAA,QAAA6Z,oBAAAP,EAAArZ,EAAA0f,iBACA3f,EAAA,QAAA+Z,6BAAAU,GAAAva,GAAA4a,EACAxa,MACAmgB,GAEA/gB,EAAA,oJC5/FAmhB,EAAA,SAAA1P,EAAA9K,EAAAya,EAAA5d,EAAAJ,EAAAie,GAEAC,EAAA,EAAA3gB,KAAAC,KAAA6Q,EAAA9K,EAAAya,EAAAG,EAAA,EAAAC,MAMA5gB,KAAA6gB,KAAAje,EAMA5C,KAAA8gB,OAAA,IAAAC,MACA,OAAAve,IACAxC,KAAA8gB,OAAAte,eAOAxC,KAAAghB,mBAAA,KAMAhhB,KAAAihB,MAAAN,EAAA,EAAAC,KAMA5gB,KAAAkhB,mBAAAT,GAIArgB,OAAA+gB,EAAA,SAAA/gB,CAAAmgB,EAAAG,EAAA,GAOAH,EAAAvL,UAAAzQ,SAAA,WACA,OAAAvE,KAAA8gB,QASAP,EAAAvL,UAAAoM,kBAAA,WACAphB,KAAAihB,MAAAN,EAAA,EAAAU,MACArhB,KAAAshB,iBACAthB,KAAAuhB,WASAhB,EAAAvL,UAAAwM,iBAAA,gBACA/gB,IAAAT,KAAA+F,aACA/F,KAAA+F,WAAA3F,OAAAqhB,EAAA,UAAArhB,CAAAJ,KAAA6Q,QAAA7Q,KAAA8gB,OAAAY,QAEA1hB,KAAAihB,MAAAN,EAAA,EAAAgB,OACA3hB,KAAAshB,iBACAthB,KAAAuhB,WAWAhB,EAAAvL,UAAA4M,KAAA,WACA5hB,KAAAihB,OAAAN,EAAA,EAAAC,MAAA5gB,KAAAihB,OAAAN,EAAA,EAAAU,QACArhB,KAAAihB,MAAAN,EAAA,EAAAkB,QACA7hB,KAAAuhB,UACAvhB,KAAAghB,oBACAc,EAAA,QAAAC,WAAA/hB,KAAA8gB,OAAAkB,EAAA,EAAAX,MACArhB,KAAAohB,kBAAAphB,MACA8hB,EAAA,QAAAC,WAAA/hB,KAAA8gB,OAAAkB,EAAA,EAAAC,KACAjiB,KAAAwhB,iBAAAxhB,OAEAA,KAAAkhB,mBAAAlhB,UAAA6gB,QAQAN,EAAAvL,UAAAkN,SAAA,SAAAze,GACAzD,KAAA8gB,OAAArd,GASA8c,EAAAvL,UAAAsM,eAAA,WACAthB,KAAAghB,mBAAAmB,QAAAL,EAAA,QAAAM,eACApiB,KAAAghB,mBAAA,MAEA,IAAAqB,EAAA,gEC5GAC,EAAA,SAAA1iB,GAEA,IAAAC,EAAAD,MAEA2iB,EAAA,QAAAxiB,KAAAC,MACAwiB,aAAA3iB,EAAA2iB,aACAC,WAAA5iB,EAAA4iB,WACAC,YAAA7iB,EAAA6iB,cAOA1iB,KAAA2iB,kBACAliB,IAAAZ,EAAA2C,YAAA3C,EAAA2C,YAAA,KAMAxC,KAAA4iB,KAAA/iB,EAAAgjB,IAMA7iB,KAAAkhB,wBAAAzgB,IAAAZ,EAAA4gB,kBACA5gB,EAAA4gB,kBAAA8B,EAAA,QAAAO,yBAMA9iB,KAAA+iB,QAAAljB,EAAAmjB,WAMAhjB,KAAAijB,MAAA,EACAjjB,KAAAkjB,aAMAljB,KAAAmjB,YAAkEtjB,EAAA,WAMlEG,KAAAojB,YAAA3iB,IAAAZ,EAAAwjB,OAAAxjB,EAAAwjB,MAMArjB,KAAA8gB,OAAA,KAMA9gB,KAAAsjB,YAAA,KAMAtjB,KAAAujB,kBAAA,EAMAvjB,KAAAwjB,YAAA/iB,IAAAZ,EAAA4jB,MAAA5jB,EAAA4jB,MAAA,KAIArjB,OAAA+gB,EAAA,SAAA/gB,CAAAkiB,EAAAC,EAAA,SAQAD,EAAAoB,4BAAA,SAiBApB,EAAAtN,UAAA2O,qBAAA,SAAAC,EAAA7d,EAAA0c,EAAAO,GACA,QAAAviB,IAAAT,KAAA4iB,KAAA,CAGA,IAAAiB,EAAAzjB,OAAA0jB,EAAA,IAAA1jB,CAAAqiB,GACAsB,EAAA/jB,KAAAgkB,gBAEAD,OAAAF,IACA9d,EAAAke,EAAA,EAAAC,0BAAAH,EAAAF,EAAAD,EAAA7d,GACA6d,EAAAxjB,OAAA0jB,EAAA,UAAA1jB,CAAAwjB,EAAAC,EAAAE,IAGA,IAAAlT,EAAAzQ,OAAAqhB,EAAA,kBAAArhB,CAAAwjB,EAAA7d,EAAA,EACAuc,EAAAoB,4BAEAS,GACAC,QAAA,MACAC,QAAAC,EAAA,EACAC,QAAA,iBACAC,OAAA,YACAC,aAAA,EACAC,aAAA1kB,KAAA+iB,QAAA,QAEA/K,EAAA,QAAA2M,OAAAR,EAAAnkB,KAAA+iB,QAAAC,GAEA,IAAAxb,EAAAmE,KAAAiZ,OAAAhB,EAAA,GAAA/S,EAAA,IAAA9K,GACA2B,EAAAiE,KAAAiZ,OAAA/T,EAAA,GAAA+S,EAAA,IAAA7d,GAIA,OAHAoe,EAAAnkB,KAAAijB,KAAA,SAAAzb,EACA2c,EAAAnkB,KAAAijB,KAAA,SAAAvb,EAEA1H,KAAA6kB,eACAhU,EAAAyR,EAAAoB,2BACA,EAAAK,GAAAF,EAAAM,KAUA7B,EAAAtN,UAAA8P,UAAA,WACA,OAAA9kB,KAAA+iB,SAOAT,EAAAtN,UAAA+P,iBAAA,SAAAlU,EAAA9K,EAAAya,EAAAiC,GAEA,QAAAhiB,IAAAT,KAAA4iB,KACA,YAGA7c,EAAA/F,KAAAglB,sBAAAjf,GAEA,GAAAya,GAAAxgB,KAAAojB,aAAA3iB,IAAAT,KAAAmjB,cACA3C,EAAA,GAGA,IAAAyE,EAAAlf,EAAAya,EAEA0E,EAAA9kB,OAAAqhB,EAAA,UAAArhB,CAAAyQ,GACAsU,EAAAxZ,KAAAyZ,KAAAhlB,OAAAqhB,EAAA,SAAArhB,CAAAyQ,GAAAoU,GACAI,EAAA1Z,KAAAyZ,KAAAhlB,OAAAqhB,EAAA,UAAArhB,CAAAyQ,GAAAoU,GACAK,EAAAllB,OAAAqhB,EAAA,kBAAArhB,CAAA8kB,EAAAD,EAAA,GACAE,EAAAE,IACAE,EAAA5Z,KAAAyZ,KAAAplB,KAAAwjB,OAAApjB,OAAAqhB,EAAA,SAAArhB,CAAAyQ,GAAAoU,GACAO,EAAA7Z,KAAAyZ,KAAAplB,KAAAwjB,OAAApjB,OAAAqhB,EAAA,UAAArhB,CAAAyQ,GAAAoU,GACAQ,EAAArlB,OAAAqhB,EAAA,kBAAArhB,CAAA8kB,EAAAD,EAAA,GACAM,EAAAC,IAEA/hB,EAAAzD,KAAA8gB,OACA,GAAArd,GACAzD,KAAAujB,mBAAAvjB,KAAA0lB,eACAjiB,EAAAkiB,iBAAA5f,GACAtC,EAAAmiB,iBAAApF,GACApgB,OAAAqhB,EAAA,eAAArhB,CAAAqD,EAAAoiB,YAAAP,GACA,OAAA7hB,EAGA,IAAAuf,GACAoB,QAAA,MACAC,QAAAC,EAAA,EACAC,QAAA,SACAC,OAAA,YACAC,aAAA,GAEAzM,EAAA,QAAA2M,OAAA3B,EAAAhjB,KAAA+iB,SAEA/iB,KAAAsjB,WAAA,GAAA3X,KAAAmT,MAAA1e,OAAAqhB,EAAA,SAAArhB,CAAAqlB,GAAAR,GACAjlB,KAAAsjB,WAAA,GAAA3X,KAAAmT,MAAA1e,OAAAqhB,EAAA,UAAArhB,CAAAqlB,GAAAR,GAEA,IAAApC,EAAA7iB,KAAA6kB,eAAAY,EAAAzlB,KAAAsjB,WAAA9C,EACAiC,EAAAO,GAUA,OARAhjB,KAAA8gB,OAAA,IAAAuB,EAAAoD,EAAA1f,EAAAya,EACAqC,EAAA7iB,KAAA2iB,aAAA3iB,KAAAkhB,oBAEAlhB,KAAAujB,kBAAAvjB,KAAA0lB,cAEA5D,EAAA,QAAAgE,OAAA9lB,KAAA8gB,OAAAkB,EAAA,EAAA+D,OACA/lB,KAAAgmB,kBAAAhmB,MAEAA,KAAA8gB,QAUAwB,EAAAtN,UAAAiR,qBAAA,WACA,OAAAjmB,KAAAkhB,oBAaAoB,EAAAtN,UAAA6P,eAAA,SAAAhU,EAAAlO,EAAA6d,EAAAiC,EAAAO,GAUA,GARA5iB,OAAA8lB,EAAA,EAAA9lB,MAAAK,IAAAT,KAAA4iB,KAAA,GAEAI,EAAAhjB,KAAAijB,KAAA,aAAAR,EAAA0D,UAEA,WAAAnmB,KAAA+iB,UACAC,EAAA,WAGA,GAAAxC,EACA,OAAAxgB,KAAAmjB,aACA,KAAAiD,EAAA,EAAA7mB,UACA,IAAA8mB,EAAA,GAAA7F,EAAA,KACA,mBAAAwC,EACAA,EAAA,wBAAwCqD,EAExCrD,EAAA,sBAAAqD,EAEA,MACA,KAAAD,EAAA,EAAA5mB,UACAwjB,EAAA,kBAAAxC,EACA,MACA,KAAA4F,EAAA,EAAA9mB,gBACA,KAAA8mB,EAAA,EAAA3mB,KACAujB,EAAA,OAAAxC,EACA,MACA,QACApgB,OAAA8lB,EAAA,EAAA9lB,EAAA,KAKA4iB,EAAA,MAAArgB,EAAA,GACAqgB,EAAA,OAAArgB,EAAA,GAEA,IACA2jB,EADAC,EAAA9D,EAAA+D,qBASA,OANAF,EADAtmB,KAAAijB,MAAA,MAAAsD,EAAAnf,OAAA,MACAyJ,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEAA,EAEAmS,EAAA,KAAAsD,EAAAzN,KAAA,KAEA4N,EAAA,QAAAC,aAAiD1mB,KAAA,KAAAgjB,IASjDV,EAAAtN,UAAA2R,OAAA,WACA,OAAA3mB,KAAA4iB,MASAN,EAAAtN,UAAA4R,qBAAA,SACAnG,GACAzgB,KAAA8gB,OAAA,KACA9gB,KAAAkhB,mBAAAT,EACAzgB,KAAAuhB,WASAe,EAAAtN,UAAA6R,OAAA,SAAAhE,GACAA,GAAA7iB,KAAA4iB,OACA5iB,KAAA4iB,KAAAC,EACA7iB,KAAA8gB,OAAA,KACA9gB,KAAAuhB,YAUAe,EAAAtN,UAAA8R,aAAA,SAAA9D,GACAhL,EAAA,QAAA2M,OAAA3kB,KAAA+iB,QAAAC,GACAhjB,KAAAkjB,aACAljB,KAAA8gB,OAAA,KACA9gB,KAAAuhB,WAOAe,EAAAtN,UAAAkO,WAAA,WACA,IAAA6D,EAAA/mB,KAAA+iB,QAAA,SAAAuB,EAAA,EACAtkB,KAAAijB,KAAA+D,EAAA,QAAAC,gBAAAF,EAAA,WAEA3nB,EAAA,4FChXA,QAAAF,EAAA,QACAA,EAAA,wDASA,IAAMgoB,EAAU,SAAS3Z,GAAmB,IAAb4Z,EAAaC,UAAA1iB,OAAA,QAAAjE,IAAA2mB,UAAA,GAAAA,UAAA,MAE1CC,EAAAC,QAAcvnB,KAAKC,KAAMuN,GAKzBvN,KAAKmnB,OAASA,GAIhBI,EAAAD,QAAOE,SAASN,EAAhBG,EAAAC,mBAGeJ,4LC3BfO,EAAAvoB,EAAA,IA4BAwoB,EAAA,SAAA9nB,GAEA,IAAAC,EAAAD,MAEAojB,EAAAnjB,EAAAmjB,WAEA2E,IAAA,gBAAA3E,MAAA,YAEA4E,EAAA,EAAA7nB,KAAAC,MACAwiB,aAAA3iB,EAAA2iB,aACAqF,UAAAhoB,EAAAgoB,UACArlB,YAAA3C,EAAA2C,YACAslB,QAAAH,EACAlF,WAAA5iB,EAAA4iB,WACAsF,2BAAAloB,EAAAkoB,2BACAC,UAAAnoB,EAAAmoB,UACAC,SAAApoB,EAAAooB,SACAC,iBAAAroB,EAAAqoB,iBACArF,IAAAhjB,EAAAgjB,IACAsF,KAAAtoB,EAAAsoB,KACAC,WAAA3nB,IAAAZ,EAAAuoB,OAAAvoB,EAAAuoB,MACAC,WAAAxoB,EAAAwoB,aAOAroB,KAAAsoB,aAAA7nB,IAAAZ,EAAA0oB,OAAA1oB,EAAA0oB,OAAA,EAMAvoB,KAAA+iB,QAAAC,EAMAhjB,KAAAijB,MAAA,EAMAjjB,KAAAmjB,YAAkEtjB,EAAA,WAMlEG,KAAAojB,YAAA3iB,IAAAZ,EAAAwjB,OAAAxjB,EAAAwjB,MAMArjB,KAAAwoB,WAAApoB,OAAAqoB,EAAA,YAAAroB,GAEAJ,KAAAkjB,aACAljB,KAAA0oB,OAAA1oB,KAAA2oB,qBAIAvoB,OAAAwoB,EAAA,SAAAxoB,CAAAsnB,EAAAE,EAAA,GAiBAF,EAAA1S,UAAA2O,qBAAA,SAAAC,EAAA7d,EAAA0c,EAAAO,GACA,IAAAa,EAAAzjB,OAAAyoB,EAAA,IAAAzoB,CAAAqiB,GACAsB,EAAA/jB,KAAAgkB,gBAEAiE,EAAAjoB,KAAA8oB,cACAb,IACAA,EAAAjoB,KAAA+oB,yBAAAlF,IAGA,IAAAmF,EAAAf,EAAAgB,kCAAArF,EAAA7d,GAEA,KAAAkiB,EAAAiB,iBAAAxkB,QAAAskB,EAAA,KAIA,IAAAG,EAAAlB,EAAAtC,cAAAqD,EAAA,IACAI,EAAAnB,EAAAoB,mBAAAL,EAAAhpB,KAAAwoB,YACAc,EAAAC,EAAA,QAAAC,OAAAvB,EAAAwB,YAAAT,EAAA,IAAAhpB,KAAA0pB,SAGAnB,EAAAvoB,KAAAsoB,QACA,IAAAC,IACAe,EAAAC,EAAA,QAAAI,OAAAL,EAAAf,EAAAvoB,KAAA0pB,SACAN,EAAAhpB,OAAAqoB,EAAA,OAAAroB,CAAAgpB,EAAAD,EAAAZ,EAAAa,IAGArF,OAAAF,IACAsF,EAAAS,EAAA,EAAA1F,0BAAAH,EAAAF,EAAAD,EAAAuF,GACAC,EAAAhpB,OAAAyoB,EAAA,gBAAAzoB,CAAAgpB,EAAAvF,EAAAE,GACAH,EAAAxjB,OAAAyoB,EAAA,UAAAzoB,CAAAwjB,EAAAC,EAAAE,IAGA,IAAAI,GACAC,QAAA,MACAC,QAAAwF,EAAA,EACAtF,QAAA,iBACAC,OAAA,YACAC,aAAA,EACAC,aAAA1kB,KAAA+iB,QAAA,QAEA+G,EAAA,QAAAnF,OAAAR,EAAAnkB,KAAA+iB,QAAAC,GAEA,IAAAxb,EAAAmE,KAAAiZ,OAAAhB,EAAA,GAAAwF,EAAA,IAAAD,GACAzhB,EAAAiE,KAAAiZ,OAAAwE,EAAA,GAAAxF,EAAA,IAAAuF,GAKA,OAHAhF,EAAAnkB,KAAAijB,KAAA,SAAAzb,EACA2c,EAAAnkB,KAAAijB,KAAA,SAAAvb,EAEA1H,KAAA6kB,eAAAmE,EAAAM,EAAAF,EACA,EAAArF,GAAAF,EAAAM,KAOAuD,EAAA1S,UAAA+U,kBAAA,WACA,OAAA/pB,KAAAsoB,SAUAZ,EAAA1S,UAAA8P,UAAA,WACA,OAAA9kB,KAAA+iB,SAcA2E,EAAA1S,UAAA6P,eAAA,SAAAmE,EAAAM,EAAAF,EACA5I,EAAAiC,EAAAO,GAEA,IAAAmF,EAAAnoB,KAAAmoB,KACA,GAAAA,EAAA,CAaA,GATAnF,EAAA,MAAAsG,EAAA,GACAtG,EAAA,OAAAsG,EAAA,GAEAtG,EAAAhjB,KAAAijB,KAAA,aAAAR,EAAA0D,UAEA,WAAAnmB,KAAA+iB,UACAC,EAAA,WAGA,GAAAxC,EACA,OAAAxgB,KAAAmjB,aACA,KAAA6G,EAAA,EAAAzqB,UACA,IAAA8mB,EAAA,GAAA7F,EAAA,KACA,mBAAAwC,EACAA,EAAA,wBAAwCqD,EAExCrD,EAAA,sBAAAqD,EAEA,MACA,KAAA2D,EAAA,EAAAxqB,UACAwjB,EAAA,kBAAAxC,EACA,MACA,KAAAwJ,EAAA,EAAA1qB,gBACA,KAAA0qB,EAAA,EAAAvqB,KACAujB,EAAA,OAAAxC,EACA,MACA,QACApgB,OAAA6pB,EAAA,EAAA7pB,EAAA,MAKA,IAGA8pB,EAUArH,EAbA0D,EAAA9D,EAAA+D,qBACAF,EAAA8C,EACA,GAAAppB,KAAAijB,MAAA,MAAAsD,EAAAnf,OAAA,KAEA8iB,EAAAd,EAAA,GACA9C,EAAA,GAAA8C,EAAA,GACA9C,EAAA,GAAA4D,EACAA,EAAAd,EAAA,GACA9C,EAAA,GAAA8C,EAAA,GACA9C,EAAA,GAAA4D,EAKA,GAHAlH,EAAA,KAAAsD,EAAAzN,KAAA,KAGA,GAAAsP,EAAAzjB,OACAme,EAAAsF,EAAA,QAGAtF,EAAAsF,EADA/nB,OAAA+pB,EAAA,OAAA/pB,CAAAgqB,EAAA,EAAAC,KAAArB,GAAAb,EAAAzjB,SAGA,OAAA+iB,EAAA,QAAAf,aAAA7D,EAAAG,KAOA0E,EAAA1S,UAAAsV,kBAAA,SAAA9J,GACA,OAAAxgB,KAAAojB,aAAA3iB,IAAAT,KAAAmjB,YACoB,EADpB,GASAuE,EAAA1S,UAAA2T,iBAAA,WACA,IAAAld,EAAA,EACA8e,KACA,QAAAva,KAAAhQ,KAAA+iB,QACAwH,EAAA9e,KAAAuE,EAAA,IAAAhQ,KAAA+iB,QAAA/S,GAEA,OAAAua,EAAA1R,KAAA,MAOA6O,EAAA1S,UAAAwV,qBAAA,SAAAxB,EAAAxI,EAAAiC,GAEA,IAAAwF,EAAAjoB,KAAA8oB,cAKA,GAJAb,IACAA,EAAAjoB,KAAA+oB,yBAAAtG,MAGAwF,EAAAiB,iBAAAxkB,QAAAskB,EAAA,KAIA,GAAAxI,GAAAxgB,KAAAojB,aAAA3iB,IAAAT,KAAAmjB,cACA3C,EAAA,GAGA,IAAA2I,EAAAlB,EAAAtC,cAAAqD,EAAA,IACAI,EAAAnB,EAAAoB,mBAAAL,EAAAhpB,KAAAwoB,YACAc,EAAAC,EAAA,QAAAC,OACAvB,EAAAwB,YAAAT,EAAA,IAAAhpB,KAAA0pB,SAEAnB,EAAAvoB,KAAAsoB,QACA,IAAAC,IACAe,EAAAC,EAAA,QAAAI,OAAAL,EAAAf,EAAAvoB,KAAA0pB,SACAN,EAAAhpB,OAAAqoB,EAAA,OAAAroB,CAAAgpB,EAAAD,EAAAZ,EAAAa,IAGA,GAAA5I,IACA8I,EAAAC,EAAA,QAAA7mB,MAAA4mB,EAAA9I,EAAAxgB,KAAA0pB,UAGA,IAAAvF,GACAC,QAAA,MACAC,QAAAwF,EAAA,EACAtF,QAAA,SACAC,OAAA,YACAC,aAAA,GAIA,OAFAqF,EAAA,QAAAnF,OAAAR,EAAAnkB,KAAA+iB,SAEA/iB,KAAA6kB,eAAAmE,EAAAM,EAAAF,EACA5I,EAAAiC,EAAA0B,KAQAuD,EAAA1S,UAAA8R,aAAA,SAAA9D,GACA8G,EAAA,QAAAnF,OAAA3kB,KAAA+iB,QAAAC,GACAhjB,KAAAkjB,aACAljB,KAAA0oB,OAAA1oB,KAAA2oB,qBAOAjB,EAAA1S,UAAAkO,WAAA,WACA,IAAA6D,EAAA/mB,KAAA+iB,QAAA,SAAA8G,EAAA,EACA7pB,KAAAijB,KAAAwH,EAAA,QAAAxD,gBAAAF,EAAA,WAEA3nB,EAAA,uVCrVAsrB,EAAAxrB,EAAA,uBAKA,IAAMgoB,aAkBJ,SAAAA,EAAYrnB,gGAAS8qB,CAAA3qB,KAAAknB,GAiBnBlnB,KAAK4qB,UAA+B,IAApB/qB,EAAQgrB,QAQxB7qB,KAAK8qB,UAA+B,IAApBjrB,EAAQkrB,QAcxB/qB,KAAKgrB,WAAanrB,EAAQmrB,YAAc,KAOxChrB,KAAKirB,IAAMprB,EAAQiW,GASnB9V,KAAKkrB,qBAAuBrrB,EAAQsrB,oBAOpCnrB,KAAKorB,eAAiBvrB,EAAQwrB,cAO9BrrB,KAAKsrB,eAAiBzrB,EAAQ0rB,cAO9BvrB,KAAKwrB,MAAQ3rB,EAAQsE,KA9FnB,OAAAsnB,EAAAvE,IAAAlX,IAAA,gBAAAT,MAAA,WA8IF,OAAOvP,KAAKgrB,cA9IVhb,IAAA,gBAAAT,MAAA,SAqJUyb,GACZhrB,KAAKgrB,WAAaA,KAtJhBhb,IAAA,UAAA1J,IAAA,WA0GF,OAAOtG,KAAK4qB,UA1GV1b,IAAA,SAiHQ2b,GACV7qB,KAAK4qB,SAAWC,KAlHd7a,IAAA,UAAA1J,IAAA,WA0HF,OAAOtG,KAAK8qB,UA1HV5b,IAAA,SAiIQ6b,GACV/qB,KAAK8qB,SAAWC,KAlId/a,IAAA,KAAA1J,IAAA,WA8JF,OAAOtG,KAAKirB,OA9JVjb,IAAA,sBAAA1J,IAAA,WAsKF,OAAOtG,KAAKkrB,wBAtKVlb,IAAA,gBAAA1J,IAAA,WA8KF,OAAOtG,KAAKorB,kBA9KVpb,IAAA,gBAAA1J,IAAA,WAsLF,OAAOtG,KAAKsrB,kBAtLVtb,IAAA,OAAA1J,IAAA,WA8LF,OAAOtG,KAAKwrB,SA9LVxb,IAAA,YAAA1J,IAAA,WA4MF,OAAO,KA5ML0J,IAAA,yBAAA1J,IAAA,WAqNF,OAA8B,OAAvBtG,KAAKqrB,eAAiD,OAAvBrrB,KAAKurB,kBArNzCrE,eA0NSA,oFC9Nf,QAAAhoB,EAAA,QACAA,EAAA,wDAFA,IAAMgoB,KAKNwE,EAAApE,QAASqE,OAAOpc,MAAM,kBAAmB,IAAAqc,EAAAtE,mBAS1BJ,oFCdf,QAAAhoB,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,wDAyBA,IAAMgoB,EAAU,WAMdlnB,KAAK6rB,2BAML7rB,KAAK8rB,WAML9rB,KAAK+rB,QAAU,IAAAC,EAAA1E,SACb2E,iBAAiB,IAOnBjsB,KAAKksB,OAAS,IAAAC,EAAA7E,SACZrQ,OAAQjX,KAAK+rB,QACbnmB,MAAO5F,KAAKosB,eAAe3W,KAAKzV,MAChCqsB,sBAAsB,EACtBC,wBAAwB,KAW5BpF,EAAQlS,UAAUuX,WAAa,SAAS3W,EAAS4W,GAC/CC,EAAAnF,QAAYoF,OAAOF,GAAc,GACjCC,EAAAnF,QAAYoF,OAAOF,EAAaxsB,KAAK8rB,QAAQpnB,QAC7C,IAAMioB,EAAapF,EAAAD,QAAOsF,OAAOhX,GAAS+C,WAC1C3Y,KAAK6rB,wBAAwBc,GAAcH,EAC3CxsB,KAAK8rB,QAAQU,GAAY7W,SAASgX,GAAc/W,EAChD5V,KAAK+rB,QAAQQ,WAAW3W,IAS1BsR,EAAQlS,UAAU6X,cAAgB,SAASjX,EAAS4W,GAClDC,EAAAnF,QAAYoF,OAAOF,GAAc,GACjCC,EAAAnF,QAAYoF,OAAOF,EAAaxsB,KAAK8rB,QAAQpnB,QAC7C,IAAMioB,EAAapF,EAAAD,QAAOsF,OAAOhX,GAAS+C,kBACnC3Y,KAAK6rB,wBAAwBc,UAC7B3sB,KAAK8rB,QAAQU,GAAY7W,SAASgX,GACzC3sB,KAAK+rB,QAAQc,cAAcjX,IAQ7BsR,EAAQlS,UAAU8X,MAAQ,SAASN,GACjCC,EAAAnF,QAAYoF,OAAOF,GAAc,GACjCC,EAAAnF,QAAYoF,OAAOF,EAAaxsB,KAAK8rB,QAAQpnB,QAC7C,IAAMqoB,EAAQ/sB,KAAK8rB,QAAQU,GAC3B,IAAK,IAAMG,KAAcI,EAAMpX,SAC7B3V,KAAK6sB,cAAcE,EAAMpX,SAASgX,GAAaH,GAEjDC,EAAAnF,QAAYoF,OAAOM,EAAA1F,QAAM2F,QAAQF,EAAMpX,YAQzCuR,EAAQlS,UAAUkY,SAAW,WAC3B,OAAOltB,KAAKksB,QAQdhF,EAAQlS,UAAUmY,kBAAoB,WACpC,IAAMX,EAAaxsB,KAAK8rB,QAAQpnB,OAKhC,OAJA1E,KAAK8rB,QAAQlkB,MACXsO,cAAekX,EAAA9F,QAAa+F,gBAC5B1X,cAEK,IAAA2X,EAAAhG,QAA0BtnB,KAAMwsB,IAQzCtF,EAAQlS,UAAUuY,KAAO,SAASC,GAChCxtB,KAAKksB,OAAOuB,OAAOD,IAUrBtG,EAAQlS,UAAUmB,SAAW,SAASvQ,EAAO4mB,GAC3CC,EAAAnF,QAAYoF,OAAOF,GAAc,GACjCC,EAAAnF,QAAYoF,OAAOF,EAAaxsB,KAAK8rB,QAAQpnB,QAC7C1E,KAAK8rB,QAAQU,GAAYtW,cAA0B,OAAVtQ,EACvCwnB,EAAA9F,QAAa+F,gBAAkBD,EAAA9F,QAAaoG,eAAe9nB,IAU/DshB,EAAQlS,UAAUoX,eAAiB,SAASxW,EAAS7P,GACnD,IAAM4mB,EAAapF,EAAAD,QAAOsF,OAAOhX,GAAS+C,WAC1C8T,EAAAnF,QAAYoF,OAAOC,KAAc3sB,KAAK6rB,yBACtC,IAAMW,EAAaxsB,KAAK6rB,wBAAwBc,GAEhD,OADc3sB,KAAK8rB,QAAQU,GACdtW,cAAcN,EAAS7P,KAOtCmhB,EAAQyE,OAASgC,QAAQhC,OAAO,yBAC9B2B,EAAAhG,QAAsBqE,OAAOxnB,QAEhBypB,QAAQ,wBAAyB1G,GAChDwE,EAAApE,QAASqE,OAAOkC,SAASjmB,KAAKsf,EAAQyE,OAAOxnB,gBAG9B+iB,mFC3Lf,IAAMA,GAENA,OAAiB,SAAS4G,EAAWC,EAAaC,KAClD9G,aAAuB,SAAS3X,EAAOwe,EAAaC,KACpD9G,aAAuB,SAAS3X,EAAOwe,EAAaC,KACpD9G,eAAyB,SAAS3X,EAAOwe,EAAaC,KACtD9G,aAAuB,SAAS3X,EAAOwe,EAAaC,KACpD9G,YAAsB,SAAS3X,EAAOwe,EAAaC,KACnD9G,cAAwB,SAAS3X,EAAOwe,EAAaC,KACrD9G,cAAwB,SAAS3X,EAAOwe,EAAaC,KACrD9G,iBAA2B,SAAS3X,EAAOhC,EAAMwgB,EAAaC,KAC9D9G,8BAAwC,wBAEzBA,qFCRfhoB,GAAA,eAAA+uB,EAAA,IAAAC,MAAA,0DAAAD,EAAAE,KAAA,mBAAAF,EAAA,IACA/uB,EAAA,IACA,QAAAA,EAAA,SAGAA,EAAA,UAEAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,wDAIAkvB,IAAIzC,OAASgC,QAAQhC,OAAO,OAC1B0C,KAAK1C,OAAOxnB,KACZmqB,EAAAhH,QAAcnjB,KACdoqB,EAAAjH,QAA4BnjB,OAU9BiqB,IAAII,eAAiB,SAASC,GAAQ,IAAAC,EAAA1uB,KAMpCA,KAAK2uB,WAAa,IAAAC,EAAAtH,QAMlBtnB,KAAK6uB,cAAgB,IAAA7C,EAAA1E,QAMrBtnB,KAAKwtB,IAAM,IAAAsB,EAAAxH,SACTyH,QACE,IAAAC,EAAA1H,SACErQ,OAAQ,IAAAgY,EAAA3H,UAEV,IAAA6E,EAAA7E,SACErQ,OAAQjX,KAAK6uB,iBAGjBK,KAAM,IAAAC,EAAA7H,SACJpC,QAAS,EAAG,GACZkK,KAAM,MASVpvB,KAAKqvB,yBAAsB5uB,EAM3BT,KAAKsvB,YAAc,GAEnBb,EAAOc,OAAO,kBAAMb,EAAKY,aAAatvB,KAAKwvB,WAAW/Z,KAAKzV,QA9C7DouB,IAAII,kCAuDJJ,IAAII,eAAexZ,UAAUwa,WAAa,SAASrP,GACjD,IAAMqN,EAAMxtB,KAAKwtB,IACXiC,EAAezvB,KAAK6uB,cACpBlZ,EAAW3V,KAAK2uB,WAAWlY,aAAa0J,GAC5CuP,kBAAmB,cAErBD,EAAa3C,OAAM,GACnB2C,EAAaE,YAAYha,GACzB,IAAM9E,EAAS4e,EAAa5J,YACtB+J,EAAUpC,EAAIzS,UAChB6U,IAAYC,EAAAvI,QAAS2F,QAAQpc,IAC/B2c,EAAIsC,UAAUC,IAAIlf,EAAQ+e,IAK9BxB,IAAIzC,OAAOqE,WAAW,iBAAkB5B,IAAII,gHCxG5C,MAAA9D,EAAAxrB,EAAA,uCAKA,IAAMgoB,EAAUyG,QAAQhC,OAAO,qBAE/BD,EAAApE,QAASqE,OAAOkC,SAASjmB,KAAKsf,EAAQ/iB,MAyBtC+iB,EAAQ+I,WAAa,SAASC,GAC5B,OACEC,SAAU,IACVC,OACEd,YAAe,kBACfe,UAAa,6BAOfC,KAAM,SAACF,EAAOG,EAASC,GACrB,IAAMH,EAAY,eAAgBH,EAClCE,EAAA,UAAqBC,EAChBA,GAGLE,EAAQE,GAAG,SAAU,SAACC,GAEpB,IAAMC,EAAa,IAAIT,EAAQU,WAC/BD,EAAWE,OAIT,SAASC,GACPV,EAAMW,OAAO,WACXX,EAAA,YAAuBU,EAAIE,OAAOC,UAGxCN,EAAWO,WAAWR,EAAYM,OAAOG,MAAM,SAOvDjK,EAAQkK,UAAU,iBAChBlK,EAAQ+I,sBAGK/I,oFCzEf,QAAAhoB,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,wDAQA,IAAMgoB,EAAUyG,QAAQhC,OAAO,iBAC7BD,EAAApE,QAASqE,OAAOxnB,KAChBktB,EAAA/J,QAA0BqE,OAAOxnB,KACjCmtB,EAAAhK,QAAiBnjB,KACjBotB,EAAAjK,QAAyBqE,OAAOxnB,KAChCqtB,EAAAlK,QAAgBnjB,KAChBstB,EAAAnK,QAAiBnjB,KACjButB,EAAApK,QAAqBnjB,iBAIR+iB,oFCzBf,QAAAhoB,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,wDA8CA,IAAMgoB,EAAU,WAEdyK,EAAArK,QAAavnB,KAAKC,MAOlBA,KAAK4xB,aAGPrK,EAAAD,QAAOE,SAASN,EAAhByK,EAAArK,SAUAJ,EAAQlS,UAAU1O,IAAM,SAASknB,GAE/B,OADejG,EAAAD,QAAOsF,OAAOY,GAAK7U,aACjB3Y,KAAK4xB,SAAWpE,EAAIqE,YAAYC,KAAK,GAAK,MAY7D5K,EAAQlS,UAAU9F,IAAM,SAASse,EAAKuE,GACpC,IAAMC,EAASzK,EAAAD,QAAOsF,OAAOY,GAAK7U,WAC5BsZ,EAAWjyB,KAAKsG,IAAIknB,GACT,OAAbyE,GACFxF,EAAAnF,QAAYoF,OAAOsF,KAAUhyB,KAAK4xB,UACpB,OAAVG,EACFvE,EAAIqE,YAAYK,MAAM,EAAGH,IAEzBvE,EAAIqE,YAAYM,SAAS,UAClBnyB,KAAK4xB,SAASI,KAEJ,OAAVD,IACTvE,EAAIqE,YAAYO,SAAS,EAAGL,GAC5B/xB,KAAK4xB,SAASI,IAAU,GAG1B,IAAMK,EAAQ,IAAAC,EAAAhL,QAAoB,UAChCiL,QAASR,EACTE,SAAUA,IAIZ,OAFAjyB,KAAKwyB,cAAcH,GAEZJ,GAQT/K,EAAQlS,UAAUyd,iBAAmB,SAASjF,EAAKkF,GACjD,IAAMC,EAAc3yB,KAAKsG,IAAIknB,GAC7B,GAAImF,EAAa,CACf,IAAI5D,GAAU4D,GACVA,yBAEF5D,EAAS4D,EAAYd,YAAYe,YAGnC7D,EAAO5M,QAAQ,SAAC4P,GAEd,GADAtF,EAAAnF,QAAYuL,iBAAiBd,EAA7Be,EAAAxL,SACIyK,EAAO,CACT,IAAIgB,GAAa,EACXC,KACN,IAAK,IAAMhjB,KAAO+hB,EAAMzrB,IAAI,cAAe,CACzC,IAAMiJ,EAAQmjB,EAAW1iB,QACXvP,IAAV8O,IACFyjB,EAAkBhjB,GAAOT,EACzBwjB,GAAa,GAGjB,GAAIA,EAAY,CACd,IAAM9b,EAAS8a,EAAMkB,YACjBhc,wBACFA,EAAOwb,iBAAiBO,GACxB/b,EAAOic,YACEjc,wBAAqCA,0BAC9CA,EAAO6P,aAAakM,GACpB/b,EAAOic,kBAWnBhM,EAAQyE,OAASgC,QAAQhC,OAAO,8BACjBiC,QAAQ,yBAA0B1G,GACjDwE,EAAApE,QAASqE,OAAOkC,SAASjmB,KAAKsf,EAAQyE,OAAOxnB,gBAG9B+iB,oFCrKf,QAAAhoB,EAAA,QACAA,EAAA,SAGAA,EAAA,OAEAA,EAAA,SACAA,EAAA,uDAKA,IAAMgoB,EAAUyG,QAAQhC,OAAO,cAE/BD,EAAApE,QAASqE,OAAOkC,SAASjmB,KAAKsf,EAAQ/iB,MAkCtC+iB,EAAQiM,WAAa,SAASjD,EAASkD,GACrC,OACEjD,SAAU,IAMVG,KAAM,SAACF,EAAOG,EAASC,GAErB,IACM6C,EAAO7C,EAAA,QAEPhD,EAAM4C,EAAMkD,MAAMD,GACxB5G,EAAAnF,QAAYuL,iBAAiBrF,EAA7BsB,EAAAxH,SAEAkG,EAAI+F,UAAUhD,EAAQ,IAEtB6C,EAAuB5F,IAAMA,EAQ7B,IACMgG,EAAmBhD,EAAA,oBAGzB,GAFqBJ,EAAMkD,MAAME,GAEf,CAChB,IACMC,EAAuBjD,EAAA,wBAEvBkD,EACJtD,EAAMkD,MAAMG,GAEdE,EAAArM,QAASxB,OACPoK,EACA,SACA,WACE,GAAIwD,EAAkB,CAEpB,IAAME,EAAQliB,KAAKmiB,MACfC,GAAO,GACQ,SAAbC,IACJvG,EAAIwG,aACJxG,EAAIyG,aACAH,GACF5D,EAAQgE,sBAAsBH,GAE5BriB,KAAKmiB,MAAQD,EAAQF,IACvBI,GAAO,GAGXC,QAGAvG,EAAIwG,mBA1DlB9M,EAAQiM,wDAoERjM,EAAQkK,UAAU,UAAWlK,EAAQiM,sBAGtBjM,iVCvHfhoB,EAAA,QACAA,EAAA,UAGAA,EAAA,OAEAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,uDAEA,IAAMgoB,aAqBJ,SAAAA,EAAYiN,gGAAiBxJ,CAAA3qB,KAAAknB,GAM3BlnB,KAAKo0B,iBAAmBD,EAMxBn0B,KAAKq0B,KAAO,KAMZr0B,KAAKs0B,iBAELX,EAAArM,QAASxB,OAAO9lB,KAAKo0B,iBAAkB,MAAOp0B,KAAKu0B,sBAAuBv0B,MAzCxE,OAAAknB,EAAAsN,SAAA,mBAAA/I,EAAAvE,IAAAlX,IAAA,WAAAT,MAAA,SAiEKie,GAGP,IAAM0B,EAAO1B,EAAIsC,UACjB9vB,KAAKs0B,cAAc1sB,KACjB+rB,EAAArM,QAASxB,OAAOoJ,EAAM,oBAAqBlvB,KAAKy0B,4BAA6Bz0B,OAI/E,IAAM+F,EAAampB,EAAKvJ,gBACxB8G,EAAAnF,QAAYoN,aAAa3uB,GACzB/F,KAAK20B,6BAA6B5uB,MA5EhCiK,IAAA,aAAAT,MAAA,SAoFOie,GACTmE,EAAArK,QAAasN,QAAQ50B,KAAKs0B,eAC1Bt0B,KAAKs0B,oBAtFHtkB,IAAA,8BAAAT,MAAA,SA+FwBuhB,GAC1B,IAAM5B,EAAO4B,EAAIE,OACjBvE,EAAAnF,QAAYuL,iBAAiB3D,EAA7BC,EAAA7H,SACA,IAAMvhB,EAAampB,EAAKvJ,gBACxB8G,EAAAnF,QAAYoN,aAAa3uB,GACzB/F,KAAK20B,6BAA6B5uB,MApGhCiK,IAAA,+BAAAT,MAAA,SA4GyBxJ,GAAY,IAAA2oB,EAAA1uB,KACvCA,KAAKo0B,iBAAiBjS,QAAQ,SAAC0S,GAC7BnG,EAAKoG,4BAA4BD,EAAY9uB,QA9G7CiK,IAAA,8BAAAT,MAAA,SAwHwBslB,EAAY9uB,GAGtC,GAAK8uB,EAAWE,uBAAhB,CAIA,IAAM1J,EAAgBwJ,EAAWxJ,cAC3BE,EAAgBsJ,EAAWtJ,cAQ3BV,GAN+B,OAAlBU,QACG9qB,IAAlB8qB,GACAxlB,GAAcwlB,KACmB,OAAlBF,QACG5qB,IAAlB4qB,GACAtlB,GAAcslB,GAGlBwJ,EAAWhK,QAAUA,MA1InB7a,IAAA,wBAAAT,MAAA,SAmJkB8iB,GACpB,IAAMwC,EAAapI,EAAAnF,QAAYuL,iBAC7BR,EAAM9B,QADWyE,EAAA1N,SAEnB,GAAItnB,KAAKq0B,KAAM,CACb,IAAMtuB,EAAa/F,KAAKq0B,KAAKvE,UAAUnK,gBACvC8G,EAAAnF,QAAYoN,aAAa3uB,GACzB/F,KAAK80B,4BAA4BD,EAAY9uB,OAzJ7CiK,IAAA,MAAAd,IAAA,SAgDIse,GACFxtB,KAAKq0B,MACPr0B,KAAKi1B,WAAWj1B,KAAKq0B,MAGvBr0B,KAAKq0B,KAAO7G,EAERA,GACFxtB,KAAKk1B,SAAS1H,OAxDdtG,KAgKNwE,EAAApE,QAASqE,OAAOiC,QACd,yBAA0B1G,aAGbA,oFC/Kf,QAAAhoB,EAAA,SACAA,EAAA,MACAA,EAAA,wDAOA,IAAMgoB,EAAU,SAASiO,EAASC,GAMhCp1B,KAAKq1B,SAAWF,EAMhBn1B,KAAKs1B,UAAY,KAMjBt1B,KAAKu1B,OAASH,GAShBlO,EAAQlS,UAAUuX,WAAa,SAAS3W,GACtC5V,KAAKq1B,SAAS9I,WAAW3W,EAAS5V,KAAKu1B,SASzCrO,EAAQlS,UAAU6X,cAAgB,SAASjX,GACzC5V,KAAKq1B,SAASxI,cAAcjX,EAAS5V,KAAKu1B,SAQ5CrO,EAAQlS,UAAU8X,MAAQ,WACxB9sB,KAAKq1B,SAASvI,MAAM9sB,KAAKu1B,SAa3BrO,EAAQlS,UAAUwgB,YAAc,SAAS7f,GAChB,OAAnB3V,KAAKs1B,YACPt1B,KAAKs1B,UAAUxI,QACf6G,EAAArM,QAASmO,SAASz1B,KAAKs1B,UAAW,MAAOt1B,KAAK01B,kBAAmB11B,MACjE2zB,EAAArM,QAASmO,SAASz1B,KAAKs1B,UAAW,SAAUt1B,KAAK21B,qBAAsB31B,OAExD,OAAb2V,IACFA,EAASwM,QAAQ,SAASvM,GACxB5V,KAAKusB,WAAW3W,IACf5V,MACH2zB,EAAArM,QAASxB,OAAOnQ,EAAU,MAAO3V,KAAK01B,kBAAmB11B,MACzD2zB,EAAArM,QAASxB,OAAOnQ,EAAU,SAAU3V,KAAK21B,qBAAsB31B,OAEjEA,KAAKs1B,UAAY3f,GAUnBuR,EAAQlS,UAAUmB,SAAW,SAASvQ,GACpC5F,KAAKq1B,SAASlf,SAASvQ,EAAO5F,KAAKu1B,SAQrCrO,EAAQlS,UAAU0gB,kBAAoB,SAAS5E,GAC7C,IAAMlb,EAAqCkb,EAAIP,QAC/CvwB,KAAKusB,WAAW3W,IAQlBsR,EAAQlS,UAAU2gB,qBAAuB,SAAS7E,GAChD,IAAMlb,EAAqCkb,EAAIP,QAC/CvwB,KAAK6sB,cAAcjX,IAMrBsR,EAAQyE,OAASgC,QAAQhC,OAAO,yBAChCD,EAAApE,QAASqE,OAAOkC,SAASjmB,KAAKsf,EAAQyE,OAAOxnB,gBAG9B+iB,oFC3Hf,MAAAwD,EAAAxrB,EAAA,uCAKA,IAAMgoB,EAAUyG,QAAQhC,OAAO,mBAE/BD,EAAApE,QAASqE,OAAOkC,SAASjmB,KAAKsf,EAAQ/iB,MA6BtC+iB,EAAQiM,WAAa,WACnB,OACEhD,SAAU,IACVG,KAAM,SAAC7B,EAAQmH,EAAUC,GACvB,IAAMC,EAAUD,EAAA,gBACVrI,EAA6BiB,EAAO6E,MAAMwC,GAEhD,SAASC,EAASxF,GAChB,IAAM1f,EAAS0f,EAAQyF,KAAK,eAC5B,QAAev1B,IAAXoQ,EAAsB,CACxB,IAAMlO,EAA+B6qB,EAAIzS,UACzCyS,EAAIsC,UAAUC,IAAItB,EAAO6E,MAAMziB,IAAUlO,SAE3C,IAAMysB,EAAOmB,EAAQyF,KAAK,kBACbv1B,IAAT2uB,GACF5B,EAAIsC,UAAUmG,QAAQxH,EAAO6E,MAAMlE,IAKvCwG,EAASnF,GAAG,QAAS,IAAK,SAAS4B,GACjC0D,EAASpI,QAAQ4C,QAAQ2F,EAAEl2B,UAI7B41B,EAASnF,GAAG,SAAU,SAAC4B,GACrB,IAAM8D,EAAW9D,EAAMrB,OAAOnxB,QAAQwyB,EAAMrB,OAAOoF,eACnDL,EAASpI,QAAQ4C,QAAQ4F,SAQjCjP,EAAQkK,UAAU,eAAgBlK,EAAQiM,sBAG3BjM,oFC1Ef,QAAAhoB,EAAA,QACAA,EAAA,QACAA,EAAA,uDAKA,IAAMgoB,EAAUyG,QAAQhC,OAAO,oBAE/BD,EAAApE,QAASqE,OAAOkC,SAASjmB,KAAKsf,EAAQ/iB,MAuBtC+iB,EAAQiM,WAAa,SAASjD,GAG5B,OACEC,SAAU,IAMVG,KAAM,SAACF,EAAOG,EAASC,GACrB,IACM6C,EAAO7C,EAAA,cACPhD,EAAM4C,EAAMkD,MAAMD,GACxB5G,EAAAnF,QAAYuL,iBAAiBrF,EAA7BsB,EAAAxH,SAEA,IAAM+O,EAAY7F,EAAA,mBAClB/D,EAAAnF,QAAYoF,YAAqBjsB,IAAd41B,GAEnB,IAAIzC,SACA0C,SAEEC,EAAiB,SAAjBA,IACJ/I,EAAIwG,aACJxG,EAAIyG,aAEAviB,KAAKmiB,MAAQD,EAzBgB,MA0B/B0C,EAAoBpG,EAAQgE,sBAAsBqC,KAMtDhG,EAAQE,GAAG,gBAAiB,WAC1BjD,EAAIwG,aACJxG,EAAIyG,eAGN7D,EAAMb,OAAO8G,EAAW,SAACG,EAAQC,GAC3BD,GAAUC,IACZ7C,EAAQliB,KAAKmiB,MACb3D,EAAQwG,qBAAqBJ,GAC7BA,EAAoBpG,EAAQgE,sBAAsBqC,SAQ5DrP,EAAQkK,UAAU,gBAAiBlK,EAAQiM,sBAG5BjM,oFCrFf,QAAAhoB,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,uDAKA,IAAMgoB,EAAUyG,QAAQhC,OAAO,wBAE/BD,EAAApE,QAASqE,OAAOkC,SAASjmB,KAAKsf,EAAQ/iB,MAGtC+iB,EAAQ3X,MAAM,+BAMZ,SAACghB,EAASC,GACR,IAAMmG,EAAcnG,EAAA,6BACpB,YAAuB/vB,IAAhBk2B,EAA4BA,EAC9BjL,EAAApE,QAASsP,sBADP,4BAwDX1P,EAAQiM,WAAa,SAAS0D,GAC5B,OACE1G,SAAU,IACVC,OAAO,EACPJ,WAAY,8BACZ2G,YAAaE,IAKjB3P,EAAQkK,UAAU,oBAAqBlK,EAAQiM,YAc/CjM,EAAQ4P,yBAA2B,SAASrI,EAAQmH,EAAUC,GAAQ,IAAAnH,EAAA1uB,KAE9D+2B,EAAalB,EAAA,kBAOnB71B,KAAKg3B,OACFvI,EAAO6E,MAAMyD,GAChBE,KAAK/Q,QAAQwG,YAAuBjsB,IAAhBT,KAAKg3B,QAMzBh3B,KAAKk3B,WAELzI,EAAOc,OAAO,kBAAMnvB,OAAOqJ,KAAKilB,EAAKsI,QAAQtyB,QAAQ,SAACyyB,GACpDzI,EAAKwI,WAAa92B,OAAOqJ,KAAKilB,EAAKsI,QAAQxJ,IAAI4J,QAC/C1I,EAAKwI,WAAW5Z,KAAK+Z,EAAA/P,QAAQgQ,6BAG/B,IAAMxB,EAAUD,EAAA,qBAMhB71B,KAAKq0B,KAA8B5F,EAAO6E,MAAMwC,GAChDmB,KAAK/Q,QAAQ2M,iBAAiB7yB,KAAKq0B,KAAnCvF,EAAAxH,SAEA,IAAMiQ,EAAc1B,EAAA,yBACdh2B,EAAU4uB,EAAO6E,MAAMiE,GA2B7B,GArBAv3B,KAAKH,QAAUqnB,EAAQ4P,yBAAyBU,YAAY33B,GAM5DG,KAAKy3B,QAAUhJ,EAMfzuB,KAAK03B,qBAAuB,KAM5B13B,KAAK23B,kBAAel3B,EAGP,OADAT,KAAKq0B,KAAKvE,UACJ,CACjB,IAAM8H,EAAc53B,KAAKq0B,KAAKvE,UAAU+H,eACpBp3B,IAAhBm3B,IACF53B,KAAK23B,aAAe33B,KAAK4E,SAASgzB,IAItCjE,EAAArM,QAASxB,OAAO9lB,KAAKq0B,KAAM,cAAer0B,KAAK83B,kBAAmB93B,MAElEA,KAAK+3B,oCAELtJ,EAAA,kBAA8BzuB,MAUhCknB,EAAQ4P,yBAAyBU,YAAc,SAAS33B,GACtD,IAAIm4B,GAAS,EAIb,YAHgBv3B,IAAZZ,IACFm4B,EAA8B,GAArBn4B,EAAA,SAGTm4B,OAAQA,IAUZ9Q,EAAQ4P,yBAAyB9hB,UAAUpQ,SAAW,SAASwqB,GAC7D,OAAOpvB,KAAKg3B,OAAO5H,IAQrBlI,EAAQ4P,yBAAyB9hB,UAAUijB,WAAa,SAAS7I,GAC/DpvB,KAAKq0B,KAAKvE,UAAUmG,QAAQ7G,IAQ9BlI,EAAQ4P,yBAAyB9hB,UAAUkjB,wBAA0B,SAASjK,GAAG,IAAAkK,EAAAn4B,KACzEkvB,EAAOlvB,KAAKq0B,KAAKvE,UACjB6H,EAAe33B,KAAKg3B,OAA8B9H,EAAK2I,gBAaxCp3B,IAAjBk3B,GACF33B,KAAKy3B,QAAQW,YAAY,WACvBD,EAAKR,aAAeA,KAU1BzQ,EAAQ4P,yBAAyB9hB,UAAU8iB,kBAAoB,SAAS7J,GACtEjuB,KAAK+3B,oCACL/3B,KAAKk4B,wBAAwB,OAO/BhR,EAAQ4P,yBAAyB9hB,UAAU+iB,kCAAoC,WAC3C,OAA9B/3B,KAAK03B,sBACP/D,EAAArM,QAASlF,cAAcpiB,KAAK03B,sBAE9B,IAAMxI,EAAOlvB,KAAKq0B,KAAKvE,UACvB9vB,KAAK03B,qBAAuB/D,EAAArM,QAASxB,OAAOoJ,EAC1C,oBAAqBlvB,KAAKk4B,wBAC1Bl4B,OAIJknB,EAAQ8I,WAAW,8BACjB9I,EAAQ4P,oCAGK5P,6JC/QfmR,EAAAn5B,EAAA,IAwBAsgB,EAAA,SAAAvM,EAAAqlB,GACAC,EAAA,EAAAx4B,KAAAC,MACAA,KAAAw4B,eAAAvlB,EAAAqlB,IAGAl4B,OAAAY,EAAA,SAAAZ,CAAAof,EAAA+Y,EAAA,GAQA/Y,EAAAxK,UAAAyjB,YAAA,SAAAjrB,GACAxN,KAAAsH,gBAGAlH,OAAAs4B,EAAA,OAAAt4B,CAAAJ,KAAAsH,gBAAAkG,EAAAE,sBAFA1N,KAAAsH,gBAAAkG,EAAAE,qBAAAirB,QAIA34B,KAAAuhB,WAUA/B,EAAAxK,UAAAjQ,MAAA,WACA,IAAA6zB,EAAA,IAAApZ,EAAA,MAEA,OADAoZ,EAAA7sB,mBAAA/L,KAAAqN,OAAArN,KAAAsH,gBAAAqxB,SACAC,GAOApZ,EAAAxK,UAAA6jB,eAAA,SAAArxB,EAAAE,EAAAoxB,EAAAC,GACA,GAAAA,EAAA34B,OAAA44B,EAAA,yBAAA54B,CAAAJ,KAAA6lB,YAAAre,EAAAE,GACA,OAAAqxB,EAEA,IAEAttB,EAAAC,EAAAutB,EAFA3xB,EAAAtH,KAAAsH,gBACA2R,EAAAjZ,KAAAiZ,OAEA,IAAAxN,EAAA,EAAAC,EAAApE,EAAA5C,OAA0C+G,EAAAC,EAAQD,GAAAwN,EAAA,CAClD,IAAAigB,EAAA94B,OAAAi4B,EAAA,gBAAAj4B,CACAoH,EAAAE,EAAAJ,EAAAmE,GAAAnE,EAAAmE,EAAA,IACA,GAAAytB,EAAAH,EAAA,CAEA,IADAA,EAAAG,EACAD,EAAA,EAAiBA,EAAAhgB,IAAYggB,EAC7BH,EAAAG,GAAA3xB,EAAAmE,EAAAwtB,GAEAH,EAAAp0B,OAAAuU,GAGA,OAAA8f,GAUAvZ,EAAAxK,UAAAmkB,eAAA,WACA,OAAAC,EAAA,EAAAnmB,YACAjT,KAAAsH,gBAAA,EAAAtH,KAAAsH,gBAAA5C,OAAA1E,KAAAiZ,SAUAuG,EAAAxK,UAAAqkB,SAAA,SAAAjE,GACA,IAAAxe,EAAA5W,KAAAsH,gBACAtH,KAAAsH,gBAAA5C,OAAA1E,KAAAiZ,OAAA,EACA,GAAAmc,EAAA,GAAAxe,GAAAwe,EACA,YAEA,IAAA5nB,EAAA,IAAA8rB,EAAA,cAGA,OAFA9rB,EAAAzB,mBAAA/L,KAAAqN,OAAArN,KAAAsH,gBAAAqxB,MACAvD,EAAAp1B,KAAAiZ,QAAAmc,EAAA,GAAAp1B,KAAAiZ,SACAzL,GASAgS,EAAAxK,UAAAoH,UAAA,WACA,IAKA3Q,EAAAC,EALApE,EAAAtH,KAAAsH,gBACA+F,EAAArN,KAAAqN,OACA4L,EAAAjZ,KAAAiZ,OAEAsgB,KAEA,IAAA9tB,EAAA,EAAAC,EAAApE,EAAA5C,OAA0C+G,EAAAC,EAAQD,GAAAwN,EAAA,CAClD,IAAAzL,EAAA,IAAA8rB,EAAA,cACA9rB,EAAAzB,mBAAAsB,EAAA/F,EAAAqxB,MAAAltB,IAAAwN,IACAsgB,EAAA3xB,KAAA4F,GAEA,OAAA+rB,GAQA/Z,EAAAxK,UAAA7O,QAAA,WACA,OAAAqzB,EAAA,QAAArd,aAQAqD,EAAAxK,UAAAykB,iBAAA,SAAA5oB,GACA,IAEApF,EAAAC,EAAAlE,EAAAE,EAFAJ,EAAAtH,KAAAsH,gBACA2R,EAAAjZ,KAAAiZ,OAEA,IAAAxN,EAAA,EAAAC,EAAApE,EAAA5C,OAA0C+G,EAAAC,EAAQD,GAAAwN,EAGlD,GAFAzR,EAAAF,EAAAmE,GACA/D,EAAAJ,EAAAmE,EAAA,GACArL,OAAA44B,EAAA,WAAA54B,CAAAyQ,EAAArJ,EAAAE,GACA,SAGA,UAWA8X,EAAAxK,UAAAwjB,eAAA,SAAAvlB,EAAAqlB,GACArlB,GAGAjT,KAAA05B,UAAApB,EAAArlB,EAAA,GACAjT,KAAAsH,kBACAtH,KAAAsH,oBAEAtH,KAAAsH,gBAAA5C,OAAAi1B,EAAA,EAAA1mB,YACAjT,KAAAsH,gBAAA,EAAA2L,EAAAjT,KAAAiZ,QACAjZ,KAAAuhB,WARAvhB,KAAA+L,mBAAA6tB,EAAA,QAAA1gB,GAAA,OAiBAsG,EAAAxK,UAAAjJ,mBAAA,SAAAsB,EAAA/F,GACAtH,KAAA65B,2BAAAxsB,EAAA/F,GACAtH,KAAAuhB,WAEAniB,EAAA,uGCnMA06B,EAAA56B,EAAA,IAeA66B,EAAA,SAAAn6B,GAEA,IAEA4iB,EAFA3iB,EAAAD,MAIA4iB,OADA/hB,IAAAZ,EAAA2iB,aACA3iB,EAAA2iB,cAEAuX,EAAAC,aAGA,IAAAx3B,OAAA/B,IAAAZ,EAAA2C,YACA3C,EAAA2C,YAAA,YAEAqgB,OAAApiB,IAAAZ,EAAAgjB,IACAhjB,EAAAgjB,IAAA,uDAEAiX,EAAA,EAAA/5B,KAAAC,MACAwiB,eACAqF,UAAAhoB,EAAAgoB,UACArlB,cACAslB,YAAArnB,IAAAZ,EAAAioB,QAAAjoB,EAAAioB,OACAmS,aAAAx5B,IAAAZ,EAAAo6B,QAAAp6B,EAAAo6B,QAAA,GACAlS,2BAAAloB,EAAAkoB,2BACAG,iBAAAroB,EAAAqoB,iBACArF,MACAuF,MAAAvoB,EAAAuoB,SAKAhoB,OAAAY,EAAA,SAAAZ,CAAA25B,EAAAD,EAAA,GAUAC,EAAAC,YAAA,2FAGA56B,EAAA,8DC3DA86B,EAAAh7B,EAAA,IA6BAwN,EAAA,SAAA9M,GACA,IAAAC,EAAAD,MACA6iB,OAAAhiB,IAAAZ,EAAA4iB,WACA5iB,EAAA4iB,WAAA,YAEAwF,OAAAxnB,IAAAZ,EAAAooB,SAAApoB,EAAAooB,SACAiS,EAAA,EAAAC,WACAtpB,OAAAqpB,EAAA,EAAAE,qBAAA3X,GACAwX,QAAAp6B,EAAAo6B,QACAI,QAAAx6B,EAAAw6B,QACA/Q,SAAAzpB,EAAAypB,WAGAgR,EAAA,EAAAv6B,KAAAC,MACAwiB,aAAA3iB,EAAA2iB,aACAqF,UAAAhoB,EAAAgoB,UACArlB,YAAA3C,EAAA2C,YACAslB,OAAAjoB,EAAAioB,OACArF,aACAsF,2BAAAloB,EAAAkoB,2BACAE,WACAC,iBAAAroB,EAAAqoB,iBACAqS,eAAA16B,EAAA06B,eACAC,gBAAA36B,EAAA26B,gBACA3X,IAAAhjB,EAAAgjB,IACAsF,KAAAtoB,EAAAsoB,KACAC,WAAA3nB,IAAAZ,EAAAuoB,OAAAvoB,EAAAuoB,MACAC,WAAAxoB,EAAAwoB,cAKAjoB,OAAAY,EAAA,SAAAZ,CAAAsM,EAAA4tB,EAAA,GACAl7B,EAAA,wLC9DAq7B,EAAAv7B,EAAA,IA2BAugB,EAAA,SAAAxM,EAAAqlB,GAEAC,EAAA,EAAAx4B,KAAAC,MAMAA,KAAA06B,SAMA16B,KAAA26B,WAAA,EAMA36B,KAAA46B,mBAAA,EAEA56B,KAAAw4B,eAAAvlB,EAAAqlB,IAIAl4B,OAAAY,EAAA,SAAAZ,CAAAqf,EAAA8Y,EAAA,GAQA9Y,EAAAzK,UAAA6lB,iBAAA,SAAAhvB,GACA7L,KAAAsH,gBAGAlH,OAAAs4B,EAAA,OAAAt4B,CAAAJ,KAAAsH,gBAAAuE,EAAA6B,qBAAAirB,SAFA34B,KAAAsH,gBAAAuE,EAAA6B,qBAAAirB,QAIA34B,KAAA06B,MAAA9yB,KAAA5H,KAAAsH,gBAAA5C,QACA1E,KAAAuhB,WAUA9B,EAAAzK,UAAAjQ,MAAA,WACA,IAAAmG,EAAA,IAAAuU,EAAA,MAGA,OAFAvU,EAAAa,mBACA/L,KAAAqN,OAAArN,KAAAsH,gBAAAqxB,QAAA34B,KAAA06B,MAAA/B,SACAztB,GAOAuU,EAAAzK,UAAA6jB,eAAA,SAAArxB,EAAAE,EAAAoxB,EAAAC,GACA,OAAAA,EAAA34B,OAAA44B,EAAA,yBAAA54B,CAAAJ,KAAA6lB,YAAAre,EAAAE,GACAqxB,GAEA/4B,KAAA46B,mBAAA56B,KAAA0lB,gBACA1lB,KAAA26B,UAAAhvB,KAAAmvB,KAAAC,EAAA,EAAAC,oBACAh7B,KAAAsH,gBAAA,EAAAtH,KAAA06B,MAAA16B,KAAAiZ,OAAA,IACAjZ,KAAA46B,kBAAA56B,KAAA0lB,eAEAqV,EAAA,EAAAE,iBACAj7B,KAAAsH,gBAAA,EAAAtH,KAAA06B,MAAA16B,KAAAiZ,OACAjZ,KAAA26B,WAAA,EAAAnzB,EAAAE,EAAAoxB,EAAAC,KA0BAtZ,EAAAzK,UAAAkmB,iBAAA,SAAAl0B,EAAAm0B,EAAAC,GACA,GAAAp7B,KAAAqN,QAAAusB,EAAA,QAAAzgB,KACAnZ,KAAAqN,QAAAusB,EAAA,QAAA3tB,MACA,IAAAjM,KAAAsH,gBAAA5C,OACA,YAEA,IAAA22B,OAAA56B,IAAA06B,KACAG,OAAA76B,IAAA26B,KACA,OAAAG,EAAA,EAAAC,yBAAAx7B,KAAAsH,gBAAA,EACAtH,KAAA06B,MAAA16B,KAAAiZ,OAAAjS,EAAAq0B,EAAAC,IAUA7b,EAAAzK,UAAAmkB,eAAA,WACA,OAAAsC,EAAA,EAAAC,aACA17B,KAAAsH,gBAAA,EAAAtH,KAAA06B,MAAA16B,KAAAiZ,SAOAwG,EAAAzK,UAAA2mB,QAAA,WACA,OAAA37B,KAAA06B,OAUAjb,EAAAzK,UAAA4mB,cAAA,SAAAxG,GACA,GAAAA,EAAA,GAAAp1B,KAAA06B,MAAAh2B,QAAA0wB,EACA,YAEA,IAAAvpB,EAAA,IAAAgwB,EAAA,cAGA,OAFAhwB,EAAAE,mBAAA/L,KAAAqN,OAAArN,KAAAsH,gBAAAqxB,MACA,IAAAvD,EAAA,EAAAp1B,KAAA06B,MAAAtF,EAAA,GAAAp1B,KAAA06B,MAAAtF,KACAvpB,GASA4T,EAAAzK,UAAAuH,eAAA,WACA,IAMA9Q,EAAAC,EANApE,EAAAtH,KAAAsH,gBACAmH,EAAAzO,KAAA06B,MACArtB,EAAArN,KAAAqN,OAEArC,KACAtB,EAAA,EAEA,IAAA+B,EAAA,EAAAC,EAAA+C,EAAA/J,OAA+B+G,EAAAC,IAAQD,EAAA,CACvC,IAAAqwB,EAAArtB,EAAAhD,GACAI,EAAA,IAAAgwB,EAAA,cACAhwB,EAAAE,mBAAAsB,EAAA/F,EAAAqxB,MAAAjvB,EAAAoyB,IACA9wB,EAAApD,KAAAiE,GACAnC,EAAAoyB,EAEA,OAAA9wB,GAOAyU,EAAAzK,UAAA+mB,iBAAA,WACA,IAKAtwB,EAAAC,EALAswB,KACA10B,EAAAtH,KAAAsH,gBACAoC,EAAA,EACA+E,EAAAzO,KAAA06B,MACAzhB,EAAAjZ,KAAAiZ,OAEA,IAAAxN,EAAA,EAAAC,EAAA+C,EAAA/J,OAA+B+G,EAAAC,IAAQD,EAAA,CACvC,IAAAqwB,EAAArtB,EAAAhD,GACAwwB,EAAAV,EAAA,EAAA1vB,WACAvE,EAAAoC,EAAAoyB,EAAA7iB,EAAA,IACA7Y,OAAAs4B,EAAA,OAAAt4B,CAAA47B,EAAAC,GACAvyB,EAAAoyB,EAEA,OAAAE,GAOAvc,EAAAzK,UAAAknB,8BAAA,SAAAC,GACA,IAAAC,KACAC,KACAD,EAAA13B,OAAA+1B,EAAA,EAAA6B,gBACAt8B,KAAAsH,gBAAA,EAAAtH,KAAA06B,MAAA16B,KAAAiZ,OAAAkjB,EACAC,EAAA,EAAAC,GACA,IAAAE,EAAA,IAAA9c,EAAA,MAGA,OAFA8c,EAAAxwB,mBACA6tB,EAAA,QAAA1gB,GAAAkjB,EAAAC,GACAE,GAQA9c,EAAAzK,UAAA7O,QAAA,WACA,OAAAqzB,EAAA,QAAAld,mBAQAmD,EAAAzK,UAAAykB,iBAAA,SAAA5oB,GACA,OAAA2rB,EAAA,EAAAxxB,YACAhL,KAAAsH,gBAAA,EAAAtH,KAAA06B,MAAA16B,KAAAiZ,OAAApI,IAWA4O,EAAAzK,UAAAwjB,eAAA,SAAAvlB,EAAAqlB,GACA,GAAArlB,EAEG,CACHjT,KAAA05B,UAAApB,EAAArlB,EAAA,GACAjT,KAAAsH,kBACAtH,KAAAsH,oBAEA,IAAAmH,EAAAguB,EAAA,EAAAf,aACA17B,KAAAsH,gBAAA,EAAA2L,EAAAjT,KAAAiZ,OAAAjZ,KAAA06B,OACA16B,KAAAsH,gBAAA5C,OAAA,IAAA+J,EAAA/J,OAAA,EAAA+J,IAAA/J,OAAA,GACA1E,KAAAuhB,eATAvhB,KAAA+L,mBAAA6tB,EAAA,QAAA1gB,GAAA,KAAAlZ,KAAA06B,QAmBAjb,EAAAzK,UAAAjJ,mBAAA,SAAAsB,EAAA/F,EAAAmH,GACAzO,KAAA65B,2BAAAxsB,EAAA/F,GACAtH,KAAA06B,MAAAjsB,EACAzO,KAAAuhB,WAOA9B,EAAAzK,UAAA5J,eAAA,SAAAJ,GACA,IAGAS,EAAAC,EAHA2B,EAAArN,KAAAyN,YACAnG,KACAmH,KAEA,IAAAhD,EAAA,EAAAC,EAAAV,EAAAtG,OAAsC+G,EAAAC,IAAQD,EAAA,CAC9C,IAAAI,EAAAb,EAAAS,GACA,IAAAA,IACA4B,EAAAxB,EAAA4B,aAEArN,OAAAs4B,EAAA,OAAAt4B,CAAAkH,EAAAuE,EAAA6B,sBACAe,EAAA7G,KAAAN,EAAA5C,QAEA1E,KAAA+L,mBAAAsB,EAAA/F,EAAAmH,IAEArP,EAAA,sOCrTAs9B,EAAAx9B,EAAA,IAgCAwgB,EAAA,SAAAzM,EAAAqlB,GAEAqE,EAAA,EAAA58B,KAAAC,MAMAA,KAAA48B,UAMA58B,KAAA68B,6BAAA,EAMA78B,KAAA88B,oBAAA,KAMA98B,KAAA26B,WAAA,EAMA36B,KAAA46B,mBAAA,EAMA56B,KAAA+8B,mBAAA,EAMA/8B,KAAAg9B,yBAAA,KAEAh9B,KAAAw4B,eAAAvlB,EAAAqlB,IAIAl4B,OAAAY,EAAA,SAAAZ,CAAAsf,EAAAid,EAAA,GAQAjd,EAAA1K,UAAAioB,cAAA,SAAApwB,GAEA,IAAA4B,EACA,GAAAzO,KAAAsH,gBAIG,CACH,IAGAmE,EAAAC,EAHAhC,EAAA1J,KAAAsH,gBAAA5C,OAIA,IAHAtE,OAAAs4B,EAAA,OAAAt4B,CAAAJ,KAAAsH,gBAAAuF,EAAAa,sBAGAjC,EAAA,EAAAC,GAFA+C,EAAA5B,EAAA8uB,UAAAhD,SAEAj0B,OAAiC+G,EAAAC,IAAQD,EACzCgD,EAAAhD,IAAA/B,OATA1J,KAAAsH,gBAAAuF,EAAAa,qBAAAirB,QACAlqB,EAAA5B,EAAA8uB,UAAAhD,QACA34B,KAAA48B,OAAAh1B,OAUA5H,KAAA48B,OAAAh1B,KAAA6G,GACAzO,KAAAuhB,WAUA7B,EAAA1K,UAAAjQ,MAAA,WAKA,IAJA,IAAAm4B,EAAA,IAAAxd,EAAA,MAEAyd,EAAAn9B,KAAA48B,OAAAl4B,OACA04B,EAAA,IAAA12B,MAAAy2B,GACA1xB,EAAA,EAAiBA,EAAA0xB,IAAS1xB,EAC1B2xB,EAAA3xB,GAAAzL,KAAA48B,OAAAnxB,GAAAktB,QAKA,OAFAuE,EAAAnxB,mBACA/L,KAAAqN,OAAArN,KAAAsH,gBAAAqxB,QAAAyE,GACAF,GAOAxd,EAAA1K,UAAA6jB,eAAA,SAAArxB,EAAAE,EAAAoxB,EAAAC,GACA,OAAAA,EAAA34B,OAAA44B,EAAA,yBAAA54B,CAAAJ,KAAA6lB,YAAAre,EAAAE,GACAqxB,GAEA/4B,KAAA46B,mBAAA56B,KAAA0lB,gBACA1lB,KAAA26B,UAAAhvB,KAAAmvB,KAAAuC,EAAA,EAAAC,qBACAt9B,KAAAsH,gBAAA,EAAAtH,KAAA48B,OAAA58B,KAAAiZ,OAAA,IACAjZ,KAAA46B,kBAAA56B,KAAA0lB,eAEA2X,EAAA,EAAAE,kBACAv9B,KAAAw9B,6BAAA,EAAAx9B,KAAA48B,OAAA58B,KAAAiZ,OACAjZ,KAAA26B,WAAA,EAAAnzB,EAAAE,EAAAoxB,EAAAC,KAOArZ,EAAA1K,UAAAyoB,WAAA,SAAAj2B,EAAAE,GACA,OAAAg2B,EAAA,EAAAC,uBACA39B,KAAAw9B,6BAAA,EAAAx9B,KAAA48B,OAAA58B,KAAAiZ,OAAAzR,EAAAE,IASAgY,EAAA1K,UAAA4oB,QAAA,WACA,OAAAC,EAAA,EAAAC,aACA99B,KAAAw9B,6BAAA,EAAAx9B,KAAA48B,OAAA58B,KAAAiZ,SAkBAyG,EAAA1K,UAAAmkB,eAAA,SAAA4E,GACA,IAAAz2B,EASA,YARA7G,IAAAs9B,GACAz2B,EAAAtH,KAAAw9B,6BAAA7E,QACAqF,EAAA,EAAAC,mBACA32B,EAAA,EAAAtH,KAAA48B,OAAA58B,KAAAiZ,OAAA8kB,IAEAz2B,EAAAtH,KAAAsH,gBAGA42B,EAAA,EAAAC,cACA72B,EAAA,EAAAtH,KAAA48B,OAAA58B,KAAAiZ,SAOAyG,EAAA1K,UAAAopB,SAAA,WACA,OAAAp+B,KAAA48B,QAOAld,EAAA1K,UAAAqpB,sBAAA,WACA,GAAAr+B,KAAA68B,6BAAA78B,KAAA0lB,cAAA,CACA,IAAA4Y,EAAAC,EAAA,EAAAT,aACA99B,KAAAsH,gBAAA,EAAAtH,KAAA48B,OAAA58B,KAAAiZ,QACAjZ,KAAA88B,oBAAA0B,EAAA,EAAAV,aACA99B,KAAAw9B,6BAAA,EAAAx9B,KAAA48B,OAAA58B,KAAAiZ,OACAqlB,GACAt+B,KAAA68B,4BAAA78B,KAAA0lB,cAEA,OAAA1lB,KAAA88B,qBAUApd,EAAA1K,UAAAypB,kBAAA,WACA,IAAAC,EAAA,IAAAC,EAAA,cAGA,OAFAD,EAAA3yB,mBAAA6tB,EAAA,QAAAzgB,IACAnZ,KAAAq+B,wBAAA1F,SACA+F,GAOAhf,EAAA1K,UAAAwoB,2BAAA,WACA,GAAAx9B,KAAA+8B,mBAAA/8B,KAAA0lB,cAAA,CACA,IAAApe,EAAAtH,KAAAsH,gBACA02B,EAAA,EAAAY,wBACAt3B,EAAA,EAAAtH,KAAA48B,OAAA58B,KAAAiZ,QACAjZ,KAAAg9B,yBAAA11B,GAEAtH,KAAAg9B,yBAAA11B,EAAAqxB,QACA34B,KAAAg9B,yBAAAt4B,OACAs5B,EAAA,EAAAC,mBACAj+B,KAAAg9B,yBAAA,EAAAh9B,KAAA48B,OAAA58B,KAAAiZ,SAEAjZ,KAAA+8B,kBAAA/8B,KAAA0lB,cAEA,OAAA1lB,KAAAg9B,0BAOAtd,EAAA1K,UAAAknB,8BAAA,SAAAC,GACA,IAAAC,KACAyC,KACAzC,EAAA13B,OAAAg4B,EAAA,EAAAoC,WACA9+B,KAAAsH,gBAAA,EAAAtH,KAAA48B,OAAA58B,KAAAiZ,OACAtN,KAAAmvB,KAAAqB,GACAC,EAAA,EAAAyC,GACA,IAAAE,EAAA,IAAArf,EAAA,MAGA,OAFAqf,EAAAhzB,mBACA6tB,EAAA,QAAA1gB,GAAAkjB,EAAAyC,GACAE,GAUArf,EAAA1K,UAAAgqB,WAAA,SAAA5J,GACA,GAAAA,EAAA,GAAAp1B,KAAA48B,OAAAl4B,QAAA0wB,EACA,YAEA,IAAA1rB,EACA,OAAA0rB,EACA1rB,EAAA,MACG,CACH,IAAAu1B,EAAAj/B,KAAA48B,OAAAxH,EAAA,GACA1rB,EAAAu1B,IAAAv6B,OAAA,GAEA,IAGA+G,EAAAC,EAHA+C,EAAAzO,KAAA48B,OAAAxH,GAAAuD,QACAmD,EAAArtB,IAAA/J,OAAA,GACA,OAAAgF,EAEA,IAAA+B,EAAA,EAAAC,EAAA+C,EAAA/J,OAAiC+G,EAAAC,IAAQD,EACzCgD,EAAAhD,IAAA/B,EAGA,IAAAmD,EAAA,IAAAqyB,EAAA,cAGA,OAFAryB,EAAAd,mBACA/L,KAAAqN,OAAArN,KAAAsH,gBAAAqxB,MAAAjvB,EAAAoyB,GAAArtB,GACA5B,GASA6S,EAAA1K,UAAA0H,YAAA,WACA,IAKAjR,EAAAC,EAAAutB,EAAAkG,EALA9xB,EAAArN,KAAAqN,OACA/F,EAAAtH,KAAAsH,gBACA83B,EAAAp/B,KAAA48B,OACAyC,KACA31B,EAAA,EAEA,IAAA+B,EAAA,EAAAC,EAAA0zB,EAAA16B,OAAgC+G,EAAAC,IAAQD,EAAA,CACxC,IAAAgD,EAAA2wB,EAAA3zB,GAAAktB,QACAmD,EAAArtB,IAAA/J,OAAA,GACA,OAAAgF,EACA,IAAAuvB,EAAA,EAAAkG,EAAA1wB,EAAA/J,OAAmCu0B,EAAAkG,IAAQlG,EAC3CxqB,EAAAwqB,IAAAvvB,EAGA,IAAAmD,EAAA,IAAAqyB,EAAA,cACAryB,EAAAd,mBACAsB,EAAA/F,EAAAqxB,MAAAjvB,EAAAoyB,GAAArtB,GACA4wB,EAAAz3B,KAAAiF,GACAnD,EAAAoyB,EAEA,OAAAuD,GAQA3f,EAAA1K,UAAA7O,QAAA,WACA,OAAAqzB,EAAA,QAAA/c,eAQAiD,EAAA1K,UAAAykB,iBAAA,SAAA5oB,GACA,OAAAyuB,EAAA,EAAAxB,aACA99B,KAAAw9B,6BAAA,EAAAx9B,KAAA48B,OAAA58B,KAAAiZ,OAAApI,IAWA6O,EAAA1K,UAAAwjB,eAAA,SAAAvlB,EAAAqlB,GACA,GAAArlB,EAEG,CACHjT,KAAA05B,UAAApB,EAAArlB,EAAA,GACAjT,KAAAsH,kBACAtH,KAAAsH,oBAEA,IAAA83B,EAAAG,EAAA,EAAApB,cACAn+B,KAAAsH,gBAAA,EAAA2L,EAAAjT,KAAAiZ,OAAAjZ,KAAA48B,QACA,OAAAwC,EAAA16B,OACA1E,KAAAsH,gBAAA5C,OAAA,MACK,CACL,IAAA86B,EAAAJ,IAAA16B,OAAA,GACA1E,KAAAsH,gBAAA5C,OAAA,IAAA86B,EAAA96B,OACA,EAAA86B,IAAA96B,OAAA,GAEA1E,KAAAuhB,eAfAvhB,KAAA+L,mBAAA6tB,EAAA,QAAA1gB,GAAA,KAAAlZ,KAAA48B,SAyBAld,EAAA1K,UAAAjJ,mBAAA,SAAAsB,EAAA/F,EAAA83B,GACAp/B,KAAA65B,2BAAAxsB,EAAA/F,GACAtH,KAAA48B,OAAAwC,EACAp/B,KAAAuhB,WAOA7B,EAAA1K,UAAA/G,YAAA,SAAAoxB,GACA,IAGA5zB,EAAAC,EAAA+C,EAHApB,EAAArN,KAAAyN,YACAnG,KACA83B,KAEA,IAAA3zB,EAAA,EAAAC,EAAA2zB,EAAA36B,OAAmC+G,EAAAC,IAAQD,EAAA,CAC3C,IAAAoB,EAAAwyB,EAAA5zB,GACA,IAAAA,IACA4B,EAAAR,EAAAY,aAEA,IAEAwrB,EAAAkG,EAFAz1B,EAAApC,EAAA5C,OAGA,IAAAu0B,EAAA,EAAAkG,GAFA1wB,EAAA5B,EAAA8uB,WAEAj3B,OAAiCu0B,EAAAkG,IAAQlG,EACzCxqB,EAAAwqB,IAAAvvB,EAEAtJ,OAAAs4B,EAAA,OAAAt4B,CAAAkH,EAAAuF,EAAAa,sBACA0xB,EAAAx3B,KAAA6G,GAEAzO,KAAA+L,mBAAAsB,EAAA/F,EAAA83B,IAEAhgC,EAAA,4ICraAqgC,EAAAvgC,EAAA,GAoBAygB,EAAA,SAAA+f,GAEAC,EAAA,EAAA5/B,KAAAC,MAMAA,KAAA4/B,YAAAF,GAAA,KAEA1/B,KAAA6/B,2BAGAz/B,OAAAY,EAAA,SAAAZ,CAAAuf,EAAAggB,EAAA,GAQAhgB,EAAAmgB,iBAAA,SAAA7yB,GACA,IACAxB,EAAAC,EADAq0B,KAEA,IAAAt0B,EAAA,EAAAC,EAAAuB,EAAAvI,OAAqC+G,EAAAC,IAAQD,EAC7Cs0B,EAAAn4B,KAAAqF,EAAAxB,GAAA1G,SAEA,OAAAg7B,GAOApgB,EAAA3K,UAAAgrB,0BAAA,WACA,IAAAv0B,EAAAC,EACA,GAAA1L,KAAA4/B,YAGA,IAAAn0B,EAAA,EAAAC,EAAA1L,KAAA4/B,YAAAl7B,OAA2C+G,EAAAC,IAAQD,EACnDw0B,EAAA,QAAAxK,SACAz1B,KAAA4/B,YAAAn0B,GAAAy0B,EAAA,EAAAna,OACA/lB,KAAAuhB,QAAAvhB,OAQA2f,EAAA3K,UAAA6qB,wBAAA,WACA,IAAAp0B,EAAAC,EACA,GAAA1L,KAAA4/B,YAGA,IAAAn0B,EAAA,EAAAC,EAAA1L,KAAA4/B,YAAAl7B,OAA2C+G,EAAAC,IAAQD,EACnDw0B,EAAA,QAAAna,OACA9lB,KAAA4/B,YAAAn0B,GAAAy0B,EAAA,EAAAna,OACA/lB,KAAAuhB,QAAAvhB,OAWA2f,EAAA3K,UAAAjQ,MAAA,WACA,IAAAo7B,EAAA,IAAAxgB,EAAA,MAEA,OADAwgB,EAAAC,cAAApgC,KAAA4/B,aACAO,GAOAxgB,EAAA3K,UAAA6jB,eAAA,SAAArxB,EAAAE,EAAAoxB,EAAAC,GACA,GAAAA,EAAA34B,OAAAqoB,EAAA,yBAAAroB,CAAAJ,KAAA6lB,YAAAre,EAAAE,GACA,OAAAqxB,EAEA,IACAttB,EAAAC,EADAuB,EAAAjN,KAAA4/B,YAEA,IAAAn0B,EAAA,EAAAC,EAAAuB,EAAAvI,OAAqC+G,EAAAC,IAAQD,EAC7CstB,EAAA9rB,EAAAxB,GAAAotB,eACArxB,EAAAE,EAAAoxB,EAAAC,GAEA,OAAAA,GAOApZ,EAAA3K,UAAAyoB,WAAA,SAAAj2B,EAAAE,GACA,IACA+D,EAAAC,EADAuB,EAAAjN,KAAA4/B,YAEA,IAAAn0B,EAAA,EAAAC,EAAAuB,EAAAvI,OAAqC+G,EAAAC,IAAQD,EAC7C,GAAAwB,EAAAxB,GAAAgyB,WAAAj2B,EAAAE,GACA,SAGA,UAOAiY,EAAA3K,UAAAqrB,cAAA,SAAAxvB,GACAzQ,OAAAqoB,EAAA,oBAAAroB,CAAAyQ,GAEA,IADA,IAAA5D,EAAAjN,KAAA4/B,YACAn0B,EAAA,EAAAC,EAAAuB,EAAAvI,OAAyC+G,EAAAC,IAAQD,EACjDrL,OAAAqoB,EAAA,OAAAroB,CAAAyQ,EAAA5D,EAAAxB,GAAAoa,aAEA,OAAAhV,GASA8O,EAAA3K,UAAAiH,cAAA,WACA,OAAA0D,EAAAmgB,iBAAA9/B,KAAA4/B,cAOAjgB,EAAA3K,UAAAsrB,mBAAA,WACA,OAAAtgC,KAAA4/B,aAOAjgB,EAAA3K,UAAAurB,sBAAA,SAAApE,GAMA,GALAn8B,KAAAwgC,4BAAAxgC,KAAA0lB,gBACA+Z,EAAA,QAAA3S,MAAA9sB,KAAAygC,yBACAzgC,KAAA0gC,yCAAA,EACA1gC,KAAAwgC,2BAAAxgC,KAAA0lB,eAEAyW,EAAA,GACA,IAAAn8B,KAAA0gC,0CACAvE,EAAAn8B,KAAA0gC,yCACA,OAAA1gC,KAEA,IAAAgQ,EAAAmsB,EAAAxjB,WACA,GAAA3Y,KAAAygC,wBAAAE,eAAA3wB,GACA,OAAAhQ,KAAAygC,wBAAAzwB,GAEA,IAGAvE,EAAAC,EAHAk1B,KACA3zB,EAAAjN,KAAA4/B,YACAiB,GAAA,EAEA,IAAAp1B,EAAA,EAAAC,EAAAuB,EAAAvI,OAAuC+G,EAAAC,IAAQD,EAAA,CAC/C,IAAA2B,EAAAH,EAAAxB,GACAq1B,EAAA1zB,EAAAmzB,sBAAApE,GACAyE,EAAAh5B,KAAAk5B,GACAA,IAAA1zB,IACAyzB,GAAA,GAGA,GAAAA,EAAA,CACA,IAAAE,EAAA,IAAAphB,EAAA,MAGA,OAFAohB,EAAAC,mBAAAJ,GACA5gC,KAAAygC,wBAAAzwB,GAAA+wB,EACAA,EAGA,OADA/gC,KAAA0gC,yCAAAvE,EACAn8B,MAUA2f,EAAA3K,UAAA7O,QAAA,WACA,OAAA86B,EAAA,QAAA/yB,qBAQAyR,EAAA3K,UAAAykB,iBAAA,SAAA5oB,GACA,IACApF,EAAAC,EADAuB,EAAAjN,KAAA4/B,YAEA,IAAAn0B,EAAA,EAAAC,EAAAuB,EAAAvI,OAAqC+G,EAAAC,IAAQD,EAC7C,GAAAwB,EAAAxB,GAAAguB,iBAAA5oB,GACA,SAGA,UAOA8O,EAAA3K,UAAAiY,QAAA,WACA,WAAAjtB,KAAA4/B,YAAAl7B,QAQAib,EAAA3K,UAAAksB,OAAA,SAAAC,EAAAj/B,GAEA,IADA,IAAA+K,EAAAjN,KAAA4/B,YACAn0B,EAAA,EAAAC,EAAAuB,EAAAvI,OAAyC+G,EAAAC,IAAQD,EACjDwB,EAAAxB,GAAAy1B,OAAAC,EAAAj/B,GAEAlC,KAAAuhB,WAQA5B,EAAA3K,UAAAtS,MAAA,SAAA0+B,EAAAC,EAAAC,GACA,IAAAp/B,EAAAo/B,EACAp/B,IACAA,EAAA9B,OAAAqoB,EAAA,UAAAroB,CAAAJ,KAAA6lB,cAGA,IADA,IAAA5Y,EAAAjN,KAAA4/B,YACAn0B,EAAA,EAAAC,EAAAuB,EAAAvI,OAAyC+G,EAAAC,IAAQD,EACjDwB,EAAAxB,GAAA/I,MAAA0+B,EAAAC,EAAAn/B,GAEAlC,KAAAuhB,WASA5B,EAAA3K,UAAAorB,cAAA,SAAAnzB,GACAjN,KAAAghC,mBACArhB,EAAAmgB,iBAAA7yB,KAOA0S,EAAA3K,UAAAgsB,mBAAA,SAAA/zB,GACAjN,KAAAggC,4BACAhgC,KAAA4/B,YAAA3yB,EACAjN,KAAA6/B,0BACA7/B,KAAAuhB,WAQA5B,EAAA3K,UAAAusB,eAAA,SAAAC,GACA,IACA/1B,EAAAC,EADAuB,EAAAjN,KAAA4/B,YAEA,IAAAn0B,EAAA,EAAAC,EAAAuB,EAAAvI,OAAqC+G,EAAAC,IAAQD,EAC7CwB,EAAAxB,GAAA81B,eAAAC,GAEAxhC,KAAAuhB,WAWA5B,EAAA3K,UAAAysB,UAAA,SAAAC,EAAAC,GACA,IACAl2B,EAAAC,EADAuB,EAAAjN,KAAA4/B,YAEA,IAAAn0B,EAAA,EAAAC,EAAAuB,EAAAvI,OAAqC+G,EAAAC,IAAQD,EAC7CwB,EAAAxB,GAAAg2B,UAAAC,EAAAC,GAEA3hC,KAAAuhB,WAOA5B,EAAA3K,UAAA4sB,gBAAA,WACA5hC,KAAAggC,4BACAL,EAAA,EAAA3qB,UAAA4sB,gBAAA7hC,KAAAC,OAEAZ,EAAA,uDCrUAyiC,EAAA3iC,EAAA,IAKA4iC,GAOA/uB,YAAA,SAAAlM,GACA,IAAAC,EAAAi7B,EAAA,QAAAh7B,kBAAAF,GAAA,GACA,OAAAi7B,EAAAE,kBAAAl7B,IAQAk7B,kBAAA,SAAAhb,GACA,IAAAhgB,EAAA,6BAAAC,KAAA+f,GACA,OAAAhgB,OACAvG,IAAAuG,EAAA,YAEA,GASAi7B,aAAA,SAAAp7B,GACA,IAAAC,EAAAi7B,EAAA,QAAAh7B,kBAAAF,GAAA,GACAq7B,EAAAxwB,KAAAC,MAAA7K,GACA,OAAA8K,MAAAswB,QAAAzhC,EAAAyhC,EAAA,KAQAp5B,YAAA,SAAAjC,GACA,IAAAC,EAAAi7B,EAAA,QAAAh7B,kBAAAF,GAAA,GACA,OAAAi7B,EAAAK,kBAAAr7B,IAQAq7B,kBAAA,SAAAnb,GAEA,IAAAhgB,EAAA,4CAAAC,KAAA+f,GACA,OAAAhgB,EACAS,WAAAT,EAAA,SAEA,GASAo7B,uBAAA,SAAAv7B,GACA,IAAAC,EAAAi7B,EAAA,QAAAh7B,kBAAAF,GAAA,GACA,OAAAi7B,EAAAO,6BAAAv7B,IAQAu7B,6BAAA,SAAArb,GACA,IAAAhgB,EAAA,gBAAAC,KAAA+f,GACA,OAAAhgB,EACAG,SAAAH,EAAA,YAEA,GASAyJ,WAAA,SAAA5J,GACA,OAAAk7B,EAAA,QAAAh7B,kBAAAF,GAAA,GAAAiB,QAQA8X,qBAAA,SAAA/Y,EAAAy7B,GACAR,EAAAlpB,oBAAA/R,EAAA,YAQA8S,kBAAA,SAAA9S,EAAAmgB,GACAngB,EAAA07B,YAAAR,EAAA,QAAAS,SAAAC,mBAAAzb,KAQA0b,sBAAA,SAAA77B,EAAAq7B,GACA,IAAAS,EAAA,IAAAjxB,KAAA,IAAAwwB,GACAlb,EAAA2b,EAAAC,iBAAA,IACAf,EAAA,QAAAgB,UAAAF,EAAAG,cAAA,SACAjB,EAAA,QAAAgB,UAAAF,EAAAI,aAAA,OACAlB,EAAA,QAAAgB,UAAAF,EAAAK,cAAA,OACAnB,EAAA,QAAAgB,UAAAF,EAAAM,gBAAA,OACApB,EAAA,QAAAgB,UAAAF,EAAAO,gBAAA,OACAr8B,EAAA07B,YAAAR,EAAA,QAAAS,SAAAW,eAAAnc,KAQAnI,qBAAA,SAAAhY,EAAAu8B,GACA,IAAApc,EAAAoc,EAAAC,cACAx8B,EAAA07B,YAAAR,EAAA,QAAAS,SAAAW,eAAAnc,KAQAsc,gCAAA,SAAAz8B,EAAA08B,GACA,IAAAvc,EAAAuc,EAAA5qB,WACA9R,EAAA07B,YAAAR,EAAA,QAAAS,SAAAW,eAAAnc,KAQApO,oBAAA,SAAA/R,EAAAmgB,GACAngB,EAAA07B,YAAAR,EAAA,QAAAS,SAAAW,eAAAnc,MAEA5nB,EAAA,wEClKAokC,EAAAtkC,EAAA,IAmBAukC,EAAA,WAMAzjC,KAAA0jC,eAAA,IAAAC,cAEAC,EAAA,EAAA7jC,KAAAC,OAGAI,OAAAY,EAAA,SAAAZ,CAAAqjC,EAAAG,EAAA,GAMAH,EAAAzuB,UAAA7O,QAAA,WACA,OAAA09B,EAAA,EAAAC,KAOAL,EAAAzuB,UAAAqB,YAAA,SAAAY,EAAArX,GACA,GAAA4jC,EAAA,QAAAtsB,WAAAD,GACA,OAAAjX,KAAA+jC,wBAC4B,EAAAnkC,GACzB,GAAA4jC,EAAA,QAAApsB,OAAAH,GACH,OAAAjX,KAAAsW,oBAAoD,EAAA1W,GACjD,oBAAAqX,EAAA,CACH,IAAAK,EAAAksB,EAAA,QAAA7xB,MAAAsF,GACA,OAAAjX,KAAA+jC,wBAAAzsB,EAAA1X,GAEA,aAUA6jC,EAAAzuB,UAAA+uB,wBAAA,SACAzsB,EAAA1X,GACA,IAAA+V,EAAA3V,KAAAgkC,yBAAA1sB,EAAA1X,GACA,OAAA+V,EAAAjR,OAAA,EACAiR,EAAA,GAEA,MAUA8tB,EAAAzuB,UAAAsB,oBAAA,SAAAzP,EAAAjH,GACA,aAOA6jC,EAAAzuB,UAAAyB,aAAA,SAAAQ,EAAArX,GACA,GAAA4jC,EAAA,QAAAtsB,WAAAD,GACA,OAAAjX,KAAAgkC,yBAC4B,EAAApkC,GACzB,GAAA4jC,EAAA,QAAApsB,OAAAH,GACH,OAAAjX,KAAA0W,qBAAqD,EAAA9W,GAClD,oBAAAqX,EAAA,CACH,IAAAK,EAAAksB,EAAA,QAAA7xB,MAAAsF,GACA,OAAAjX,KAAAgkC,yBAAA1sB,EAAA1X,GAEA,UAWA6jC,EAAAzuB,UAAAgvB,yBAAA,SACA1sB,EAAA1X,GAEA,IACAgX,EADAjB,KAEA,IAAAiB,EAAAU,EAAAC,WAA0BX,EAAGA,IAAAY,YAC7BZ,EAAAa,UAAAC,KAAAC,cACAvX,OAAAs4B,EAAA,OAAAt4B,CAAAuV,EAAA3V,KAAA0W,qBAAAE,EAAAhX,IAGA,OAAA+V,GAWA8tB,EAAAzuB,UAAA0B,qBAAA,SAAA7P,EAAAjH,KAMA6jC,EAAAzuB,UAAAivB,aAAA,SAAAhtB,EAAArX,GACA,GAAA4jC,EAAA,QAAAtsB,WAAAD,GACA,OAAAjX,KAAAkkC,yBAC4B,EAAAtkC,GACzB,GAAA4jC,EAAA,QAAApsB,OAAAH,GACH,OAAAjX,KAAAmkC,qBAAqD,EAAAvkC,GAClD,oBAAAqX,EAAA,CACH,IAAAK,EAAAksB,EAAA,QAAA7xB,MAAAsF,GACA,OAAAjX,KAAAkkC,yBAAA5sB,EAAA1X,GAEA,aAWA6jC,EAAAzuB,UAAAkvB,yBAAA,SAAA5sB,EAAA1X,GACA,aAUA6jC,EAAAzuB,UAAAmvB,qBAAA,SAAAt9B,EAAAjH,GACA,aAOA6jC,EAAAzuB,UAAAqD,eAAA,SAAApB,GACA,GAAAusB,EAAA,QAAAtsB,WAAAD,GACA,OAAAjX,KAAAokC,2BAA+D,GAC5D,GAAAZ,EAAA,QAAApsB,OAAAH,GACH,OAAAjX,KAAAqkC,uBAAuD,GACpD,oBAAAptB,EAAA,CACH,IAAAK,EAAAksB,EAAA,QAAA7xB,MAAAsF,GACA,OAAAjX,KAAAokC,2BAAA9sB,GAEA,aAUAmsB,EAAAzuB,UAAAovB,2BAAA,SAAA9sB,GACA,OAAAtX,KAAAG,uBASAsjC,EAAAzuB,UAAAqvB,uBAAA,SAAAx9B,GACA,OAAA7G,KAAAG,uBAOAsjC,EAAAzuB,UAAAsvB,aAAA,SAAA1uB,EAAAhW,GACA,IAAAiH,EAAA7G,KAAAukC,iBAAA3uB,EAAAhW,GACA,OAAAI,KAAA0jC,eAAAc,kBAAA39B,IAUA48B,EAAAzuB,UAAAuvB,iBAAA,SAAA3uB,EAAAhW,GACA,aAOA6jC,EAAAzuB,UAAAgL,cAAA,SAAArK,EAAA/V,GACA,IAAAiH,EAAA7G,KAAAigB,kBAAAtK,EAAA/V,GACA,OAAAI,KAAA0jC,eAAAc,kBAAA39B,IASA48B,EAAAzuB,UAAAiL,kBAAA,SAAAtK,EAAA/V,GACA,aAOA6jC,EAAAzuB,UAAAyvB,cAAA,SAAAr3B,EAAAxN,GACA,IAAAiH,EAAA7G,KAAA0kC,kBAAAt3B,EAAAxN,GACA,OAAAI,KAAA0jC,eAAAc,kBAAA39B,IASA48B,EAAAzuB,UAAA0vB,kBAAA,SAAAt3B,EAAAxN,GACA,aAEAR,EAAA,kGC1QAulC,EAAAzlC,EAAA,KAcA0lC,EAAA,SAAAhlC,GAEA,IAAAC,EAAAD,MAMAI,KAAA6kC,MAAAhlC,EAAAuD,KAMApD,KAAA8kC,UAAAjlC,EAAA4C,SAMAzC,KAAA+kC,gBAAAllC,EAAAmlC,eAMAhlC,KAAAilC,OAAAplC,EAAA6C,MAMA1C,KAAAklC,MAAArlC,EAAA6D,KAMA1D,KAAAmlC,WAAAtlC,EAAAyE,UAMAtE,KAAAolC,cAAAvlC,EAAAwlC,aAMArlC,KAAAslC,WAAA7kC,IAAAZ,EAAAwD,KAAAxD,EAAAwD,KACA,IAAAkiC,EAAA,SAAyBhkC,MAAAqjC,EAAAY,sBAMzBxlC,KAAAylC,eAAAhlC,IAAAZ,EAAA6lC,SAAA7lC,EAAA6lC,SAAA/5B,KAAAg6B,GAAA,EAMA3lC,KAAA4lC,gBAAAnlC,IAAAZ,EAAAgmC,UAAAhmC,EAAAgmC,UAAAlB,EAAA,EAAAt+B,MAMArG,KAAA8lC,YAAAjmC,EAAAkmC,SAMA/lC,KAAAgmC,aAAAvlC,IAAAZ,EAAAyD,OAAAzD,EAAAyD,OAAA,KAMAtD,KAAAimC,cAAAxlC,IAAAZ,EAAAqmC,QAAArmC,EAAAqmC,QAAA,EAMAlmC,KAAAmmC,cAAA1lC,IAAAZ,EAAAumC,QAAAvmC,EAAAumC,QAAA,EAMApmC,KAAAqmC,gBAAAxmC,EAAAymC,eAAAzmC,EAAAymC,eAAA,KAMAtmC,KAAAumC,kBAAA1mC,EAAA2mC,iBAAA3mC,EAAA2mC,iBAAA,KAMAxmC,KAAAymC,cAAAhmC,IAAAZ,EAAA6mC,QAAA,KAAA7mC,EAAA6mC,SAWA9B,EAAAY,oBAAA,OAQAZ,EAAA5vB,UAAAjQ,MAAA,WACA,WAAA6/B,GACAxhC,KAAApD,KAAAiF,UACA4gC,UAAA7lC,KAAA2mC,eACAjB,SAAA1lC,KAAA4mC,cACAb,SAAA/lC,KAAA6mC,cACApkC,SAAAzC,KAAAob,cACA4pB,eAAAhlC,KAAA8mC,oBACApkC,MAAA1C,KAAA4E,WACAlB,KAAA1D,KAAA6E,UACAP,UAAAtE,KAAA+mC,eACA1B,aAAArlC,KAAAgnC,kBACA3jC,KAAArD,KAAAoF,UAAApF,KAAAoF,UAAAL,aAAAtE,EACA6C,OAAAtD,KAAAsF,YAAAtF,KAAAsF,YAAAP,aAAAtE,EACAylC,QAAAlmC,KAAAinC,aACAb,QAAApmC,KAAAknC,aACAZ,eAAAtmC,KAAAmnC,oBAAAnnC,KAAAmnC,oBAAApiC,aAAAtE,EACA+lC,iBAAAxmC,KAAAonC,sBAAApnC,KAAAonC,sBAAAriC,aAAAtE,KAUAmkC,EAAA5vB,UAAA6xB,YAAA,WACA,OAAA7mC,KAAA8lC,WASAlB,EAAA5vB,UAAA/P,QAAA,WACA,OAAAjF,KAAA6kC,OASAD,EAAA5vB,UAAA4xB,YAAA,WACA,OAAA5mC,KAAAylC,WASAb,EAAA5vB,UAAA2xB,aAAA,WACA,OAAA3mC,KAAA4lC,YASAhB,EAAA5vB,UAAAiyB,WAAA,WACA,OAAAjnC,KAAAimC,UASArB,EAAA5vB,UAAAkyB,WAAA,WACA,OAAAlnC,KAAAmmC,UASAvB,EAAA5vB,UAAA5P,QAAA,WACA,OAAApF,KAAAslC,OASAV,EAAA5vB,UAAA8xB,kBAAA,WACA,OAAA9mC,KAAA+kC,iBASAH,EAAA5vB,UAAAoG,YAAA,WACA,OAAApb,KAAA8kC,WASAF,EAAA5vB,UAAApQ,SAAA,WACA,OAAA5E,KAAAilC,QASAL,EAAA5vB,UAAA1P,UAAA,WACA,OAAAtF,KAAAgmC,SASApB,EAAA5vB,UAAAnQ,QAAA,WACA,OAAA7E,KAAAklC,OASAN,EAAA5vB,UAAA+xB,aAAA,WACA,OAAA/mC,KAAAmlC,YASAP,EAAA5vB,UAAAgyB,gBAAA,WACA,OAAAhnC,KAAAolC,eASAR,EAAA5vB,UAAAmyB,kBAAA,WACA,OAAAnnC,KAAAqmC,iBASAzB,EAAA5vB,UAAAoyB,oBAAA,WACA,OAAApnC,KAAAumC,mBASA3B,EAAA5vB,UAAAqyB,WAAA,WACA,OAAArnC,KAAAymC,UAUA7B,EAAA5vB,UAAAsyB,YAAA,SAAAvB,GACA/lC,KAAA8lC,UAAAC,GAUAnB,EAAA5vB,UAAAhQ,QAAA,SAAA5B,GACApD,KAAA6kC,MAAAzhC,GAUAwhC,EAAA5vB,UAAAuyB,YAAA,SAAA7B,GACA1lC,KAAAylC,UAAAC,GAUAd,EAAA5vB,UAAAxP,WAAA,SAAA0gC,GACAlmC,KAAAimC,SAAAC,GAUAtB,EAAA5vB,UAAAvP,WAAA,SAAA2gC,GACApmC,KAAAmmC,SAAAC,GAUAxB,EAAA5vB,UAAAwyB,aAAA,SAAA3B,GACA7lC,KAAA4lC,WAAAC,GAUAjB,EAAA5vB,UAAA7P,QAAA,SAAA9B,GACArD,KAAAslC,MAAAjiC,GAUAuhC,EAAA5vB,UAAAyyB,YAAA,SAAAhlC,GACAzC,KAAA8kC,UAAAriC,GAUAmiC,EAAA5vB,UAAA9P,SAAA,SAAAxC,GACA1C,KAAAilC,OAAAviC,GAUAkiC,EAAA5vB,UAAA3P,UAAA,SAAA/B,GACAtD,KAAAgmC,QAAA1iC,GAUAshC,EAAA5vB,UAAAzP,QAAA,SAAA7B,GACA1D,KAAAklC,MAAAxhC,GAUAkhC,EAAA5vB,UAAAtP,aAAA,SAAApB,GACAtE,KAAAmlC,WAAA7gC,GAUAsgC,EAAA5vB,UAAA0yB,gBAAA,SAAArC,GACArlC,KAAAolC,cAAAC,GAUAT,EAAA5vB,UAAA2yB,kBAAA,SAAAtkC,GACArD,KAAAqmC,gBAAAhjC,GAUAuhC,EAAA5vB,UAAA4yB,oBAAA,SAAAtkC,GACAtD,KAAAumC,kBAAAjjC,GAUAshC,EAAA5vB,UAAA6yB,WAAA,SAAAnB,GACA1mC,KAAAymC,SAAAC,GAEAtnC,EAAA","file":"importfeatures.min.js","sourcesContent":["/**\n * @type {string} Default WMS version.\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_style_Fill_ from '../style/Fill.js';\nimport _ol_style_Icon_ from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport _ol_style_Stroke_ from '../style/Stroke.js';\nimport _ol_style_Style_ from '../style/Style.js';\nimport _ol_style_Text_ from '../style/Text.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.KMLOptions=} opt_options Options.\n * @api\n */\nvar KML = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!KML.DEFAULT_STYLE_ARRAY_) {\n    KML.createStyleDefaults_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : KML.DEFAULT_STYLE_ARRAY_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {Object.<string, (Array.<ol.style.Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.GX_NAMESPACE_URIS_ = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.NAMESPACE_URIS_ = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nKML.SCHEMA_LOCATION_ = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @return {Array.<ol.style.Style>} Default style.\n * @private\n */\nKML.createStyleDefaults_ = function() {\n  /**\n   * @const\n   * @type {ol.Color}\n   * @private\n   */\n  KML.DEFAULT_COLOR_ = [255, 255, 255, 1];\n\n  /**\n   * @const\n   * @type {ol.style.Fill}\n   * @private\n   */\n  KML.DEFAULT_FILL_STYLE_ = new _ol_style_Fill_({\n    color: KML.DEFAULT_COLOR_\n  });\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_ = [20, 2]; // FIXME maybe [8, 32] ?\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SIZE_ = [64, 64];\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SRC_ =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_ = 0.5;\n\n  /**\n   * @const\n   * @type {ol.style.Image}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ = new _ol_style_Icon_({\n    anchor: KML.DEFAULT_IMAGE_STYLE_ANCHOR_,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_,\n    anchorYUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_,\n    size: KML.DEFAULT_IMAGE_STYLE_SIZE_,\n    src: KML.DEFAULT_IMAGE_STYLE_SRC_\n  });\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_NO_IMAGE_STYLE_ = 'NO_IMAGE';\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_STROKE_STYLE_ = new _ol_style_Stroke_({\n    color: KML.DEFAULT_COLOR_,\n    width: 1\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STROKE_STYLE_ = new _ol_style_Stroke_({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Text}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STYLE_ = new _ol_style_Text_({\n    font: 'bold 16px Helvetica',\n    fill: KML.DEFAULT_FILL_STYLE_,\n    stroke: KML.DEFAULT_TEXT_STROKE_STYLE_,\n    scale: 0.8\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Style}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ = new _ol_style_Style_({\n    fill: KML.DEFAULT_FILL_STYLE_,\n    image: KML.DEFAULT_IMAGE_STYLE_,\n    text: KML.DEFAULT_TEXT_STYLE_,\n    stroke: KML.DEFAULT_STROKE_STYLE_,\n    zIndex: 0\n  });\n\n  /**\n   * @const\n   * @type {Array.<ol.style.Style>}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ARRAY_ = [KML.DEFAULT_STYLE_];\n\n  return KML.DEFAULT_STYLE_ARRAY_;\n};\n\n\n/**\n * @const\n * @type {Object.<string, ol.style.IconAnchorUnits>}\n * @private\n */\nKML.ICON_ANCHOR_UNITS_MAP_ = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {ol.style.Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {ol.style.Style} style Style.\n * @private\n */\nKML.createNameStyleFunction_ = function(foundStyle, name) {\n  var textStyle = null;\n  var textOffset = [0, 0];\n  var textAlign = 'start';\n  if (foundStyle.getImage()) {\n    var imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n    }\n    if (imageSize.length == 2) {\n      var imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    var foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || KML.DEFAULT_TEXT_STYLE_.getFont());\n    textStyle.setScale(foundText.getScale() || KML.DEFAULT_TEXT_STYLE_.getScale());\n    textStyle.setFill(foundText.getFill() || KML.DEFAULT_TEXT_STYLE_.getFill());\n    textStyle.setStroke(foundText.getStroke() || KML.DEFAULT_TEXT_STROKE_STYLE_);\n  } else {\n    textStyle = KML.DEFAULT_TEXT_STYLE_.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  var nameStyle = new _ol_style_Style_({\n    text: textStyle\n  });\n  return nameStyle;\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles Shared\n *          styles.\n * @param {boolean|undefined} showPointNames true to show names for point\n *          placemarks.\n * @return {ol.FeatureStyleFunction} Feature style function.\n * @private\n */\nKML.createFeatureStyleFunction_ = function(style, styleUrl,\n    defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n         * @param {number} resolution Resolution.\n         * @return {Array.<ol.style.Style>} Style.\n         * @this {ol.Feature}\n         */\n    function(resolution) {\n      var drawName = showPointNames;\n      /** @type {ol.style.Style|undefined} */\n      var nameStyle;\n      var name = '';\n      if (drawName) {\n        if (this.getGeometry()) {\n          drawName = (this.getGeometry().getType() ===\n                        GeometryType.POINT);\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (this.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(style[0],\n              name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        var foundStyle = KML.findStyle_(styleUrl, defaultStyle,\n            sharedStyles);\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(foundStyle[0],\n              name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = KML.createNameStyleFunction_(defaultStyle[0],\n            name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|string|undefined} styleValue Style value.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<ol.style.Style>} Style.\n * @private\n */\nKML.findStyle_ = function(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return KML.findStyle_(\n        sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.Color|undefined} Color.\n */\nKML.readColor_ = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    var hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nKML.readFlatCoordinates_ = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  var flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  var re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  var m;\n  while ((m = re.exec(s))) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {string} URI.\n */\nKML.readURI_ = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false).trim();\n  var baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    var url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.KMLVec2_} Vec2.\n */\nKML.readVec2_ = function(node) {\n  var xunits = node.getAttribute('xunits');\n  var yunits = node.getAttribute('yunits');\n  var origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: KML.ICON_ANCHOR_UNITS_MAP_[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: KML.ICON_ANCHOR_UNITS_MAP_[yunits],\n    origin: origin\n  };\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {number|undefined} Scale.\n */\nKML.readScale_ = function(node) {\n  return XSD.readDecimal(node);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>|string|undefined} StyleMap.\n */\nKML.readStyleMapValue_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(undefined,\n      KML.STYLE_MAP_PARSERS_, node, objectStack);\n};\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.IconStyleParser_ = function(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  var object = _ol_xml_.pushParseAndPop(\n      {}, KML.ICON_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var IconObject = 'Icon' in object ? object['Icon'] : {};\n  var drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  var src;\n  var href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = KML.DEFAULT_IMAGE_STYLE_SRC_;\n  }\n  var anchor, anchorXUnits, anchorYUnits;\n  var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  var hotSpot = /** @type {ol.KMLVec2_|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === KML.DEFAULT_IMAGE_STYLE_SRC_) {\n    anchor = KML.DEFAULT_IMAGE_STYLE_ANCHOR_;\n    anchorXUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_;\n    anchorYUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  var offset;\n  var x = /** @type {number|undefined} */\n      (IconObject['x']);\n  var y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  var size;\n  var w = /** @type {number|undefined} */\n      (IconObject['w']);\n  var h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  var rotation;\n  var heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  var scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == KML.DEFAULT_IMAGE_STYLE_SRC_) {\n      size = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n      if (scale === undefined) {\n        scale = KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_;\n      }\n    }\n\n    var imageStyle = new _ol_style_Icon_({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = KML.DEFAULT_NO_IMAGE_STYLE_;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LabelStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  var object = _ol_xml_.pushParseAndPop(\n      {}, KML.LABEL_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var textStyle = new _ol_style_Text_({\n    fill: new _ol_style_Fill_({\n      color: /** @type {ol.Color} */\n          ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LineStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  var object = _ol_xml_.pushParseAndPop(\n      {}, KML.LINE_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var strokeStyle = new _ol_style_Stroke_({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PolyStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  var object = _ol_xml_.pushParseAndPop(\n      {}, KML.POLY_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var fillStyle = new _ol_style_Fill_({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  var fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  var outline =\n      /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nKML.readFlatLinearRing_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n      KML.FLAT_LINEAR_RING_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.gxCoordParser_ = function(node, objectStack) {\n  var gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  var flatCoordinates = gxTrackObject.flatCoordinates;\n  var s = _ol_xml_.getAllTextContent(node, false);\n  var re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  var m = re.exec(s);\n  if (m) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nKML.readGxMultiTrack_ = function(node, objectStack) {\n  var lineStrings = _ol_xml_.pushParseAndPop([],\n      KML.GX_MULTITRACK_GEOMETRY_PARSERS_, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  var multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readGxTrack_ = function(node, objectStack) {\n  var gxTrackObject = _ol_xml_.pushParseAndPop(\n      /** @type {ol.KMLGxTrackObject_} */ ({\n        flatCoordinates: [],\n        whens: []\n      }), KML.GX_TRACK_PARSERS_, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  var flatCoordinates = gxTrackObject.flatCoordinates;\n  var whens = gxTrackObject.whens;\n  var i, ii;\n  for (i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii;\n    ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  var lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object} Icon object.\n */\nKML.readIcon_ = function(node, objectStack) {\n  var iconObject = _ol_xml_.pushParseAndPop(\n      {}, KML.ICON_PARSERS_, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nKML.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n      KML.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readLineString_ = function(node, objectStack) {\n  var properties = _ol_xml_.pushParseAndPop({},\n      KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n      objectStack);\n  var flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    var lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readLinearRing_ = function(node, objectStack) {\n  var properties = _ol_xml_.pushParseAndPop({},\n      KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n      objectStack);\n  var flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    var polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n        [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\nKML.readMultiGeometry_ = function(node, objectStack) {\n  var geometries = _ol_xml_.pushParseAndPop([],\n      KML.MULTI_GEOMETRY_PARSERS_, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {ol.geom.Geometry} */\n  var multiGeometry;\n  var homogeneous = true;\n  var type = geometries[0].getType();\n  var geometry, i, ii;\n  for (i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    var layout;\n    var flatCoordinates;\n    if (type == GeometryType.POINT) {\n      var point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {ol.geom.Geometry} */ (multiGeometry);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Point|undefined} Point.\n */\nKML.readPoint_ = function(node, objectStack) {\n  var properties = _ol_xml_.pushParseAndPop({},\n      KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n      objectStack);\n  var flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    var point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readPolygon_ = function(node, objectStack) {\n  var properties = _ol_xml_.pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n      KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n      objectStack);\n  var flatLinearRings = _ol_xml_.pushParseAndPop([null],\n      KML.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    var polygon = new Polygon(null);\n    var flatCoordinates = flatLinearRings[0];\n    var ends = [flatCoordinates.length];\n    var i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n        GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>} Style.\n */\nKML.readStyle_ = function(node, objectStack) {\n  var styleObject = _ol_xml_.pushParseAndPop(\n      {}, KML.STYLE_PARSERS_, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  var fillStyle = /** @type {ol.style.Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : KML.DEFAULT_FILL_STYLE_);\n  var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  var imageStyle = /** @type {ol.style.Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : KML.DEFAULT_IMAGE_STYLE_);\n  if (imageStyle == KML.DEFAULT_NO_IMAGE_STYLE_) {\n    imageStyle = undefined;\n  }\n  var textStyle = /** @type {ol.style.Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : KML.DEFAULT_TEXT_STYLE_);\n  var strokeStyle = /** @type {ol.style.Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : KML.DEFAULT_STROKE_STYLE_);\n  var outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new _ol_style_Style_({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n};\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {ol.geom.MultiPoint|ol.geom.MultiLineString|ol.geom.MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<ol.geom.Geometry>} geometries List of geometries.\n * @private\n */\nKML.setCommonGeometryProperties_ = function(multiGeometry,\n    geometries) {\n  var ii = geometries.length;\n  var extrudes = new Array(geometries.length);\n  var tessellates = new Array(geometries.length);\n  var altitudeModes = new Array(geometries.length);\n  var geometry, i, hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (i = 0; i < ii; ++i) {\n    geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.DataParser_ = function(node, objectStack) {\n  var name = node.getAttribute('name');\n  _ol_xml_.parseNode(KML.DATA_PARSERS_, node, objectStack);\n  var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.ExtendedDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.EXTENDED_DATA_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.RegionParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.REGION_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PairDataParser_ = function(node, objectStack) {\n  var pairObject = _ol_xml_.pushParseAndPop(\n      {}, KML.PAIR_PARSERS_, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  var key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    var styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    var Style = /** @type {ol.style.Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PlacemarkStyleMapParser_ = function(node, objectStack) {\n  var styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  var placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SchemaDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.SCHEMA_DATA_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SimpleDataParser_ = function(node, objectStack) {\n  var name = node.getAttribute('name');\n  if (name !== null) {\n    var data = XSD.readString(node);\n    var featureObject =\n        /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LatLonAltBoxParser_ = function(node, objectStack) {\n  var object = _ol_xml_.pushParseAndPop({}, KML.LAT_LON_ALT_BOX_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LodParser_ = function(node, objectStack) {\n  var object = _ol_xml_.pushParseAndPop({}, KML.LOD_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  var flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n      KML.INNER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  var flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n      KML.OUTER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LinkParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.LINK_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.whenParser_ = function(node, objectStack) {\n  var gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  var whens = gxTrackObject.whens;\n  var s = _ol_xml_.getAllTextContent(node, false);\n  var when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'displayName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'value': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTENDED_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Data': KML.DataParser_,\n      'SchemaData': KML.SchemaDataParser_\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.REGION_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LatLonAltBox': KML.LatLonAltBoxParser_,\n      'Lod': KML.LodParser_\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LAT_LON_ALT_BOX_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'minAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'maxAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'north': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'south': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'east': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'west': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LOD_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'minLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'maxLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'minFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'maxFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'extrude': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n      'tessellate': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n      'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RING_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RINGS_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'innerBoundaryIs': KML.innerBoundaryIsParser_,\n      'outerBoundaryIs': KML.outerBoundaryIsParser_\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_TRACK_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'when': KML.whenParser_\n    }, _ol_xml_.makeStructureNS(\n        KML.GX_NAMESPACE_URIS_, {\n          'coord': KML.gxCoordParser_\n        }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GEOMETRY_FLAT_COORDINATES_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n    }, _ol_xml_.makeStructureNS(\n        KML.GX_NAMESPACE_URIS_, {\n          'x': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n          'y': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n          'w': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n          'h': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n        }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Icon': _ol_xml_.makeObjectPropertySetter(KML.readIcon_),\n      'heading': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'hotSpot': _ol_xml_.makeObjectPropertySetter(KML.readVec2_),\n      'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.INNER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LABEL_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n      'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINE_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n      'width': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.MULTI_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LineString': _ol_xml_.makeArrayPusher(KML.readLineString_),\n      'LinearRing': _ol_xml_.makeArrayPusher(KML.readLinearRing_),\n      'MultiGeometry': _ol_xml_.makeArrayPusher(KML.readMultiGeometry_),\n      'Point': _ol_xml_.makeArrayPusher(KML.readPoint_),\n      'Polygon': _ol_xml_.makeArrayPusher(KML.readPolygon_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_MULTITRACK_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'Track': _ol_xml_.makeArrayPusher(KML.readGxTrack_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.NETWORK_LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'ExtendedData': KML.ExtendedDataParser_,\n      'Region': KML.RegionParser_,\n      'Link': KML.LinkParser_,\n      'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n      'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.OUTER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PAIR_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n      'key': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PLACEMARK_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'ExtendedData': KML.ExtendedDataParser_,\n      'Region': KML.RegionParser_,\n      'MultiGeometry': _ol_xml_.makeObjectPropertySetter(\n          KML.readMultiGeometry_, 'geometry'),\n      'LineString': _ol_xml_.makeObjectPropertySetter(\n          KML.readLineString_, 'geometry'),\n      'LinearRing': _ol_xml_.makeObjectPropertySetter(\n          KML.readLinearRing_, 'geometry'),\n      'Point': _ol_xml_.makeObjectPropertySetter(\n          KML.readPoint_, 'geometry'),\n      'Polygon': _ol_xml_.makeObjectPropertySetter(\n          KML.readPolygon_, 'geometry'),\n      'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n      'StyleMap': KML.PlacemarkStyleMapParser_,\n      'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n      'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_),\n      'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n    }, _ol_xml_.makeStructureNS(\n        KML.GX_NAMESPACE_URIS_, {\n          'MultiTrack': _ol_xml_.makeObjectPropertySetter(\n              KML.readGxMultiTrack_, 'geometry'),\n          'Track': _ol_xml_.makeObjectPropertySetter(\n              KML.readGxTrack_, 'geometry')\n        }\n    ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.POLY_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n      'fill': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n      'outline': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.SCHEMA_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'SimpleData': KML.SimpleDataParser_\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'IconStyle': KML.IconStyleParser_,\n      'LabelStyle': KML.LabelStyleParser_,\n      'LineStyle': KML.LineStyleParser_,\n      'PolyStyle': KML.PolyStyleParser_\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_MAP_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Pair': KML.PairDataParser_\n    });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  var parsersNS = _ol_xml_.makeStructureNS(\n      KML.NAMESPACE_URIS_, {\n        'Document': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Folder': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Placemark': _ol_xml_.makeArrayPusher(this.readPlacemark_, this),\n        'Style': this.readSharedStyle_.bind(this),\n        'StyleMap': this.readSharedStyleMap_.bind(this)\n      });\n  /** @type {Array.<ol.Feature>} */\n  var features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  var object = _ol_xml_.pushParseAndPop({'geometry': null},\n      KML.PLACEMARK_PARSERS_, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  var feature = new Feature();\n  var id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  var options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n\n  var geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    var style = object['Style'];\n    var styleUrl = object['styleUrl'];\n    var styleFunction = KML.createFeatureStyleFunction_(\n        style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n        this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  var id = node.getAttribute('id');\n  if (id !== null) {\n    var style = KML.readStyle_(node, objectStack);\n    if (style) {\n      var styleUri;\n      var baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        var url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  var id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  var styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  var styleUri;\n  var baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    var url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return null;\n  }\n  var feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return [];\n  }\n  var features;\n  var localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n        node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    var feature = this.readPlacemark_(\n        node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    var n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      var fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Souce.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  var n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      var name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  var n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'name') {\n      return XSD.readString(n);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      var name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  var networkLinks = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n        /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n        /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  var n, networkLinks = [];\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  var n, networkLinks = [];\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      var obj = _ol_xml_.pushParseAndPop({}, KML.NETWORK_LINK_PARSERS_,\n          n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  var regions = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n        /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n        /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  var n, regions = [];\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  var n, regions = [];\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'Region') {\n      var obj = _ol_xml_.pushParseAndPop({}, KML.REGION_PARSERS_,\n          n, []);\n      regions.push(obj);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {ol.Color|string} color Color.\n * @private\n */\nKML.writeColorTextNode_ = function(node, color) {\n  var rgba = asArray(color);\n  var opacity = (rgba.length == 4) ? rgba[3] : 1;\n  var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  var i;\n  for (i = 0; i < 4; ++i) {\n    var hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  XSD.writeStringTextNode(node, abgr.join(''));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeCoordinatesTextNode_ = function(node, coordinates, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n\n  var layout = context['layout'];\n  var stride = context['stride'];\n\n  var dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  var d, i;\n  var ii = coordinates.length;\n  var text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  XSD.writeStringTextNode(node, text);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeDataNode_ = function(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n          _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n          _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n * @private\n */\nKML.writeDataNodeName_ = function(node, name) {\n  XSD.writeCDATASection(node, name);\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n * @private\n */\nKML.writeDataNodeValue_ = function(node, value) {\n  XSD.writeStringTextNode(node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writeDocument_ = function(node, features, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.DOCUMENT_SERIALIZERS_,\n      KML.DOCUMENT_NODE_FACTORY_, features, objectStack, undefined,\n      this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeExtendedData_ = function(node, namesAndValues, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var names = namesAndValues.names, values = namesAndValues.values;\n  var length = names.length;\n\n  for (var i = 0; i < length; i++) {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        KML.DATA_NODE_FACTORY_, [{name: names[i], value: values[i]}], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIcon_ = function(node, icon, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.ICON_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n      KML.ICON_SERIALIZERS_, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n      values, objectStack, orderedKeys);\n  orderedKeys =\n      KML.ICON_SEQUENCE_[KML.GX_NAMESPACE_URIS_[0]];\n  values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_SERIALIZERS_,\n      KML.GX_NODE_FACTORY_, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIconStyle_ = function(node, style, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var properties = {};\n  var src = style.getSrc();\n  var size = style.getSize();\n  var iconImageSize = style.getImageSize();\n  var iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    var anchor = style.getAnchor(); // top-left\n    var origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      var /** @type {ol.KMLVec2_} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  var scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  var rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.ICON_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_STYLE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLabelStyle_ = function(node, style, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var properties = {};\n  var fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  var scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys =\n      KML.LABEL_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LABEL_STYLE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLineStyle_ = function(node, style, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.LINE_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LINE_STYLE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeMultiGeometry_ = function(node, geometry, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  var context = {node: node};\n  var type = geometry.getType();\n  /** @type {Array.<ol.geom.Geometry>} */\n  var geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  var factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    factory = KML.GEOMETRY_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {ol.geom.MultiPoint} */ (geometry).getPoints();\n    factory = KML.POINT_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {ol.geom.MultiLineString} */ (geometry)).getLineStrings();\n    factory = KML.LINE_STRING_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {ol.geom.MultiPolygon} */ (geometry)).getPolygons();\n    factory = KML.POLYGON_NODE_FACTORY_;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  _ol_xml_.pushSerializeAndPop(context,\n      KML.MULTI_GEOMETRY_SERIALIZERS_, factory,\n      geometries, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeBoundaryIs_ = function(node, linearRing, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context,\n      KML.BOUNDARY_IS_SERIALIZERS_,\n      KML.LINEAR_RING_NODE_FACTORY_, [linearRing], objectStack);\n};\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writePlacemark_ = function(node, feature, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  var properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  var filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  var keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    var sequence = _ol_xml_.makeSequence(properties, keys);\n    var namesAndValues = {names: keys, values: sequence};\n    _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n        KML.EXTENDEDDATA_NODE_FACTORY_, [namesAndValues], objectStack);\n  }\n\n  var styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    var styles = styleFunction.call(feature, 0);\n    if (styles) {\n      var style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      var textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.PLACEMARK_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  var options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      KML.GEOMETRY_NODE_FACTORY_, [geometry], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePrimitiveGeometry_ = function(node, geometry, objectStack) {\n  var flatCoordinates = geometry.getFlatCoordinates();\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  var properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.PRIMITIVE_GEOMETRY_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PRIMITIVE_GEOMETRY_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolygon_ = function(node, polygon, objectStack) {\n  var linearRings = polygon.getLinearRings();\n  var outerRing = linearRings.shift();\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  // inner rings\n  _ol_xml_.pushSerializeAndPop(context,\n      KML.POLYGON_SERIALIZERS_,\n      KML.INNER_BOUNDARY_NODE_FACTORY_,\n      linearRings, objectStack);\n  // outer ring\n  _ol_xml_.pushSerializeAndPop(context,\n      KML.POLYGON_SERIALIZERS_,\n      KML.OUTER_BOUNDARY_NODE_FACTORY_,\n      [outerRing], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolyStyle_ = function(node, style, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.POLY_STYLE_SERIALIZERS_,\n      KML.COLOR_NODE_FACTORY_, [style.getColor()], objectStack);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n * @private\n */\nKML.writeScaleTextNode_ = function(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  XSD.writeDecimalTextNode(node,\n      Math.round(scale * 1e6) / 1e6);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeStyle_ = function(node, style, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var properties = {};\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  var imageStyle = style.getImage();\n  var textStyle = style.getText();\n  if (imageStyle instanceof _ol_style_Icon_) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.STYLE_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.STYLE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {ol.KMLVec2_} vec2 Vec2.\n * @private\n */\nKML.writeVec2_ = function(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.KML_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'Document', 'Placemark'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.KML_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Document': _ol_xml_.makeChildAppender(KML.writeDocument_),\n      'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.DOCUMENT_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.EXTENDEDDATA_NODE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Data': _ol_xml_.makeChildAppender(KML.writeDataNode_),\n      'value': _ol_xml_.makeChildAppender(KML.writeDataNodeValue_),\n      'displayName': _ol_xml_.makeChildAppender(KML.writeDataNodeName_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nKML.GEOMETRY_TYPE_TO_NODENAME_ = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'href'\n    ],\n    _ol_xml_.makeStructureNS(KML.GX_NAMESPACE_URIS_, [\n      'x', 'y', 'w', 'h'\n    ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'href': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n    }, _ol_xml_.makeStructureNS(\n        KML.GX_NAMESPACE_URIS_, {\n          'x': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n          'y': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n          'w': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n          'h': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n        }));\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'scale', 'heading', 'Icon', 'hotSpot'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Icon': _ol_xml_.makeChildAppender(KML.writeIcon_),\n      'heading': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'hotSpot': _ol_xml_.makeChildAppender(KML.writeVec2_),\n      'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LABEL_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'color', 'scale'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LABEL_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n      'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LINE_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'color', 'width'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LINE_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n      'width': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.BOUNDARY_IS_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LinearRing': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.MULTI_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LineString': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_),\n      'Point': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_),\n      'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n      'GeometryCollection': _ol_xml_.makeChildAppender(\n          KML.writeMultiGeometry_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PLACEMARK_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n      'styleUrl', 'Style'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PLACEMARK_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'ExtendedData': _ol_xml_.makeChildAppender(\n          KML.writeExtendedData_),\n      'MultiGeometry': _ol_xml_.makeChildAppender(\n          KML.writeMultiGeometry_),\n      'LineString': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_),\n      'LinearRing': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_),\n      'Point': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_),\n      'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n      'Style': _ol_xml_.makeChildAppender(KML.writeStyle_),\n      'address': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'description': _ol_xml_.makeChildAppender(\n          XSD.writeStringTextNode),\n      'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'open': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n      'phoneNumber': _ol_xml_.makeChildAppender(\n          XSD.writeStringTextNode),\n      'styleUrl': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'visibility': _ol_xml_.makeChildAppender(\n          XSD.writeBooleanTextNode)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'extrude': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n      'tessellate': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n      'altitudeMode': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'coordinates': _ol_xml_.makeChildAppender(\n          KML.writeCoordinatesTextNode_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLYGON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'outerBoundaryIs': _ol_xml_.makeChildAppender(\n          KML.writeBoundaryIs_),\n      'innerBoundaryIs': _ol_xml_.makeChildAppender(\n          KML.writeBoundaryIs_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLY_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'IconStyle': _ol_xml_.makeChildAppender(KML.writeIconStyle_),\n      'LabelStyle': _ol_xml_.makeChildAppender(KML.writeLabelStyle_),\n      'LineStyle': _ol_xml_.makeChildAppender(KML.writeLineStyle_),\n      'PolyStyle': _ol_xml_.makeChildAppender(KML.writePolyStyle_)\n    });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GX_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  return _ol_xml_.createElementNS(KML.GX_NAMESPACE_URIS_[0],\n      'gx:' + opt_nodeName);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.DOCUMENT_NODE_FACTORY_ = function(value, objectStack,\n    opt_nodeName) {\n  var parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GEOMETRY_NODE_FACTORY_ = function(value, objectStack,\n    opt_nodeName) {\n  if (value) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return _ol_xml_.createElementNS(parentNode.namespaceURI,\n        KML.GEOMETRY_TYPE_TO_NODENAME_[/** @type {ol.geom.Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.COLOR_NODE_FACTORY_ = _ol_xml_.makeSimpleNodeFactory('color');\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.DATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Data');\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.EXTENDEDDATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.INNER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POINT_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINE_STRING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINEAR_RING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POLYGON_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Polygon');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.OUTER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  var kml = _ol_xml_.createElementNS(KML.NAMESPACE_URIS_[4], 'kml');\n  var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  var xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:gx',\n      KML.GX_NAMESPACE_URIS_[0]);\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(kml, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n      KML.SCHEMA_LOCATION_);\n\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: kml};\n  var properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  var orderedKeys = KML.KML_SEQUENCE_[kml.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.KML_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n      this);\n  return kml;\n};\nexport default KML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/KML.js\n// module id = 148\n// module chunks = 0 1 2 10","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nvar _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nvar ImageWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var extent = getForViewAndSize(coordinate, resolution, 0,\n      ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n      extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var imageResolution = resolution / pixelRatio;\n\n  var center = getCenter(extent);\n  var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n  var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n  var image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  var params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return _ol_uri_.appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n    imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.CustomEvent\n*/\nimport olBase from 'ol';\nimport olEventsEvent from 'ol/events/Event';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nvar TileWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var params = options.params || {};\n\n  var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, params) {\n\n  var urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    var tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  var url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    var index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return _ol_uri_.appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  var i = 0;\n  var res = [];\n  for (var key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo';\nimport olCollection from 'ol/Collection';\n\n\nngeoBase.module.value('ngeoDataSources', new olCollection());\n\n\n/**\n * @typedef {!ol.Collection.<!ngeo.datasource.DataSource>}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olLayerVector from 'ol/layer/Vector';\nimport olObj from 'ol/obj';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleStyle from 'ol/style/Style';\nimport googAsserts from 'goog/asserts';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {};\nexports.assertNumber = function(value, opt_message, var_args) {};\nexports.assertString = function(value, opt_message, var_args) {};\nexports.assertFunction = function(value, opt_message, var_args) {};\nexports.assertObject = function(value, opt_message, var_args) {};\nexports.assertArray = function(value, opt_message, var_args) {};\nexports.assertBoolean = function(value, opt_message, var_args) {};\nexports.assertElement = function(value, opt_message, var_args) {};\nexports.assertInstanceof = function(value, type, opt_message, var_args) {};\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.prod.js","/**\n * @module app.importfeatures\n*/\nconst exports = {};\n\nimport 'examples/importfeatures.css';\nimport './common_dependencies.js';\nimport ngeoMapModule from 'ngeo/map/module';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscFilereaderComponent from 'ngeo/misc/filereaderComponent';\n\nimport olMap from 'ol/Map';\nimport olView from 'ol/View';\nimport olExtent from 'ol/extent';\nimport olFormatKML from 'ol/format/KML';\nimport olLayerTile from 'ol/layer/Tile';\nimport olLayerVector from 'ol/layer/Vector';\nimport olSourceOSM from 'ol/source/OSM';\nimport olSourceVector from 'ol/source/Vector';\n\n\n/** @type {!angular.Module} **/\napp.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name,\n  ngeoMiscFilereaderComponent.name,\n]);\n\n\n/**\n * @constructor\n * @param {angular.Scope} $scope Scope.\n * @export\n *//* @ngInject\n */\napp.MainController = function($scope) {\n\n  /**\n   * @private\n   * @type {ol.format.KML}\n   */\n  this.kmlFormat_ = new olFormatKML();\n\n  /**\n   * @private\n   * @type {ol.source.Vector}\n   */\n  this.vectorSource_ = new olSourceVector();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      }),\n      new olLayerVector({\n        source: this.vectorSource_\n      })\n    ],\n    view: new olView({\n      center: [0, 0],\n      zoom: 2\n    })\n  });\n\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.fileReaderSupported = undefined;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.fileContent = '';\n\n  $scope.$watch(() => this.fileContent, this.importKml_.bind(this));\n\n};\n\n\n/**\n * @param {string} kml KML document.\n * @private\n */\napp.MainController.prototype.importKml_ = function(kml) {\n  const map = this.map;\n  const vectorSource = this.vectorSource_;\n  const features = this.kmlFormat_.readFeatures(kml, {\n    featureProjection: 'EPSG:3857'\n  });\n  vectorSource.clear(true);\n  vectorSource.addFeatures(features);\n  const extent = vectorSource.getExtent();\n  const mapSize = map.getSize();\n  if (mapSize && !olExtent.isEmpty(extent)) {\n    map.getView().fit(extent, mapSize);\n  }\n};\n\n\napp.module.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/importfeatures.js","/**\n * @module ngeo.misc.filereaderComponent\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilereader', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * This directive is to used on an input file element. When a file is selected\n * the directive uses the browser `FileReader` API to read the file. The file\n * content is provided to the directive user through the assignable expression.\n * Only works for text files (`readAsText` used for reading the file). And does\n * not work in Internet Explorer 9.\n *\n * Example:\n *\n *      <input type=\"file\" ngeo-filereader=\"ctrl.fileContent\"\n *        ngeo-filereader-supported=\"ctrl.supported\"/>\n *\n * See our live example: [../examples/importfeatures.html](../examples/importfeatures.html)\n *\n * @htmlAttribute {string} ngeo-filereader The content of the file read.\n * @htmlAttribute {boolean=} ngeo-filereader-supported Whether the FileReader API is supported.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoFilereader\n */\nexports.component_ = function($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      'fileContent': '=ngeoFilereader',\n      'supported': '=?ngeoFilereaderSupported'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const supported = 'FileReader' in $window;\n      scope['supported'] = supported;\n      if (!supported) {\n        return;\n      }\n      element.on('change', (changeEvent) => {\n        /** @type {!FileReader} */\n        const fileReader = new $window.FileReader();\n        fileReader.onload = (\n          /**\n                 * @param {!ProgressEvent} evt Event.\n                 */\n          function(evt) {\n            scope.$apply(() => {\n              scope['fileContent'] = evt.target.result;\n            });\n          });\n        fileReader.readAsText(changeEvent.target.files[0]);\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoFilereader',\n  exports.component_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/filereaderComponent.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr';\nimport ngeoMapDirective from 'ngeo/map/directive';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr';\nimport ngeoMapRecenter from 'ngeo/map/recenter';\nimport ngeoMapResizemap from 'ngeo/map/resizemap';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport ngeoCustomEvent from 'ngeo/CustomEvent';\nimport olBase from 'ol';\nimport olObservable from 'ol/Observable';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerLayer from 'ol/layer/Layer';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\nimport olSourceTileWMS from 'ol/source/TileWMS';\nimport olSourceWMTS from 'ol/source/WMTS';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap';\n\nimport olEvents from 'ol/events';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources';\n\nimport olEvents from 'ol/events';\nimport olObservable from 'ol/Observable';\nimport olView from 'ol/View';\nimport googAsserts from 'goog/asserts';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\nngeoBase.module.service(\n  'ngeoSyncDataSourcesMap', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olEvents from 'ol/events';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo';\nimport olArray from 'ol/array';\nimport olMap from 'ol/Map';\nimport olEvents from 'ol/events';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  var multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  var flatCoordinates = this.flatCoordinates;\n  var stride = this.stride;\n  var i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  var n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  var point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  var flatCoordinates = this.flatCoordinates;\n  var layout = this.layout;\n  var stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  var points = [];\n  var i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    var point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  var flatCoordinates = this.flatCoordinates;\n  var stride = this.stride;\n  var i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n        this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nvar OSM = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  var crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  var url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nvar XYZ = function(opt_options) {\n  var options = opt_options || {};\n  var projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  var multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  var lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  var flatCoordinates = this.flatCoordinates;\n  var ends = this.ends_;\n  var layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  var lineStrings = [];\n  var offset = 0;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  var midpoints = [];\n  var flatCoordinates = this.flatCoordinates;\n  var offset = 0;\n  var ends = this.ends_;\n  var stride = this.stride;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var midpoint = _ol_geom_flat_interpolate_.lineString(\n        flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n  var simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n      GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = _ol_geom_flat_deflate_.coordinatess(\n        this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var ends = [];\n  var i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    var lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  var ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    var offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  var multiPolygon = new MultiPolygon(null);\n\n  var len = this.endss_.length;\n  var newEndss = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  var flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n      flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    var flatCenters = _ol_geom_flat_center_.linearRingss(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  var interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n      this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    var flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n  var simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n      GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  var offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    var prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  var ends = this.endss_[index].slice();\n  var end = ends[ends.length - 1];\n  if (offset !== 0) {\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  var polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  var layout = this.layout;\n  var flatCoordinates = this.flatCoordinates;\n  var endss = this.endss_;\n  var polygons = [];\n  var offset = 0;\n  var i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    var polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n        layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = _ol_geom_flat_deflate_.coordinatesss(\n        this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var endss = [];\n  var i, ii, ends;\n  for (i = 0, ii = polygons.length; i < ii; ++i) {\n    var polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    var offset = flatCoordinates.length;\n    ends = polygon.getEnds();\n    var j, jj;\n    for (j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nvar GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  var clonedGeometries = [];\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  var i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  var i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  var geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    _ol_obj_.clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  var key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    var simplifiedGeometries = [];\n    var geometries = this.geometries_;\n    var simplified = false;\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      var geometry = geometries[i];\n      var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      var simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  var anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n      GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 72\n// module chunks = 0 1 2 3 4 5 7 9 10","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nvar XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  var dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  var m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  var date = new Date(dateTime * 1000);\n  var string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  var string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  var string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 79\n// module chunks = 0 1 2 5 10","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nvar XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n        /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n    doc, opt_options) {\n  var features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n    doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  var features = [];\n  var n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n        /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  var node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  var node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  var node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 97\n// module chunks = 0 1 2 10","/**\n * @module ol/style/Text\n */\nimport _ol_style_Fill_ from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nvar _ol_style_Text_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new _ol_style_Fill_({color: _ol_style_Text_.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\n_ol_style_Text_.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\n_ol_style_Text_.prototype.clone = function() {\n  return new _ol_style_Text_({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\n_ol_style_Text_.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\n_ol_style_Text_.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\n_ol_style_Text_.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\n_ol_style_Text_.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\n_ol_style_Text_.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\n_ol_style_Text_.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_Text_.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\n_ol_style_Text_.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\n_ol_style_Text_.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\n_ol_style_Text_.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\n_ol_style_Text_.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\n_ol_style_Text_.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\n_ol_style_Text_.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_Text_.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\n_ol_style_Text_.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\n_ol_style_Text_.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\n_ol_style_Text_.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\n_ol_style_Text_.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\n_ol_style_Text_.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\n_ol_style_Text_.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\n_ol_style_Text_.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\n_ol_style_Text_.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\n_ol_style_Text_.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\n_ol_style_Text_.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\n_ol_style_Text_.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\n_ol_style_Text_.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\n_ol_style_Text_.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\n_ol_style_Text_.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\n_ol_style_Text_.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default _ol_style_Text_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 98\n// module chunks = 0 1 2 8 10 19 23"],"sourceRoot":""}