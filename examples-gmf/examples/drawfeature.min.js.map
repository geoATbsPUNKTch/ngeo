{"version":3,"sources":["webpack:///./src/filters.js","webpack:///./src/misc/ToolActivate.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/utils.js","webpack:///./src/misc/decorate.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./node_modules/openlayers/src/ol/format/KML.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./src/download/service.js","webpack:///./node_modules/openlayers/src/ol/format/GPX.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/draw/Controller.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/draw/features.js","webpack:///./src/draw/point.js","webpack:///./src/draw/rectangle.js","webpack:///./src/draw/text.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.prod.js","webpack:///./examples/drawfeature.js","webpack:///./src/draw/module.js","webpack:///./src/draw/component.js","webpack:///./src/measure/area.js","webpack:///./src/measure/azimut.js","webpack:///./src/measure/length.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/interaction/Measure.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js"],"names":["__webpack_require__","_ngeo2","default","Scalify","$filter","numberFilter","filterFn","scale","text","module","filter","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","undefined","Infinity","sign","Math","abs","nb_decimal","floor","log","factor","pow","round","decimal","unit","str_number","length","substring","groups","str_unit","index","unshift","join","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","opt_type","divisor","prefix","index_max","postfix","space","NumberCoordinates","coordinates","opt_fractionDigits","opt_template","template","x","y","fractionDigits","parseInt","replace","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","_math2","modulo","dms","d","m","s","_string2","padNumber","charAt","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","_ngeo","toolContext","activePropertyName","this","getActive","setActive","newVal","__webpack_exports__","DEFAULT_WMS_VERSION","exports","angular","requires","push","name","btnGroupComponent_","$parse","restrict","controller","link","scope","element","attrs","assign","$watch","buttons_","some","buttonModel","newValue","directive","BtnGroupController","$scope","scope_","prototype","activate","forEach","expressionFn","i","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","on","$apply","$setViewValue","$viewValue","$render","toggleClass","geometry","multiGeom","_MultiPoint2","appendPoint","_MultiLineString2","appendLineString","_MultiPolygon2","appendPolygon","navigator","userAgent","indexOf","hex","rgb","r","g","b","Error","colorZeroPadding","toString","queryString","queryData","pairs","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","pair","value","indexOfEquals","decodeURIComponent","err","return","queryItem","key","encodeURIComponent","interaction","_asserts2","assertInstanceof","_Interaction2","Object","defineProperty","get","set","val","layer","_Base2","configurable","getVisible","setVisible","getOpacity","setOpacity","source","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","parent","decrementLoadCount_","decrement_","getLayers","olEvent","getSource","fail","$applyAsync","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","unitPrefixFormat","numberFormat","opt_options","options","_Measure2","call","continueMsg","document","createElement","textContent","assert","ol","inherits","createDrawInteraction","style","_DrawAzimut2","handleMeasure","callback","geom","sketchFeature","getGeometry","_GeometryCollection2","line","getGeometries","_LineString2","getFormattedAzimutRadius","getMap","getView","getProjection","proj","Projection","decimals","precision","getLastCoordinate","projection","formatLength","formatAzimut","output","getFormattedAzimut","getFormattedLength","format","getAzimut","coords","getCoordinates","dx","dy","rad","acos","sqrt","PI","_Pointer2","handleDownEvent","handleDownEvent_","handleEvent","handleEvent_","handleUpEvent","handleUpEvent_","downPx_","source_","started_","sketchFeature_","sketchPoint_","squaredClickTolerance_","sketchLayer_","_Vector2","_Vector4","useSpatialIndex","wrapX","_Draw2","getDefaultStyleFunction","_events2","listen","updateState_","event","pixel","downPx","clickPx","pass","handlePointerMove_","finishDrawing_","startDrawing_","mapBrowserEvent","type","modifyDrawing_","createOrUpdateSketchPoint_","coordinate","slice","_Feature2","_Point2","updateSketchFeatures_","sketchPointGeom","setCoordinates","sketchFeatures","clear","addFeatures","start","circle","_Circle2","setGeometry","dispatchEvent","Event","geometries","getGeometriesArray","last","setRadius","getLength","abortDrawing_","shouldStopEvent","_functions2","FALSE","map","active","setMap","addFeature","$rootScope","groups_","registerTool","groupName","tool","opt_defaultActivate","_this","entries","unlisten","oldVal","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterTool","splice","unregisterGroup","activateTool","deactivateTool","hasActiveTool","service","__WEBPACK_IMPORTED_MODULE_26__xml_js__","KML","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","DEFAULT_STYLE_ARRAY_","createStyleDefaults_","defaultDataProjection","__WEBPACK_IMPORTED_MODULE_18__proj_js__","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","__WEBPACK_IMPORTED_MODULE_0__index_js__","GX_NAMESPACE_URIS_","NAMESPACE_URIS_","SCHEMA_LOCATION_","DEFAULT_COLOR_","DEFAULT_FILL_STYLE_","__WEBPACK_IMPORTED_MODULE_19__style_Fill_js__","color","DEFAULT_IMAGE_STYLE_ANCHOR_","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_","__WEBPACK_IMPORTED_MODULE_21__style_IconAnchorUnits_js__","PIXELS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_","DEFAULT_IMAGE_STYLE_SIZE_","DEFAULT_IMAGE_STYLE_SRC_","DEFAULT_IMAGE_SCALE_MULTIPLIER_","DEFAULT_IMAGE_STYLE_","__WEBPACK_IMPORTED_MODULE_20__style_Icon_js__","anchor","anchorOrigin","__WEBPACK_IMPORTED_MODULE_22__style_IconOrigin_js__","BOTTOM_LEFT","anchorXUnits","anchorYUnits","crossOrigin","rotation","size","src","DEFAULT_NO_IMAGE_STYLE_","DEFAULT_STROKE_STYLE_","__WEBPACK_IMPORTED_MODULE_23__style_Stroke_js__","width","DEFAULT_TEXT_STROKE_STYLE_","DEFAULT_TEXT_STYLE_","__WEBPACK_IMPORTED_MODULE_25__style_Text_js__","font","fill","stroke","DEFAULT_STYLE_","__WEBPACK_IMPORTED_MODULE_24__style_Style_js__","image","zIndex","ICON_ANCHOR_UNITS_MAP_","fraction","FRACTION","pixels","insetPixels","createNameStyleFunction_","foundStyle","textStyle","textOffset","textAlign","getImage","imageSize","getImageSize","imageScale","getScale","getText","foundText","clone","setFont","getFont","setScale","setFill","getFill","setStroke","getStroke","setText","setOffsetX","setOffsetY","setTextAlign","createFeatureStyleFunction_","styleUrl","sharedStyles","resolution","nameStyle","drawName","getType","__WEBPACK_IMPORTED_MODULE_10__geom_GeometryType_js__","POINT","concat","findStyle_","styleValue","Array","isArray","readColor_","node","getAllTextContent","exec","hexColor","substr","readFlatCoordinates_","flatCoordinates","re","parseFloat","z","readURI_","trim","baseURI","window","location","href","URL","readVec2_","origin","xunits","getAttribute","yunits","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale_","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","readDecimal","readStyleMapValue_","objectStack","pushParseAndPop","STYLE_MAP_PARSERS_","IconStyleParser_","object","ICON_STYLE_PARSERS_","styleObject","IconObject","drawIcon","keys","offset","hotSpot","test","w","h","heading","__WEBPACK_IMPORTED_MODULE_17__math_js__","imageStyle","offsetOrigin","LabelStyleParser_","LABEL_STYLE_PARSERS_","LineStyleParser_","LINE_STYLE_PARSERS_","strokeStyle","PolyStyleParser_","POLY_STYLE_PARSERS_","fillStyle","outline","readFlatLinearRing_","FLAT_LINEAR_RING_PARSERS_","gxCoordParser_","readGxMultiTrack_","lineStrings","GX_MULTITRACK_GEOMETRY_PARSERS_","multiLineString","__WEBPACK_IMPORTED_MODULE_12__geom_MultiLineString_js__","setLineStrings","readGxTrack_","gxTrackObject","whens","GX_TRACK_PARSERS_","ii","min","lineString","__WEBPACK_IMPORTED_MODULE_11__geom_LineString_js__","setFlatCoordinates","__WEBPACK_IMPORTED_MODULE_9__geom_GeometryLayout_js__","XYZM","readIcon_","iconObject","ICON_PARSERS_","readFlatCoordinatesFromNode_","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLineString_","properties","EXTRUDE_AND_ALTITUDE_MODE_PARSERS_","XYZ","setProperties","readLinearRing_","polygon","__WEBPACK_IMPORTED_MODULE_16__geom_Polygon_js__","readMultiGeometry_","multiGeometry","MULTI_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryCollection_js__","layout","homogeneous","point","getLayout","getFlatCoordinates","__WEBPACK_IMPORTED_MODULE_2__array_js__","__WEBPACK_IMPORTED_MODULE_13__geom_MultiPoint_js__","setCommonGeometryProperties_","LINE_STRING","POLYGON","__WEBPACK_IMPORTED_MODULE_14__geom_MultiPolygon_js__","setPolygons","GEOMETRY_COLLECTION","__WEBPACK_IMPORTED_MODULE_3__asserts_js__","readPoint_","__WEBPACK_IMPORTED_MODULE_15__geom_Point_js__","readPolygon_","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","ends","readStyle_","STYLE_PARSERS_","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","DataParser_","parseNode","DATA_PARSERS_","featureObject","displayName","ExtendedDataParser_","EXTENDED_DATA_PARSERS_","RegionParser_","REGION_PARSERS_","PairDataParser_","pairObject","PAIR_PARSERS_","Style","PlacemarkStyleMapParser_","styleMapValue","placemarkObject","SchemaDataParser_","SCHEMA_DATA_PARSERS_","SimpleDataParser_","data","readString","LatLonAltBoxParser_","LAT_LON_ALT_BOX_PARSERS_","regionObject","extent","LodParser_","LOD_PARSERS_","lodObject","innerBoundaryIsParser_","flatLinearRing","INNER_BOUNDARY_IS_PARSERS_","outerBoundaryIsParser_","OUTER_BOUNDARY_IS_PARSERS_","LinkParser_","LINK_PARSERS_","whenParser_","when","Date","parse","isNaN","makeStructureNS","makeObjectPropertySetter","Data","SchemaData","LatLonAltBox","Lod","altitudeMode","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","extrude","readBoolean","tessellate","makeReplacer","innerBoundaryIs","outerBoundaryIs","coord","Icon","LinearRing","LineString","makeArrayPusher","MultiGeometry","Point","Polygon","Track","NETWORK_LINK_PARSERS_","ExtendedData","Region","Link","address","description","open","phoneNumber","visibility","PLACEMARK_PARSERS_","StyleMap","MultiTrack","SimpleData","IconStyle","LabelStyle","LineStyle","PolyStyle","Pair","readDocumentOrFolder_","parsersNS","Document","makeArrayExtender","Folder","Placemark","readPlacemark_","readSharedStyle_","bind","readSharedStyleMap_","features","feature","__WEBPACK_IMPORTED_MODULE_1__Feature_js__","id","setId","__WEBPACK_IMPORTED_MODULE_5__format_Feature_js__","styleFunction","setStyle","styleUri","readFeature","readFeatureFromNode","namespaceURI","getReadOptions","readFeatures","readFeaturesFromNode","localName","n","firstElementChild","nextElementSibling","fs","readName","isDocument","readNameFromDocument","isNode","readNameFromNode","doc","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","obj","readRegion","regions","readRegionFromDocument","readRegionFromNode","readProjection","writeColorTextNode_","rgba","__WEBPACK_IMPORTED_MODULE_4__color_js__","abgr","writeStringTextNode","writeCoordinatesTextNode_","dimension","context","stride","XY","XYM","writeDataNode_","setAttribute","pushSerializeAndPop","EXTENDEDDATA_NODE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","writeDataNodeName_","writeCDATASection","writeDataNodeValue_","writeDocument_","DOCUMENT_SERIALIZERS_","DOCUMENT_NODE_FACTORY_","writeExtendedData_","namesAndValues","names","values","DATA_NODE_FACTORY_","writeIcon_","icon","parentNode","orderedKeys","ICON_SEQUENCE_","makeSequence","ICON_SERIALIZERS_","GX_NODE_FACTORY_","writeIconStyle_","getSrc","getSize","iconImageSize","iconProperties","getAnchor","getOrigin","getRotation","ICON_STYLE_SEQUENCE_","ICON_STYLE_SERIALIZERS_","writeLabelStyle_","getColor","LABEL_STYLE_SEQUENCE_","LABEL_STYLE_SERIALIZERS_","writeLineStyle_","getWidth","LINE_STYLE_SEQUENCE_","LINE_STYLE_SERIALIZERS_","writeMultiGeometry_","factory","GEOMETRY_NODE_FACTORY_","MULTI_POINT","getPoints","POINT_NODE_FACTORY_","MULTI_LINE_STRING","getLineStrings","LINE_STRING_NODE_FACTORY_","MULTI_POLYGON","getPolygons","POLYGON_NODE_FACTORY_","MULTI_GEOMETRY_SERIALIZERS_","writeBoundaryIs_","linearRing","BOUNDARY_IS_SERIALIZERS_","LINEAR_RING_NODE_FACTORY_","writePlacemark_","getId","getProperties","getGeometryName","sort","v","PLACEMARK_SERIALIZERS_","EXTENDEDDATA_NODE_FACTORY_","getStyleFunction","styles","PLACEMARK_SEQUENCE_","writePrimitiveGeometry_","getStride","PRIMITIVE_GEOMETRY_SEQUENCE_","PRIMITIVE_GEOMETRY_SERIALIZERS_","writePolygon_","linearRings","getLinearRings","outerRing","shift","POLYGON_SERIALIZERS_","INNER_BOUNDARY_NODE_FACTORY_","OUTER_BOUNDARY_NODE_FACTORY_","writePolyStyle_","POLY_STYLE_SERIALIZERS_","COLOR_NODE_FACTORY_","writeScaleTextNode_","writeDecimalTextNode","writeStyle_","STYLE_SEQUENCE_","STYLE_SERIALIZERS_","writeVec2_","vec2","KML_SEQUENCE_","KML_SERIALIZERS_","makeChildAppender","GEOMETRY_TYPE_TO_NODENAME_","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","writeBooleanTextNode","opt_nodeName","createElementNS","makeSimpleNodeFactory","writeFeatures","writeFeaturesNode","adaptOptions","kml","xmlnsUri","xmlSchemaInstanceUri","setAttributeNS","_ol_Image_","pixelRatio","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","unlistenByKey","ol_Image","ImageWMS","source_Image","attributions","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","CHANGE","handleImageChange","getImageLoadFunction","asserts","getCode","WMSServerType","dpi","bbox","axisOrientation","getAxisOrientation","uri","appendParams","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","$injector","$filter_","decimals_","has","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","filterName","goog","assertFunction","projection_","download_","setProjection","opt_select","getStyle","supportsVertex_","getVertexStyle","getHaloStyle_","GeometryType","getLineStringStyle_","getPointStyle_","CIRCLE","RECTANGLE","getPolygonStyle_","TEXT","getTextStyle_","constructor","strokeWidth","getStrokeProperty","showLabel","getShowLabelProperty","showMeasure","getShowMeasureProperty","getRGBAColorProperty","_Style2","_Stroke2","textLabelValues","getMeasure","getNameProperty","textLabelValue","createTextStyle_","getSizeProperty","radius","_Fill2","offsetY","optNumber","attrib","assertNumber","getNumber","opacity","getOpacityProperty","fillColor","azimut","FeatureProperties","AZIMUT","getRadiusLine","angle","offsetX","cos","sin","getAngleProperty","createEditingStyles","white","blue","console","opt_incGeomFunc","incGeomFunc","_RegularShape2","points","innerMultiCoordinates","multiCoordinates","supported","_array2","includes","haloSize","getFilteredFeatureValues","ANGLE","getColorProperty","assertString","COLOR","_color2","fromString","NAME","OPACITY","SHOW_MEASURE","assertBoolean","SHOW_LABEL","SIZE","STROKE","export","formatType","FormatType","GPX","exportGPX","exportKML","_GPX2","export_","_KML2","fileName","opt_mimeType","mimeType","clones","writeOptions","dataProjection","featureProjection","_Text2","measure","_MeasureAzimut2","getFormattedArea","getFormattedPoint","args","apply","_toConsumableArray","IS_TEXT","IS_CIRCLE","IS_RECTANGLE","panMapToFeature","opt_panDuration","panDuration","assertArray","view","calculateExtent","intersectsExtent","mapCenter","getCenter","featureCenter","getCoordinateAt","getInteriorPoint","_extent2","animate","duration","endPoint","getNonSpatialProperties","geometryName","nonSpatialProperties","clearNonSpatialProperties","_service2","factory_","content","opt_fileType","fileType","_utils2","isSafari","blob","Blob","saveAs","__WEBPACK_IMPORTED_MODULE_11__xml_js__","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_10__proj_js__","readExtensions_","readExtensions","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","RTE_PARSERS","cmt","desc","parseLink","readNonNegativeInteger","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","appendCoordinate","ele","time","readDateTime","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","writeNonNegativeIntegerTextNode","makeArraySerializer","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","geometryLayout","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","writeDateTimeTextNode","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","nodeName","GPX_SERIALIZERS","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","hasZ","hasM","applyLayoutOptions_","__WEBPACK_IMPORTED_MODULE_7__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_6__geom_GeometryLayout_js__","handleReadExtensions_","extensionsNode","featureReader","gpx","br","appendChild","_Polygon2","gettextCatalog","ngeoFeatureHelper","ngeoFeatures","gettextCatalog_","getString","featureHelper_","ngeoFeatures_","interactions_","drawPoint","measureLength","measureArea","measureAzimut","drawRectangle","drawText","registerInteraction","_decorate2","addInteraction","handleActiveChange","handleDrawEnd","sketch","detail","prop","_features2","_FeatureHelper2","arguments","_Event2","_ol2","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","res","fixedTileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__string_js__","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","_Collection2","directive_","drawFeatureCtrl","geometryFunction","end","maxPoints","featureUidToGroupIndex_","layer_","styleFunction_","updateWhileAnimating","updateWhileInteracting","groupIndex","featureUid","getUid","removeFeature","group","_obj2","isEmpty","getLayer","getFeatureOverlay","defaultFunction","_FeatureOverlay2","init","createFunction","condition","opt_message","var_args","e","code","app","ngeo","_module2","_module4","_ToolActivateMgr2","MainController","ngeoToolActivateMgr","vector","_Map2","layers","_Tile2","_OSM2","_View2","zoom","drawActive","drawToolActivate","_ToolActivate2","dummyActive","dummyToolActivate","_Controller2","_component2","_point2","_rectangle2","_text2","_area2","_azimut2","_length2","bindToController","$compile","helpMsg","contMsg","_MeasureArea2","startMsg","fromCircle","_MeasureLength2","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","item","mapUid","previous","setAt","removeAt","insertAt","_CustomEvent2","current","updateDimensions","dimensions","baseBgLayer","getArray","_Layer2","hasUpdates","updatedDimensions","refresh","$window","ngeoSyncDataSourcesMap","$eval","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","handleViewResolutionChange_","syncDataSourcesToResolution_","unByKey","evt","target","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","manager","manager_","features_","index_","setFeatures","handleFeatureAdd_","handleFeatureRemove_","$element","$attrs","mapExpr","recenter","attr","fit","setZoom","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","templateUrl","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","newLength","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","_this2","__WEBPACK_IMPORTED_MODULE_9__math_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","__WEBPACK_IMPORTED_MODULE_1__array_js__","multiPoint","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","j","squaredDistance","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","setLayout","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","setFlatCoordinatesInternal","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","ends_","maxDelta_","maxDeltaRevision_","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","multiPolygon","len","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","jj","endss","polygons","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","__WEBPACK_IMPORTED_MODULE_6__obj_js__","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","rotate","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","DrawEventType","Draw","Pointer","shouldHandle_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","maxPoints_","finishCondition_","finishCondition","functions","opt_geometry","Circle","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","geometryFunction_","finishCoordinate_","sketchCoords_","sketchLine_","sketchLineCoords_","clickTolerance","overlay_","Vector","source_Vector","geometryName_","condition_","noModifierKeys","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","ol_Object","getChangeEventType","Property","ACTIVE","createDefaultEditing","MapBrowserEventType","POINTERDRAG","addToDrawing_","POINTERDOWN","POINTERMOVE","DBLCLICK","circleMode","finishDrawing","atFinish_","stopPropagation","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","getPixelFromCoordinate","Feature","setGeometryName","ring","getLinearRing","pop","removeLastPoint","extend","overlaySource","createRegularPolygon","opt_sides","opt_angle","atan","createBox","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","__WEBPACK_IMPORTED_MODULE_0__xml_js__","readBooleanString","dateTime","readDecimalString","readNonNegativeIntegerString","bool","DOCUMENT","createCDATASection","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","toPrecision","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","delta","getRadius","getRadiusSquared_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","circleExtent","intersectsCoordinate","setCenter","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","transform","MeasureBaseOptions","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","displayHelpTooltip_","displayHelpTooltip","changeEventKey_","postcomposeEventKey_","vectorLayer_","drawInteraction_","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","SPHERE_WGS84","_sphere2","_EPSG2","RADIUS","geodesicArea","getFormattedCircleArea","c1","c2","haversineDistance","dragging","_dom2","removeChildren","setPosition","getDrawInteraction","prevMap","removeInteraction","createMeasureTooltip_","innerHTML","classList","add","setOffset","createHelpTooltip_","removeHelpTooltip_","_Overlay2","positioning","addOverlay","removeOverlay","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","XMLSerializer","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","readFeatureFromDocument","readFeaturesFromDocument","readGeometry","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeature","writeFeatureNode","serializeToString","writeGeometry","writeGeometryNode","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","_ol_style_Text_","font_","rotation_","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","stroke_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotateWithView","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setMaxAngle","setPlacement","setRotation","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding"],"mappings":"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","file":"drawfeature.min.js","sourcesContent":["/**\n * @module ngeo.filters\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo';\nimport olMath from 'ol/math';\nimport olString from 'ol/string';\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nngeoBase.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoScalify', ngeoBase.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nngeoBase.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoNumber', ngeoBase.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nngeoBase.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoUnitPrefix', ngeoBase.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nngeoBase.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoNumberCoordinates', ngeoBase.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nngeoBase.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoDMSCoordinates', ngeoBase.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * @return {function(?):string} The filter function.\n *//* @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nngeoBase.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nngeoBase.module.filter('ngeoTrustHtml', ngeoBase.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filters.js","/**\n * @module ngeo.misc.ToolActivate\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivate.js","/**\n * @type {string} Default WMS version.\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.misc.btnComponent\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n *//* @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach(function(expressionFn, i) {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  }, this);\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/btnComponent.js","/**\n * @module ngeo.utils\n*/\nconst exports = {};\nimport olGeomLineString from 'ol/geom/LineString';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon';\nimport olGeomPoint from 'ol/geom/Point';\nimport olGeomPolygon from 'ol/geom/Polygon';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    if (value) {\n      queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n    } else {\n      queryItem.push(encodeURIComponent(key));\n    }\n  }\n  return queryItem.join('&');\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.misc.decorate\n*/\nconst exports = {};\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport olInteractionInteraction from 'ol/interaction/Interaction';\nimport olLayerBase from 'ol/layer/Base';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerLayer from 'ol/layer/Layer';\nimport olSourceImage from 'ol/source/Image';\nimport olSourceTile from 'ol/source/Tile';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.interaction.MeasureAzimut\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection';\nimport olGeomLineString from 'ol/geom/LineString';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, opt_options) {\n\n  const options = opt_options || {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nol.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), ol.proj.Projection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureAzimut.js","/**\n * @module ngeo.interaction.DrawAzimut\n*/\nimport googAsserts from 'goog/asserts';\nimport olFeature from 'ol/Feature';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent';\nimport olEvents from 'ol/events';\nimport olFunctions from 'ol/functions';\nimport olGeomCircle from 'ol/geom/Circle';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection';\nimport olGeomLineString from 'ol/geom/LineString';\nimport olGeomPoint from 'ol/geom/Point';\nimport olInteractionDraw from 'ol/interaction/Draw';\nimport olInteractionPointer from 'ol/interaction/Pointer';\nimport olLayerVector from 'ol/layer/Vector';\nimport olSourceVector from 'ol/source/Vector';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style !== undefined ?\n      options.style : olInteractionDraw.getDefaultStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nol.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), sketchFeature));\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/DrawAzimut.js","/**\n * @module ngeo.misc.ToolActivateMgr\n*/\nimport ngeoBase from 'ngeo';\nimport googAsserts from 'goog/asserts';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n *//* @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivateMgr.js","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_style_Fill_ from '../style/Fill.js';\nimport _ol_style_Icon_ from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport _ol_style_Stroke_ from '../style/Stroke.js';\nimport _ol_style_Style_ from '../style/Style.js';\nimport _ol_style_Text_ from '../style/Text.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.KMLOptions=} opt_options Options.\n * @api\n */\nvar KML = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!KML.DEFAULT_STYLE_ARRAY_) {\n    KML.createStyleDefaults_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : KML.DEFAULT_STYLE_ARRAY_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {Object.<string, (Array.<ol.style.Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.GX_NAMESPACE_URIS_ = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.NAMESPACE_URIS_ = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nKML.SCHEMA_LOCATION_ = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @return {Array.<ol.style.Style>} Default style.\n * @private\n */\nKML.createStyleDefaults_ = function() {\n  /**\n   * @const\n   * @type {ol.Color}\n   * @private\n   */\n  KML.DEFAULT_COLOR_ = [255, 255, 255, 1];\n\n  /**\n   * @const\n   * @type {ol.style.Fill}\n   * @private\n   */\n  KML.DEFAULT_FILL_STYLE_ = new _ol_style_Fill_({\n    color: KML.DEFAULT_COLOR_\n  });\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_ = [20, 2]; // FIXME maybe [8, 32] ?\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SIZE_ = [64, 64];\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SRC_ =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_ = 0.5;\n\n  /**\n   * @const\n   * @type {ol.style.Image}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ = new _ol_style_Icon_({\n    anchor: KML.DEFAULT_IMAGE_STYLE_ANCHOR_,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_,\n    anchorYUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_,\n    size: KML.DEFAULT_IMAGE_STYLE_SIZE_,\n    src: KML.DEFAULT_IMAGE_STYLE_SRC_\n  });\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_NO_IMAGE_STYLE_ = 'NO_IMAGE';\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_STROKE_STYLE_ = new _ol_style_Stroke_({\n    color: KML.DEFAULT_COLOR_,\n    width: 1\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STROKE_STYLE_ = new _ol_style_Stroke_({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Text}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STYLE_ = new _ol_style_Text_({\n    font: 'bold 16px Helvetica',\n    fill: KML.DEFAULT_FILL_STYLE_,\n    stroke: KML.DEFAULT_TEXT_STROKE_STYLE_,\n    scale: 0.8\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Style}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ = new _ol_style_Style_({\n    fill: KML.DEFAULT_FILL_STYLE_,\n    image: KML.DEFAULT_IMAGE_STYLE_,\n    text: KML.DEFAULT_TEXT_STYLE_,\n    stroke: KML.DEFAULT_STROKE_STYLE_,\n    zIndex: 0\n  });\n\n  /**\n   * @const\n   * @type {Array.<ol.style.Style>}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ARRAY_ = [KML.DEFAULT_STYLE_];\n\n  return KML.DEFAULT_STYLE_ARRAY_;\n};\n\n\n/**\n * @const\n * @type {Object.<string, ol.style.IconAnchorUnits>}\n * @private\n */\nKML.ICON_ANCHOR_UNITS_MAP_ = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {ol.style.Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {ol.style.Style} style Style.\n * @private\n */\nKML.createNameStyleFunction_ = function(foundStyle, name) {\n  var textStyle = null;\n  var textOffset = [0, 0];\n  var textAlign = 'start';\n  if (foundStyle.getImage()) {\n    var imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n    }\n    if (imageSize.length == 2) {\n      var imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    var foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || KML.DEFAULT_TEXT_STYLE_.getFont());\n    textStyle.setScale(foundText.getScale() || KML.DEFAULT_TEXT_STYLE_.getScale());\n    textStyle.setFill(foundText.getFill() || KML.DEFAULT_TEXT_STYLE_.getFill());\n    textStyle.setStroke(foundText.getStroke() || KML.DEFAULT_TEXT_STROKE_STYLE_);\n  } else {\n    textStyle = KML.DEFAULT_TEXT_STYLE_.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  var nameStyle = new _ol_style_Style_({\n    text: textStyle\n  });\n  return nameStyle;\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles Shared\n *          styles.\n * @param {boolean|undefined} showPointNames true to show names for point\n *          placemarks.\n * @return {ol.FeatureStyleFunction} Feature style function.\n * @private\n */\nKML.createFeatureStyleFunction_ = function(style, styleUrl,\n    defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n         * @param {number} resolution Resolution.\n         * @return {Array.<ol.style.Style>} Style.\n         * @this {ol.Feature}\n         */\n    function(resolution) {\n      var drawName = showPointNames;\n      /** @type {ol.style.Style|undefined} */\n      var nameStyle;\n      var name = '';\n      if (drawName) {\n        if (this.getGeometry()) {\n          drawName = (this.getGeometry().getType() ===\n                        GeometryType.POINT);\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (this.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(style[0],\n              name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        var foundStyle = KML.findStyle_(styleUrl, defaultStyle,\n            sharedStyles);\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(foundStyle[0],\n              name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = KML.createNameStyleFunction_(defaultStyle[0],\n            name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|string|undefined} styleValue Style value.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<ol.style.Style>} Style.\n * @private\n */\nKML.findStyle_ = function(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return KML.findStyle_(\n        sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.Color|undefined} Color.\n */\nKML.readColor_ = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    var hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nKML.readFlatCoordinates_ = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  var flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  var re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  var m;\n  while ((m = re.exec(s))) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {string} URI.\n */\nKML.readURI_ = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false).trim();\n  var baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    var url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.KMLVec2_} Vec2.\n */\nKML.readVec2_ = function(node) {\n  var xunits = node.getAttribute('xunits');\n  var yunits = node.getAttribute('yunits');\n  var origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: KML.ICON_ANCHOR_UNITS_MAP_[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: KML.ICON_ANCHOR_UNITS_MAP_[yunits],\n    origin: origin\n  };\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {number|undefined} Scale.\n */\nKML.readScale_ = function(node) {\n  return XSD.readDecimal(node);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>|string|undefined} StyleMap.\n */\nKML.readStyleMapValue_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(undefined,\n      KML.STYLE_MAP_PARSERS_, node, objectStack);\n};\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.IconStyleParser_ = function(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  var object = _ol_xml_.pushParseAndPop(\n      {}, KML.ICON_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var IconObject = 'Icon' in object ? object['Icon'] : {};\n  var drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  var src;\n  var href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = KML.DEFAULT_IMAGE_STYLE_SRC_;\n  }\n  var anchor, anchorXUnits, anchorYUnits;\n  var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  var hotSpot = /** @type {ol.KMLVec2_|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === KML.DEFAULT_IMAGE_STYLE_SRC_) {\n    anchor = KML.DEFAULT_IMAGE_STYLE_ANCHOR_;\n    anchorXUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_;\n    anchorYUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  var offset;\n  var x = /** @type {number|undefined} */\n      (IconObject['x']);\n  var y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  var size;\n  var w = /** @type {number|undefined} */\n      (IconObject['w']);\n  var h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  var rotation;\n  var heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  var scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == KML.DEFAULT_IMAGE_STYLE_SRC_) {\n      size = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n      if (scale === undefined) {\n        scale = KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_;\n      }\n    }\n\n    var imageStyle = new _ol_style_Icon_({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = KML.DEFAULT_NO_IMAGE_STYLE_;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LabelStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  var object = _ol_xml_.pushParseAndPop(\n      {}, KML.LABEL_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var textStyle = new _ol_style_Text_({\n    fill: new _ol_style_Fill_({\n      color: /** @type {ol.Color} */\n          ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LineStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  var object = _ol_xml_.pushParseAndPop(\n      {}, KML.LINE_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var strokeStyle = new _ol_style_Stroke_({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PolyStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  var object = _ol_xml_.pushParseAndPop(\n      {}, KML.POLY_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var fillStyle = new _ol_style_Fill_({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  var fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  var outline =\n      /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nKML.readFlatLinearRing_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n      KML.FLAT_LINEAR_RING_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.gxCoordParser_ = function(node, objectStack) {\n  var gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  var flatCoordinates = gxTrackObject.flatCoordinates;\n  var s = _ol_xml_.getAllTextContent(node, false);\n  var re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  var m = re.exec(s);\n  if (m) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nKML.readGxMultiTrack_ = function(node, objectStack) {\n  var lineStrings = _ol_xml_.pushParseAndPop([],\n      KML.GX_MULTITRACK_GEOMETRY_PARSERS_, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  var multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readGxTrack_ = function(node, objectStack) {\n  var gxTrackObject = _ol_xml_.pushParseAndPop(\n      /** @type {ol.KMLGxTrackObject_} */ ({\n        flatCoordinates: [],\n        whens: []\n      }), KML.GX_TRACK_PARSERS_, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  var flatCoordinates = gxTrackObject.flatCoordinates;\n  var whens = gxTrackObject.whens;\n  var i, ii;\n  for (i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii;\n    ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  var lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object} Icon object.\n */\nKML.readIcon_ = function(node, objectStack) {\n  var iconObject = _ol_xml_.pushParseAndPop(\n      {}, KML.ICON_PARSERS_, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nKML.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n      KML.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readLineString_ = function(node, objectStack) {\n  var properties = _ol_xml_.pushParseAndPop({},\n      KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n      objectStack);\n  var flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    var lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readLinearRing_ = function(node, objectStack) {\n  var properties = _ol_xml_.pushParseAndPop({},\n      KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n      objectStack);\n  var flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    var polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n        [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\nKML.readMultiGeometry_ = function(node, objectStack) {\n  var geometries = _ol_xml_.pushParseAndPop([],\n      KML.MULTI_GEOMETRY_PARSERS_, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {ol.geom.Geometry} */\n  var multiGeometry;\n  var homogeneous = true;\n  var type = geometries[0].getType();\n  var geometry, i, ii;\n  for (i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    var layout;\n    var flatCoordinates;\n    if (type == GeometryType.POINT) {\n      var point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {ol.geom.Geometry} */ (multiGeometry);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Point|undefined} Point.\n */\nKML.readPoint_ = function(node, objectStack) {\n  var properties = _ol_xml_.pushParseAndPop({},\n      KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n      objectStack);\n  var flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    var point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readPolygon_ = function(node, objectStack) {\n  var properties = _ol_xml_.pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n      KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n      objectStack);\n  var flatLinearRings = _ol_xml_.pushParseAndPop([null],\n      KML.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    var polygon = new Polygon(null);\n    var flatCoordinates = flatLinearRings[0];\n    var ends = [flatCoordinates.length];\n    var i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n        GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>} Style.\n */\nKML.readStyle_ = function(node, objectStack) {\n  var styleObject = _ol_xml_.pushParseAndPop(\n      {}, KML.STYLE_PARSERS_, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  var fillStyle = /** @type {ol.style.Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : KML.DEFAULT_FILL_STYLE_);\n  var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  var imageStyle = /** @type {ol.style.Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : KML.DEFAULT_IMAGE_STYLE_);\n  if (imageStyle == KML.DEFAULT_NO_IMAGE_STYLE_) {\n    imageStyle = undefined;\n  }\n  var textStyle = /** @type {ol.style.Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : KML.DEFAULT_TEXT_STYLE_);\n  var strokeStyle = /** @type {ol.style.Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : KML.DEFAULT_STROKE_STYLE_);\n  var outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new _ol_style_Style_({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n};\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {ol.geom.MultiPoint|ol.geom.MultiLineString|ol.geom.MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<ol.geom.Geometry>} geometries List of geometries.\n * @private\n */\nKML.setCommonGeometryProperties_ = function(multiGeometry,\n    geometries) {\n  var ii = geometries.length;\n  var extrudes = new Array(geometries.length);\n  var tessellates = new Array(geometries.length);\n  var altitudeModes = new Array(geometries.length);\n  var geometry, i, hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (i = 0; i < ii; ++i) {\n    geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.DataParser_ = function(node, objectStack) {\n  var name = node.getAttribute('name');\n  _ol_xml_.parseNode(KML.DATA_PARSERS_, node, objectStack);\n  var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.ExtendedDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.EXTENDED_DATA_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.RegionParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.REGION_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PairDataParser_ = function(node, objectStack) {\n  var pairObject = _ol_xml_.pushParseAndPop(\n      {}, KML.PAIR_PARSERS_, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  var key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    var styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    var Style = /** @type {ol.style.Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PlacemarkStyleMapParser_ = function(node, objectStack) {\n  var styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  var placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SchemaDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.SCHEMA_DATA_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SimpleDataParser_ = function(node, objectStack) {\n  var name = node.getAttribute('name');\n  if (name !== null) {\n    var data = XSD.readString(node);\n    var featureObject =\n        /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LatLonAltBoxParser_ = function(node, objectStack) {\n  var object = _ol_xml_.pushParseAndPop({}, KML.LAT_LON_ALT_BOX_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LodParser_ = function(node, objectStack) {\n  var object = _ol_xml_.pushParseAndPop({}, KML.LOD_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  var flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n      KML.INNER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  var flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n      KML.OUTER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LinkParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.LINK_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.whenParser_ = function(node, objectStack) {\n  var gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  var whens = gxTrackObject.whens;\n  var s = _ol_xml_.getAllTextContent(node, false);\n  var when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'displayName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'value': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTENDED_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Data': KML.DataParser_,\n      'SchemaData': KML.SchemaDataParser_\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.REGION_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LatLonAltBox': KML.LatLonAltBoxParser_,\n      'Lod': KML.LodParser_\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LAT_LON_ALT_BOX_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'minAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'maxAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'north': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'south': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'east': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'west': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LOD_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'minLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'maxLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'minFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'maxFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'extrude': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n      'tessellate': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n      'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RING_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RINGS_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'innerBoundaryIs': KML.innerBoundaryIsParser_,\n      'outerBoundaryIs': KML.outerBoundaryIsParser_\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_TRACK_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'when': KML.whenParser_\n    }, _ol_xml_.makeStructureNS(\n        KML.GX_NAMESPACE_URIS_, {\n          'coord': KML.gxCoordParser_\n        }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GEOMETRY_FLAT_COORDINATES_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n    }, _ol_xml_.makeStructureNS(\n        KML.GX_NAMESPACE_URIS_, {\n          'x': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n          'y': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n          'w': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n          'h': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n        }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Icon': _ol_xml_.makeObjectPropertySetter(KML.readIcon_),\n      'heading': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'hotSpot': _ol_xml_.makeObjectPropertySetter(KML.readVec2_),\n      'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.INNER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LABEL_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n      'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINE_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n      'width': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.MULTI_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LineString': _ol_xml_.makeArrayPusher(KML.readLineString_),\n      'LinearRing': _ol_xml_.makeArrayPusher(KML.readLinearRing_),\n      'MultiGeometry': _ol_xml_.makeArrayPusher(KML.readMultiGeometry_),\n      'Point': _ol_xml_.makeArrayPusher(KML.readPoint_),\n      'Polygon': _ol_xml_.makeArrayPusher(KML.readPolygon_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_MULTITRACK_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'Track': _ol_xml_.makeArrayPusher(KML.readGxTrack_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.NETWORK_LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'ExtendedData': KML.ExtendedDataParser_,\n      'Region': KML.RegionParser_,\n      'Link': KML.LinkParser_,\n      'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n      'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.OUTER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PAIR_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n      'key': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PLACEMARK_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'ExtendedData': KML.ExtendedDataParser_,\n      'Region': KML.RegionParser_,\n      'MultiGeometry': _ol_xml_.makeObjectPropertySetter(\n          KML.readMultiGeometry_, 'geometry'),\n      'LineString': _ol_xml_.makeObjectPropertySetter(\n          KML.readLineString_, 'geometry'),\n      'LinearRing': _ol_xml_.makeObjectPropertySetter(\n          KML.readLinearRing_, 'geometry'),\n      'Point': _ol_xml_.makeObjectPropertySetter(\n          KML.readPoint_, 'geometry'),\n      'Polygon': _ol_xml_.makeObjectPropertySetter(\n          KML.readPolygon_, 'geometry'),\n      'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n      'StyleMap': KML.PlacemarkStyleMapParser_,\n      'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n      'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_),\n      'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n    }, _ol_xml_.makeStructureNS(\n        KML.GX_NAMESPACE_URIS_, {\n          'MultiTrack': _ol_xml_.makeObjectPropertySetter(\n              KML.readGxMultiTrack_, 'geometry'),\n          'Track': _ol_xml_.makeObjectPropertySetter(\n              KML.readGxTrack_, 'geometry')\n        }\n    ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.POLY_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n      'fill': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n      'outline': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.SCHEMA_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'SimpleData': KML.SimpleDataParser_\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'IconStyle': KML.IconStyleParser_,\n      'LabelStyle': KML.LabelStyleParser_,\n      'LineStyle': KML.LineStyleParser_,\n      'PolyStyle': KML.PolyStyleParser_\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_MAP_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Pair': KML.PairDataParser_\n    });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  var parsersNS = _ol_xml_.makeStructureNS(\n      KML.NAMESPACE_URIS_, {\n        'Document': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Folder': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Placemark': _ol_xml_.makeArrayPusher(this.readPlacemark_, this),\n        'Style': this.readSharedStyle_.bind(this),\n        'StyleMap': this.readSharedStyleMap_.bind(this)\n      });\n  /** @type {Array.<ol.Feature>} */\n  var features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  var object = _ol_xml_.pushParseAndPop({'geometry': null},\n      KML.PLACEMARK_PARSERS_, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  var feature = new Feature();\n  var id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  var options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n\n  var geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    var style = object['Style'];\n    var styleUrl = object['styleUrl'];\n    var styleFunction = KML.createFeatureStyleFunction_(\n        style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n        this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  var id = node.getAttribute('id');\n  if (id !== null) {\n    var style = KML.readStyle_(node, objectStack);\n    if (style) {\n      var styleUri;\n      var baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        var url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  var id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  var styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  var styleUri;\n  var baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    var url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return null;\n  }\n  var feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return [];\n  }\n  var features;\n  var localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n        node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    var feature = this.readPlacemark_(\n        node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    var n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      var fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Souce.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  var n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      var name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  var n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'name') {\n      return XSD.readString(n);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      var name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  var networkLinks = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n        /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n        /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  var n, networkLinks = [];\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  var n, networkLinks = [];\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      var obj = _ol_xml_.pushParseAndPop({}, KML.NETWORK_LINK_PARSERS_,\n          n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  var regions = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n        /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n        /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  var n, regions = [];\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  var n, regions = [];\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'Region') {\n      var obj = _ol_xml_.pushParseAndPop({}, KML.REGION_PARSERS_,\n          n, []);\n      regions.push(obj);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {ol.Color|string} color Color.\n * @private\n */\nKML.writeColorTextNode_ = function(node, color) {\n  var rgba = asArray(color);\n  var opacity = (rgba.length == 4) ? rgba[3] : 1;\n  var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  var i;\n  for (i = 0; i < 4; ++i) {\n    var hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  XSD.writeStringTextNode(node, abgr.join(''));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeCoordinatesTextNode_ = function(node, coordinates, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n\n  var layout = context['layout'];\n  var stride = context['stride'];\n\n  var dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  var d, i;\n  var ii = coordinates.length;\n  var text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  XSD.writeStringTextNode(node, text);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeDataNode_ = function(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n          _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n          _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n * @private\n */\nKML.writeDataNodeName_ = function(node, name) {\n  XSD.writeCDATASection(node, name);\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n * @private\n */\nKML.writeDataNodeValue_ = function(node, value) {\n  XSD.writeStringTextNode(node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writeDocument_ = function(node, features, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.DOCUMENT_SERIALIZERS_,\n      KML.DOCUMENT_NODE_FACTORY_, features, objectStack, undefined,\n      this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeExtendedData_ = function(node, namesAndValues, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var names = namesAndValues.names, values = namesAndValues.values;\n  var length = names.length;\n\n  for (var i = 0; i < length; i++) {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        KML.DATA_NODE_FACTORY_, [{name: names[i], value: values[i]}], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIcon_ = function(node, icon, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.ICON_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n      KML.ICON_SERIALIZERS_, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n      values, objectStack, orderedKeys);\n  orderedKeys =\n      KML.ICON_SEQUENCE_[KML.GX_NAMESPACE_URIS_[0]];\n  values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_SERIALIZERS_,\n      KML.GX_NODE_FACTORY_, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIconStyle_ = function(node, style, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var properties = {};\n  var src = style.getSrc();\n  var size = style.getSize();\n  var iconImageSize = style.getImageSize();\n  var iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    var anchor = style.getAnchor(); // top-left\n    var origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      var /** @type {ol.KMLVec2_} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  var scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  var rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.ICON_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_STYLE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLabelStyle_ = function(node, style, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var properties = {};\n  var fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  var scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys =\n      KML.LABEL_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LABEL_STYLE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLineStyle_ = function(node, style, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.LINE_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LINE_STYLE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeMultiGeometry_ = function(node, geometry, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  var context = {node: node};\n  var type = geometry.getType();\n  /** @type {Array.<ol.geom.Geometry>} */\n  var geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  var factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    factory = KML.GEOMETRY_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {ol.geom.MultiPoint} */ (geometry).getPoints();\n    factory = KML.POINT_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {ol.geom.MultiLineString} */ (geometry)).getLineStrings();\n    factory = KML.LINE_STRING_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {ol.geom.MultiPolygon} */ (geometry)).getPolygons();\n    factory = KML.POLYGON_NODE_FACTORY_;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  _ol_xml_.pushSerializeAndPop(context,\n      KML.MULTI_GEOMETRY_SERIALIZERS_, factory,\n      geometries, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeBoundaryIs_ = function(node, linearRing, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context,\n      KML.BOUNDARY_IS_SERIALIZERS_,\n      KML.LINEAR_RING_NODE_FACTORY_, [linearRing], objectStack);\n};\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writePlacemark_ = function(node, feature, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  var properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  var filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  var keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    var sequence = _ol_xml_.makeSequence(properties, keys);\n    var namesAndValues = {names: keys, values: sequence};\n    _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n        KML.EXTENDEDDATA_NODE_FACTORY_, [namesAndValues], objectStack);\n  }\n\n  var styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    var styles = styleFunction.call(feature, 0);\n    if (styles) {\n      var style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      var textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.PLACEMARK_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  var options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      KML.GEOMETRY_NODE_FACTORY_, [geometry], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePrimitiveGeometry_ = function(node, geometry, objectStack) {\n  var flatCoordinates = geometry.getFlatCoordinates();\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  var properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.PRIMITIVE_GEOMETRY_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PRIMITIVE_GEOMETRY_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolygon_ = function(node, polygon, objectStack) {\n  var linearRings = polygon.getLinearRings();\n  var outerRing = linearRings.shift();\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  // inner rings\n  _ol_xml_.pushSerializeAndPop(context,\n      KML.POLYGON_SERIALIZERS_,\n      KML.INNER_BOUNDARY_NODE_FACTORY_,\n      linearRings, objectStack);\n  // outer ring\n  _ol_xml_.pushSerializeAndPop(context,\n      KML.POLYGON_SERIALIZERS_,\n      KML.OUTER_BOUNDARY_NODE_FACTORY_,\n      [outerRing], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolyStyle_ = function(node, style, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.POLY_STYLE_SERIALIZERS_,\n      KML.COLOR_NODE_FACTORY_, [style.getColor()], objectStack);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n * @private\n */\nKML.writeScaleTextNode_ = function(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  XSD.writeDecimalTextNode(node,\n      Math.round(scale * 1e6) / 1e6);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeStyle_ = function(node, style, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var properties = {};\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  var imageStyle = style.getImage();\n  var textStyle = style.getText();\n  if (imageStyle instanceof _ol_style_Icon_) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.STYLE_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.STYLE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {ol.KMLVec2_} vec2 Vec2.\n * @private\n */\nKML.writeVec2_ = function(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.KML_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'Document', 'Placemark'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.KML_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Document': _ol_xml_.makeChildAppender(KML.writeDocument_),\n      'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.DOCUMENT_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.EXTENDEDDATA_NODE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Data': _ol_xml_.makeChildAppender(KML.writeDataNode_),\n      'value': _ol_xml_.makeChildAppender(KML.writeDataNodeValue_),\n      'displayName': _ol_xml_.makeChildAppender(KML.writeDataNodeName_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nKML.GEOMETRY_TYPE_TO_NODENAME_ = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'href'\n    ],\n    _ol_xml_.makeStructureNS(KML.GX_NAMESPACE_URIS_, [\n      'x', 'y', 'w', 'h'\n    ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'href': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n    }, _ol_xml_.makeStructureNS(\n        KML.GX_NAMESPACE_URIS_, {\n          'x': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n          'y': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n          'w': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n          'h': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n        }));\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'scale', 'heading', 'Icon', 'hotSpot'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Icon': _ol_xml_.makeChildAppender(KML.writeIcon_),\n      'heading': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'hotSpot': _ol_xml_.makeChildAppender(KML.writeVec2_),\n      'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LABEL_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'color', 'scale'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LABEL_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n      'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LINE_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'color', 'width'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LINE_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n      'width': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.BOUNDARY_IS_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LinearRing': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.MULTI_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LineString': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_),\n      'Point': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_),\n      'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n      'GeometryCollection': _ol_xml_.makeChildAppender(\n          KML.writeMultiGeometry_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PLACEMARK_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n      'styleUrl', 'Style'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PLACEMARK_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'ExtendedData': _ol_xml_.makeChildAppender(\n          KML.writeExtendedData_),\n      'MultiGeometry': _ol_xml_.makeChildAppender(\n          KML.writeMultiGeometry_),\n      'LineString': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_),\n      'LinearRing': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_),\n      'Point': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_),\n      'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n      'Style': _ol_xml_.makeChildAppender(KML.writeStyle_),\n      'address': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'description': _ol_xml_.makeChildAppender(\n          XSD.writeStringTextNode),\n      'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'open': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n      'phoneNumber': _ol_xml_.makeChildAppender(\n          XSD.writeStringTextNode),\n      'styleUrl': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'visibility': _ol_xml_.makeChildAppender(\n          XSD.writeBooleanTextNode)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'extrude': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n      'tessellate': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n      'altitudeMode': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'coordinates': _ol_xml_.makeChildAppender(\n          KML.writeCoordinatesTextNode_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLYGON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'outerBoundaryIs': _ol_xml_.makeChildAppender(\n          KML.writeBoundaryIs_),\n      'innerBoundaryIs': _ol_xml_.makeChildAppender(\n          KML.writeBoundaryIs_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLY_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'IconStyle': _ol_xml_.makeChildAppender(KML.writeIconStyle_),\n      'LabelStyle': _ol_xml_.makeChildAppender(KML.writeLabelStyle_),\n      'LineStyle': _ol_xml_.makeChildAppender(KML.writeLineStyle_),\n      'PolyStyle': _ol_xml_.makeChildAppender(KML.writePolyStyle_)\n    });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GX_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  return _ol_xml_.createElementNS(KML.GX_NAMESPACE_URIS_[0],\n      'gx:' + opt_nodeName);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.DOCUMENT_NODE_FACTORY_ = function(value, objectStack,\n    opt_nodeName) {\n  var parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GEOMETRY_NODE_FACTORY_ = function(value, objectStack,\n    opt_nodeName) {\n  if (value) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return _ol_xml_.createElementNS(parentNode.namespaceURI,\n        KML.GEOMETRY_TYPE_TO_NODENAME_[/** @type {ol.geom.Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.COLOR_NODE_FACTORY_ = _ol_xml_.makeSimpleNodeFactory('color');\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.DATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Data');\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.EXTENDEDDATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.INNER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POINT_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINE_STRING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINEAR_RING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POLYGON_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Polygon');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.OUTER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  var kml = _ol_xml_.createElementNS(KML.NAMESPACE_URIS_[4], 'kml');\n  var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  var xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:gx',\n      KML.GX_NAMESPACE_URIS_[0]);\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(kml, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n      KML.SCHEMA_LOCATION_);\n\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: kml};\n  var properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  var orderedKeys = KML.KML_SEQUENCE_[kml.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.KML_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n      this);\n  return kml;\n};\nexport default KML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/KML.js\n// module id = 148\n// module chunks = 0 1 2 10","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nvar _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nvar ImageWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var extent = getForViewAndSize(coordinate, resolution, 0,\n      ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n      extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var imageResolution = resolution / pixelRatio;\n\n  var center = getCenter(extent);\n  var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n  var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n  var image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  var params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return _ol_uri_.appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n    imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.FeatureHelper\n*/\nimport ngeoBase from 'ngeo';\n\n/** @suppress {extraRequire} */\nimport ngeoFilters from 'ngeo/filters';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service';\n\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut';\nimport olArray from 'ol/array';\nimport olColor from 'ol/color';\nimport olExtent from 'ol/extent';\nimport olFeature from 'ol/Feature';\nimport olGeomLineString from 'ol/geom/LineString';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint';\nimport olGeomPoint from 'ol/geom/Point';\nimport olGeomPolygon from 'ol/geom/Polygon';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon';\nimport olFormatGPX from 'ol/format/GPX';\nimport olFormatKML from 'ol/format/KML';\nimport olStyleCircle from 'ol/style/Circle';\nimport olStyleFill from 'ol/style/Fill';\nimport olStyleRegularShape from 'ol/style/RegularShape';\nimport olStyleStroke from 'ol/style/Stroke';\nimport olStyleStyle from 'ol/style/Style';\nimport olStyleText from 'ol/style/Text';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n *//* @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    goog.asserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoBase.GeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoBase.GeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoBase.GeometryType.CIRCLE:\n    case ngeoBase.GeometryType.POLYGON:\n    case ngeoBase.GeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoBase.GeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  goog.asserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        offsetY: -(size + 10 / 2 + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return goog.asserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return goog.asserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoBase.FeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            offsetY: -(8 / 2 + 4)\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoBase.GeometryType.LINE_STRING,\n    ngeoBase.GeometryType.POLYGON,\n    ngeoBase.GeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoBase.GeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoBase.GeometryType.LINE_STRING:\n    case ngeoBase.GeometryType.CIRCLE:\n    case ngeoBase.GeometryType.POLYGON:\n    case ngeoBase.GeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoBase.GeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  goog.asserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoBase.FeatureProperties.ANGLE)));\n  goog.asserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = goog.asserts.assertString(feature.get(ngeoBase.FeatureProperties.COLOR));\n\n  goog.asserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = goog.asserts.assertString(feature.get(ngeoBase.FeatureProperties.NAME));\n  goog.asserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoBase.FeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoBase.FeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return goog.asserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoBase.FeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return goog.asserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoBase.FeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoBase.FeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  goog.asserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoBase.GeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoBase.FeatureProperties.AZIMUT);\n      goog.asserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  goog.asserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoBase.FeatureProperties.IS_TEXT)) {\n      type = ngeoBase.GeometryType.TEXT;\n    } else {\n      type = ngeoBase.GeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoBase.GeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoBase.FeatureProperties.IS_CIRCLE)) {\n      type = ngeoBase.GeometryType.CIRCLE;\n    } else if (feature.get(ngeoBase.FeatureProperties.IS_RECTANGLE)) {\n      type = ngeoBase.GeometryType.RECTANGLE;\n    } else {\n      type = ngeoBase.GeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoBase.GeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoBase.GeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoBase.GeometryType.MULTI_LINE_STRING;\n  }\n\n  goog.asserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  goog.asserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    goog.asserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoFeatureHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/FeatureHelper.js","/**\n * @module ngeo.download.service\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoUtils from 'ngeo/utils';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/download/service.js","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.GPXOptions=} opt_options Options.\n * @api\n */\nvar GPX = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(ol.Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (ol.Feature|undefined)>}\n */\nvar FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar GPX_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'rte': _ol_xml_.makeArrayPusher(readRte),\n      'trk': _ol_xml_.makeArrayPusher(readTrk),\n      'wpt': _ol_xml_.makeArrayPusher(readWpt)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar LINK_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'text': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkText'),\n      'type': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkType')\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar RTE_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'link': parseLink,\n      'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n      'extensions': parseExtensions,\n      'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'rtept': parseRtePt\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar RTEPT_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar TRK_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'link': parseLink,\n      'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n      'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'extensions': parseExtensions,\n      'trkseg': parseTrkSeg\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar TRKSEG_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'trkpt': parseTrkPt\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar TRKPT_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar WPT_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime),\n      'magvar': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'geoidheight': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'link': parseLink,\n      'sym': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'fix': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'sat': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n      'hdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'vdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'pdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'ageofdgpsdata': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'dgpsid': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n      'extensions': parseExtensions\n    });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nvar LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nvar LINK_SERIALIZERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'text': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nvar RTE_SEQUENCE = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, [\n      'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nvar RTE_SERIALIZERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'link': _ol_xml_.makeChildAppender(writeLink),\n      'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n      'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'rtept': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeWptType))\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nvar RTEPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, [\n      'ele', 'time'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nvar TRK_SEQUENCE = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, [\n      'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nvar TRK_SERIALIZERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'link': _ol_xml_.makeChildAppender(writeLink),\n      'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n      'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'trkseg': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeTrkSeg))\n    });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nvar TRKSEG_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nvar TRKSEG_SERIALIZERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'trkpt': _ol_xml_.makeChildAppender(writeWptType)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nvar WPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, [\n      'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n      'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n      'ageofdgpsdata', 'dgpsid'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nvar WPT_TYPE_SERIALIZERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'ele': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'time': _ol_xml_.makeChildAppender(XSD.writeDateTimeTextNode),\n      'magvar': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'geoidheight': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'link': _ol_xml_.makeChildAppender(writeLink),\n      'sym': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'fix': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'sat': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n      'hdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'vdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'pdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'ageofdgpsdata': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'dgpsid': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  var geometry = /** @type {ol.Feature} */ (value).getGeometry();\n  if (geometry) {\n    var nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      var parentNode = objectStack[objectStack.length - 1].node;\n      return _ol_xml_.createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nvar GPX_SERIALIZERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'rte': _ol_xml_.makeChildAppender(writeRte),\n      'trk': _ol_xml_.makeChildAppender(writeTrk),\n      'wpt': _ol_xml_.makeChildAppender(writeWpt)\n    });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n      parseFloat(node.getAttribute('lon')),\n      parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {ol.geom.GeometryLayout} Layout.\n */\nGPX.applyLayoutOptions_ = function(layoutOptions, flatCoordinates, ends) {\n  var layout = GeometryLayout.XY;\n  var stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    var i, ii;\n    for (i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  _ol_xml_.parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  var values = _ol_xml_.pushParseAndPop(\n      {}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    var rteValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = /** @type {Array.<number>} */\n        (rteValues['flatCoordinates']);\n    var layoutOptions = /** @type {ol.LayoutOptions} */\n        (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  var values = _ol_xml_.pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    var trkValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = /** @type {Array.<number>} */\n        (trkValues['flatCoordinates']);\n    var layoutOptions = /** @type {ol.LayoutOptions} */\n        (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  _ol_xml_.parseNode(TRKSEG_PARSERS, node, objectStack);\n  var flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  var ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  var options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  var values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  var layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  var layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates);\n  var geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  var options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  var values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  var ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  var layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  var layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates, ends);\n  var geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  var options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  var values = _ol_xml_.pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var layoutOptions = /** @type {ol.LayoutOptions} */ ({});\n  var coordinates = appendCoordinate([], layoutOptions, node, values);\n  var layout = GPX.applyLayoutOptions_(layoutOptions, coordinates);\n  var geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (var i = 0, ii = features.length; i < ii; ++i) {\n    var feature = features[i];\n    if (this.readExtensions_) {\n      var extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  var featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  var feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<ol.Feature>} */\n    var features = _ol_xml_.pushParseAndPop([], GPX_PARSERS,\n        node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  var context = objectStack[objectStack.length - 1];\n  var properties = context['properties'];\n  var link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ ({node: node}),\n      LINK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n      link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var parentNode = context.node;\n  var namespaceURI = parentNode.namespaceURI;\n  var properties = context['properties'];\n  //FIXME Projection handling\n  _ol_xml_.setAttributeNS(node, null, 'lat', coordinate[1]);\n  _ol_xml_.setAttributeNS(node, null, 'lon', coordinate[0]);\n  var geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  var orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      ({node: node, 'properties': properties}),\n      WPT_TYPE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n      values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  var options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  var properties = feature.getProperties();\n  var context = {node: node, 'properties': properties};\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n      RTE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n      values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  var options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  var properties = feature.getProperties();\n  /** @type {ol.XmlNodeStackItem} */\n  var context = {node: node, 'properties': properties};\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n      TRK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n      values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  var context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  _ol_xml_.pushSerializeAndPop(context,\n      TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n      lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  var options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  var context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  var gpx = _ol_xml_.createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  var xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(gpx, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(gpx, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n      SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GPX.js\n// module id = 169\n// module chunks = 0 1 2","/**\n * @module ngeo.interaction.MeasureArea\n*/\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure';\nimport olGeomPolygon from 'ol/geom/Polygon';\nimport olInteractionDraw from 'ol/interaction/Draw';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the polygon.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click starting point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nol.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = goog.asserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  goog.asserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureArea.js","/**\n * @module ngeo.interaction.MeasureLength\n*/\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure';\nimport olGeomLineString from 'ol/geom/LineString';\nimport olInteractionDraw from 'ol/interaction/Draw';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the line.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click last point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nol.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = goog.asserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  goog.asserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureLength.js","/**\n * @module ngeo.draw.Controller\n*/\nimport ngeoBase from 'ngeo';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper';\nimport olFeature from 'ol/Feature';\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @constructor\n * @private\n * @struct\n *//* @ngInject\n * @ngdoc controller\n * @ngname ngeoDrawfeatureController\n */\nconst exports = function($scope, $sce, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * Alternate collection of features in which to push the drawn features.\n   * If not defined, then `ngeoFeatures` is used instead.\n   * @type {!ol.Collection.<!ol.Feature>|undefined}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showMeasure;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n  // Fill the string collection\n  gettextCatalog.getString('Point');\n  gettextCatalog.getString('LineString');\n  gettextCatalog.getString('Polygon');\n  gettextCatalog.getString('Circle');\n  gettextCatalog.getString('Rectangle');\n  gettextCatalog.getString('Text');\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = ngeoFeatures;\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint;\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength;\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea;\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawRectangle;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawText;\n\n\n  // Watch the \"active\" property, and disable the draw interactions\n  // when \"active\" gets set to false.\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      if (newVal === false) {\n        this.interactions_.forEach((interaction) => {\n          interaction.setActive(false);\n        }, this);\n      }\n    }\n  );\n\n};\n\n\n/**\n * Register a draw|measure interaction by setting it inactive, decorating it\n * and adding it to the map\n * @param {ol.interaction.Interaction} interaction Interaction to register.\n * @export\n */\nexports.prototype.registerInteraction = function(\n  interaction) {\n  this.interactions_.push(interaction);\n  interaction.setActive(false);\n  ngeoMiscDecorate.interaction(interaction);\n  this.map.addInteraction(interaction);\n};\n\n\n/**\n * Called when any of the draw or measure interaction active property changes.\n * Set the active property of this directive accordingly, i.e. if at least\n * one of the draw or measure is active then the active property is set to true.\n * @param {ol.Object.Event} event Event.\n * @export\n */\nexports.prototype.handleActiveChange = function(event) {\n  this.active = this.interactions_.some(interaction => interaction.getActive(), this);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Set the default properties\n * for its style, then set its style and add it to the features collection.\n * @param {string} type Type of geometry being drawn.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleDrawEnd = function(type, event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  goog.asserts.assert(sketch);\n\n  const azimut = sketch.get('azimut');\n\n  const features = this.features || this.ngeoFeatures_;\n\n  const feature = new olFeature(sketch.getGeometry());\n\n  const prop = ngeoBase.FeatureProperties;\n\n  switch (type) {\n    case ngeoBase.GeometryType.CIRCLE:\n      feature.set(prop.IS_CIRCLE, true);\n      if (azimut !== undefined) {\n        feature.set(prop.AZIMUT, azimut);\n      }\n      break;\n    case ngeoBase.GeometryType.TEXT:\n      feature.set(prop.IS_TEXT, true);\n      break;\n    case ngeoBase.GeometryType.RECTANGLE:\n      feature.set(prop.IS_RECTANGLE, true);\n      break;\n    default:\n      break;\n  }\n\n  /**\n   * @type {string}\n   */\n  const name = this.gettextCatalog_.getString(type);\n  feature.set(prop.NAME, `${name} ${features.getLength() + 1}`);\n\n  /**\n   * @type {string}\n   */\n  const color = type !== ngeoBase.GeometryType.TEXT ? '#DB4436' : '#000000';\n  feature.set(prop.COLOR, color);\n\n  feature.set(prop.ANGLE, 0);\n  feature.set(prop.OPACITY, 0.2);\n  feature.set(prop.SHOW_LABEL, false);\n  feature.set(prop.SHOW_MEASURE, this.showMeasure ? true : false);\n  feature.set(prop.SIZE, 10);\n  feature.set(prop.STROKE, 2);\n\n  // set style\n  this.featureHelper_.setStyle(feature);\n\n  // push in collection\n  features.push(feature);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDrawfeatureController', [\n  ngeoDrawFeatures.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\nexports.module.controller('ngeoDrawfeatureController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/Controller.js","/**\n * @module ngeo.CustomEvent\n*/\nimport olBase from 'ol';\nimport olEventsEvent from 'ol/events/Event';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nvar TileWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var params = options.params || {};\n\n  var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, params) {\n\n  var urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    var tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  var url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    var index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return _ol_uri_.appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  var i = 0;\n  var res = [];\n  for (var key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.draw.features\n*/\nimport ngeoBase from 'ngeo';\nimport olCollection from 'ol/Collection';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.draw.point\n*/\nimport ngeoBase from 'ngeo';\nimport olEvents from 'ol/events';\nimport olInteractionDraw from 'ol/interaction/Draw';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawpoint', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawPoint = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawPoint);\n      drawFeatureCtrl.drawPoint = drawPoint;\n\n      olEvents.listen(\n        drawPoint,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoBase.GeometryType.POINT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawPoint,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawpoint', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/point.js","/**\n * @module ngeo.draw.rectangle\n*/\nimport ngeoBase from 'ngeo';\nimport olEvents from 'ol/events';\nimport olInteractionDraw from 'ol/interaction/Draw';\nimport olGeomPolygon from 'ol/geom/Polygon';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawrectangle', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawrectangle\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawRectangle = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n        geometryFunction: (coordinates, geometry) => {\n          if (!geometry) {\n            geometry = new olGeomPolygon(null);\n          }\n          const start = coordinates[0];\n          const end = coordinates[1];\n          geometry.setCoordinates([\n            [start, [start[0], end[1]], end, [end[0], start[1]], start]\n          ]);\n          return geometry;\n        },\n        maxPoints: 2\n      });\n\n      drawFeatureCtrl.registerInteraction(drawRectangle);\n      drawFeatureCtrl.drawRectangle = drawRectangle;\n\n      olEvents.listen(\n        drawRectangle,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoBase.GeometryType.RECTANGLE),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawRectangle,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawrectangle', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/rectangle.js","/**\n * @module ngeo.draw.text\n*/\nimport ngeoBase from 'ngeo';\nimport olEvents from 'ol/events';\nimport olInteractionDraw from 'ol/interaction/Draw';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawtext', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawtext\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawText = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawText);\n      drawFeatureCtrl.drawText = drawText;\n\n      olEvents.listen(\n        drawText,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoBase.GeometryType.TEXT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawText,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawtext', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/text.js","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo';\nimport olCollection from 'ol/Collection';\n\n\nngeoBase.module.value('ngeoDataSources', new olCollection());\n\n\n/**\n * @typedef {!ol.Collection.<!ngeo.datasource.DataSource>}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olLayerVector from 'ol/layer/Vector';\nimport olObj from 'ol/obj';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleStyle from 'ol/style/Style';\nimport googAsserts from 'goog/asserts';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {};\nexports.assertNumber = function(value, opt_message, var_args) {};\nexports.assertString = function(value, opt_message, var_args) {};\nexports.assertFunction = function(value, opt_message, var_args) {};\nexports.assertObject = function(value, opt_message, var_args) {};\nexports.assertArray = function(value, opt_message, var_args) {};\nexports.assertBoolean = function(value, opt_message, var_args) {};\nexports.assertElement = function(value, opt_message, var_args) {};\nexports.assertInstanceof = function(value, type, opt_message, var_args) {};\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.prod.js","/**\n * @module app.drawfeature\n*/\nconst exports = {};\n\nimport 'examples/drawfeature.css';\nimport './common_dependencies.js';\nimport ngeoDrawModule from 'ngeo/draw/module';\n\nimport ngeoMapModule from 'ngeo/map/module';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr';\nimport olMap from 'ol/Map';\nimport olView from 'ol/View';\nimport olLayerTile from 'ol/layer/Tile';\nimport olLayerVector from 'ol/layer/Vector';\nimport olSourceOSM from 'ol/source/OSM';\nimport olSourceVector from 'ol/source/Vector';\n\n\n/** @type {!angular.Module} **/\napp.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoDrawModule.name,\n  ngeoMapModule.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n *//* @ngInject\n * @constructor\n */\napp.MainController = function($scope, ngeoFeatures, ngeoToolActivateMgr) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  const vector = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: false,\n      features: ngeoFeatures\n    })\n  });\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      }),\n      vector\n    ],\n    view: new olView({\n      center: [0, 0],\n      zoom: 3\n    })\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  const drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n  ngeoToolActivateMgr.registerTool('mapTools', drawToolActivate, false);\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.dummyActive = true;\n\n  const dummyToolActivate = new ngeoMiscToolActivate(this, 'dummyActive');\n  ngeoToolActivateMgr.registerTool('mapTools', dummyToolActivate, true);\n};\n\n\napp.module.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/drawfeature.js","/**\n * @module ngeo.draw.module\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoDrawComponent from 'ngeo/draw/component';\nimport ngeoDrawController from 'ngeo/draw/Controller';\nimport ngeoDrawFeatures from 'ngeo/draw/features';\nimport ngeoDrawPoint from 'ngeo/draw/point';\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle';\nimport ngeoDrawText from 'ngeo/draw/text';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoDrawController.module.name,\n  ngeoDrawComponent.name,\n  ngeoDrawFeatures.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/module.js","/**\n * @module ngeo.draw.component\n*/\nimport ngeoDrawController from 'ngeo/draw/Controller';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawPoint from 'ngeo/draw/point';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawText from 'ngeo/draw/text';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureArea from 'ngeo/measure/area';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureAzimut from 'ngeo/measure/azimut';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureLength from 'ngeo/measure/length';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawfeature', [\n  ngeoDrawController.module.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n  ngeoMeasureArea.name,\n  ngeoMeasureAzimut.name,\n  ngeoMeasureLength.name,\n]);\n\nngeo.module.requires.push(exports.name);\n\n/**\n * Directive used to draw vector features on a map.\n * Example:\n *\n *     <ngeo-drawfeature\n *         ngeo-btn-group\n *         class=\"btn-group\"\n *         ngeo-drawfeature-active=\"ctrl.drawActive\"\n *         ngeo-drawfeature-map=\"::ctrl.map\">\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawpoint\n *         class=\"btn btn-default ngeo-drawfeature-point\"\n *         ng-class=\"{active: dfCtrl.drawPoint.active}\"\n *         ng-model=\"dfCtrl.drawPoint.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurelength\n *         class=\"btn btn-default ngeo-drawfeature-linestring\"\n *         ng-class=\"{active: dfCtrl.measureLength.active}\"\n *         ng-model=\"dfCtrl.measureLength.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurearea\n *         class=\"btn btn-default ngeo-drawfeature-polygon\"\n *         ng-class=\"{active: dfCtrl.measureArea.active}\"\n *         ng-model=\"dfCtrl.measureArea.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measureazimut\n *         class=\"btn btn-default ngeo-drawfeature-circle\"\n *         ng-class=\"{active: dfCtrl.measureAzimut.active}\"\n *         ng-model=\"dfCtrl.measureAzimut.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawrectangle\n *         class=\"btn btn-default ngeo-drawfeature-rectangle\"\n *         ng-class=\"{active: dfCtrl.drawRectangle.active}\"\n *         ng-model=\"dfCtrl.drawRectangle.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawtext\n *         class=\"btn btn-default ngeo-drawfeature-text\"\n *         ng-class=\"{active: dfCtrl.drawText.active}\"\n *         ng-model=\"dfCtrl.drawText.active\"></a>\n *     </ngeo-drawfeature>\n *\n * @htmlAttribute {boolean} ngeo-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {!ol.Collection=} ngeo-drawfeature-features The features\n *     collection in which to push the drawn features. If none is provided,\n *     then the `ngeoFeatures` collection is used.\n * @htmlAttribute {ol.Map} ngeo-drawfeature-map The map.\n * @htmlAttribute {boolean} ngeo-drawfeature-showmeasure. Checks the\n *      checkbox in order to display the feature measurements as a label.\n *      Default to false.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoDrawfeatureController as dfCtrl',\n    scope: true,\n    bindToController: {\n      'active': '=ngeoDrawfeatureActive',\n      'features': '=?ngeoDrawfeatureFeatures',\n      'map': '=ngeoDrawfeatureMap',\n      'showMeasure': '=?ngeoDrawfeatureShowmeasure'\n    }\n  };\n};\n\nexports.directive('ngeoDrawfeature', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/component.js","/**\n * @module ngeo.measure.area\n*/\nimport ngeoBase from 'ngeo';\nimport olEvents from 'ol/events';\nimport olStyleStyle from 'ol/style/Style';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea';\nimport ngeoDrawController from 'ngeo/draw/Controller';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurearea', [\n  ngeoDrawController.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing polygon');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br/>' +\n          'Double-click or click starting point to finish');\n\n      const measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureArea);\n      drawFeatureCtrl.measureArea = measureArea;\n\n      olEvents.listen(\n        measureArea,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoBase.GeometryType.POLYGON),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureArea,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurearea', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/measure/area.js","/**\n * @module ngeo.measure.azimut\n*/\nimport ngeoBase from 'ngeo';\n\n/** @suppress {extraRequire} */\nimport ngeoFilters from 'ngeo/filters';\n\nimport olEvents from 'ol/events';\nimport olFeature from 'ol/Feature';\nimport olGeomPolygon from 'ol/geom/Polygon';\nimport olStyleStyle from 'ol/style/Style';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut';\nimport ngeoDrawController from 'ngeo/draw/Controller';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasureazimut', [\n  ngeoDrawController.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing circle');\n      const contMsg = gettextCatalog.getString('Click to finish');\n\n      const measureAzimut = new ngeoInteractionMeasureAzimut(\n        $filter('ngeoUnitPrefix'), $filter('number'), {\n          style: new olStyleStyle(),\n          startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n          continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n          precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n          decimals: $injector.has('ngeoMeasureDecimals') ? $injector.get('ngeoMeasureDecimals') : undefined\n        });\n\n      drawFeatureCtrl.registerInteraction(measureAzimut);\n      drawFeatureCtrl.measureAzimut = measureAzimut;\n\n      olEvents.listen(\n        measureAzimut,\n        'measureend',\n        /**\n         * @param {ngeox.MeasureEvent} event Event.\n         */\n        (event) => {\n          // In the case of azimut measure interaction, the feature's\n          // geometry is actually a collection (line + circle)\n          // For our purpose here, we only need the circle, which gets\n          // transformed into a polygon with 64 sides.\n          const geometry = /** @type {ol.geom.GeometryCollection} */\n                (event.detail.feature.getGeometry());\n          const circle = /** @type {ol.geom.Circle} */ (\n            geometry.getGeometries()[1]);\n          const polygon = olGeomPolygon.fromCircle(circle, 64);\n          event.feature = new olFeature(polygon);\n          const azimut = ngeoInteractionMeasureAzimut.getAzimut(\n            /** @type {ol.geom.LineString} */ (geometry.getGeometries()[0])\n          );\n          event.detail.feature.set('azimut', azimut);\n\n          drawFeatureCtrl.handleDrawEnd(ngeoBase.GeometryType.CIRCLE, event);\n        },\n        drawFeatureCtrl\n      );\n\n      olEvents.listen(\n        measureAzimut,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasureazimut', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/measure/azimut.js","/**\n * @module ngeo.measure.length\n*/\nimport ngeoBase from 'ngeo';\n\n/** @suppress {extraRequire} */\nimport ngeoFilters from 'ngeo/filters';\n\nimport olEvents from 'ol/events';\nimport olStyleStyle from 'ol/style/Style';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength';\nimport ngeoDrawController from 'ngeo/draw/Controller';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurelength', [\n  ngeoDrawController.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing line');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br/>' +\n          'Double-click or click last point to finish');\n\n      const measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureLength);\n      drawFeatureCtrl.measureLength = measureLength;\n\n      olEvents.listen(\n        measureLength,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoBase.GeometryType.LINE_STRING),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureLength,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurelength', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/measure/length.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr';\nimport ngeoMapDirective from 'ngeo/map/directive';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr';\nimport ngeoMapRecenter from 'ngeo/map/recenter';\nimport ngeoMapResizemap from 'ngeo/map/resizemap';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport ngeoCustomEvent from 'ngeo/CustomEvent';\nimport olBase from 'ol';\nimport olObservable from 'ol/Observable';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerLayer from 'ol/layer/Layer';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\nimport olSourceTileWMS from 'ol/source/TileWMS';\nimport olSourceWMTS from 'ol/source/WMTS';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap';\n\nimport olEvents from 'ol/events';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources';\n\nimport olEvents from 'ol/events';\nimport olObservable from 'ol/Observable';\nimport olView from 'ol/View';\nimport googAsserts from 'goog/asserts';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\nngeoBase.module.service(\n  'ngeoSyncDataSourcesMap', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olEvents from 'ol/events';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo';\nimport olArray from 'ol/array';\nimport olMap from 'ol/Map';\nimport olEvents from 'ol/events';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  var multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  var flatCoordinates = this.flatCoordinates;\n  var stride = this.stride;\n  var i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  var n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  var point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  var flatCoordinates = this.flatCoordinates;\n  var layout = this.layout;\n  var stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  var points = [];\n  var i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    var point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  var flatCoordinates = this.flatCoordinates;\n  var stride = this.stride;\n  var i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n        this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nvar OSM = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  var crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  var url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nvar XYZ = function(opt_options) {\n  var options = opt_options || {};\n  var projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  var multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  var lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  var flatCoordinates = this.flatCoordinates;\n  var ends = this.ends_;\n  var layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  var lineStrings = [];\n  var offset = 0;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  var midpoints = [];\n  var flatCoordinates = this.flatCoordinates;\n  var offset = 0;\n  var ends = this.ends_;\n  var stride = this.stride;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var midpoint = _ol_geom_flat_interpolate_.lineString(\n        flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n  var simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n      GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = _ol_geom_flat_deflate_.coordinatess(\n        this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var ends = [];\n  var i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    var lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  var ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    var offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  var multiPolygon = new MultiPolygon(null);\n\n  var len = this.endss_.length;\n  var newEndss = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  var flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n      flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    var flatCenters = _ol_geom_flat_center_.linearRingss(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  var interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n      this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    var flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n  var simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n      GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  var offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    var prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  var ends = this.endss_[index].slice();\n  var end = ends[ends.length - 1];\n  if (offset !== 0) {\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  var polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  var layout = this.layout;\n  var flatCoordinates = this.flatCoordinates;\n  var endss = this.endss_;\n  var polygons = [];\n  var offset = 0;\n  var i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    var polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n        layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = _ol_geom_flat_deflate_.coordinatesss(\n        this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var endss = [];\n  var i, ii, ends;\n  for (i = 0, ii = polygons.length; i < ii; ++i) {\n    var polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    var offset = flatCoordinates.length;\n    ends = polygon.getEnds();\n    var j, jj;\n    for (j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nvar GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  var clonedGeometries = [];\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  var i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  var i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  var geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    _ol_obj_.clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  var key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    var simplifiedGeometries = [];\n    var geometries = this.geometries_;\n    var simplified = false;\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      var geometry = geometries[i];\n      var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      var simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  var anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n      GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 72\n// module chunks = 0 1 2 3 4 5 7 9 10","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport _ol_interaction_Pointer_ from '../interaction/Pointer.js';\nimport _ol_interaction_Property_ from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport _ol_style_Style_ from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nvar Draw = function(options) {\n\n  _ol_interaction_Pointer_.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  var geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        var circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        var squaredLength = _ol_coordinate_.squaredDistance(\n            coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      var Constructor;\n      var mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        var geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction()\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n      BaseObject.getChangeEventType(_ol_interaction_Property_.ACTIVE),\n      this.updateState_, this);\n\n};\n\ninherits(Draw, _ol_interaction_Pointer_);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  var styles = _ol_style_Style_.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  _ol_interaction_Pointer_.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  var pass = true;\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (event.type === MapBrowserEventType.POINTERMOVE) {\n    pass = this.handlePointerMove_(event);\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n  return _ol_interaction_Pointer_.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  var pass = true;\n\n  this.handlePointerMove_(event);\n\n  var circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    var downPx = this.downPx_;\n    var clickPx = event.pixel;\n    var dx = downPx[0] - clickPx[0];\n    var dy = downPx[1] - clickPx[1];\n    var squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  var at = false;\n  if (this.sketchFeature_) {\n    var potentiallyDone = false;\n    var potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      var map = event.map;\n      for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        var finishCoordinate = potentiallyFinishCoordinates[i];\n        var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        var pixel = event.pixel;\n        var dx = pixel[0] - finishPixel[0];\n        var dy = pixel[1] - finishPixel[1];\n        var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  var coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    var sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  var start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n    if (this.mode_ === Draw.Mode_.CIRCLE) {\n      this.sketchLineCoords_ = this.sketchCoords_;\n    }\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n  }\n  var geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  var coordinate = event.coordinate;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    var sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  var sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    var ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  var coordinate = event.coordinate;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var done;\n  var coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  var sketchFeature = this.abortDrawing_();\n  var coordinates = this.sketchCoords_;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  var sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  var geometry = feature.getGeometry();\n  var lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  var sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  var overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  var map = this.getMap();\n  var active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      var center = coordinates[0];\n      var end = coordinates[1];\n      var radius = Math.sqrt(\n          _ol_coordinate_.squaredDistance(center, end));\n      var geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      var angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(coordinates);\n      var geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nvar XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  var dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  var m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  var date = new Date(dateTime * 1000);\n  var string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  var string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  var string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 79\n// module chunks = 0 1 2 5 10","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  var radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  var circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  var flatCoordinates = this.flatCoordinates;\n  var dx = x - flatCoordinates[0];\n  var dy = y - flatCoordinates[1];\n  var squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    var i;\n    if (squaredDistance === 0) {\n      for (i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      var delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  var flatCoordinates = this.flatCoordinates;\n  var dx = x - flatCoordinates[0];\n  var dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  var flatCoordinates = this.flatCoordinates;\n  var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  var circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    var center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  var stride = this.stride;\n  var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  var flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  var i;\n  for (i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = _ol_geom_flat_deflate_.coordinate(\n        flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    var i, ii;\n    for (i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 80\n// module chunks = 0 1 2 6 7 8 9 11 14","/**\n * @module ngeo.interaction.Measure\n*/\nimport ngeoCustomEvent from 'ngeo/CustomEvent';\nimport googAsserts from 'goog/asserts';\nimport olDom from 'ol/dom';\nimport olFeature from 'ol/Feature';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent';\nimport olOverlay from 'ol/Overlay';\nimport olSphere from 'ol/sphere';\nimport olEvents from 'ol/events';\nimport olInteractionInteraction from 'ol/interaction/Interaction';\nimport olLayerVector from 'ol/layer/Vector';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleFill from 'ol/style/Fill';\nimport olStyleStroke from 'ol/style/Stroke';\nimport olStyleStyle from 'ol/style/Style';\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nngeo.interaction.MeasureBaseOptions;\n\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ?\n    options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nol.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\nexports.SPHERE_WGS84 = new olSphere(olProjEPSG4326.RADIUS);\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(\n  polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (\n    polygon.clone().transform(projection, 'EPSG:4326'));\n  const coordinates = geom.getLinearRing(0).getCoordinates();\n  const area = Math.abs(exports.SPHERE_WGS84.geodesicArea(coordinates));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(\n  circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection,\n  precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = ol.proj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = ol.proj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += exports.SPHERE_WGS84.haversineDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(\n  point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  googAsserts.assert(this.changeEventKey_ !== null);\n  googAsserts.assert(this.postcomposeEventKey_ !== null);\n  olEvents.unlistenByKey(this.changeEventKey_);\n  olEvents.unlistenByKey(this.postcomposeEventKey_);\n  this.changeEventKey_ = null;\n  this.postcomposeEventKey_ = null;\n};\n\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nvar XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n        /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n    doc, opt_options) {\n  var features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n    doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  var features = [];\n  var n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n        /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  var node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  var node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  var node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 97\n// module chunks = 0 1 2 10","/**\n * @module ol/style/Text\n */\nimport _ol_style_Fill_ from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nvar _ol_style_Text_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new _ol_style_Fill_({color: _ol_style_Text_.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\n_ol_style_Text_.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\n_ol_style_Text_.prototype.clone = function() {\n  return new _ol_style_Text_({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\n_ol_style_Text_.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\n_ol_style_Text_.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\n_ol_style_Text_.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\n_ol_style_Text_.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\n_ol_style_Text_.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\n_ol_style_Text_.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_Text_.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\n_ol_style_Text_.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\n_ol_style_Text_.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\n_ol_style_Text_.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\n_ol_style_Text_.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\n_ol_style_Text_.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\n_ol_style_Text_.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_Text_.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\n_ol_style_Text_.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\n_ol_style_Text_.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\n_ol_style_Text_.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\n_ol_style_Text_.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\n_ol_style_Text_.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\n_ol_style_Text_.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\n_ol_style_Text_.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\n_ol_style_Text_.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\n_ol_style_Text_.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\n_ol_style_Text_.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\n_ol_style_Text_.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\n_ol_style_Text_.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\n_ol_style_Text_.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\n_ol_style_Text_.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\n_ol_style_Text_.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default _ol_style_Text_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 98\n// module chunks = 0 1 2 8 10 19 23"],"sourceRoot":""}