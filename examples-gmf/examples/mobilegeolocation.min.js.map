{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/message/Notification.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/GeolocationProperty.js","webpack:///./node_modules/openlayers/src/ol/Geolocation.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.prod.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./examples/mobilegeolocation.js","webpack:///./src/geolocation/mobile.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js"],"names":["__webpack_require__","d","__webpack_exports__","DEFAULT_WMS_VERSION","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","exports","prototype","showMessage","message","show","object","this","getMessageObjects","forEach","error","Type","ERROR","info","INFORMATION","success","SUCCESS","warn","WARNING","opt_type","msgObjects","msgObject","defaultType","push","msg","type","undefined","Array","isArray","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","call","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","Object","ol","getImage","handleImageError_","unlistenImage_","changed","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","unlistenByKey","ol_Image","ImageWMS","opt_options","options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","assign","x","Math","floor","y","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","listen","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","bbox","axisOrientation","getAxisOrientation","substr","join","uri","appendParams","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","$timeout","_Message2","default","timeout_","container","angular","element","document","body","append","container_","cache_","_ol2","inherits","DEFAULT_DELAY_","notify","clear","uid","clearMessageByCacheItem_","parseInt","_this","_asserts2","assertString","classNames","el","target","html","addClass","delay","item","getUid","promise","alert","cancel","module","service","_ngeo2","requires","name","detail","arguments","length","_Event2","GeolocationProperty","Geolocation","ol_Object","position_","transform_","watchId_","getChangeEventType","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","disposeInternal","set","has","GEOLOCATION","getTracking","navigator","geolocation","watchPosition","positionChange_","bind","positionError_","getTrackingOptions","clearWatch","position","coords","accuracy","altitude","altitudeAccuracy","heading","math","longitude","latitude","projectedPosition","speed","geometry","Polygon","applyTransform","dispatchEvent","getAccuracy","get","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","i","res","key","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","_ngeo","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","value","_Collection2","featureUidToGroupIndex_","groups_","source_","_Vector4","useSpatialIndex","layer_","_Vector2","source","style","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","assert","featureUid","toString","features","removeFeature","group","_obj2","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","map","setMap","setStyle","createFunction","condition","opt_message","var_args","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","getLayers","layer","mapUid","previous","setAt","removeAt","insertAt","event","_CustomEvent2","current","updateDimensions","dimensions","baseBgLayer","layers","getArray","assertInstanceof","_Layer2","hasUpdates","updatedDimensions","getSource","refresh","e","Error","code","ngeo","_mobile2","_module3","app","MainController","$scope","ngeoFeatureOverlayMgr","positionFeatureStyle","_Circle2","radius","fill","_Fill2","color","stroke","_Stroke2","width","accuracyFeatureStyle","mobileGeolocationOptions","zoom","autorotate","_Map2","_Tile2","_OSM2","view","_View2","controller","_Notification2","GeolocationEventType","directive_","restrict","scope","getMobileMapFn","getMobileGeolocationOptionsFn","directive","Controller_","$element","gettextCatalog","ngeoNotification","on","toggleTracking","goog","$scope_","map_","assertObject","notification_","featureOverlay_","geolocation_","_Geolocation2","getView","enableHighAccuracy","autorotateListener","untrack_","getString","$emit","positionFeature_","_Feature2","accuracyFeature_","zoom_","follow_","viewChangedByMe_","_events2","setGeometry","setPosition_","handleViewChange_","currentPosition","getCenter","abs","track_","point","_Point2","getGeometry","setCenter","setZoom","getSize","fit","_this2","currentAlpha","window","hasOwnProperty","addEventListener","evt","handleRotate_","alpha","webkitCompassHeading","console","eventAlpha","radAlpha","PI","animate","rotation","duration","easing","_easing2","linear","$window","ngeoSyncDataSourcesMap","link","attrs","prop","$eval","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","ngeoDataSources","ngeoDataSources_","listenerKeys_","handleDataSourcesAdd_","$inject","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","manager","index","manager_","features_","index_","setFeatures","unlisten","handleFeatureAdd_","handleFeatureRemove_","$attrs","mapExpr","recenter","attr","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","$watch","newVal","oldVal","cancelAnimationFrame","templateUrl","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","keys","newLength","Number","sort","_array2","numberSafeCompareFunction","optionsExpr","getOptions_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","$applyAsync","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_0__index_js__","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction"],"mappings":"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","file":"mobilegeolocation.min.js","sourcesContent":["/**\n * @type {string} Default WMS version.\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.message.Message\n*/\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nvar _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nvar ImageWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var extent = getForViewAndSize(coordinate, resolution, 0,\n      ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n      extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var imageResolution = resolution / pixelRatio;\n\n  var center = getCenter(extent);\n  var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n  var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n  var image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  var params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return _ol_uri_.appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n    imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.message.Notification\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport ngeoMessageMessage from 'ngeo/message/Message';\nimport olBase from 'ol';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n *//* @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.CustomEvent\n*/\nimport olBase from 'ol';\nimport olEventsEvent from 'ol/events/Event';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/GeolocationProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/GeolocationProperty.js\n// module id = null\n// module chunks = ","/**\n * @module ol/Geolocation\n */\nimport {inherits} from './index.js';\nimport _ol_GeolocationProperty_ from './GeolocationProperty.js';\nimport BaseObject from './Object.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport _ol_has_ from './has.js';\nimport {toRadians} from './math.js';\nimport {get as getProjection, getTransformFromProjections, identityTransform} from './proj.js';\n\n\n/**\n * @typedef {{tracking: (boolean|undefined),\n *     trackingOptions: (GeolocationPositionOptions|undefined),\n *     projection: ol.ProjectionLike}}\n */\nexport var GeolocationOptions;\n\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of `ol.Geolocation`.\n *\n * Example:\n *\n *     var geolocation = new ol.Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires error\n * @constructor\n * @extends {ol.Object}\n * @param {GeolocationOptions=} opt_options Options.\n * @param {boolean|undefined} opt_options.tracking Start Tracking. Default is\n *     `false`.\n * @param {GeolocationPositionOptions|undefined} opt_options.trackingOptions\n *     Tracking options. See\n *     {@link http://www.w3.org/TR/geolocation-API/#position_options_interface}.\n * @param {ol.ProjectionLike} opt_options.projection The projection the position\n *     is reported in.\n * @api\n */\nvar Geolocation = function(opt_options) {\n\n  BaseObject.call(this);\n\n  var options = opt_options || {};\n\n  /**\n   * The unprojected (EPSG:4326) device position.\n   * @private\n   * @type {ol.Coordinate}\n   */\n  this.position_ = null;\n\n  /**\n   * @private\n   * @type {ol.TransformFunction}\n   */\n  this.transform_ = identityTransform;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.watchId_ = undefined;\n\n  _ol_events_.listen(\n      this, BaseObject.getChangeEventType(_ol_GeolocationProperty_.PROJECTION),\n      this.handleProjectionChanged_, this);\n  _ol_events_.listen(\n      this, BaseObject.getChangeEventType(_ol_GeolocationProperty_.TRACKING),\n      this.handleTrackingChanged_, this);\n\n  if (options.projection !== undefined) {\n    this.setProjection(options.projection);\n  }\n  if (options.trackingOptions !== undefined) {\n    this.setTrackingOptions(options.trackingOptions);\n  }\n\n  this.setTracking(options.tracking !== undefined ? options.tracking : false);\n\n};\n\ninherits(Geolocation, BaseObject);\n\n\n/**\n * @inheritDoc\n */\nGeolocation.prototype.disposeInternal = function() {\n  this.setTracking(false);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @private\n */\nGeolocation.prototype.handleProjectionChanged_ = function() {\n  var projection = this.getProjection();\n  if (projection) {\n    this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'), projection);\n    if (this.position_) {\n      this.set(\n          _ol_GeolocationProperty_.POSITION, this.transform_(this.position_));\n    }\n  }\n};\n\n\n/**\n * @private\n */\nGeolocation.prototype.handleTrackingChanged_ = function() {\n  if (_ol_has_.GEOLOCATION) {\n    var tracking = this.getTracking();\n    if (tracking && this.watchId_ === undefined) {\n      this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions());\n    } else if (!tracking && this.watchId_ !== undefined) {\n      navigator.geolocation.clearWatch(this.watchId_);\n      this.watchId_ = undefined;\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {GeolocationPosition} position position event.\n */\nGeolocation.prototype.positionChange_ = function(position) {\n  var coords = position.coords;\n  this.set(_ol_GeolocationProperty_.ACCURACY, coords.accuracy);\n  this.set(_ol_GeolocationProperty_.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude);\n  this.set(_ol_GeolocationProperty_.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ?\n        undefined : coords.altitudeAccuracy);\n  this.set(_ol_GeolocationProperty_.HEADING, coords.heading === null ?\n    undefined : toRadians(coords.heading));\n  if (!this.position_) {\n    this.position_ = [coords.longitude, coords.latitude];\n  } else {\n    this.position_[0] = coords.longitude;\n    this.position_[1] = coords.latitude;\n  }\n  var projectedPosition = this.transform_(this.position_);\n  this.set(_ol_GeolocationProperty_.POSITION, projectedPosition);\n  this.set(_ol_GeolocationProperty_.SPEED,\n      coords.speed === null ? undefined : coords.speed);\n  var geometry = circularPolygon(this.position_, coords.accuracy);\n  geometry.applyTransform(this.transform_);\n  this.set(_ol_GeolocationProperty_.ACCURACY_GEOMETRY, geometry);\n  this.changed();\n};\n\n/**\n * Triggered when the Geolocation returns an error.\n * @event error\n * @api\n */\n\n/**\n * @private\n * @param {GeolocationPositionError} error error object.\n */\nGeolocation.prototype.positionError_ = function(error) {\n  error.type = EventType.ERROR;\n  this.setTracking(false);\n  this.dispatchEvent(/** @type {{type: string, target: undefined}} */ (error));\n};\n\n\n/**\n * Get the accuracy of the position in meters.\n * @return {number|undefined} The accuracy of the position measurement in\n *     meters.\n * @observable\n * @api\n */\nGeolocation.prototype.getAccuracy = function() {\n  return (\n    /** @type {number|undefined} */ this.get(_ol_GeolocationProperty_.ACCURACY)\n  );\n};\n\n\n/**\n * Get a geometry of the position accuracy.\n * @return {?ol.geom.Polygon} A geometry of the position accuracy.\n * @observable\n * @api\n */\nGeolocation.prototype.getAccuracyGeometry = function() {\n  return (\n    /** @type {?ol.geom.Polygon} */ this.get(_ol_GeolocationProperty_.ACCURACY_GEOMETRY) || null\n  );\n};\n\n\n/**\n * Get the altitude associated with the position.\n * @return {number|undefined} The altitude of the position in meters above mean\n *     sea level.\n * @observable\n * @api\n */\nGeolocation.prototype.getAltitude = function() {\n  return (\n    /** @type {number|undefined} */ this.get(_ol_GeolocationProperty_.ALTITUDE)\n  );\n};\n\n\n/**\n * Get the altitude accuracy of the position.\n * @return {number|undefined} The accuracy of the altitude measurement in\n *     meters.\n * @observable\n * @api\n */\nGeolocation.prototype.getAltitudeAccuracy = function() {\n  return (\n    /** @type {number|undefined} */ this.get(_ol_GeolocationProperty_.ALTITUDE_ACCURACY)\n  );\n};\n\n\n/**\n * Get the heading as radians clockwise from North.\n * @return {number|undefined} The heading of the device in radians from north.\n * @observable\n * @api\n */\nGeolocation.prototype.getHeading = function() {\n  return (\n    /** @type {number|undefined} */ this.get(_ol_GeolocationProperty_.HEADING)\n  );\n};\n\n\n/**\n * Get the position of the device.\n * @return {ol.Coordinate|undefined} The current position of the device reported\n *     in the current projection.\n * @observable\n * @api\n */\nGeolocation.prototype.getPosition = function() {\n  return (\n    /** @type {ol.Coordinate|undefined} */ this.get(_ol_GeolocationProperty_.POSITION)\n  );\n};\n\n\n/**\n * Get the projection associated with the position.\n * @return {ol.proj.Projection|undefined} The projection the position is\n *     reported in.\n * @observable\n * @api\n */\nGeolocation.prototype.getProjection = function() {\n  return (\n    /** @type {ol.proj.Projection|undefined} */ this.get(_ol_GeolocationProperty_.PROJECTION)\n  );\n};\n\n\n/**\n * Get the speed in meters per second.\n * @return {number|undefined} The instantaneous speed of the device in meters\n *     per second.\n * @observable\n * @api\n */\nGeolocation.prototype.getSpeed = function() {\n  return (\n    /** @type {number|undefined} */ this.get(_ol_GeolocationProperty_.SPEED)\n  );\n};\n\n\n/**\n * Determine if the device location is being tracked.\n * @return {boolean} The device location is being tracked.\n * @observable\n * @api\n */\nGeolocation.prototype.getTracking = function() {\n  return (\n    /** @type {boolean} */ this.get(_ol_GeolocationProperty_.TRACKING)\n  );\n};\n\n\n/**\n * Get the tracking options.\n * @see http://www.w3.org/TR/geolocation-API/#position-options\n * @return {GeolocationPositionOptions|undefined} PositionOptions as defined by\n *     the [HTML5 Geolocation spec\n *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n * @observable\n * @api\n */\nGeolocation.prototype.getTrackingOptions = function() {\n  return (\n    /** @type {GeolocationPositionOptions|undefined} */ this.get(_ol_GeolocationProperty_.TRACKING_OPTIONS)\n  );\n};\n\n\n/**\n * Set the projection to use for transforming the coordinates.\n * @param {ol.ProjectionLike} projection The projection the position is\n *     reported in.\n * @observable\n * @api\n */\nGeolocation.prototype.setProjection = function(projection) {\n  this.set(_ol_GeolocationProperty_.PROJECTION, getProjection(projection));\n};\n\n\n/**\n * Enable or disable tracking.\n * @param {boolean} tracking Enable tracking.\n * @observable\n * @api\n */\nGeolocation.prototype.setTracking = function(tracking) {\n  this.set(_ol_GeolocationProperty_.TRACKING, tracking);\n};\n\n\n/**\n * Set the tracking options.\n * @see http://www.w3.org/TR/geolocation-API/#position-options\n * @param {GeolocationPositionOptions} options PositionOptions as defined by the\n *     [HTML5 Geolocation spec\n *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n * @observable\n * @api\n */\nGeolocation.prototype.setTrackingOptions = function(options) {\n  this.set(_ol_GeolocationProperty_.TRACKING_OPTIONS, options);\n};\nexport default Geolocation;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Geolocation.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nvar TileWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var params = options.params || {};\n\n  var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, params) {\n\n  var urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    var tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  var url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    var index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return _ol_uri_.appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  var i = 0;\n  var res = [];\n  for (var key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo';\nimport olCollection from 'ol/Collection';\n\n\nngeoBase.module.value('ngeoDataSources', new olCollection());\n\n\n/**\n * @typedef {!ol.Collection.<!ngeo.datasource.DataSource>}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olLayerVector from 'ol/layer/Vector';\nimport olObj from 'ol/obj';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleStyle from 'ol/style/Style';\nimport googAsserts from 'goog/asserts';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {};\nexports.assertNumber = function(value, opt_message, var_args) {};\nexports.assertString = function(value, opt_message, var_args) {};\nexports.assertFunction = function(value, opt_message, var_args) {};\nexports.assertObject = function(value, opt_message, var_args) {};\nexports.assertArray = function(value, opt_message, var_args) {};\nexports.assertBoolean = function(value, opt_message, var_args) {};\nexports.assertElement = function(value, opt_message, var_args) {};\nexports.assertInstanceof = function(value, type, opt_message, var_args) {};\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.prod.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr';\nimport ngeoMapDirective from 'ngeo/map/directive';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr';\nimport ngeoMapRecenter from 'ngeo/map/recenter';\nimport ngeoMapResizemap from 'ngeo/map/resizemap';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport ngeoCustomEvent from 'ngeo/CustomEvent';\nimport olBase from 'ol';\nimport olObservable from 'ol/Observable';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerLayer from 'ol/layer/Layer';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\nimport olSourceTileWMS from 'ol/source/TileWMS';\nimport olSourceWMTS from 'ol/source/WMTS';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module app.mobilegeolocation\n*/\nconst exports = {};\n\nimport 'examples/mobilegeolocation.css';\nimport './common_dependencies.js';\nimport olMap from 'ol/Map';\n\nimport olView from 'ol/View';\nimport olLayerTile from 'ol/layer/Tile';\nimport olSourceOSM from 'ol/source/OSM';\nimport olStyleCircle from 'ol/style/Circle';\nimport olStyleStyle from 'ol/style/Style';\nimport olStyleFill from 'ol/style/Fill';\nimport olStyleStroke from 'ol/style/Stroke';\nimport ngeoMapModule from 'ngeo/map/module';\nimport ngeoGeolocationMobile from 'ngeo/geolocation/mobile';\n\n\n/** @type {!angular.Module} **/\nconst module = angular.module('app', [\n  ngeo.module.name,\n  ngeoGeolocationMobile.name,\n  ngeoMapModule.name\n]);\n\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @constructor\n *//* @ngInject\n */\napp.MainController = function($scope, ngeoFeatureOverlayMgr) {\n\n  const positionFeatureStyle = new olStyleStyle({\n    image: new olStyleCircle({\n      radius: 6,\n      fill: new olStyleFill({color: 'rgba(230, 100, 100, 1)'}),\n      stroke: new olStyleStroke({color: 'rgba(230, 40, 40, 1)', width: 2})\n    })\n  });\n\n  const accuracyFeatureStyle = new olStyleStyle({\n    fill: new olStyleFill({color: 'rgba(100, 100, 230, 0.3)'}),\n    stroke: new olStyleStroke({color: 'rgba(40, 40, 230, 1)', width: 2})\n  });\n\n  /**\n   * @type {ngeox.MobileGeolocationDirectiveOptions}\n   * @export\n   */\n  this.mobileGeolocationOptions = {\n    positionFeatureStyle: positionFeatureStyle,\n    accuracyFeatureStyle: accuracyFeatureStyle,\n    zoom: 17,\n    autorotate: true\n  };\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [0, 0],\n      zoom: 4\n    })\n  });\n\n  ngeoFeatureOverlayMgr.init(this.map);\n};\n\n\nmodule.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/mobilegeolocation.js","/**\n * @module ngeo.geolocation.mobile\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoMessageNotification from 'ngeo/message/Notification';\nimport olEasing from 'ol/easing';\nimport olEvents from 'ol/events';\nimport olFeature from 'ol/Feature';\nimport olGeolocation from 'ol/Geolocation';\nimport olMap from 'ol/Map';\nimport olGeomPoint from 'ol/geom/Point';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMobileGeolocation', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @enum {string}\n */\nexports.GeolocationEventType = {\n  /**\n   * Triggered when an error occurs.\n   */\n  ERROR: 'mobile-geolocation-error'\n};\n\n/**\n * Provide a \"mobile geolocation\" directive.\n *\n * Example:\n *\n *      <button ngeo-mobile-geolocation\n *        ngeo-mobile-geolocation-map=\"ctrl.map\"\n *        ngeo-mobile-geolocation-options=\"ctrl.mobileGeolocationOptions\">\n *      </button>\n *\n * See our live example: [../examples/mobilegeolocation.html](../examples/mobilegeolocation.html)\n *\n * @htmlAttribute {ol.Map} ngeo-mobile-geolocation-map The map.\n * @htmlAttribute {ngeox.MobileGeolocationDirectiveOptions} ngeo-mobile-geolocation-options The options.\n * @return {angular.Directive} The Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoMobileGeolocation\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    scope: {\n      'getMobileMapFn': '&ngeoMobileGeolocationMap',\n      'getMobileGeolocationOptionsFn': '&ngeoMobileGeolocationOptions'\n    },\n    controller: 'ngeoGeolocationMobileController'\n  };\n};\n\n\nexports.directive('ngeoMobileGeolocation', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope The directive's scope.\n * @param {angular.JQLite} $element Element.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoMobileGeolocationController\n */\nexports.Controller_ = function($scope, $element,\n  gettextCatalog, ngeoFeatureOverlayMgr, ngeoNotification) {\n\n  $element.on('click', this.toggleTracking.bind(this));\n\n  const map = $scope['getMobileMapFn']();\n  goog.asserts.assertInstanceof(map, olMap);\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {!ol.Map}\n   * @private\n   */\n  this.map_ = map;\n\n  const options = $scope['getMobileGeolocationOptionsFn']() || {};\n  goog.asserts.assertObject(options);\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.notification_ = ngeoNotification;\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n  /**\n   * @type {ol.Geolocation}\n   * @private\n   */\n  this.geolocation_ = new olGeolocation({\n    projection: map.getView().getProjection(),\n    trackingOptions: /** @type {GeolocationPositionOptions} */ ({\n      enableHighAccuracy: true\n    })\n  });\n\n  if (options.autorotate) {\n    this.autorotateListener();\n  }\n\n  // handle geolocation error.\n  this.geolocation_.on('error', function(error) {\n    this.untrack_();\n    let msg;\n    switch (error.code) {\n      case 1:\n        msg = gettextCatalog.getString('User denied the request for Geolocation.');\n        break;\n      case 2:\n        msg = gettextCatalog.getString('Location information is unavailable.');\n        break;\n      case 3:\n        msg = gettextCatalog.getString('The request to get user location timed out.');\n        break;\n      default:\n        msg = gettextCatalog.getString('Geolocation: An unknown error occurred.');\n        break;\n    }\n    this.notification_.error(msg);\n    $scope.$emit(exports.GeolocationEventType.ERROR, error);\n  }, this);\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.positionFeature_ = new olFeature();\n\n  if (options.positionFeatureStyle) {\n    this.positionFeature_.setStyle(options.positionFeatureStyle);\n  }\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.accuracyFeature_ = new olFeature();\n\n  if (options.accuracyFeatureStyle) {\n    this.accuracyFeature_.setStyle(options.accuracyFeatureStyle);\n  }\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.zoom_ = options.zoom;\n\n  /**\n   * Whether to recenter the map at the position it gets updated\n   * @type {boolean}\n   * @private\n   */\n  this.follow_ = false;\n\n  /**\n   * A flag used to determine whether the view was changed by me or something\n   * else. In the latter case, stop following.\n   * @type {boolean}\n   * @private\n   */\n  this.viewChangedByMe_ = false;\n\n  olEvents.listen(this.geolocation_, 'change:accuracyGeometry', () => {\n    this.accuracyFeature_.setGeometry(this.geolocation_.getAccuracyGeometry());\n    this.setPosition_();\n  });\n\n  olEvents.listen(this.geolocation_, 'change:position', () => {\n    this.setPosition_();\n  });\n\n  const view = map.getView();\n\n  olEvents.listen(view, 'change:center', this.handleViewChange_, this);\n\n  olEvents.listen(view, 'change:resolution', this.handleViewChange_, this);\n\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.toggleTracking = function() {\n  if (this.geolocation_.getTracking()) {\n    // if map center is different than geolocation position, then track again\n    const currentPosition = this.geolocation_.getPosition();\n    // if user is using Firefox and selects the \"not now\" option, OL geolocation\n    // doesn't return an error\n    if (currentPosition === undefined) {\n      this.untrack_();\n      this.$scope_.$emit(exports.GeolocationEventType.ERROR, null);\n      return;\n    }\n    goog.asserts.assert(currentPosition !== undefined);\n    // stop tracking if the position is close to the center of the map.\n    const center = this.map_.getView().getCenter();\n    const diff = Math.abs(currentPosition[0] - center[0]) + Math.abs(currentPosition[1] - center[1]);\n    if (diff < 2) {\n      this.untrack_();\n    } else {\n      this.untrack_();\n      this.track_();\n    }\n  } else {\n    this.track_();\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.track_ = function() {\n  this.featureOverlay_.addFeature(this.positionFeature_);\n  this.featureOverlay_.addFeature(this.accuracyFeature_);\n  this.follow_ = true;\n  this.geolocation_.setTracking(true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.untrack_ = function() {\n  this.featureOverlay_.clear();\n  this.follow_ = false;\n  this.geolocation_.setTracking(false);\n  this.notification_.clear();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.setPosition_ = function() {\n  const position = /** @type {ol.Coordinate} */ (this.geolocation_.getPosition());\n  const point = new olGeomPoint(position);\n\n  this.positionFeature_.setGeometry(point);\n  const accuracy = this.accuracyFeature_.getGeometry();\n\n  if (this.follow_) {\n    this.viewChangedByMe_ = true;\n    if (this.zoom_ !== undefined) {\n      this.map_.getView().setCenter(position);\n      this.map_.getView().setZoom(this.zoom_);\n    } else if (accuracy) {\n      const size = /** @type {!ol.Size} */ (this.map_.getSize());\n      this.map_.getView().fit(/** @type {!ol.geom.Polygon} */ (accuracy), size);\n    }\n    this.viewChangedByMe_ = false;\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleViewChange_ = function(event) {\n  if (this.follow_ && !this.viewChangedByMe_) {\n    this.follow_ = false;\n  }\n};\n\n\n// Orientation control events\nexports.Controller_.prototype.autorotateListener = function() {\n  let currentAlpha = 0;\n  if (window.hasOwnProperty('ondeviceorientationabsolute')) {\n    window.addEventListener('deviceorientationabsolute', (evt) => {\n      currentAlpha = this.handleRotate_(evt.alpha, currentAlpha);\n    }, true);\n  } else if (window.hasOwnProperty('ondeviceorientation')) {\n    window.addEventListener('deviceorientation', (evt) => {\n      if (evt.webkitCompassHeading) { // check for iOS property\n        currentAlpha = this.handleRotate_(-evt.webkitCompassHeading, currentAlpha);\n      } else { // non iOS\n        currentAlpha = this.handleRotate_(evt.alpha - 270, currentAlpha);\n      }\n    }, true);\n  } else {\n    console.error('Orientation is not supported on this device');\n  }\n};\n\n/**\n * Handle rotation.\n * @param {number} eventAlpha .\n * @param {number} currentAlpha .\n * @return {number} .\n * @private\n */\nexports.Controller_.prototype.handleRotate_ = function(eventAlpha, currentAlpha) {\n  if (this.geolocation_.getTracking() && Math.abs(eventAlpha - currentAlpha) > 0.2) {\n    currentAlpha = eventAlpha;\n    const radAlpha = currentAlpha * Math.PI / 180;\n    this.map_.getView().animate({\n      rotation: radAlpha,\n      duration: 350,\n      easing: olEasing.linear\n    });\n  }\n  return currentAlpha;\n};\n\n\nexports.controller('ngeoGeolocationMobileController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/geolocation/mobile.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap';\n\nimport olEvents from 'ol/events';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources';\n\nimport olEvents from 'ol/events';\nimport olObservable from 'ol/Observable';\nimport olView from 'ol/View';\nimport googAsserts from 'goog/asserts';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\nngeoBase.module.service(\n  'ngeoSyncDataSourcesMap', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olEvents from 'ol/events';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo';\nimport olArray from 'ol/array';\nimport olMap from 'ol/Map';\nimport olEvents from 'ol/events';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nvar OSM = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  var crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  var url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nvar XYZ = function(opt_options) {\n  var options = opt_options || {};\n  var projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30"],"sourceRoot":""}