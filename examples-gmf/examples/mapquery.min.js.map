{"version":3,"sources":["webpack:///./src/filters.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./src/misc/ToolActivate.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/utils.js","webpack:///./src/rule/Rule.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./node_modules/openlayers/src/ol/format/JSONFeature.js","webpack:///./node_modules/openlayers/src/ol/format/GeoJSON.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./node_modules/openlayers/src/ol/format/KML.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/query/Querent.js","webpack:///./src/misc/Time.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/Attribute.js","webpack:///./src/datasource/OGC.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./src/download/service.js","webpack:///./node_modules/openlayers/src/ol/format/GPX.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/query/MapQuerent.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./src/filter/RuleHelper.js","webpack:///./src/rule/Date.js","webpack:///./src/rule/Geometry.js","webpack:///./src/rule/Select.js","webpack:///./src/rule/Text.js","webpack:///./src/WFSDescribeFeatureType.js","webpack:///./node_modules/openlayers/src/ol/format/WMSCapabilities.js","webpack:///./src/datasource/DataSourcesHelper.js","webpack:///./src/format/WFSAttribute.js","webpack:///./src/query/mapQueryComponent.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.prod.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./examples/mapquery.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/interaction/Measure.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/proj4/package.json","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js"],"names":["__webpack_require__","_ngeo2","default","Scalify","$filter","numberFilter","filterFn","scale","text","module","filter","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","undefined","Infinity","sign","Math","abs","nb_decimal","floor","log","factor","pow","round","decimal","unit","str_number","length","substring","groups","str_unit","index","unshift","join","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","opt_type","divisor","prefix","index_max","postfix","space","NumberCoordinates","coordinates","opt_fractionDigits","opt_template","template","x","y","fractionDigits","parseInt","replace","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","_math2","modulo","dms","d","m","s","_string2","padNumber","charAt","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","__WEBPACK_IMPORTED_MODULE_0__xml_js__","XML","prototype","read","source","isDocument","this","readFromDocument","isNode","readFromNode","doc","parse","node","__webpack_exports__","_ngeo","toolContext","activePropertyName","getActive","setActive","newVal","DEFAULT_WMS_VERSION","exports","angular","requires","push","name","btnGroupComponent_","$parse","restrict","controller","link","scope","element","attrs","assign","$watch","buttons_","some","buttonModel","newValue","directive","BtnGroupController","$scope","scope_","activate","forEach","expressionFn","i","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","on","$apply","$setViewValue","$viewValue","$render","toggleClass","geometry","multiGeom","_MultiPoint2","appendPoint","_MultiLineString2","appendLineString","_MultiPolygon2","appendPolygon","navigator","userAgent","indexOf","hex","rgb","r","g","b","Error","colorZeroPadding","toString","queryString","queryData","pairs","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","pair","value","indexOfEquals","decodeURIComponent","err","return","queryItem","key","encodeURIComponent","options","_classCallCheck","active_","active","expression","lowerBoundary_","lowerBoundary","operator_","operator","upperBoundary_","upperBoundary","isCustom_","isCustom","name_","operators_","operators","propertyName_","propertyName","type_","goog","asserts","assert","type","listenerKeys","_createClass","getExpression","setExpression","ol","Observable","unByKey","get","set","OperatorType","BETWEEN","TemporalOperatorType","DURING","EQUAL_TO","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","LESSER_THAN","LESSER_THAN_OR_EQUAL_TO","LIKE","NOT_EQUAL_TO","SpatialOperatorType","CONTAINS","INTERSECTS","WITHIN","BEGINS","ENDS","EQUALS","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","XLink","readHref","getAttributeNS","unitPrefixFormat","numberFormat","opt_options","_Measure2","call","continueMsg","document","createElement","textContent","_asserts2","inherits","createDrawInteraction","style","_DrawAzimut2","handleMeasure","callback","geom","assertInstanceof","sketchFeature","getGeometry","_GeometryCollection2","line","getGeometries","_LineString2","getFormattedAzimutRadius","getMap","getView","getProjection","proj","Projection","decimals","precision","getLastCoordinate","projection","formatLength","formatAzimut","output","getFormattedAzimut","getFormattedLength","format","getAzimut","coords","getCoordinates","dx","dy","rad","acos","sqrt","PI","JSONFeature","format_Feature","getObject","object","JSON","Object","getType","FormatType","readFeature","readFeatureFromObject","getReadOptions","readFeatures","readFeaturesFromObject","readGeometry","readGeometryFromObject","readProjection","readProjectionFromObject","writeFeature","feature","stringify","writeFeatureObject","writeFeatures","features","writeFeaturesObject","writeGeometry","writeGeometryObject","format_JSONFeature","GeoJSON","defaultDataProjection","featureProjection","defaultFeatureProjection","geometryName_","geometryName","extractGeometryName_","extractGeometryName","GEOMETRY_READERS","Point","LineString","Polygon","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","geometries","map","GEOMETRY_WRITERS","right","rightHanded","getGeometriesArray","obj","Circle","geometryReader","geometryWriter","geoJSONFeature","Feature","setGeometryName","geometry_name","setGeometry","id","setId","properties","setProperties","ii","geoJSONFeatures","crs","adaptOptions","getId","getProperties","getGeometryName","isEmpty","objects","_Pointer2","handleDownEvent","handleDownEvent_","handleEvent","handleEvent_","handleUpEvent","handleUpEvent_","downPx_","source_","started_","sketchFeature_","sketchPoint_","squaredClickTolerance_","sketchLayer_","_Vector2","_Vector4","useSpatialIndex","wrapX","_Draw2","getDefaultStyleFunction","_events2","listen","updateState_","event","pixel","downPx","clickPx","pass","handlePointerMove_","finishDrawing_","startDrawing_","mapBrowserEvent","modifyDrawing_","createOrUpdateSketchPoint_","coordinate","slice","_Feature2","_Point2","updateSketchFeatures_","sketchPointGeom","setCoordinates","sketchFeatures","getSource","clear","addFeatures","start","circle","_Circle2","dispatchEvent","Event","last","setRadius","getLength","abortDrawing_","shouldStopEvent","_functions2","FALSE","setMap","addFeature","$rootScope","groups_","registerTool","groupName","tool","opt_defaultActivate","_this","entries","unlisten","oldVal","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterTool","splice","unregisterGroup","activateTool","deactivateTool","hasActiveTool","service","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","featureType","featureNS_","featureNS","gmlFormat_","gmlFormat","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","schemaLocation_","schemaLocation","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_0__index_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","readFeaturesFromNode","context","__WEBPACK_IMPORTED_MODULE_9__obj_js__","objectStack","FEATURE_COLLECTION_PARSERS","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","GMLNS","makeArrayPusher","readFeaturesInternal","pushParseAndPop","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","n","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","FEATURE_COLLECTION_PARSERS_","http://www.opengis.net/gml","boundedBy","makeObjectPropertySetter","readGeometryElement","result","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","readNonNegativeIntegerString","getAttribute","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","readNonNegativeInteger","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","parseNode","INSERT_RESULTS_PARSERS_","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","makeChildAppender","writeStringTextNode","writeFeature_","gmlVersion","child","createElementNS","appendChild","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","writeFeatureElement","writeOgcFidFilter_","fid","setAttribute","getTypeName_","featurePrefix","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","keys","getKeys","values","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","pushSerializeAndPop","hasZ","srsName","TRANSACTION_SERIALIZERS_","makeSimpleNodeFactory","writeProperty_","writeGeometryElement","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","item","writeFilterCondition_","GETFEATURE_SERIALIZERS_","getTagName","writeBboxFilter_","writeOgcPropertyName_","extent","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","begin","writeTimeInstant_","end","writeLogicalFilter_","conditions","condition","writeNotFilter_","writeComparisonFilter_","matchCase","writeOgcLiteral_","writeIsNullFilter_","writeIsBetweenFilter_","writeIsLikeFilter_","wildCard","singleChar","escapeChar","pattern","writeOgcExpression_","tagName","property","time","timeInstant","timePosition","Query","During","And","Or","Not","BBOX","Contains","Intersects","Within","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","featureTypes","writeGetFeature","handle","outputFormat","maxFeatures","resultType","startIndex","count","bbox","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","and","Array","isArray","writeTransaction","inserts","updates","deletes","baseObj","version","gmlOptions","nativeElements","readProjectionFromDocument","readProjectionFromNode","firstElementChild","nextElementSibling","childNodes","__WEBPACK_IMPORTED_MODULE_10__proj_js__","pop","__WEBPACK_IMPORTED_MODULE_8__xml_js__","GML2","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","readFlatCoordinates_","getAllTextContent","containerSrs","axisOrientation","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","z","coordsGroups","trim","flatCoordinates","parseFloat","substr","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","innerBoundaryIsParser_","flatLinearRing","RING_PARSERS","outerBoundaryIsParser_","GEOMETRY_FLAT_COORDINATES_PARSERS_","makeReplacer","FLAT_LINEAR_RINGS_PARSERS_","innerBoundaryIs","outerBoundaryIs","GEOMETRY_PARSERS_","readPoint","readMultiPoint","readLineString","readMultiLineString","LinearRing","readLinearRing","readPolygon","readMultiPolygon","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","nodeName","multiSurface","surface","multiCurve","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","dataProjection","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","namespaceURI","writeCoordinates_","segments","writeCurveSegments_","point","points","len","parts","getCoords_","writeSurfaceOrPolygon_","rings","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","polygon","writeRing_","ring","linearRing","writeLinearRing_","opt_srsName","opt_hasZ","writeMultiCurveOrLineString_","curve","lines","getLineStrings","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","getPoints","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","polygons","getPolygons","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","pointMember","lineStringMember","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","polygonMember","lowerCorner","upperCorner","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","featureMember","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","localName","ft","uri","candidate","ns","parsersNS","p","parsers","readFeatureElement","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","test","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","setFlatCoordinates","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","XYZ","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","lineStrings","MULTILINESTRING_PARSERS_","multiLineString","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","setLineStrings","MULTIPOLYGON_PARSERS_","multiPolygon","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","setPolygons","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","lineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","flatLinearRings","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","ends","__WEBPACK_IMPORTED_MODULE_1__array_js__","pointMembers","lineStringMembers","polygonMembers","readGeometryFromNode","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","__WEBPACK_IMPORTED_MODULE_26__xml_js__","KML","DEFAULT_STYLE_ARRAY_","createStyleDefaults_","__WEBPACK_IMPORTED_MODULE_18__proj_js__","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS_","NAMESPACE_URIS_","SCHEMA_LOCATION_","DEFAULT_COLOR_","DEFAULT_FILL_STYLE_","__WEBPACK_IMPORTED_MODULE_19__style_Fill_js__","color","DEFAULT_IMAGE_STYLE_ANCHOR_","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_","__WEBPACK_IMPORTED_MODULE_21__style_IconAnchorUnits_js__","PIXELS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_","DEFAULT_IMAGE_STYLE_SIZE_","DEFAULT_IMAGE_STYLE_SRC_","DEFAULT_IMAGE_SCALE_MULTIPLIER_","DEFAULT_IMAGE_STYLE_","__WEBPACK_IMPORTED_MODULE_20__style_Icon_js__","anchor","anchorOrigin","__WEBPACK_IMPORTED_MODULE_22__style_IconOrigin_js__","BOTTOM_LEFT","anchorXUnits","anchorYUnits","crossOrigin","rotation","size","src","DEFAULT_NO_IMAGE_STYLE_","DEFAULT_STROKE_STYLE_","__WEBPACK_IMPORTED_MODULE_23__style_Stroke_js__","width","DEFAULT_TEXT_STROKE_STYLE_","DEFAULT_TEXT_STYLE_","__WEBPACK_IMPORTED_MODULE_25__style_Text_js__","font","fill","stroke","DEFAULT_STYLE_","__WEBPACK_IMPORTED_MODULE_24__style_Style_js__","image","zIndex","ICON_ANCHOR_UNITS_MAP_","fraction","FRACTION","pixels","insetPixels","createNameStyleFunction_","foundStyle","textStyle","textOffset","textAlign","getImage","imageSize","getImageSize","imageScale","getScale","getText","foundText","clone","setFont","getFont","setScale","setFill","getFill","setStroke","getStroke","setText","setOffsetX","setOffsetY","setTextAlign","createFeatureStyleFunction_","styleUrl","sharedStyles","resolution","nameStyle","drawName","__WEBPACK_IMPORTED_MODULE_10__geom_GeometryType_js__","POINT","concat","findStyle_","styleValue","readColor_","exec","hexColor","re","readURI_","baseURI","window","location","href","URL","readVec2_","origin","xunits","yunits","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale_","readDecimal","readStyleMapValue_","STYLE_MAP_PARSERS_","IconStyleParser_","ICON_STYLE_PARSERS_","styleObject","IconObject","drawIcon","offset","hotSpot","w","h","heading","__WEBPACK_IMPORTED_MODULE_17__math_js__","imageStyle","offsetOrigin","LabelStyleParser_","LABEL_STYLE_PARSERS_","LineStyleParser_","LINE_STYLE_PARSERS_","strokeStyle","PolyStyleParser_","POLY_STYLE_PARSERS_","fillStyle","outline","FLAT_LINEAR_RING_PARSERS_","gxCoordParser_","readGxMultiTrack_","GX_MULTITRACK_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_MultiLineString_js__","readGxTrack_","gxTrackObject","whens","GX_TRACK_PARSERS_","min","__WEBPACK_IMPORTED_MODULE_11__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_GeometryLayout_js__","XYZM","readIcon_","iconObject","ICON_PARSERS_","readLineString_","EXTRUDE_AND_ALTITUDE_MODE_PARSERS_","readLinearRing_","__WEBPACK_IMPORTED_MODULE_16__geom_Polygon_js__","readMultiGeometry_","multiGeometry","MULTI_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryCollection_js__","layout","homogeneous","getLayout","getFlatCoordinates","__WEBPACK_IMPORTED_MODULE_2__array_js__","__WEBPACK_IMPORTED_MODULE_13__geom_MultiPoint_js__","setCommonGeometryProperties_","LINE_STRING","POLYGON","__WEBPACK_IMPORTED_MODULE_14__geom_MultiPolygon_js__","GEOMETRY_COLLECTION","__WEBPACK_IMPORTED_MODULE_3__asserts_js__","readPoint_","__WEBPACK_IMPORTED_MODULE_15__geom_Point_js__","readPolygon_","readStyle_","STYLE_PARSERS_","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","DataParser_","DATA_PARSERS_","featureObject","displayName","ExtendedDataParser_","EXTENDED_DATA_PARSERS_","RegionParser_","REGION_PARSERS_","PairDataParser_","pairObject","PAIR_PARSERS_","Style","PlacemarkStyleMapParser_","styleMapValue","placemarkObject","SchemaDataParser_","SCHEMA_DATA_PARSERS_","SimpleDataParser_","data","readString","LatLonAltBoxParser_","LAT_LON_ALT_BOX_PARSERS_","regionObject","LodParser_","LOD_PARSERS_","lodObject","INNER_BOUNDARY_IS_PARSERS_","OUTER_BOUNDARY_IS_PARSERS_","LinkParser_","LINK_PARSERS_","whenParser_","when","Date","isNaN","makeStructureNS","Data","SchemaData","LatLonAltBox","Lod","altitudeMode","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","extrude","readBoolean","tessellate","Icon","MultiGeometry","Track","NETWORK_LINK_PARSERS_","ExtendedData","Region","Link","address","description","open","phoneNumber","visibility","PLACEMARK_PARSERS_","StyleMap","MultiTrack","SimpleData","IconStyle","LabelStyle","LineStyle","PolyStyle","Pair","readDocumentOrFolder_","Document","makeArrayExtender","Folder","Placemark","readPlacemark_","readSharedStyle_","bind","readSharedStyleMap_","__WEBPACK_IMPORTED_MODULE_1__Feature_js__","__WEBPACK_IMPORTED_MODULE_5__format_Feature_js__","styleFunction","setStyle","styleUri","readFeatureFromNode","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeColorTextNode_","rgba","__WEBPACK_IMPORTED_MODULE_4__color_js__","abgr","writeCoordinatesTextNode_","dimension","stride","XY","XYM","writeDataNode_","EXTENDEDDATA_NODE_SERIALIZERS_","writeDataNodeName_","writeCDATASection","writeDataNodeValue_","writeDocument_","DOCUMENT_SERIALIZERS_","DOCUMENT_NODE_FACTORY_","writeExtendedData_","namesAndValues","names","DATA_NODE_FACTORY_","writeIcon_","icon","orderedKeys","ICON_SEQUENCE_","makeSequence","ICON_SERIALIZERS_","GX_NODE_FACTORY_","writeIconStyle_","getSrc","getSize","iconImageSize","iconProperties","getAnchor","getOrigin","getRotation","ICON_STYLE_SEQUENCE_","ICON_STYLE_SERIALIZERS_","writeLabelStyle_","getColor","LABEL_STYLE_SEQUENCE_","LABEL_STYLE_SERIALIZERS_","writeLineStyle_","getWidth","LINE_STYLE_SEQUENCE_","LINE_STYLE_SERIALIZERS_","writeMultiGeometry_","factory","MULTI_POINT","POINT_NODE_FACTORY_","MULTI_LINE_STRING","LINE_STRING_NODE_FACTORY_","MULTI_POLYGON","POLYGON_NODE_FACTORY_","MULTI_GEOMETRY_SERIALIZERS_","writeBoundaryIs_","BOUNDARY_IS_SERIALIZERS_","LINEAR_RING_NODE_FACTORY_","writePlacemark_","sort","v","PLACEMARK_SERIALIZERS_","EXTENDEDDATA_NODE_FACTORY_","getStyleFunction","styles","PLACEMARK_SEQUENCE_","writePrimitiveGeometry_","getStride","PRIMITIVE_GEOMETRY_SEQUENCE_","PRIMITIVE_GEOMETRY_SERIALIZERS_","writePolygon_","linearRings","outerRing","shift","POLYGON_SERIALIZERS_","INNER_BOUNDARY_NODE_FACTORY_","OUTER_BOUNDARY_NODE_FACTORY_","writePolyStyle_","POLY_STYLE_SERIALIZERS_","COLOR_NODE_FACTORY_","writeScaleTextNode_","writeDecimalTextNode","writeStyle_","STYLE_SEQUENCE_","STYLE_SERIALIZERS_","writeVec2_","vec2","KML_SEQUENCE_","KML_SERIALIZERS_","GEOMETRY_TYPE_TO_NODENAME_","writeBooleanTextNode","writeFeaturesNode","kml","xmlnsUri","xmlSchemaInstanceUri","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","XSD","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","_ol_format_WMTSCapabilities_","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","$http","$q","ngeoRuleHelper","ngeoWMSTime","http_","q_","ngeoRuleHelper_","ngeoWMSTime_","requestCancelers_","wmsGetCapabilitiesPromises_","wmtsGetCapabilitiesPromises_","$inject","promises","cancelStillRunningRequests_","queryableDataSources","dataSources","getQueryableDataSources","combinedWFSDataSources","getCombinableWFSDataSources_","wfs","issueCombinedWFS_","combinedWMSDataSources","getCombinableWMSDataSources_","wms","issueCombinedWMS_","all","then","handleCombinedQueryResult_","assertNumber","getResolution","dataSource","isDataSourceQueryable_","supportsWFS","supportsAttributes","ogcLayerNames","getOGCLayerNames","url","_uri2","appendParams","assertString","wfsUrl","REQUEST","SERVICE","VERSION","TYPENAME","response","_WFSDescribeFeatureType2","layerCapabilities","layerName","found","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","layerCapability","wmsFindLayerCapability","baseUrl","opt_cache","cache","promise","_WMSCapabilities2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_WMTSCapabilities2","combinedHash","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","hash","dataSourceIdStr","dataSourceId","limit","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","tooManyFeatures","totalFeatureCount","readAndTypeFeatures_","setUniqueIds_","getSetOlFormatTypes_","wfsFormat","wmsFormat","opt_types","types","setLayers","getLayers","combinedDataSources","_this2","view","getCode","wfsCount","tolerancePx","tolerance","_extent2","buffer","createOrUpdateFromCoordinate","_WFS2","xmlSerializer","XMLSerializer","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_loop","getFeatureCommonOptions","params","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","wfsFeatureNS","wfsFeaturePrefix","wfsOutputFormat","_obj2","activeDimensions","getInRangeOGCLayerNames","createFilter","incTime","filterRules","timeRangeValue","getFeatureDefer","defer","handleQueryResult_","countPromise","getCountOptions","featureCountXml","featureCountRequest","serializeToString","canceler","registerCanceler_","post","timeout","resolve","numberOfFeatures","getFeatureOptions","featureRequestXml","featureRequest","_iterator6","FEATURE_COUNT","projCode","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","LAYERS","INFO_FORMAT","activeDimensionsSet","filterString","filtrableLayerName","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmsInfoFormat","wmsUrl","getFiltrableOGCLayerName","createFilterString","timeProperty","formatWMSTimeParam","filterParamValue","filterParamValues","wmsSource","_ImageWMS2","wmsGetFeatureInfoUrl","getGetFeatureInfoUrl","combinableDataSources","notCombinableDataSources","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","combinableForWFS","combined","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","combinableDataSource","combinableWithDataSourceForWFS","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","combinableForWMS","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","combinableWithDataSourceForWMS","ds","res","queryable","visible","inRange","isAnyOGCLayerInRange","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","CombinedDataSources","_RuleHelper2","_WMSTime2","getOptions","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","mode","getTime","getUTCDate","localDate","getUTCFullYear","getUTCMonth","_ol_Image_","pixelRatio","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","unlistenByKey","ol_Image","ImageWMS","source_Image","attributions","resolutions","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","FORMAT","TRANSPARENT","QUERY_LAYERS","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getPixelRatio","getExtent","CHANGE","handleImageChange","getImageLoadFunction","WMSServerType","dpi","getUrl","setImageLoadFunction","setUrl","updateParams","string","compareVersions","attribute","ngeo","AttributeType","GEOMETRY","geomType","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","FilterCondition","AND","filterRules_","filtrable_","filtrable","copyable_","copyable","dimensions_","dimensions","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","ogcType_","ogcType","Type","WMS","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeUpperValue_","timeUpperValue","wfsFeatureNS_","WFSFeatureNS","wfsFeaturePrefix_","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","WFSOutputFormat","GML3","wfsUrl_","wmsInfoFormat_","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","layers","ogcLayer","_GML4","_GML2","wfsFormat_","supportsWMS","_WMSGetFeatureInfo2","wmsFormat_","_inherits","_DataSource2","_get","attributes","updateGeometryNameFromAttributes_","haveTheSameActiveDimensions","queryableOnly","arguments","layerNames","maxRes","maxResolution","minRes","minResolution","share","myActive","itsActive","range","lower","upper","config","guessServiceTypeByUrl","WMTS","QGISSERVER","geoserver","mapserver","qgisserver","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","__WEBPACK_IMPORTED_MODULE_2__extent_js__","readFlatPos_","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","writeGeometryNode","Filter","tagName_","filter_Filter","LogicalNary","filter_LogicalNary","apply","filter_And","Bbox","filter_Bbox","Spatial","filter_Spatial","filter_Contains","Comparison","filter_Comparison","filter_During","ComparisonBinary","opt_matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","filter_Intersects","IsBetween","filter_IsBetween","IsLike","opt_wildCard","opt_singleChar","opt_escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","filter_Not","NotEqualTo","filter_NotEqualTo","filter_Or","filter_Within","_ol_format_filter_","Function","or","not","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","$injector","$filter_","decimals_","has","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","filterName","assertFunction","projection_","download_","setProjection","opt_select","getStyle","supportsVertex_","getVertexStyle","getHaloStyle_","GeometryType","getLineStringStyle_","getPointStyle_","CIRCLE","RECTANGLE","getPolygonStyle_","TEXT","getTextStyle_","constructor","strokeWidth","getStrokeProperty","showLabel","getShowLabelProperty","showMeasure","getShowMeasureProperty","getRGBAColorProperty","_Style2","_Stroke2","textLabelValues","getMeasure","getNameProperty","textLabelValue","createTextStyle_","getSizeProperty","radius","_Fill2","offsetY","optNumber","attrib","getNumber","opacity","getOpacityProperty","fillColor","azimut","FeatureProperties","AZIMUT","getRadiusLine","angle","offsetX","cos","sin","getAngleProperty","createEditingStyles","white","blue","console","opt_incGeomFunc","incGeomFunc","_RegularShape2","innerMultiCoordinates","multiCoordinates","supported","_array2","includes","haloSize","getFilteredFeatureValues","ANGLE","getColorProperty","COLOR","_color2","fromString","NAME","OPACITY","SHOW_MEASURE","assertBoolean","SHOW_LABEL","SIZE","STROKE","export","formatType","GPX","exportGPX","exportKML","_GPX2","export_","_KML2","fileName","opt_mimeType","mimeType","clones","writeOptions","_Text2","measure","_MeasureAzimut2","getFormattedArea","getFormattedPoint","args","_toConsumableArray","IS_TEXT","IS_CIRCLE","IS_RECTANGLE","panMapToFeature","opt_panDuration","panDuration","assertArray","calculateExtent","intersectsExtent","mapCenter","getCenter","featureCenter","getCoordinateAt","getInteriorPoint","animate","duration","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","_service2","factory_","content","opt_fileType","fileType","_utils2","isSafari","blob","Blob","saveAs","readExtensions_","readExtensions","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","RTE_PARSERS","cmt","desc","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","appendCoordinate","ele","readDateTime","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","writeNonNegativeIntegerTextNode","makeArraySerializer","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","geometryLayout","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","writeDateTimeTextNode","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","GPX_SERIALIZERS","hasM","applyLayoutOptions_","__WEBPACK_IMPORTED_MODULE_7__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_6__geom_GeometryLayout_js__","handleReadExtensions_","extensionsNode","featureReader","gpx","_Time2","_ol2","formatWMSTimeValue_","opt_toUTC","date","utc","toISOString","wmsTimeProperty","times","sources","total","pending","ngeoDataSources","ngeoDataSourcesHelper","ngeoQuerent","ngeoQueryResult","ngeoDataSources_","ngeoDataSourcesHelper_","ngeoQuerent_","result_","limit_","queryCountFirst_","queryCountFirst","tolerancePx_","dataSourceNames_","getArray","issue","handleResult_","queried","tooManyResults","idStr","getDataSource","label","querentResultItem","typeSeparatedFeatures","filteredProperties","alias","unset","featuresByType","_Querent2","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","layers_","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","featureIdentifier_","layerIdentifier_","readFeatures_","layer","toRemove","layerFeatures","gmlFeatures","__WEBPACK_IMPORTED_MODULE_4__obj_js__","writeFeatureNode","gettextCatalog","ngeoFeatureHelper","gettextCatalog_","ngeoFeatureHelper_","opt_isCustom","rules","createRuleFromAttribute","rule","getString","DATE","DATETIME","_Date2","_Rule2","_Geometry2","NUMBER","SELECT","_Select2","choices","optionsList","createRule","selectOptions","sourceRule","destRule","serializeRule","featureProperties","mainFilter","createFilterFromRule_","_filter2","OR","NOT","timeFilter","createTimeFilterFromDataSource_","filterNode","rot","rsot","rtot","spatialTypes","numericTypes","beginValue","endValue","moment","add","subtract","selectedChoices","selectedChoice","numericExpression","stringExpression","String","momentEnd","startValue","_FeatureHelper2","_Rule","feature_","format_","_GeoJSON2","updatingExpression_","updatingGeometry_","geometryChangeListenerKey_","getChangeEventType","handleFeatureGeometryChange_","setGeometryFromExpression_","registerGeometryChange_","evt","target","Geometry","handleGeometryChange_","choices_","_XML2","_xml2","readElement_","readComplexType_","COMPLEX_TYPE_PARSERS_","readComplexContent_","COMPLEX_CONTENT_PARSERS_","readExtension_","EXTENSION_PARSERS_","readSequence_","SEQUENCE_PARSERS_","complexType","complexContent","extension","sequence","__WEBPACK_IMPORTED_MODULE_4__xml_js__","WMSCapabilities","__WEBPACK_IMPORTED_MODULE_2__format_XML_js__","wmsCapabilityObject","readAttribution_","ATTRIBUTION_PARSERS_","readBoundingBox_","__WEBPACK_IMPORTED_MODULE_3__format_XSD_js__","readDecimalString","readEXGeographicBoundingBox_","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS_","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","readCapability_","CAPABILITY_PARSERS_","readService_","SERVICE_PARSERS_","readContactInformation_","CONTACT_INFORMATION_PARSERS_","readContactPersonPrimary_","CONTACT_PERSON_PARSERS_","readContactAddress_","CONTACT_ADDRESS_PARSERS_","readException_","EXCEPTION_PARSERS_","readCapabilityLayer_","parentLayerObject","layerObject","readBooleanString","cascaded","opaque","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","readDimension_","units","unitSymbol","multipleValues","nearestValue","current","readFormatOnlineresource_","FORMAT_ONLINERESOURCE_PARSERS_","readRequest_","REQUEST_PARSERS_","readDCPType_","DCPTYPE_PARSERS_","readHTTP_","readOperationType_","OPERATIONTYPE_PARSERS_","readSizedFormatOnlineresource_","formatOnlineresource","readAuthorityURL_","authorityObject","readMetadataURL_","metadataObject","readKeywordList_","KEYWORDLIST_PARSERS_","Service","Capability","Request","Exception","Name","KeywordList","OnlineResource","__WEBPACK_IMPORTED_MODULE_1__format_XLink_js__","ContactInformation","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","ContactPosition","ContactAddress","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","StateOrProvince","PostCode","CRS","EX_GeographicBoundingBox","BoundingBox","Attribution","AuthorityURL","MetadataURL","DataURL","FeatureListURL","MinScaleDenominator","MaxScaleDenominator","LogoURL","GetCapabilities","GetMap","GetFeatureInfo","DCPType","StyleSheetURL","StyleURL","Keyword","collection_","cache_","handleDataSourcesAdd_","handleDataSourcesRemove_","wfsDescribeFeatureTypeDefer","wfsDescribeFeatureType","ogcLayerName","_WFSAttribute2","setAttributes","_Attribute","complexTypeElements","readFromComplexTypeElement_","required","_Attribute2","setGeometryType","_MapQuerent2","directive_","ngeoMapQuerent","elem","$eval","clickEventKey_","pointerMoveEventKey_","handleMapClick_","dragging","getEventPixel","originalEvent","hit","forEachLayerAtPixel","sourceids","getTargetElement","cursor","cursorHover","detail","_Event2","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","getTilePixelRatio","fixedTileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__string_js__","inRange_","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","_Collection2","featureUidToGroupIndex_","layer_","styleFunction_","updateWhileAnimating","updateWhileInteracting","groupIndex","featureUid","getUid","removeFeature","group","getLayer","getFeatureOverlay","defaultFunction","_FeatureOverlay2","init","createFunction","opt_message","var_args","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","mapUid","previous","setAt","removeAt","insertAt","_CustomEvent2","updateDimensions","baseBgLayer","_Layer2","hasUpdates","updatedDimensions","refresh","e","code","app","_module2","_btnComponent2","_ToolActivateMgr2","queryresultComponent","controllerAs","templateUrl","component","QueryresultController","MainController","ngeoToolActivateMgr","dummyActive","queryActive","_OGC2","busStopLayer","_Image2","informationLayer","_Map2","_Tile2","_OSM2","_View2","zoom","queryToolActivate","_ToolActivate2","dummyToolActivate","getSetDummyActive","val","$window","ngeoSyncDataSourcesMap","prop","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","map_","listenerKeys_","handleViewResolutionChange_","syncDataSourcesToResolution_","syncDataSourceToResolution_","supportsDynamicInRange","unbindMap_","bindMap_","manager","manager_","features_","index_","setFeatures","handleFeatureAdd_","handleFeatureRemove_","$element","$attrs","mapExpr","recenter","attr","fit","setZoom","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","newLength","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","$applyAsync","__WEBPACK_IMPORTED_MODULE_9__math_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","multiPoint","closestPointXY","closestPoint","minSquaredDistance","j","squaredDistance","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","setLayout","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","setFlatCoordinatesInternal","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","ends_","maxDelta_","maxDeltaRevision_","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","jj","endss","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","rotate","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","proj4","projCodes","defs","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","transform","forward","inverse","phy0","lat0","lambda0","long0","sinPhy0","semiMajorAxis","a","flattening","rf","e2","R","k0","alpha","b0","asin","k1","tan","k2","k3","K","Sa1","Sa2","S","atan","exp","I","rotI","rotB","y0","x0","Y","X","lambda","phy","prevPhy","iteration","DrawEventType","Draw","Pointer","shouldHandle_","freehand_","snapTolerance_","snapTolerance","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","maxPoints_","maxPoints","finishCondition_","finishCondition","functions","geometryFunction","opt_geometry","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","geometryFunction_","finishCoordinate_","sketchCoords_","sketchLine_","sketchLineCoords_","clickTolerance","overlay_","Vector","source_Vector","condition_","noModifierKeys","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","ol_Object","ACTIVE","createDefaultEditing","MapBrowserEventType","POINTERDRAG","addToDrawing_","POINTERDOWN","POINTERMOVE","DBLCLICK","circleMode","finishDrawing","atFinish_","stopPropagation","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","getPixelFromCoordinate","getLinearRing","removeLastPoint","extend","overlaySource","createRegularPolygon","opt_sides","opt_angle","createBox","__WEBPACK_IMPORTED_MODULE_1__string_js__","dateTime","bool","DOCUMENT","createCDATASection","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","toPrecision","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","delta","getRadius","getRadiusSquared_","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","circleExtent","intersectsCoordinate","setCenter","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","interaction","MeasureBaseOptions","_Interaction2","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","displayHelpTooltip_","displayHelpTooltip","startMsg","changeEventKey_","postcomposeEventKey_","vectorLayer_","drawInteraction_","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","SPHERE_WGS84","_sphere2","_EPSG2","RADIUS","geodesicArea","getFormattedCircleArea","c1","c2","haversineDistance","helpMsg","_dom2","removeChildren","setPosition","getDrawInteraction","prevMap","removeInteraction","addInteraction","createMeasureTooltip_","innerHTML","classList","setOffset","createHelpTooltip_","removeHelpTooltip_","_Overlay2","positioning","addOverlay","removeOverlay","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","_proj4","epsg21781def","_proj2","setExtent","_proj6","setProj4","Proj","projections","_somerc2","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","us-ft","ignoredChar","match","testkey","lkey","toLowerCase","projString","defData","paramName","paramVal","paramOutname","self","paramObj","reduce","datum","lat_0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","lon_1","long1","lon_2","long2","lonc","longc","x_0","y_0","k_0","k","r_a","R_A","zone","utmSouth","towgs84","datum_params","from_greenwich","pm","nadgrids","datumCode","legalAxis","parser","txt","Parser","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","root","stack","currentObject","mapit","thing","out","newObj","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","word","afterItem","newObjects","wkt_parser_D2R","d2r","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","that","EPSG","ESRI","IAU2000","WGS84","GOOGLE","lib_defs","codeWords","parseCode","destination","msfnz","eccent","sinphi","cosphi","con","adjust_lon","tsfnz","phi","com","phi2z","ts","dphi","eccnth","identity","pt","projs","es","lon","lat","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","srsCode","error","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","checkParams","datum_transform","dest","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","Z","atan2","geocentricToGeodetic","adjust_axis","denorm","t","xin","yin","zin","toPoint","array","checkSanity","checkCoord","num","TypeError","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","O","mgrs_V","mgrs_Z","mgrs","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","top","mgrs_toPoint","ll","accuracy","utm","eccPrimeSquared","N","T","C","A","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","northing","easting","zoneNumber","zoneLetter","LetterDesignator","getLetterDesignator","LLtoUTM","seasting","snorthing","setParm","get100kSetForZone","setColumn","setRow","column","row","colOrigin","charCodeAt","rowOrigin","rowInt","rollover","colInt","fromCharCode","deg","radToDeg","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","warn","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","tan_phi","f","temp","sinh","hypot","max","asinhy","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","sterea","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","theta","krovak","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","APA","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","sinth","costh","gsq","msq","xx","yy","xys","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","somerc","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","wkt-parser","deprecated","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","homepage","license","main","repository","scripts","build","build:tmerc","XMLFeature","xmlSerializer_","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","readFeatureFromDocument","readFeaturesFromDocument","readGeometryFromDocument","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","_ol_style_Text_","font_","rotation_","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","stroke_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotateWithView","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setMaxAngle","setPlacement","setRotation","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding"],"mappings":"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","file":"mapquery.min.js","sourcesContent":["/**\n * @module ngeo.filters\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo';\nimport olMath from 'ol/math';\nimport olString from 'ol/string';\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nngeoBase.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoScalify', ngeoBase.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nngeoBase.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoNumber', ngeoBase.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nngeoBase.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoUnitPrefix', ngeoBase.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nngeoBase.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoNumberCoordinates', ngeoBase.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nngeoBase.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoDMSCoordinates', ngeoBase.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * @return {function(?):string} The filter function.\n *//* @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nngeoBase.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nngeoBase.module.filter('ngeoTrustHtml', ngeoBase.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filters.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nvar XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 105\n// module chunks = 0 1 5 24","/**\n * @module ngeo.misc.ToolActivate\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivate.js","/**\n * @type {string} Default WMS version.\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.misc.btnComponent\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n *//* @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach(function(expressionFn, i) {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  }, this);\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/btnComponent.js","/**\n * @module ngeo.utils\n*/\nconst exports = {};\nimport olGeomLineString from 'ol/geom/LineString';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon';\nimport olGeomPoint from 'ol/geom/Point';\nimport olGeomPolygon from 'ol/geom/Polygon';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    if (value) {\n      queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n    } else {\n      queryItem.push(encodeURIComponent(key));\n    }\n  }\n  return queryItem.join('&');\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.rule.Rule\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @implements {ngeox.rule.Rule}\n */\nconst exports = class {\n\n  /**\n   * The abstract class for all filter rules.\n   *\n   * Rules are used to define filters that can be applied on data sources.\n   * A rule is usually a combination of 3 things:\n   *\n   * - a property name, for example 'city_name'\n   * - an operator, for example 'is equal to'\n   * - and an expression, for example 'Chicoutimi'.\n   *\n   * A rule is useful to hold those properties and change them on the fly.\n   * For example, chaning an operator from 'is equal to' to 'like'.\n   *\n   * Also, a rule is especially useful for its `value` getter, which returns\n   * the combination of properties described above or `null` if there are some\n   * missing.  The `value` getter can be watched and used when the value is\n   * not null.\n   *\n   * When the operator is `between`, the `lowerBoundary` and `upperBoundary`\n   * properties are used instead of `expression`.\n   *\n   * @struct\n   * @param {!ngeox.rule.RuleOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * Whether the rule is active or not. Used by the `ngeo-rule` component.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = options.active === true;\n\n    /**\n     * The expression of the rule. The expression and boundaries are mutually\n     * exclusives.\n     *\n     * Note: exported (instead of private) due to the problem with the\n     * compiler. See the getter/setter methods below...  As a setter, the\n     * `expression` property would support being bond to an `ng-model`. Without\n     * it, it can't unless we expose the property directly.\n     *\n     * @type {?number|string}\n     * @export\n     */\n    this.expression = options.expression !== undefined ?\n      options.expression : null;\n\n    /**\n     * The lower boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.lowerBoundary_ = options. lowerBoundary !== undefined ?\n      options.lowerBoundary : null;\n\n    /**\n     * The rule operator.\n     * @type {?string}\n     * @private\n     */\n    this.operator_ = options.operator || null;\n\n    /**\n     * The upper boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.upperBoundary_ = options. upperBoundary !== undefined ?\n      options.upperBoundary : null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the rule is a custom one or not.\n     * @type {boolean}\n     * @private\n     */\n    this.isCustom_ = options.isCustom !== false;\n\n    /**\n     * The human-readable name of the rule.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n\n    /**\n     * A list of rule operators.\n     * @type {?Array.<string>}\n     * @private\n     */\n    this.operators_ = options.operators || null;\n\n    /**\n     * The property name (a.k.a. the attribute name).\n     * @type {string}\n     * @private\n     */\n    this.propertyName_ = options.propertyName;\n\n    /**\n     * The type of rule.\n     * @type {string}\n     * @private\n     */\n    this.type_ = goog.asserts.assert(options.type);\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @protected\n     */\n    this.listenerKeys = [];\n\n  }\n\n  // === Dynamic property getters/setters ===\n\n  /**\n   * @return {boolean} Active\n   * @export\n   */\n  get active() {\n    return this.active_;\n  }\n\n  /**\n   * @param {boolean} active Active\n   * @export\n   */\n  set active(active) {\n    this.active_ = active;\n  }\n\n  /**\n   * The `expression` property does not have conventionnal getter/setters\n   * method because of a limitation of the compiler. It doesn't support\n   * yet having such methods being extended in child classes.\n   *\n   * See: https://github.com/google/closure-compiler/issues/1089\n   *\n   * @return {?number|string} Expression\n   * @export\n   */\n  getExpression() {\n    return this.expression;\n  }\n\n  /**\n   * @param {?number|string} expression Expression\n   * @export\n   */\n  setExpression(expression) {\n    this.expression = expression;\n  }\n\n  /**\n   * @return {?number} Lower boundary\n   * @export\n   */\n  get lowerBoundary() {\n    return this.lowerBoundary_;\n  }\n\n  /**\n   * @param {?number} lowerBoundary Lower boundary\n   * @export\n   */\n  set lowerBoundary(lowerBoundary) {\n    this.lowerBoundary_ = lowerBoundary;\n  }\n\n  /**\n   * @return {?string} Operator\n   * @export\n   */\n  get operator() {\n    return this.operator_;\n  }\n\n  /**\n   * @param {?string} operator Operator\n   * @export\n   */\n  set operator(operator) {\n    this.operator_ = operator;\n  }\n\n  /**\n   * @return {?number} Upper boundary\n   * @export\n   */\n  get upperBoundary() {\n    return this.upperBoundary_;\n  }\n\n  /**\n   * @param {?number} upperBoundary Upper boundary\n   * @export\n   */\n  set upperBoundary(upperBoundary) {\n    this.upperBoundary_ = upperBoundary;\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {boolean} Is custom.\n   * @export\n   */\n  get isCustom() {\n    return this.isCustom_;\n  }\n\n  /**\n   * @return {string} name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Array.<string>} Operators\n   * @export\n   */\n  get operators() {\n    return this.operators_;\n  }\n\n  /**\n   * @return {string} Property name\n   * @export\n   */\n  get propertyName() {\n    return this.propertyName_;\n  }\n\n  /**\n   * @return {string} Type\n   * @export\n   */\n  get type() {\n    return this.type_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {?ngeox.rule.RuleSimpleValue|ngeox.rule.RuleRangeValue} Value.\n   * @export\n   */\n  get value() {\n    let value = null;\n\n    const expression = this.getExpression();\n    const lowerBoundary = this.lowerBoundary;\n    const operator = this.operator;\n    const propertyName = this.propertyName;\n    const upperBoundary = this.upperBoundary;\n\n    if (operator) {\n      if (operator === exports.OperatorType.BETWEEN ||\n          operator === exports.TemporalOperatorType.DURING) {\n        if (lowerBoundary !== null && upperBoundary !== null) {\n          value = {\n            operator,\n            lowerBoundary,\n            propertyName,\n            upperBoundary\n          };\n        }\n      } else {\n        if (expression !== null) {\n          value = {\n            expression,\n            operator,\n            propertyName\n          };\n        }\n      }\n    }\n\n    return value;\n  }\n\n  // === Other utility methods ===\n\n  /**\n   * Reset the following properties to `null`: expression, lowerBoundary,\n   * upperBoundary.\n   * @export\n   */\n  reset() {\n    if (this.getExpression() !== null) {\n      this.setExpression(null);\n    }\n    if (this.lowerBoundary !== null) {\n      this.lowerBoundary = null;\n    }\n    if (this.upperBoundary !== null) {\n      this.upperBoundary = null;\n    }\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    ol.Observable.unByKey(this.listenerKeys);\n    this.listenerKeys.length = 0;\n  }\n\n};\n\n\n/**\n * @enum {string}\n */\nexports.OperatorType = {\n  BETWEEN: '..',\n  EQUAL_TO: '=',\n  GREATER_THAN: '>',\n  GREATER_THAN_OR_EQUAL_TO: '>=',\n  LESSER_THAN: '<',\n  LESSER_THAN_OR_EQUAL_TO: '<=',\n  LIKE: '~',\n  NOT_EQUAL_TO: '!='\n};\n\n\n/**\n * @enum {string}\n */\nexports.SpatialOperatorType = {\n  CONTAINS: 'contains',\n  INTERSECTS: 'intersects',\n  WITHIN: 'within'\n};\n\n\n/**\n * @enum {string}\n */\nexports.TemporalOperatorType = {\n  BEGINS: '>=',\n  DURING: '..',\n  ENDS: '<=',\n  EQUALS: '='\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Rule.js","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/format/XLink\n */\nvar XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nvar NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 123\n// module chunks = 0 1 5","/**\n * @module ngeo.interaction.MeasureAzimut\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection';\nimport olGeomLineString from 'ol/geom/LineString';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, opt_options) {\n\n  const options = opt_options || {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nol.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), ol.proj.Projection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureAzimut.js","/**\n * @module ol/format/JSONFeature\n */\nimport {inherits} from '../index.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nvar JSONFeature = function() {\n  FeatureFormat.call(this);\n};\n\ninherits(JSONFeature, FeatureFormat);\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    var object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.getType = function() {\n  return FormatType.JSON;\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeature = function(source, opt_options) {\n  return this.readFeatureFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeatures = function(source, opt_options) {\n  return this.readFeaturesFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.Feature} Feature.\n */\nJSONFeature.prototype.readFeatureFromObject = function(object, opt_options) {};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nJSONFeature.prototype.readFeaturesFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readGeometry = function(source, opt_options) {\n  return this.readGeometryFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nJSONFeature.prototype.readGeometryFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readProjection = function(source) {\n  return this.readProjectionFromObject(getObject(source));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nJSONFeature.prototype.readProjectionFromObject = function(object) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeature = function(feature, opt_options) {\n  return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeatureObject = function(feature, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeatures = function(features, opt_options) {\n  return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeaturesObject = function(features, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeGeometryObject = function(geometry, opt_options) {};\nexport default JSONFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/JSONFeature.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/GeoJSON\n */\n// TODO: serialize dataProjection as crs member when writing\n// see https://github.com/openlayers/openlayers/issues/2078\n\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @constructor\n * @extends {ol.format.JSONFeature}\n * @param {olx.format.GeoJSONOptions=} opt_options Options.\n * @api\n */\nvar GeoJSON = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  JSONFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection(\n      options.defaultDataProjection ?\n        options.defaultDataProjection : 'EPSG:4326');\n\n\n  if (options.featureProjection) {\n    this.defaultFeatureProjection = getProjection(options.featureProjection);\n  }\n\n  /**\n   * Name of the geometry attribute for features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * Look for the geometry name in the feature GeoJSON\n   * @type {boolean|undefined}\n   * @private\n   */\n  this.extractGeometryName_ = options.extractGeometryName;\n\n};\n\ninherits(GeoJSON, JSONFeature);\n\n\n/**\n * @const\n * @type {Object.<string, function(GeoJSONObject): ol.geom.Geometry>}\n */\nvar GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n  'GeometryCollection': readGeometryCollectionGeometry\n};\n\n\n/**\n * @const\n * @type {Object.<string, function(ol.geom.Geometry, olx.format.WriteOptions=): (GeoJSONGeometry|GeoJSONGeometryCollection)>}\n */\nvar GEOMETRY_WRITERS = {\n  'Point': writePointGeometry,\n  'LineString': writeLineStringGeometry,\n  'Polygon': writePolygonGeometry,\n  'MultiPoint': writeMultiPointGeometry,\n  'MultiLineString': writeMultiLineStringGeometry,\n  'MultiPolygon': writeMultiPolygonGeometry,\n  'GeometryCollection': writeGeometryCollectionGeometry,\n  'Circle': writeEmptyGeometryCollectionGeometry\n};\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  var geometryReader = GEOMETRY_READERS[object.type];\n  return (\n    /** @type {ol.geom.Geometry} */ transformWithOptions(\n        geometryReader(object), false, opt_options)\n  );\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  var geometries = object.geometries.map(\n      /**\n       * @param {GeoJSONGeometry} geometry Geometry.\n       * @return {ol.geom.Geometry} geometry Geometry.\n       */\n      function(geometry) {\n        return readGeometry(geometry, opt_options);\n      });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object.coordinates);\n}\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  var geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {ol.geom.Geometry} */ (\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {GeoJSONGeometryCollection} Empty GeoJSON geometry collection.\n */\nfunction writeEmptyGeometryCollectionGeometry(geometry) {\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: []\n  });\n}\n\n\n/**\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  var geometries = geometry.getGeometriesArray().map(function(geometry) {\n    var options = _ol_obj_.assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: geometries\n  });\n}\n\n\n/**\n * @param {ol.geom.LineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * @param {ol.geom.Point} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.Polygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * Read a feature from a GeoJSON Feature source.  Only works for Feature or\n * geometry types.  Use {@link ol.format.GeoJSON#readFeatures} to read\n * FeatureCollection source. If feature at source has an id, it will be used\n * as Feature id by calling {@link ol.Feature#setId} internally.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGeoJSON.prototype.readFeature;\n\n\n/**\n * Read all features from a GeoJSON source.  Works for all GeoJSON types.\n * If the source includes only geometries, features will be created with those\n * geometries.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGeoJSON.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeatureFromObject = function(object, opt_options) {\n  /**\n   * @type {GeoJSONFeature}\n   */\n  var geoJSONFeature = null;\n  if (object.type === 'Feature') {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n  } else {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ ({\n      type: 'Feature',\n      geometry: /** @type {GeoJSONGeometry|GeoJSONGeometryCollection} */ (object)\n    });\n  }\n\n  var geometry = readGeometry(geoJSONFeature.geometry, opt_options);\n  var feature = new Feature();\n  if (this.geometryName_) {\n    feature.setGeometryName(this.geometryName_);\n  } else if (this.extractGeometryName_ && geoJSONFeature.geometry_name !== undefined) {\n    feature.setGeometryName(geoJSONFeature.geometry_name);\n  }\n  feature.setGeometry(geometry);\n  if (geoJSONFeature.id !== undefined) {\n    feature.setId(geoJSONFeature.id);\n  }\n  if (geoJSONFeature.properties) {\n    feature.setProperties(geoJSONFeature.properties);\n  }\n  return feature;\n};\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeaturesFromObject = function(object, opt_options) {\n  var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  /** @type {Array.<ol.Feature>} */\n  var features = null;\n  if (geoJSONObject.type === 'FeatureCollection') {\n    var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */\n        (object);\n    features = [];\n    var geoJSONFeatures = geoJSONFeatureCollection.features;\n    var i, ii;\n    for (i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n      features.push(this.readFeatureFromObject(geoJSONFeatures[i],\n          opt_options));\n    }\n  } else {\n    features = [this.readFeatureFromObject(object, opt_options)];\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @api\n */\nGeoJSON.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readGeometryFromObject = function(object, opt_options) {\n  return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n};\n\n\n/**\n * Read the projection from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGeoJSON.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readProjectionFromObject = function(object) {\n  var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  var crs = geoJSONObject.crs;\n  var projection;\n  if (crs) {\n    if (crs.type == 'name') {\n      projection = getProjection(crs.properties.name);\n    } else {\n      assert(false, 36); // Unknown SRS type\n    }\n  } else {\n    projection = this.defaultDataProjection;\n  }\n  return /** @type {ol.proj.Projection} */ (projection);\n};\n\n\n/**\n * Encode a feature as a GeoJSON Feature string.\n *\n * @function\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeature;\n\n\n/**\n * Encode a feature as a GeoJSON Feature object.\n *\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeature} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeatureObject = function(feature, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n\n  var object = /** @type {GeoJSONFeature} */ ({\n    'type': 'Feature'\n  });\n  var id = feature.getId();\n  if (id !== undefined) {\n    object.id = id;\n  }\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    object.geometry = writeGeometry(geometry, opt_options);\n  } else {\n    object.geometry = null;\n  }\n  var properties = feature.getProperties();\n  delete properties[feature.getGeometryName()];\n  if (!_ol_obj_.isEmpty(properties)) {\n    object.properties = properties;\n  } else {\n    object.properties = null;\n  }\n  return object;\n};\n\n\n/**\n * Encode an array of features as GeoJSON.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features as a GeoJSON object.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeatureCollection} GeoJSON Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeaturesObject = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  var objects = [];\n  var i, ii;\n  for (i = 0, ii = features.length; i < ii; ++i) {\n    objects.push(this.writeFeatureObject(features[i], opt_options));\n  }\n  return /** @type {GeoJSONFeatureCollection} */ ({\n    type: 'FeatureCollection',\n    features: objects\n  });\n};\n\n\n/**\n * Encode a geometry as a GeoJSON string.\n *\n * @function\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeGeometry;\n\n\n/**\n * Encode a geometry as a GeoJSON object.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeGeometryObject = function(geometry, opt_options) {\n  return writeGeometry(geometry, this.adaptOptions(opt_options));\n};\nexport default GeoJSON;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GeoJSON.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.interaction.DrawAzimut\n*/\nimport googAsserts from 'goog/asserts';\nimport olFeature from 'ol/Feature';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent';\nimport olEvents from 'ol/events';\nimport olFunctions from 'ol/functions';\nimport olGeomCircle from 'ol/geom/Circle';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection';\nimport olGeomLineString from 'ol/geom/LineString';\nimport olGeomPoint from 'ol/geom/Point';\nimport olInteractionDraw from 'ol/interaction/Draw';\nimport olInteractionPointer from 'ol/interaction/Pointer';\nimport olLayerVector from 'ol/layer/Vector';\nimport olSourceVector from 'ol/source/Vector';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style !== undefined ?\n      options.style : olInteractionDraw.getDefaultStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nol.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), sketchFeature));\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/DrawAzimut.js","/**\n * @module ngeo.misc.ToolActivateMgr\n*/\nimport ngeoBase from 'ngeo';\nimport googAsserts from 'goog/asserts';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n *//* @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivateMgr.js","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nvar WFS = function(opt_options) {\n  var options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  var context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  _ol_obj_.assign(context, this.getReadOptions(node,\n      opt_options ? opt_options : {}));\n  var objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n      'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  var features = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n        /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (var n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n        GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  var result = {};\n  var value = XSD.readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n      /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n      WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n        XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n        XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n        XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n        WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n        WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (var n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n      /** @type {ol.WFSTransactionResponse} */({}),\n      WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var featureType = context['featureType'];\n  var featureNS = context['featureNS'];\n  var gmlVersion = context['gmlVersion'];\n  var child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  var filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  var child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  var prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  var fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = WFS.getTypeName_(featurePrefix, featureType);\n  var geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  var fid = feature.getId();\n  if (fid !== undefined) {\n    var keys = feature.getKeys();\n    var values = [];\n    for (var i = 0, ii = keys.length; i < ii; i++) {\n      var value = feature.get(keys[i]);\n      if (value !== undefined) {\n        var name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  var name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  var context = objectStack[objectStack.length - 1];\n  var gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    var value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n            pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n            pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var propertyNames = context['propertyNames'];\n  var srsName = context['srsName'];\n  var typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n        featureNS);\n  }\n  var item = /** @type {ol.XmlNodeStackItem} */ (_ol_obj_.assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n      WFS.QUERY_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n      objectStack);\n  var filter = context['filter'];\n  if (filter) {\n    var child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  var item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n      [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  var valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  var timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  var begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  var end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  var item = {node: node};\n  var conditions = filter.conditions;\n  for (var i = 0, ii = conditions.length; i < ii; ++i) {\n    var condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n        WFS.GETFEATURE_SERIALIZERS_,\n        _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n        [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  var item = {node: node};\n  var condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  var lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  var upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  var property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  var timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  var timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  var child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var item = /** @type {ol.XmlNodeStackItem} */ (_ol_obj_.assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n      objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  var node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  var filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n          12); // `options.geometryName` must also be provided when `options.bbox` is set\n      var bbox = _ol_format_filter_.bbox(\n          /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  var context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n      11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n    options) {\n  var objectStack = [];\n  var node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  var version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  var gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  var baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  var obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  var schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation', schemaLocation);\n  var featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    _ol_obj_.assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n        WFS.TRANSACTION_SERIALIZERS_,\n        _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n        objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    _ol_obj_.assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n        WFS.TRANSACTION_SERIALIZERS_,\n        _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n        objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (var n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        var objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 140\n// module chunks = 0 1","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nvar GML2 = function(opt_options) {\n  var options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n      'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  var s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  var context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  var containerSrs = context['srsName'];\n  var axisOrientation = 'enu';\n  if (containerSrs) {\n    var proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  var coordsGroups = s.trim().split(/\\s+/);\n  var x, y, z;\n  var flatCoordinates = [];\n  for (var i = 0, ii = coordsGroups.length; i < ii; i++) {\n    var coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  var flatCoordinates = _ol_xml_.pushParseAndPop([null],\n      this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[1][3],\n      flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  var flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  var flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n        GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n        GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  var context = objectStack[objectStack.length - 1];\n  var multiSurface = context['multiSurface'];\n  var surface = context['surface'];\n  var multiCurve = context['multiCurve'];\n  var nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n      nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  var fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var featureNS = context['featureNS'];\n  var geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  var properties = feature.getProperties();\n  var keys = [], values = [];\n  for (var key in properties) {\n    var value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n              this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n              XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  var item = _ol_obj_.assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      (item), context.serializers,\n      _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  var context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  var item = _ol_obj_.assign({}, context);\n  item.node = node;\n  var value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n          geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      (item), GML2.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    var segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n        geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  var coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  // only 2d for simple features profile\n  var points = value.getCoordinates();\n  var len = points.length;\n  var parts = new Array(len);\n  var point;\n  for (var i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  var child = _ol_xml_.createElementNS(node.namespaceURI,\n      'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    var rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        GML2.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    var patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  var context = objectStack[objectStack.length - 1];\n  var parentNode = context.node;\n  var exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  var child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  var linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  var axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    var z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  var curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  var point = geometry.getCoordinates();\n  var coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n    objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      GML2.POINTMEMBER_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  var child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  var surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  var child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var keys = ['lowerCorner', 'upperCorner'];\n  var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n        GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  var parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n      GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 146\n// module chunks = 0 1","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nvar GMLBase = function(opt_options) {\n  var options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  var localName = node.localName;\n  var features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n          this.FEATURE_COLLECTION_PARSERS, node,\n          objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n          this.FEATURE_COLLECTION_PARSERS, node,\n          objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    var context = objectStack[0];\n    var featureType = context['featureType'];\n    var featureNS = context['featureNS'];\n    var i, ii, prefix = 'p', defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        var child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          var ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            var key = '';\n            var count = 0;\n            var uri = child.namespaceURI;\n            for (var candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      var ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    var parsersNS = {};\n    var featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (var p in featureNS) {\n      var parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        var featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  var context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  var geometry = _ol_xml_.pushParseAndPop(null,\n      this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  var n;\n  var fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  var values = {}, geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      var value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  var feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  var flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    var point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  var coordinates = _ol_xml_.pushParseAndPop([],\n      this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  var lineStrings = _ol_xml_.pushParseAndPop([],\n      this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    var multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  var polygons = _ol_xml_.pushParseAndPop([],\n      this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    var multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n      node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n      node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n      objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  var flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    var lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  var ring = _ol_xml_.pushParseAndPop(null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n      objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  var flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    var ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  var flatLinearRings = _ol_xml_.pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    var polygon = new Polygon(null);\n    var flatCoordinates = flatLinearRings[0];\n    var ends = [flatCoordinates.length];\n    var i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n        GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n      objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n        GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n        GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n        GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n        GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n        GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n        GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n        GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n        GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n        GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  var geometry = this.readGeometryElement(node,\n      [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  var options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    _ol_obj_.assign(options, this.getReadOptions(node, opt_options));\n  }\n  var features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 147\n// module chunks = 0 1","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_style_Fill_ from '../style/Fill.js';\nimport _ol_style_Icon_ from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport _ol_style_Stroke_ from '../style/Stroke.js';\nimport _ol_style_Style_ from '../style/Style.js';\nimport _ol_style_Text_ from '../style/Text.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.KMLOptions=} opt_options Options.\n * @api\n */\nvar KML = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!KML.DEFAULT_STYLE_ARRAY_) {\n    KML.createStyleDefaults_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : KML.DEFAULT_STYLE_ARRAY_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {Object.<string, (Array.<ol.style.Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.GX_NAMESPACE_URIS_ = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.NAMESPACE_URIS_ = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nKML.SCHEMA_LOCATION_ = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @return {Array.<ol.style.Style>} Default style.\n * @private\n */\nKML.createStyleDefaults_ = function() {\n  /**\n   * @const\n   * @type {ol.Color}\n   * @private\n   */\n  KML.DEFAULT_COLOR_ = [255, 255, 255, 1];\n\n  /**\n   * @const\n   * @type {ol.style.Fill}\n   * @private\n   */\n  KML.DEFAULT_FILL_STYLE_ = new _ol_style_Fill_({\n    color: KML.DEFAULT_COLOR_\n  });\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_ = [20, 2]; // FIXME maybe [8, 32] ?\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SIZE_ = [64, 64];\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SRC_ =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_ = 0.5;\n\n  /**\n   * @const\n   * @type {ol.style.Image}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ = new _ol_style_Icon_({\n    anchor: KML.DEFAULT_IMAGE_STYLE_ANCHOR_,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_,\n    anchorYUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_,\n    size: KML.DEFAULT_IMAGE_STYLE_SIZE_,\n    src: KML.DEFAULT_IMAGE_STYLE_SRC_\n  });\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_NO_IMAGE_STYLE_ = 'NO_IMAGE';\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_STROKE_STYLE_ = new _ol_style_Stroke_({\n    color: KML.DEFAULT_COLOR_,\n    width: 1\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STROKE_STYLE_ = new _ol_style_Stroke_({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Text}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STYLE_ = new _ol_style_Text_({\n    font: 'bold 16px Helvetica',\n    fill: KML.DEFAULT_FILL_STYLE_,\n    stroke: KML.DEFAULT_TEXT_STROKE_STYLE_,\n    scale: 0.8\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Style}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ = new _ol_style_Style_({\n    fill: KML.DEFAULT_FILL_STYLE_,\n    image: KML.DEFAULT_IMAGE_STYLE_,\n    text: KML.DEFAULT_TEXT_STYLE_,\n    stroke: KML.DEFAULT_STROKE_STYLE_,\n    zIndex: 0\n  });\n\n  /**\n   * @const\n   * @type {Array.<ol.style.Style>}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ARRAY_ = [KML.DEFAULT_STYLE_];\n\n  return KML.DEFAULT_STYLE_ARRAY_;\n};\n\n\n/**\n * @const\n * @type {Object.<string, ol.style.IconAnchorUnits>}\n * @private\n */\nKML.ICON_ANCHOR_UNITS_MAP_ = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {ol.style.Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {ol.style.Style} style Style.\n * @private\n */\nKML.createNameStyleFunction_ = function(foundStyle, name) {\n  var textStyle = null;\n  var textOffset = [0, 0];\n  var textAlign = 'start';\n  if (foundStyle.getImage()) {\n    var imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n    }\n    if (imageSize.length == 2) {\n      var imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    var foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || KML.DEFAULT_TEXT_STYLE_.getFont());\n    textStyle.setScale(foundText.getScale() || KML.DEFAULT_TEXT_STYLE_.getScale());\n    textStyle.setFill(foundText.getFill() || KML.DEFAULT_TEXT_STYLE_.getFill());\n    textStyle.setStroke(foundText.getStroke() || KML.DEFAULT_TEXT_STROKE_STYLE_);\n  } else {\n    textStyle = KML.DEFAULT_TEXT_STYLE_.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  var nameStyle = new _ol_style_Style_({\n    text: textStyle\n  });\n  return nameStyle;\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles Shared\n *          styles.\n * @param {boolean|undefined} showPointNames true to show names for point\n *          placemarks.\n * @return {ol.FeatureStyleFunction} Feature style function.\n * @private\n */\nKML.createFeatureStyleFunction_ = function(style, styleUrl,\n    defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n         * @param {number} resolution Resolution.\n         * @return {Array.<ol.style.Style>} Style.\n         * @this {ol.Feature}\n         */\n    function(resolution) {\n      var drawName = showPointNames;\n      /** @type {ol.style.Style|undefined} */\n      var nameStyle;\n      var name = '';\n      if (drawName) {\n        if (this.getGeometry()) {\n          drawName = (this.getGeometry().getType() ===\n                        GeometryType.POINT);\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (this.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(style[0],\n              name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        var foundStyle = KML.findStyle_(styleUrl, defaultStyle,\n            sharedStyles);\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(foundStyle[0],\n              name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = KML.createNameStyleFunction_(defaultStyle[0],\n            name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|string|undefined} styleValue Style value.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<ol.style.Style>} Style.\n * @private\n */\nKML.findStyle_ = function(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return KML.findStyle_(\n        sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.Color|undefined} Color.\n */\nKML.readColor_ = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    var hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nKML.readFlatCoordinates_ = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  var flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  var re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  var m;\n  while ((m = re.exec(s))) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {string} URI.\n */\nKML.readURI_ = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false).trim();\n  var baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    var url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.KMLVec2_} Vec2.\n */\nKML.readVec2_ = function(node) {\n  var xunits = node.getAttribute('xunits');\n  var yunits = node.getAttribute('yunits');\n  var origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: KML.ICON_ANCHOR_UNITS_MAP_[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: KML.ICON_ANCHOR_UNITS_MAP_[yunits],\n    origin: origin\n  };\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {number|undefined} Scale.\n */\nKML.readScale_ = function(node) {\n  return XSD.readDecimal(node);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>|string|undefined} StyleMap.\n */\nKML.readStyleMapValue_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(undefined,\n      KML.STYLE_MAP_PARSERS_, node, objectStack);\n};\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.IconStyleParser_ = function(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  var object = _ol_xml_.pushParseAndPop(\n      {}, KML.ICON_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var IconObject = 'Icon' in object ? object['Icon'] : {};\n  var drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  var src;\n  var href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = KML.DEFAULT_IMAGE_STYLE_SRC_;\n  }\n  var anchor, anchorXUnits, anchorYUnits;\n  var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  var hotSpot = /** @type {ol.KMLVec2_|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === KML.DEFAULT_IMAGE_STYLE_SRC_) {\n    anchor = KML.DEFAULT_IMAGE_STYLE_ANCHOR_;\n    anchorXUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_;\n    anchorYUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  var offset;\n  var x = /** @type {number|undefined} */\n      (IconObject['x']);\n  var y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  var size;\n  var w = /** @type {number|undefined} */\n      (IconObject['w']);\n  var h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  var rotation;\n  var heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  var scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == KML.DEFAULT_IMAGE_STYLE_SRC_) {\n      size = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n      if (scale === undefined) {\n        scale = KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_;\n      }\n    }\n\n    var imageStyle = new _ol_style_Icon_({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = KML.DEFAULT_NO_IMAGE_STYLE_;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LabelStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  var object = _ol_xml_.pushParseAndPop(\n      {}, KML.LABEL_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var textStyle = new _ol_style_Text_({\n    fill: new _ol_style_Fill_({\n      color: /** @type {ol.Color} */\n          ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LineStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  var object = _ol_xml_.pushParseAndPop(\n      {}, KML.LINE_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var strokeStyle = new _ol_style_Stroke_({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PolyStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  var object = _ol_xml_.pushParseAndPop(\n      {}, KML.POLY_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var fillStyle = new _ol_style_Fill_({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  var fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  var outline =\n      /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nKML.readFlatLinearRing_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n      KML.FLAT_LINEAR_RING_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.gxCoordParser_ = function(node, objectStack) {\n  var gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  var flatCoordinates = gxTrackObject.flatCoordinates;\n  var s = _ol_xml_.getAllTextContent(node, false);\n  var re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  var m = re.exec(s);\n  if (m) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nKML.readGxMultiTrack_ = function(node, objectStack) {\n  var lineStrings = _ol_xml_.pushParseAndPop([],\n      KML.GX_MULTITRACK_GEOMETRY_PARSERS_, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  var multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readGxTrack_ = function(node, objectStack) {\n  var gxTrackObject = _ol_xml_.pushParseAndPop(\n      /** @type {ol.KMLGxTrackObject_} */ ({\n        flatCoordinates: [],\n        whens: []\n      }), KML.GX_TRACK_PARSERS_, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  var flatCoordinates = gxTrackObject.flatCoordinates;\n  var whens = gxTrackObject.whens;\n  var i, ii;\n  for (i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii;\n    ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  var lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object} Icon object.\n */\nKML.readIcon_ = function(node, objectStack) {\n  var iconObject = _ol_xml_.pushParseAndPop(\n      {}, KML.ICON_PARSERS_, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nKML.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n      KML.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readLineString_ = function(node, objectStack) {\n  var properties = _ol_xml_.pushParseAndPop({},\n      KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n      objectStack);\n  var flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    var lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readLinearRing_ = function(node, objectStack) {\n  var properties = _ol_xml_.pushParseAndPop({},\n      KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n      objectStack);\n  var flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    var polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n        [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\nKML.readMultiGeometry_ = function(node, objectStack) {\n  var geometries = _ol_xml_.pushParseAndPop([],\n      KML.MULTI_GEOMETRY_PARSERS_, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {ol.geom.Geometry} */\n  var multiGeometry;\n  var homogeneous = true;\n  var type = geometries[0].getType();\n  var geometry, i, ii;\n  for (i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    var layout;\n    var flatCoordinates;\n    if (type == GeometryType.POINT) {\n      var point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {ol.geom.Geometry} */ (multiGeometry);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Point|undefined} Point.\n */\nKML.readPoint_ = function(node, objectStack) {\n  var properties = _ol_xml_.pushParseAndPop({},\n      KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n      objectStack);\n  var flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    var point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readPolygon_ = function(node, objectStack) {\n  var properties = _ol_xml_.pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n      KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n      objectStack);\n  var flatLinearRings = _ol_xml_.pushParseAndPop([null],\n      KML.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    var polygon = new Polygon(null);\n    var flatCoordinates = flatLinearRings[0];\n    var ends = [flatCoordinates.length];\n    var i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n        GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>} Style.\n */\nKML.readStyle_ = function(node, objectStack) {\n  var styleObject = _ol_xml_.pushParseAndPop(\n      {}, KML.STYLE_PARSERS_, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  var fillStyle = /** @type {ol.style.Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : KML.DEFAULT_FILL_STYLE_);\n  var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  var imageStyle = /** @type {ol.style.Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : KML.DEFAULT_IMAGE_STYLE_);\n  if (imageStyle == KML.DEFAULT_NO_IMAGE_STYLE_) {\n    imageStyle = undefined;\n  }\n  var textStyle = /** @type {ol.style.Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : KML.DEFAULT_TEXT_STYLE_);\n  var strokeStyle = /** @type {ol.style.Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : KML.DEFAULT_STROKE_STYLE_);\n  var outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new _ol_style_Style_({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n};\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {ol.geom.MultiPoint|ol.geom.MultiLineString|ol.geom.MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<ol.geom.Geometry>} geometries List of geometries.\n * @private\n */\nKML.setCommonGeometryProperties_ = function(multiGeometry,\n    geometries) {\n  var ii = geometries.length;\n  var extrudes = new Array(geometries.length);\n  var tessellates = new Array(geometries.length);\n  var altitudeModes = new Array(geometries.length);\n  var geometry, i, hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (i = 0; i < ii; ++i) {\n    geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.DataParser_ = function(node, objectStack) {\n  var name = node.getAttribute('name');\n  _ol_xml_.parseNode(KML.DATA_PARSERS_, node, objectStack);\n  var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.ExtendedDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.EXTENDED_DATA_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.RegionParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.REGION_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PairDataParser_ = function(node, objectStack) {\n  var pairObject = _ol_xml_.pushParseAndPop(\n      {}, KML.PAIR_PARSERS_, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  var key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    var styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    var Style = /** @type {ol.style.Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PlacemarkStyleMapParser_ = function(node, objectStack) {\n  var styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  var placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SchemaDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.SCHEMA_DATA_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SimpleDataParser_ = function(node, objectStack) {\n  var name = node.getAttribute('name');\n  if (name !== null) {\n    var data = XSD.readString(node);\n    var featureObject =\n        /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LatLonAltBoxParser_ = function(node, objectStack) {\n  var object = _ol_xml_.pushParseAndPop({}, KML.LAT_LON_ALT_BOX_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LodParser_ = function(node, objectStack) {\n  var object = _ol_xml_.pushParseAndPop({}, KML.LOD_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  var flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n      KML.INNER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  var flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n      KML.OUTER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LinkParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.LINK_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.whenParser_ = function(node, objectStack) {\n  var gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  var whens = gxTrackObject.whens;\n  var s = _ol_xml_.getAllTextContent(node, false);\n  var when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'displayName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'value': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTENDED_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Data': KML.DataParser_,\n      'SchemaData': KML.SchemaDataParser_\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.REGION_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LatLonAltBox': KML.LatLonAltBoxParser_,\n      'Lod': KML.LodParser_\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LAT_LON_ALT_BOX_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'minAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'maxAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'north': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'south': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'east': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'west': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LOD_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'minLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'maxLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'minFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'maxFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'extrude': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n      'tessellate': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n      'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RING_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RINGS_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'innerBoundaryIs': KML.innerBoundaryIsParser_,\n      'outerBoundaryIs': KML.outerBoundaryIsParser_\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_TRACK_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'when': KML.whenParser_\n    }, _ol_xml_.makeStructureNS(\n        KML.GX_NAMESPACE_URIS_, {\n          'coord': KML.gxCoordParser_\n        }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GEOMETRY_FLAT_COORDINATES_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n    }, _ol_xml_.makeStructureNS(\n        KML.GX_NAMESPACE_URIS_, {\n          'x': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n          'y': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n          'w': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n          'h': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n        }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Icon': _ol_xml_.makeObjectPropertySetter(KML.readIcon_),\n      'heading': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'hotSpot': _ol_xml_.makeObjectPropertySetter(KML.readVec2_),\n      'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.INNER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LABEL_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n      'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINE_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n      'width': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.MULTI_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LineString': _ol_xml_.makeArrayPusher(KML.readLineString_),\n      'LinearRing': _ol_xml_.makeArrayPusher(KML.readLinearRing_),\n      'MultiGeometry': _ol_xml_.makeArrayPusher(KML.readMultiGeometry_),\n      'Point': _ol_xml_.makeArrayPusher(KML.readPoint_),\n      'Polygon': _ol_xml_.makeArrayPusher(KML.readPolygon_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_MULTITRACK_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'Track': _ol_xml_.makeArrayPusher(KML.readGxTrack_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.NETWORK_LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'ExtendedData': KML.ExtendedDataParser_,\n      'Region': KML.RegionParser_,\n      'Link': KML.LinkParser_,\n      'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n      'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.OUTER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PAIR_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n      'key': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PLACEMARK_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'ExtendedData': KML.ExtendedDataParser_,\n      'Region': KML.RegionParser_,\n      'MultiGeometry': _ol_xml_.makeObjectPropertySetter(\n          KML.readMultiGeometry_, 'geometry'),\n      'LineString': _ol_xml_.makeObjectPropertySetter(\n          KML.readLineString_, 'geometry'),\n      'LinearRing': _ol_xml_.makeObjectPropertySetter(\n          KML.readLinearRing_, 'geometry'),\n      'Point': _ol_xml_.makeObjectPropertySetter(\n          KML.readPoint_, 'geometry'),\n      'Polygon': _ol_xml_.makeObjectPropertySetter(\n          KML.readPolygon_, 'geometry'),\n      'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n      'StyleMap': KML.PlacemarkStyleMapParser_,\n      'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n      'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_),\n      'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n    }, _ol_xml_.makeStructureNS(\n        KML.GX_NAMESPACE_URIS_, {\n          'MultiTrack': _ol_xml_.makeObjectPropertySetter(\n              KML.readGxMultiTrack_, 'geometry'),\n          'Track': _ol_xml_.makeObjectPropertySetter(\n              KML.readGxTrack_, 'geometry')\n        }\n    ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.POLY_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n      'fill': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n      'outline': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.SCHEMA_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'SimpleData': KML.SimpleDataParser_\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'IconStyle': KML.IconStyleParser_,\n      'LabelStyle': KML.LabelStyleParser_,\n      'LineStyle': KML.LineStyleParser_,\n      'PolyStyle': KML.PolyStyleParser_\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_MAP_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Pair': KML.PairDataParser_\n    });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  var parsersNS = _ol_xml_.makeStructureNS(\n      KML.NAMESPACE_URIS_, {\n        'Document': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Folder': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Placemark': _ol_xml_.makeArrayPusher(this.readPlacemark_, this),\n        'Style': this.readSharedStyle_.bind(this),\n        'StyleMap': this.readSharedStyleMap_.bind(this)\n      });\n  /** @type {Array.<ol.Feature>} */\n  var features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  var object = _ol_xml_.pushParseAndPop({'geometry': null},\n      KML.PLACEMARK_PARSERS_, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  var feature = new Feature();\n  var id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  var options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n\n  var geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    var style = object['Style'];\n    var styleUrl = object['styleUrl'];\n    var styleFunction = KML.createFeatureStyleFunction_(\n        style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n        this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  var id = node.getAttribute('id');\n  if (id !== null) {\n    var style = KML.readStyle_(node, objectStack);\n    if (style) {\n      var styleUri;\n      var baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        var url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  var id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  var styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  var styleUri;\n  var baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    var url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return null;\n  }\n  var feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return [];\n  }\n  var features;\n  var localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n        node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    var feature = this.readPlacemark_(\n        node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    var n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      var fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Souce.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  var n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      var name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  var n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'name') {\n      return XSD.readString(n);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      var name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  var networkLinks = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n        /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n        /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  var n, networkLinks = [];\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  var n, networkLinks = [];\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      var obj = _ol_xml_.pushParseAndPop({}, KML.NETWORK_LINK_PARSERS_,\n          n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  var regions = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n        /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n        /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  var n, regions = [];\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  var n, regions = [];\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'Region') {\n      var obj = _ol_xml_.pushParseAndPop({}, KML.REGION_PARSERS_,\n          n, []);\n      regions.push(obj);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {ol.Color|string} color Color.\n * @private\n */\nKML.writeColorTextNode_ = function(node, color) {\n  var rgba = asArray(color);\n  var opacity = (rgba.length == 4) ? rgba[3] : 1;\n  var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  var i;\n  for (i = 0; i < 4; ++i) {\n    var hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  XSD.writeStringTextNode(node, abgr.join(''));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeCoordinatesTextNode_ = function(node, coordinates, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n\n  var layout = context['layout'];\n  var stride = context['stride'];\n\n  var dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  var d, i;\n  var ii = coordinates.length;\n  var text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  XSD.writeStringTextNode(node, text);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeDataNode_ = function(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n          _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n          _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n * @private\n */\nKML.writeDataNodeName_ = function(node, name) {\n  XSD.writeCDATASection(node, name);\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n * @private\n */\nKML.writeDataNodeValue_ = function(node, value) {\n  XSD.writeStringTextNode(node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writeDocument_ = function(node, features, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.DOCUMENT_SERIALIZERS_,\n      KML.DOCUMENT_NODE_FACTORY_, features, objectStack, undefined,\n      this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeExtendedData_ = function(node, namesAndValues, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var names = namesAndValues.names, values = namesAndValues.values;\n  var length = names.length;\n\n  for (var i = 0; i < length; i++) {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        KML.DATA_NODE_FACTORY_, [{name: names[i], value: values[i]}], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIcon_ = function(node, icon, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.ICON_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n      KML.ICON_SERIALIZERS_, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n      values, objectStack, orderedKeys);\n  orderedKeys =\n      KML.ICON_SEQUENCE_[KML.GX_NAMESPACE_URIS_[0]];\n  values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_SERIALIZERS_,\n      KML.GX_NODE_FACTORY_, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIconStyle_ = function(node, style, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var properties = {};\n  var src = style.getSrc();\n  var size = style.getSize();\n  var iconImageSize = style.getImageSize();\n  var iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    var anchor = style.getAnchor(); // top-left\n    var origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      var /** @type {ol.KMLVec2_} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  var scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  var rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.ICON_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_STYLE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLabelStyle_ = function(node, style, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var properties = {};\n  var fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  var scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys =\n      KML.LABEL_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LABEL_STYLE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLineStyle_ = function(node, style, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.LINE_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LINE_STYLE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeMultiGeometry_ = function(node, geometry, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  var context = {node: node};\n  var type = geometry.getType();\n  /** @type {Array.<ol.geom.Geometry>} */\n  var geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  var factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    factory = KML.GEOMETRY_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {ol.geom.MultiPoint} */ (geometry).getPoints();\n    factory = KML.POINT_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {ol.geom.MultiLineString} */ (geometry)).getLineStrings();\n    factory = KML.LINE_STRING_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {ol.geom.MultiPolygon} */ (geometry)).getPolygons();\n    factory = KML.POLYGON_NODE_FACTORY_;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  _ol_xml_.pushSerializeAndPop(context,\n      KML.MULTI_GEOMETRY_SERIALIZERS_, factory,\n      geometries, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeBoundaryIs_ = function(node, linearRing, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context,\n      KML.BOUNDARY_IS_SERIALIZERS_,\n      KML.LINEAR_RING_NODE_FACTORY_, [linearRing], objectStack);\n};\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writePlacemark_ = function(node, feature, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  var properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  var filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  var keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    var sequence = _ol_xml_.makeSequence(properties, keys);\n    var namesAndValues = {names: keys, values: sequence};\n    _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n        KML.EXTENDEDDATA_NODE_FACTORY_, [namesAndValues], objectStack);\n  }\n\n  var styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    var styles = styleFunction.call(feature, 0);\n    if (styles) {\n      var style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      var textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.PLACEMARK_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  var options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      KML.GEOMETRY_NODE_FACTORY_, [geometry], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePrimitiveGeometry_ = function(node, geometry, objectStack) {\n  var flatCoordinates = geometry.getFlatCoordinates();\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  var properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.PRIMITIVE_GEOMETRY_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PRIMITIVE_GEOMETRY_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolygon_ = function(node, polygon, objectStack) {\n  var linearRings = polygon.getLinearRings();\n  var outerRing = linearRings.shift();\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  // inner rings\n  _ol_xml_.pushSerializeAndPop(context,\n      KML.POLYGON_SERIALIZERS_,\n      KML.INNER_BOUNDARY_NODE_FACTORY_,\n      linearRings, objectStack);\n  // outer ring\n  _ol_xml_.pushSerializeAndPop(context,\n      KML.POLYGON_SERIALIZERS_,\n      KML.OUTER_BOUNDARY_NODE_FACTORY_,\n      [outerRing], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolyStyle_ = function(node, style, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.POLY_STYLE_SERIALIZERS_,\n      KML.COLOR_NODE_FACTORY_, [style.getColor()], objectStack);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n * @private\n */\nKML.writeScaleTextNode_ = function(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  XSD.writeDecimalTextNode(node,\n      Math.round(scale * 1e6) / 1e6);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeStyle_ = function(node, style, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var properties = {};\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  var imageStyle = style.getImage();\n  var textStyle = style.getText();\n  if (imageStyle instanceof _ol_style_Icon_) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.STYLE_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.STYLE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {ol.KMLVec2_} vec2 Vec2.\n * @private\n */\nKML.writeVec2_ = function(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.KML_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'Document', 'Placemark'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.KML_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Document': _ol_xml_.makeChildAppender(KML.writeDocument_),\n      'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.DOCUMENT_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.EXTENDEDDATA_NODE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Data': _ol_xml_.makeChildAppender(KML.writeDataNode_),\n      'value': _ol_xml_.makeChildAppender(KML.writeDataNodeValue_),\n      'displayName': _ol_xml_.makeChildAppender(KML.writeDataNodeName_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nKML.GEOMETRY_TYPE_TO_NODENAME_ = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'href'\n    ],\n    _ol_xml_.makeStructureNS(KML.GX_NAMESPACE_URIS_, [\n      'x', 'y', 'w', 'h'\n    ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'href': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n    }, _ol_xml_.makeStructureNS(\n        KML.GX_NAMESPACE_URIS_, {\n          'x': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n          'y': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n          'w': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n          'h': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n        }));\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'scale', 'heading', 'Icon', 'hotSpot'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Icon': _ol_xml_.makeChildAppender(KML.writeIcon_),\n      'heading': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'hotSpot': _ol_xml_.makeChildAppender(KML.writeVec2_),\n      'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LABEL_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'color', 'scale'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LABEL_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n      'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LINE_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'color', 'width'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LINE_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n      'width': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.BOUNDARY_IS_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LinearRing': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.MULTI_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LineString': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_),\n      'Point': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_),\n      'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n      'GeometryCollection': _ol_xml_.makeChildAppender(\n          KML.writeMultiGeometry_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PLACEMARK_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n      'styleUrl', 'Style'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PLACEMARK_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'ExtendedData': _ol_xml_.makeChildAppender(\n          KML.writeExtendedData_),\n      'MultiGeometry': _ol_xml_.makeChildAppender(\n          KML.writeMultiGeometry_),\n      'LineString': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_),\n      'LinearRing': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_),\n      'Point': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_),\n      'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n      'Style': _ol_xml_.makeChildAppender(KML.writeStyle_),\n      'address': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'description': _ol_xml_.makeChildAppender(\n          XSD.writeStringTextNode),\n      'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'open': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n      'phoneNumber': _ol_xml_.makeChildAppender(\n          XSD.writeStringTextNode),\n      'styleUrl': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'visibility': _ol_xml_.makeChildAppender(\n          XSD.writeBooleanTextNode)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'extrude': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n      'tessellate': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n      'altitudeMode': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'coordinates': _ol_xml_.makeChildAppender(\n          KML.writeCoordinatesTextNode_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLYGON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'outerBoundaryIs': _ol_xml_.makeChildAppender(\n          KML.writeBoundaryIs_),\n      'innerBoundaryIs': _ol_xml_.makeChildAppender(\n          KML.writeBoundaryIs_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLY_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'IconStyle': _ol_xml_.makeChildAppender(KML.writeIconStyle_),\n      'LabelStyle': _ol_xml_.makeChildAppender(KML.writeLabelStyle_),\n      'LineStyle': _ol_xml_.makeChildAppender(KML.writeLineStyle_),\n      'PolyStyle': _ol_xml_.makeChildAppender(KML.writePolyStyle_)\n    });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GX_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  return _ol_xml_.createElementNS(KML.GX_NAMESPACE_URIS_[0],\n      'gx:' + opt_nodeName);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.DOCUMENT_NODE_FACTORY_ = function(value, objectStack,\n    opt_nodeName) {\n  var parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GEOMETRY_NODE_FACTORY_ = function(value, objectStack,\n    opt_nodeName) {\n  if (value) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return _ol_xml_.createElementNS(parentNode.namespaceURI,\n        KML.GEOMETRY_TYPE_TO_NODENAME_[/** @type {ol.geom.Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.COLOR_NODE_FACTORY_ = _ol_xml_.makeSimpleNodeFactory('color');\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.DATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Data');\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.EXTENDEDDATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.INNER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POINT_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINE_STRING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINEAR_RING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POLYGON_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Polygon');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.OUTER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  var kml = _ol_xml_.createElementNS(KML.NAMESPACE_URIS_[4], 'kml');\n  var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  var xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:gx',\n      KML.GX_NAMESPACE_URIS_[0]);\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(kml, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n      KML.SCHEMA_LOCATION_);\n\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: kml};\n  var properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  var orderedKeys = KML.KML_SEQUENCE_[kml.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.KML_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n      this);\n  return kml;\n};\nexport default KML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/KML.js\n// module id = 148\n// module chunks = 0 1 2 10","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nvar OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (var n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  var owsObject = _ol_xml_.pushParseAndPop({},\n      OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  var name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n      OWS.CONSTRAINT_PARSERS_, node,\n      objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  var href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n      OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n      node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  var name = node.getAttribute('name');\n  var value = _ol_xml_.pushParseAndPop({},\n      OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  var object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n    objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      OWS.OPERATIONS_METADATA_PARSERS_, node,\n      objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n    objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n      objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n      objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n      objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceIdentification_),\n      'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceProvider_),\n      'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n          OWS.readOperationsMetadata_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n          OWS.readAllowedValues_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n      'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n      'Post': undefined // TODO\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'Operation': OWS.readOperation_\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'Constraint': _ol_xml_.makeObjectPropertyPusher(\n          OWS.readConstraint_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n        OWS.NAMESPACE_URIS_, {\n          'IndividualName': _ol_xml_.makeObjectPropertySetter(\n              XSD.readString),\n          'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n          'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n              OWS.readContactInfo_)\n        });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n        OWS.NAMESPACE_URIS_, {\n          'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n          'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n          'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n          'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n          'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n              XSD.readString),\n          'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n        });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n        OWS.NAMESPACE_URIS_, {\n          'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n          'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n          'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n              OWS.readServiceContact_)\n        });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nvar _ol_format_WMTSCapabilities_ = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(_ol_format_WMTSCapabilities_, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\n_ol_format_WMTSCapabilities_.prototype.read;\n\n\n/**\n * @inheritDoc\n */\n_ol_format_WMTSCapabilities_.prototype.readFromDocument = function(doc) {\n  for (var n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_WMTSCapabilities_.prototype.readFromNode = function(node) {\n  var version = node.getAttribute('version').trim();\n  var WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n      _ol_format_WMTSCapabilities_.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\n_ol_format_WMTSCapabilities_.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\n_ol_format_WMTSCapabilities_.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\n_ol_format_WMTSCapabilities_.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\n_ol_format_WMTSCapabilities_.readStyle_ = function(node, objectStack) {\n  var style = _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  var isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\n_ol_format_WMTSCapabilities_.readTileMatrixSetLink_ = function(node,\n    objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\n_ol_format_WMTSCapabilities_.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\n_ol_format_WMTSCapabilities_.readResourceUrl_ = function(node, objectStack) {\n  var format = node.getAttribute('format');\n  var template = node.getAttribute('template');\n  var resourceType = node.getAttribute('resourceType');\n  var resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\n_ol_format_WMTSCapabilities_.readWgs84BoundingBox_ = function(node, objectStack) {\n  var coordinates = _ol_xml_.pushParseAndPop([],\n      _ol_format_WMTSCapabilities_.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\n_ol_format_WMTSCapabilities_.readLegendUrl_ = function(node, objectStack) {\n  var legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\n_ol_format_WMTSCapabilities_.readCoordinates_ = function(node, objectStack) {\n  var coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  var x = +coordinates[0];\n  var y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\n_ol_format_WMTSCapabilities_.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\n_ol_format_WMTSCapabilities_.readTileMatrixLimitsList_ = function(node,\n    objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n      _ol_format_WMTSCapabilities_.TMS_LIMITS_LIST_PARSERS_, node,\n      objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\n_ol_format_WMTSCapabilities_.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\n_ol_format_WMTSCapabilities_.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\n_ol_format_WMTSCapabilities_.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'Contents': _ol_xml_.makeObjectPropertySetter(\n          _ol_format_WMTSCapabilities_.readContents_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'Layer': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readLayer_),\n      'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readTileMatrixSet_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'Style': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readStyle_),\n      'Format': _ol_xml_.makeObjectPropertyPusher(\n          XSD.readString),\n      'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readTileMatrixSetLink_),\n      'Dimension': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readDimensions_),\n      'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readResourceUrl_)\n    }, _ol_xml_.makeStructureNS(_ol_format_WMTSCapabilities_.OWS_NAMESPACE_URIS_, {\n      'Title': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'Abstract': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n          _ol_format_WMTSCapabilities_.readWgs84BoundingBox_),\n      'Identifier': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readLegendUrl_)\n    }, _ol_xml_.makeStructureNS(_ol_format_WMTSCapabilities_.OWS_NAMESPACE_URIS_, {\n      'Title': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'Identifier': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n          _ol_format_WMTSCapabilities_.readTileMatrixLimitsList_)\n    });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n          _ol_format_WMTSCapabilities_.readTileMatrixLimits_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger),\n      'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger),\n      'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger),\n      'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'Default': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'Value': _ol_xml_.makeObjectPropertyPusher(\n          XSD.readString)\n    }, _ol_xml_.makeStructureNS(_ol_format_WMTSCapabilities_.OWS_NAMESPACE_URIS_, {\n      'Identifier': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.OWS_NAMESPACE_URIS_, {\n      'LowerCorner': _ol_xml_.makeArrayPusher(\n          _ol_format_WMTSCapabilities_.readCoordinates_),\n      'UpperCorner': _ol_xml_.makeArrayPusher(\n          _ol_format_WMTSCapabilities_.readCoordinates_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readTileMatrix_)\n    }, _ol_xml_.makeStructureNS(_ol_format_WMTSCapabilities_.OWS_NAMESPACE_URIS_, {\n      'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'Identifier': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n          _ol_format_WMTSCapabilities_.readCoordinates_),\n      'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n          XSD.readDecimal),\n      'TileWidth': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger),\n      'TileHeight': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger),\n      'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger),\n      'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger)\n    }, _ol_xml_.makeStructureNS(_ol_format_WMTSCapabilities_.OWS_NAMESPACE_URIS_, {\n      'Identifier': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString)\n    }));\nexport default _ol_format_WMTSCapabilities_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.query.Querent\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC';\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime';\nimport olFormatWFS from 'ol/format/WFS';\nimport ngeoWFSDescribeFeatureType from 'ngeo/WFSDescribeFeatureType';\nimport olFormatWMSCapabilities from 'ol/format/WMSCapabilities';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities';\nimport olObj from 'ol/obj';\nimport olUri from 'ol/uri';\nimport olExtent from 'ol/extent';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\n\nconst exports = class {\n\n  /**\n   * The ngeo Querent is a service that issues all sorts of queries using\n   * ngeo data sources. It does not store the result. Instead, it returns it\n   * using promises. Any component that inject this service can use it to\n   * make it issue its own queries and do whatever it wants with the result.\n   *\n   * It supports sending OGC requests and parse the response, such as:\n   * - WFS DescribeFeatureType\n   * - WFS GetFeature\n   * - WMS GetCapabilites\n   * - WMS GetFeatureInfo\n   * - WMTS GetCapabilities\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   *//* @ngInject\n   */\n  constructor($http, $q, ngeoRuleHelper, ngeoWMSTime) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n\n    // === Other properties ===\n\n    /**\n     * Promises that can be resolved to cancel started requests.\n     * @type {!Array.<angular.$q.Deferred>}\n     * @private\n     */\n    this.requestCancelers_ = [];\n\n    /**\n     * Cache of promises for WMS GetCapabilities requests. They key is the\n     * online resource base url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmsGetCapabilitiesPromises_ = {};\n\n    /**\n     * Cache of promises for WMST GetCapabilities requests. They key is the\n     * url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmtsGetCapabilitiesPromises_ = {};\n  }\n\n\n  // === PUBLIC methods ===\n\n  /**\n   * Issue WMS GetFeatureInfo and/or WFS GetFeature requests using the given\n   * data sources, map and optional filters.\n   *\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  issue(options) {\n\n    const promises = [];\n    const map = options.map;\n\n    // (1) Cancel requests that are still running\n    this.cancelStillRunningRequests_();\n\n    // (2) Get queryable data sources\n    let queryableDataSources;\n    if (options.queryableDataSources) {\n      queryableDataSources = options.queryableDataSources;\n    } else {\n      const dataSources = options.dataSources;\n      goog.asserts.assert(dataSources, 'DataSources should be set');\n      queryableDataSources = this.getQueryableDataSources(dataSources, map);\n    }\n\n    // (3) Combine data sources that support WFS and issue WFS queries.\n    //     The 'bbox' ('extent' option) is not required for WFS requests to\n    //     be issued.\n    const combinedWFSDataSources = this.getCombinableWFSDataSources_(\n      queryableDataSources.wfs);\n    promises.push(this.issueCombinedWFS_(combinedWFSDataSources, options));\n\n    // (4) Combine data sources that support WMS and issue WMS queries.\n    //     Only occurs if the `coordinate` option is set, because it's required\n    //     by WMS GetFeatureInfo requests.\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const combinedWMSDataSources = this.getCombinableWMSDataSources_(\n        queryableDataSources.wms);\n      promises.push(this.issueCombinedWMS_(combinedWMSDataSources, options));\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Browse a given list of data sources. Return 2 lists of data sources that\n   * are queryable, the first one being those that support WFS and the other\n   * WMS only. This means that WFS is always favored first, then WMS.\n   *\n   * The map view resolution determines if the inner ogc layers are in range.\n   *\n   * @param {!Array.<!ngeo.datasource.DataSource>} dataSources Data sources\n   * @param {ol.Map} map Map.\n   * @return {!ngeox.QueryableDataSources} Queryable data sources.\n   * @export\n   */\n  getQueryableDataSources(dataSources, map) {\n\n    const queryableDataSources = {\n      wfs: [],\n      wms: []\n    };\n    const resolution = goog.asserts.assertNumber(map.getView().getResolution());\n\n    for (const dataSource of dataSources) {\n\n      // (1) Skip data source that can't be queried\n      if (!this.isDataSourceQueryable_(dataSource, resolution)) {\n        continue;\n      }\n\n      if (dataSource instanceof ngeoDatasourceOGC) {\n        // (2) Split data sources\n        if (dataSource.supportsWFS) {\n          queryableDataSources.wfs.push(dataSource);\n        } else {\n          queryableDataSources.wms.push(dataSource);\n        }\n      }\n    }\n\n    return queryableDataSources;\n  }\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  wfsDescribeFeatureType(dataSource) {\n\n    goog.asserts.assert(\n      dataSource.supportsAttributes,\n      `The data source must support WFS, have a single OGCLayer that\n      is queryable in order to issue WFS DescribeFeatureType requests`\n    );\n\n    const ogcLayerNames = dataSource.getOGCLayerNames();\n\n    const url = olUri.appendParams(\n      goog.asserts.assertString(dataSource.wfsUrl),\n      {\n        'REQUEST': 'DescribeFeatureType',\n        'SERVICE': 'WFS',\n        'VERSION': '2.0.0',\n        'TYPENAME': ogcLayerNames\n      }\n    );\n\n    return this.http_.get(url).then((response) => {\n      const format = new ngeoWFSDescribeFeatureType();\n      return format.read(response.data);\n    });\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMS layer capabilities\n   * @param {string} layerName Name of the WMS layer\n   * @return {?Object} Found WMS layer capability\n   * @export\n   */\n  wmsFindLayerCapability(layerCapabilities, layerName) {\n\n    let found = null;\n\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Name'] === layerName) {\n        found = layerCapability;\n        break;\n      } else if (layerCapability['Layer']) {\n        found = this.wmsFindLayerCapability(\n          layerCapability['Layer'], layerName);\n        if (found) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * @param {string} baseUrl Base url of the WMS server.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmsGetCapabilities(baseUrl, opt_cache) {\n\n    const cache = opt_cache !== false;\n\n    const params = {\n      'REQUEST': 'GetCapabilities',\n      'SERVICE': 'WMS',\n      'VERSION': '1.3.0'\n    };\n\n    const url = olUri.appendParams(baseUrl, params);\n    let promise;\n\n    if (!cache || !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.wmsGetCapabilitiesPromises_[baseUrl];\n    }\n\n    goog.asserts.assert(promise);\n\n    if (cache && !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      this.wmsGetCapabilitiesPromises_[baseUrl] = promise;\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMTS layer capabilities\n   * @param {string} layerName Name of the WMTS layer, a.k.a. the identifier.\n   * @return {?Object} Found WTMS layer capability\n   * @export\n   */\n  wmtsFindLayerCapability(layerCapabilities, layerName) {\n    let found = null;\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Identifier'] === layerName) {\n        found = layerCapability;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {string} url Url of the WMTS server. Note that it must contain\n   *     all required arguments.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmtsGetCapabilities(url, opt_cache) {\n\n    const cache = opt_cache !== false;\n    let promise;\n\n    if (!cache || !this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMTSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.wmtsGetCapabilitiesPromises_[url];\n    }\n\n    goog.asserts.assert(promise);\n\n    if (cache && !this.wmtsGetCapabilitiesPromises_[url]) {\n      this.wmtsGetCapabilitiesPromises_[url] = promise;\n    }\n\n    return promise;\n  }\n\n\n  // === PRIVATE methods ===\n\n  /**\n   * Handles the response of multiple promises that did either\n   * WMS GetFeatureInfo or WFS GetFeature requests, in which the result is\n   * a hash with key being the data source id and value the array of features.\n   *\n   * The response object itself is an array, one item being one result per\n   * promise. The idea is to return a single hash by combining the result\n   * objects.\n   *\n   * The keys are always unique, i.e. there can be multiple result objects for\n   * the same data source id.\n   *\n   * @param {!Array.<ngeox.QuerentResult>} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleCombinedQueryResult_(response) {\n    const combinedHash = {};\n    for (const hash of response) {\n      for (const dataSourceIdStr in hash) {\n        const dataSourceId = Number(dataSourceIdStr);\n        combinedHash[dataSourceId] = hash[dataSourceId];\n      }\n    }\n    return combinedHash;\n  }\n\n\n  /**\n   * Handles the result of a single WMS GetFeatureInfo or WFS GetFeature\n   * request. Read features from the response and return them.\n   *\n   * @param {!Array.<!ngeo.datasource.OGC>} dataSources List of\n   *     queryable data sources that were used to do the query.\n   * @param {number} limit The maximum number of features to get with the query.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {angular.$http.Response|number} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleQueryResult_(dataSources, limit, wfs, response) {\n    const hash = {};\n\n    for (const dataSource of dataSources) {\n      let features;\n      let tooManyFeatures;\n      let totalFeatureCount;\n\n      if (typeof response === 'number') {\n        features = [];\n        tooManyFeatures = true;\n        totalFeatureCount = response;\n      } else {\n        if (dataSource instanceof ngeoDatasourceOGC) {\n          features = this.readAndTypeFeatures_(dataSource, response.data, wfs);\n        } else {\n          features = [];\n        }\n      }\n      const dataSourceId = dataSource.id;\n      this.setUniqueIds_(features, dataSource.id);\n      hash[dataSourceId] = {\n        features,\n        limit,\n        tooManyFeatures,\n        totalFeatureCount\n      };\n    }\n\n    return hash;\n  }\n\n  /**\n   * Read and assign the type of the feature to each feature in the data.\n   * The type will be stocked in the properties of the features as\n   * \"ngeo_feature_type_\".\n   * @param {ngeo.datasource.OGC} dataSource used to read the features.\n   * @param {Document | Node | Object | string} data the response data.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @return {Array.<ol.Feature>} returned features with a type in each features.\n   * @private\n   */\n  readAndTypeFeatures_(dataSource, data, wfs) {\n    const features = [];\n    let readFeatures;\n    // Copy the types to be able to set it AND iterate on it.\n    const featureTypes = this.getSetOlFormatTypes_(dataSource, wfs).slice();\n    featureTypes.forEach((type) => {\n      // Assign temporarily a single feature type to read features separately.\n      this.getSetOlFormatTypes_(dataSource, wfs, [type]);\n      if (wfs) {\n        readFeatures = dataSource.wfsFormat.readFeatures(data);\n      } else {\n        readFeatures = dataSource.wmsFormat.readFeatures(data);\n      }\n      if (readFeatures.length > 0) {\n        readFeatures.forEach((feature) => {\n          feature.set('ngeo_feature_type_', type);\n          features.push(feature);\n        });\n      }\n    });\n    // Re-set the value to the datasource.xxxFormat to be able to re-use\n    // it later (in another query);\n    this.getSetOlFormatTypes_(dataSource, wfs, featureTypes);\n    return features;\n  }\n\n  /**\n   * Return the types defined in the format of the datasource. Can set the\n   * types if one is given.\n   * @param {ngeo.datasource.OGC} dataSource that contains the format object.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {Array.<string>=} opt_types An array of type if you want to set the\n   *     type of the format object.\n   * @return {Array.<string>} The types defined in the format.\n   * @private\n   */\n  getSetOlFormatTypes_(dataSource, wfs, opt_types) {\n    let types;\n    if (wfs) {\n      if (opt_types) {\n        dataSource.wfsFormat.setFeatureType(opt_types);\n      }\n      types = dataSource.wfsFormat.getFeatureType();\n    } else {\n      if (opt_types) {\n        dataSource.wmsFormat.setLayers(opt_types);\n      }\n      types = dataSource.wmsFormat.getLayers();\n    }\n    if (!types) {\n      return [];\n    }\n    return (Array.isArray(types)) ? types : [types];\n  }\n\n  /**\n   * Issue WFS GetFeature requests using the given combined data sources, map\n   * and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWFS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const maxFeatures = goog.asserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = goog.asserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const srsName = projection.getCode();\n    const wfsCount = options.wfsCount === true;\n\n    // (1) Extent (bbox), which is optional, i.e. its value can stay undefined\n    let bbox;\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const tolerancePx = options.tolerancePx;\n      goog.asserts.assert(tolerancePx);\n      const tolerance = tolerancePx * resolution;\n      bbox = olExtent.buffer(\n        olExtent.createOrUpdateFromCoordinate(coordinate),\n        tolerance\n      );\n    } else {\n      bbox = options.extent;\n    }\n\n    // (2) Launch one request per combinaison of data sources\n    const wfsFormat = new olFormatWFS();\n    const xmlSerializer = new XMLSerializer();\n    for (const dataSources of combinedDataSources) {\n\n      let getFeatureCommonOptions;\n      let featureNS;\n      let featureTypes = [];\n      let url;\n      const params = {};\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!getFeatureCommonOptions) {\n          featureNS = dataSource.wfsFeatureNS;\n          const featurePrefix = dataSource.wfsFeaturePrefix;\n          const geometryName = dataSource.geometryName;\n          const outputFormat = dataSource.wfsOutputFormat;\n\n          getFeatureCommonOptions = {\n            bbox,\n            featureNS,\n            featurePrefix,\n            geometryName,\n            outputFormat,\n            srsName\n          };\n\n          url = dataSource.wfsUrl;\n\n          // All data sources combined share the same active dimensions\n          olObj.assign(params, dataSource.activeDimensions);\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        featureTypes = featureTypes.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Add filter, if any. If the case, then only one data source\n        //     is expected to be used for this request.\n        let filter;\n        if (options.filter) {\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            filter: options.filter,\n            incTime: true\n          });\n        } else if ((dataSource.filterRules && dataSource.filterRules.length) ||\n            dataSource.timeRangeValue) {\n\n          goog.asserts.assert(\n            dataSources.length === 1,\n            `A data source having filterRules or timeRangeValue should issue\n            a single query, alone.`\n          );\n\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            incTime: true,\n            srsName: srsName\n          });\n        }\n\n        if (filter) {\n          getFeatureCommonOptions['filter'] = filter;\n        }\n      }\n\n      goog.asserts.assert(getFeatureCommonOptions);\n      getFeatureCommonOptions.featureTypes = featureTypes;\n      goog.asserts.assert(url);\n\n      // (4) Build query then launch\n      //\n      //     If we require to do a WFS GetFeature request with\n      //     `resultType: 'hits'` first, do so. In that case, if there would\n      //     be too many features returned, no GetFeature is done thereafter\n      //     and the data sources will return empty arrays in the returned\n      //     response.\n      //\n      //     If we do not need to count features first, then proceed with\n      //     an normal WFS GetFeature request.\n      const getFeatureDefer = this.q_.defer();\n      promises.push(\n        getFeatureDefer.promise.then(\n          this.handleQueryResult_.bind(this, dataSources, maxFeatures, true)\n        )\n      );\n\n      // (4.1) Count, if required\n      let countPromise;\n      if (wfsCount) {\n        const getCountOptions =\n            /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n            olObj.assign(\n              {\n                resultType: 'hits'\n              },\n              getFeatureCommonOptions\n            )\n          );\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(\n          featureCountXml);\n        const canceler = this.registerCanceler_();\n        countPromise = this.http_.post(\n          url,\n          featureCountRequest,\n          {\n            params: params,\n            timeout: canceler.promise\n          }\n        ).then(((response) => {\n          const meta = dataSources[0].wfsFormat.readFeatureCollectionMetadata(\n            response.data\n          );\n          return meta['numberOfFeatures'];\n        }).bind(this));\n      } else {\n        countPromise = this.q_.resolve();\n      }\n\n      // (4.2) After count, do GetFeature (if required)\n      countPromise.then((numberOfFeatures) => {\n        // `true` is returned if a count request was made AND there would\n        // be too many features.\n        if (numberOfFeatures === undefined || numberOfFeatures < maxFeatures) {\n\n          const getFeatureOptions =\n              /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n              olObj.assign(\n                {\n                  maxFeatures\n                },\n                getFeatureCommonOptions\n              )\n            );\n          const featureRequestXml = wfsFormat.writeGetFeature(\n            getFeatureOptions);\n          const featureRequest = xmlSerializer.serializeToString(\n            featureRequestXml);\n          goog.asserts.assertString(url);\n          const canceler = this.registerCanceler_();\n          this.http_.post(\n            url,\n            featureRequest,\n            {\n              params: params,\n              timeout: canceler.promise\n            }\n          ).then((response) => {\n            getFeatureDefer.resolve(response);\n          });\n\n        } else {\n          getFeatureDefer.resolve(numberOfFeatures);\n        }\n      });\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Issue WMS GetFeatureInfo requests using the given combined data sources,\n   * map and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWMS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const FEATURE_COUNT = goog.asserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = goog.asserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const projCode = projection.getCode();\n\n    // (1) Coordinate, which is required to issue WMS GetFeatureInfo requests\n    const coordinate = options.coordinate;\n    goog.asserts.assert(coordinate);\n\n    // (2) Launch one request per combinaison of data sources\n    for (const dataSources of combinedDataSources) {\n\n      let url;\n      let LAYERS = [];\n      let INFO_FORMAT;\n      let activeDimensionsSet = false;\n      const params = {};\n      let filterString = null;\n      let filtrableLayerName = null;\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!INFO_FORMAT) {\n          INFO_FORMAT = dataSource.wmsInfoFormat;\n          url = dataSource.wmsUrl;\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        LAYERS = LAYERS.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Manage active dimensions, which are added directly to the\n        //     query parameters. Note that this occurs only ONCE, i.e.\n        //     for the first data source, because all data sources here have\n        //     been combined together, therefore they share the same active\n        //     dimensions.\n        if (!activeDimensionsSet) {\n          olObj.assign(params, dataSource.activeDimensions);\n          activeDimensionsSet = true;\n        }\n\n        // (d) Add filter, if any. If there is a filter on the data source,\n        //     then it is expected that one request will be sent for this\n        //     data source only.\n        if (dataSource.filterRules && dataSource.filterRules.length) {\n          goog.asserts.assert(dataSources.length === 1);\n          filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n          filterString = this.ngeoRuleHelper_.createFilterString({\n            dataSource: dataSource,\n            srsName: projCode\n          });\n        }\n\n        // (e) Add TIME parameter if the data source has a time range value.\n        //     If that's the case, then it is expected that one request will be\n        //     sent for this data source only.\n        if (dataSource.timeRangeValue !== null && dataSource.timeProperty) {\n          goog.asserts.assert(dataSources.length === 1);\n          params['TIME'] = this.ngeoWMSTime_.formatWMSTimeParam(\n            dataSource.timeProperty,\n            dataSource.timeRangeValue\n          );\n        }\n      }\n\n      params['LAYERS'] = LAYERS;\n      params['QUERY_LAYERS'] = LAYERS;\n\n      // Manage 'FILTER' parameter\n      if (filterString && filtrableLayerName) {\n        let filterParamValue = null;\n        if (LAYERS.length === 1) {\n          // When there's only one layer in the `LAYERS` parameters, then\n          // the filter string is given as-is.\n          filterParamValue = filterString;\n        } else {\n          // When there's more then one layer, then each filter must be wrapped\n          // between parenthesis and the order must also match the `LAYERS`\n          // parameter as well.\n          const filterParamValues = [];\n          for (let i = 0, ii = LAYERS.length; i < ii; i++) {\n            if (LAYERS[i] === filtrableLayerName) {\n              filterParamValues.push(`(${filterString})`);\n            } else {\n              filterParamValues.push('()');\n            }\n          }\n          filterParamValue = filterParamValues.join('');\n        }\n        params['FILTER'] = filterParamValue;\n      }\n\n      goog.asserts.assert(url);\n      const wmsSource = new olSourceImageWMS({\n        params,\n        url\n      });\n\n      // (4) Build query url, then launch\n      const wmsGetFeatureInfoUrl = goog.asserts.assertString(\n        wmsSource.getGetFeatureInfoUrl(\n          coordinate, resolution, projCode, {\n            // Without extern, quoting is necessary\n            'FEATURE_COUNT': FEATURE_COUNT,\n            'INFO_FORMAT': INFO_FORMAT\n          }\n        )\n      );\n\n      const canceler = this.registerCanceler_();\n      promises.push(\n        this.http_.get(\n          wmsGetFeatureInfoUrl,\n          {\n            timeout: canceler.promise\n          }\n        ).then(\n          this.handleQueryResult_.bind(this, dataSources, FEATURE_COUNT, false)\n        )\n      );\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WFS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWFSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWFS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWFS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WMS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWMSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWMS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWMS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * Checks if a data source can be queried, which requires it to be:\n   * - visible\n   * - in range\n   * - queryable (using the native getter)\n   * - have at least one OGC layer in range of current map view resolution.\n   *\n   * @param {ngeo.datasource.DataSource} ds Data source\n   * @param {number} res Resolution.\n   * @return {boolean} Whether the data source is queryable\n   * @private\n   */\n  isDataSourceQueryable_(ds, res) {\n    let queryable = ds.visible && ds.inRange && ds.queryable;\n    if (queryable && ds instanceof ngeoDatasourceOGC) {\n      const ogcDS = /** @type {!ngeo.datasource.OGC} */ (ds);\n      queryable = ogcDS.isAnyOGCLayerInRange(res, true);\n    }\n    return queryable;\n  }\n\n  /**\n   * Make sure that feature ids are unique, because the same features might\n   * be returned for different layers.\n   * @param {Array.<ol.Feature>} features Features\n   * @param {number} dataSourceId Data source id.\n   * @private\n   */\n  setUniqueIds_(features, dataSourceId) {\n    features.forEach((feature) => {\n      if (feature.getId() !== undefined) {\n        const id = `${dataSourceId}_${feature.getId()}`;\n        feature.setId(id);\n      }\n    });\n  }\n\n  /**\n   * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n   *    HTTP request.\n   * @private\n   */\n  registerCanceler_() {\n    const canceler = this.q_.defer();\n    this.requestCancelers_.push(canceler);\n    return canceler;\n  }\n\n  /**\n   * @private\n   */\n  cancelStillRunningRequests_() {\n    for (const canceler of this.requestCancelers_) {\n      canceler.resolve();\n    }\n    this.requestCancelers_.length = 0;\n  }\n};\n\n\n/**\n * @typedef {!Array.<!Array.<!ngeo.datasource.OGC>>}\n */\nexports.CombinedDataSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuerent', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoQuerent', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/query/Querent.js","/**\n * @module ngeo.misc.Time\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n *//* @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = new Date(time.minValue);\n  const maxDate = new Date(time.maxValue);\n\n  const minDefaultDate = (time.minDefValue) ?\n    new Date(time.minDefValue) : minDate;\n  const maxDefaultDate = (time.maxDefValue) ?\n    new Date(time.maxDefValue) : maxDate;\n\n  const defaultValues = (time.mode === 'range') ?\n    [minDefaultDate.getTime(), maxDefaultDate.getTime()] :\n    minDefaultDate.getTime();\n\n  return {\n    minDate: minDate.getTime(),\n    maxDate: maxDate.getTime(),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/Time.js","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nvar _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nvar ImageWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var extent = getForViewAndSize(coordinate, resolution, 0,\n      ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n      extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var imageResolution = resolution / pixelRatio;\n\n  var center = getCenter(extent);\n  var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n  var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n  var image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  var params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return _ol_uri_.appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n    imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.Attribute\n*/\nconst exports = {};\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeo.AttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Attribute.js","/**\n * @module ngeo.datasource.OGC\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource';\nimport olFormatGML2 from 'ol/format/GML2';\nimport olFormatGML3 from 'ol/format/GML3';\nimport olFormatWFS from 'ol/format/WFS';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeo.FilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeo.AttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nvar GML3 = function(opt_options) {\n  var options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  var lineStrings = _ol_xml_.pushParseAndPop([],\n      this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    var multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  var polygons = _ol_xml_.pushParseAndPop([],\n      this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    var multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n      node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n      this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n      this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n      node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  var flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  var flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  var flatLinearRings = _ol_xml_.pushParseAndPop([null],\n      this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    var polygon = new Polygon(null);\n    var flatCoordinates = flatLinearRings[0];\n    var ends = [flatCoordinates.length];\n    var i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n        GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  var flatCoordinates = _ol_xml_.pushParseAndPop([null],\n      this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    var lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  var flatCoordinates = _ol_xml_.pushParseAndPop([null],\n      this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[2][0],\n      flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  var flatCoordinates = [];\n  var m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  var context = objectStack[0];\n  var containerSrs = context['srsName'];\n  var axisOrientation = 'enu';\n  if (containerSrs) {\n    var proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    var i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      var y = flatCoordinates[i];\n      var x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  var len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  var s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  var context = objectStack[0];\n  var containerSrs = context['srsName'];\n  var contextDimension = context['srsDimension'];\n  var axisOrientation = 'enu';\n  if (containerSrs) {\n    var proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  var coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  var dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n        node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n        node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n        node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  var x, y, z;\n  var flatCoordinates = [];\n  for (var i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n        GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n        GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n        GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n        GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n        GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n        GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n        GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n        GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n        GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n        GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n        GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  var srsName = context['srsName'];\n  var axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  var point = value.getCoordinates();\n  var coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    var z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  var axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    var z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  var srsName = context['srsName'];\n  // only 2d for simple features profile\n  var points = value.getCoordinates();\n  var len = points.length;\n  var parts = new Array(len);\n  var point;\n  for (var i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var keys = ['lowerCorner', 'upperCorner'];\n  var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  var context = objectStack[objectStack.length - 1];\n  var parentNode = context.node;\n  var exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    var rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        GML3.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    var patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    var posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    var segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n        geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  var surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n    objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  var hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      GML3.POINTMEMBER_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  var curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  var linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  var child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  var child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  var child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  var child = _ol_xml_.createElementNS(node.namespaceURI,\n      'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  var context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  var item = _ol_obj_.assign({}, context);\n  item.node = node;\n  var value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n          geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      (item), GML3.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  var fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var featureNS = context['featureNS'];\n  var geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  var properties = feature.getProperties();\n  var keys = [], values = [];\n  for (var key in properties) {\n    var value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n              this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n              XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  var item = _ol_obj_.assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      (item), context.serializers,\n      _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var featureType = context['featureType'];\n  var featureNS = context['featureNS'];\n  var serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n      this.writeFeatureElement, this);\n  var item = _ol_obj_.assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      (item),\n      serializers,\n      _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n      objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n        GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  var parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n      GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  var context = objectStack[objectStack.length - 1];\n  var multiSurface = context['multiSurface'];\n  var surface = context['surface'];\n  var curve = context['curve'];\n  var multiCurve = context['multiCurve'];\n  var nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n      nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  var geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  var context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    _ol_obj_.assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  var node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n      'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation', this.schemaLocation);\n  var context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    _ol_obj_.assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 165\n// module chunks = 0 1","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nvar Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nvar LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nvar And = function(conditions) {\n  var params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nvar Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nvar Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nvar Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nvar Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nvar During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nvar ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nvar EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nvar GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nvar GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nvar Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nvar IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nvar IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nvar IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nvar LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nvar LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nvar Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nvar NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nvar Or = function(conditions) {\n  var params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nvar Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nvar _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  var params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  var params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n      opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.FeatureHelper\n*/\nimport ngeoBase from 'ngeo';\n\n/** @suppress {extraRequire} */\nimport ngeoFilters from 'ngeo/filters';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service';\n\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut';\nimport olArray from 'ol/array';\nimport olColor from 'ol/color';\nimport olExtent from 'ol/extent';\nimport olFeature from 'ol/Feature';\nimport olGeomLineString from 'ol/geom/LineString';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint';\nimport olGeomPoint from 'ol/geom/Point';\nimport olGeomPolygon from 'ol/geom/Polygon';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon';\nimport olFormatGPX from 'ol/format/GPX';\nimport olFormatKML from 'ol/format/KML';\nimport olStyleCircle from 'ol/style/Circle';\nimport olStyleFill from 'ol/style/Fill';\nimport olStyleRegularShape from 'ol/style/RegularShape';\nimport olStyleStroke from 'ol/style/Stroke';\nimport olStyleStyle from 'ol/style/Style';\nimport olStyleText from 'ol/style/Text';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n *//* @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    goog.asserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoBase.GeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoBase.GeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoBase.GeometryType.CIRCLE:\n    case ngeoBase.GeometryType.POLYGON:\n    case ngeoBase.GeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoBase.GeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  goog.asserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        offsetY: -(size + 10 / 2 + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return goog.asserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return goog.asserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoBase.FeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            offsetY: -(8 / 2 + 4)\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoBase.GeometryType.LINE_STRING,\n    ngeoBase.GeometryType.POLYGON,\n    ngeoBase.GeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoBase.GeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoBase.GeometryType.LINE_STRING:\n    case ngeoBase.GeometryType.CIRCLE:\n    case ngeoBase.GeometryType.POLYGON:\n    case ngeoBase.GeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoBase.GeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  goog.asserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoBase.FeatureProperties.ANGLE)));\n  goog.asserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = goog.asserts.assertString(feature.get(ngeoBase.FeatureProperties.COLOR));\n\n  goog.asserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = goog.asserts.assertString(feature.get(ngeoBase.FeatureProperties.NAME));\n  goog.asserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoBase.FeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoBase.FeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return goog.asserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoBase.FeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return goog.asserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoBase.FeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoBase.FeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  goog.asserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoBase.GeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoBase.FeatureProperties.AZIMUT);\n      goog.asserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  goog.asserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoBase.FeatureProperties.IS_TEXT)) {\n      type = ngeoBase.GeometryType.TEXT;\n    } else {\n      type = ngeoBase.GeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoBase.GeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoBase.FeatureProperties.IS_CIRCLE)) {\n      type = ngeoBase.GeometryType.CIRCLE;\n    } else if (feature.get(ngeoBase.FeatureProperties.IS_RECTANGLE)) {\n      type = ngeoBase.GeometryType.RECTANGLE;\n    } else {\n      type = ngeoBase.GeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoBase.GeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoBase.GeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoBase.GeometryType.MULTI_LINE_STRING;\n  }\n\n  goog.asserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  goog.asserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    goog.asserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoFeatureHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/FeatureHelper.js","/**\n * @module ngeo.download.service\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoUtils from 'ngeo/utils';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/download/service.js","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.GPXOptions=} opt_options Options.\n * @api\n */\nvar GPX = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(ol.Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (ol.Feature|undefined)>}\n */\nvar FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar GPX_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'rte': _ol_xml_.makeArrayPusher(readRte),\n      'trk': _ol_xml_.makeArrayPusher(readTrk),\n      'wpt': _ol_xml_.makeArrayPusher(readWpt)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar LINK_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'text': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkText'),\n      'type': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkType')\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar RTE_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'link': parseLink,\n      'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n      'extensions': parseExtensions,\n      'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'rtept': parseRtePt\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar RTEPT_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar TRK_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'link': parseLink,\n      'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n      'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'extensions': parseExtensions,\n      'trkseg': parseTrkSeg\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar TRKSEG_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'trkpt': parseTrkPt\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar TRKPT_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar WPT_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime),\n      'magvar': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'geoidheight': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'link': parseLink,\n      'sym': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'fix': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'sat': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n      'hdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'vdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'pdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'ageofdgpsdata': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'dgpsid': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n      'extensions': parseExtensions\n    });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nvar LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nvar LINK_SERIALIZERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'text': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nvar RTE_SEQUENCE = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, [\n      'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nvar RTE_SERIALIZERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'link': _ol_xml_.makeChildAppender(writeLink),\n      'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n      'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'rtept': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeWptType))\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nvar RTEPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, [\n      'ele', 'time'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nvar TRK_SEQUENCE = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, [\n      'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nvar TRK_SERIALIZERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'link': _ol_xml_.makeChildAppender(writeLink),\n      'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n      'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'trkseg': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeTrkSeg))\n    });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nvar TRKSEG_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nvar TRKSEG_SERIALIZERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'trkpt': _ol_xml_.makeChildAppender(writeWptType)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nvar WPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, [\n      'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n      'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n      'ageofdgpsdata', 'dgpsid'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nvar WPT_TYPE_SERIALIZERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'ele': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'time': _ol_xml_.makeChildAppender(XSD.writeDateTimeTextNode),\n      'magvar': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'geoidheight': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'link': _ol_xml_.makeChildAppender(writeLink),\n      'sym': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'fix': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'sat': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n      'hdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'vdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'pdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'ageofdgpsdata': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'dgpsid': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  var geometry = /** @type {ol.Feature} */ (value).getGeometry();\n  if (geometry) {\n    var nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      var parentNode = objectStack[objectStack.length - 1].node;\n      return _ol_xml_.createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nvar GPX_SERIALIZERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'rte': _ol_xml_.makeChildAppender(writeRte),\n      'trk': _ol_xml_.makeChildAppender(writeTrk),\n      'wpt': _ol_xml_.makeChildAppender(writeWpt)\n    });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n      parseFloat(node.getAttribute('lon')),\n      parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {ol.geom.GeometryLayout} Layout.\n */\nGPX.applyLayoutOptions_ = function(layoutOptions, flatCoordinates, ends) {\n  var layout = GeometryLayout.XY;\n  var stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    var i, ii;\n    for (i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  _ol_xml_.parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  var values = _ol_xml_.pushParseAndPop(\n      {}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    var rteValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = /** @type {Array.<number>} */\n        (rteValues['flatCoordinates']);\n    var layoutOptions = /** @type {ol.LayoutOptions} */\n        (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  var values = _ol_xml_.pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    var trkValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = /** @type {Array.<number>} */\n        (trkValues['flatCoordinates']);\n    var layoutOptions = /** @type {ol.LayoutOptions} */\n        (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  _ol_xml_.parseNode(TRKSEG_PARSERS, node, objectStack);\n  var flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  var ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  var options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  var values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  var layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  var layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates);\n  var geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  var options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  var values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  var ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  var layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  var layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates, ends);\n  var geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  var options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  var values = _ol_xml_.pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var layoutOptions = /** @type {ol.LayoutOptions} */ ({});\n  var coordinates = appendCoordinate([], layoutOptions, node, values);\n  var layout = GPX.applyLayoutOptions_(layoutOptions, coordinates);\n  var geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (var i = 0, ii = features.length; i < ii; ++i) {\n    var feature = features[i];\n    if (this.readExtensions_) {\n      var extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  var featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  var feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<ol.Feature>} */\n    var features = _ol_xml_.pushParseAndPop([], GPX_PARSERS,\n        node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  var context = objectStack[objectStack.length - 1];\n  var properties = context['properties'];\n  var link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ ({node: node}),\n      LINK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n      link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var parentNode = context.node;\n  var namespaceURI = parentNode.namespaceURI;\n  var properties = context['properties'];\n  //FIXME Projection handling\n  _ol_xml_.setAttributeNS(node, null, 'lat', coordinate[1]);\n  _ol_xml_.setAttributeNS(node, null, 'lon', coordinate[0]);\n  var geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  var orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      ({node: node, 'properties': properties}),\n      WPT_TYPE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n      values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  var options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  var properties = feature.getProperties();\n  var context = {node: node, 'properties': properties};\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n      RTE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n      values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  var options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  var properties = feature.getProperties();\n  /** @type {ol.XmlNodeStackItem} */\n  var context = {node: node, 'properties': properties};\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n      TRK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n      values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  var context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  _ol_xml_.pushSerializeAndPop(context,\n      TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n      lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  var options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  var context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  var gpx = _ol_xml_.createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  var xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(gpx, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(gpx, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n      SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GPX.js\n// module id = 169\n// module chunks = 0 1 2","/**\n * @module ngeo.misc.WMSTime\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoMiscTime from 'ngeo/misc/Time';\nimport googAsserts from 'goog/asserts';\nimport olBase from 'ol';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @constructor\n * @struct\n *//* @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * ngeoWMSTime.prototype.formatWMSTimeValue_ - Format time regarding a\n * resolution\n *\n * @param  {number} time (in ms format) timestamp to format\n * @param  {ngeox.TimePropertyResolutionEnum} resolution resolution to use\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string regarding the resolution\n * @private\n */\nexports.prototype.formatWMSTimeValue_ = function(time, resolution, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, 'yyyy', utc);\n    case 'month':\n      return this.$filter_('date')(date, 'yyyy-MM', utc);\n    case 'day':\n      return this.$filter_('date')(date, 'yyyy-MM-dd', utc);\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * ngeoWMSTime.prototype.formatWMSTimeParam - Format time to be used as a\n * WMS Time query parameter\n *\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatWMSTimeValue_(times.start, wmsTimeProperty.resolution, opt_toUTC)}/${\n        this.formatWMSTimeValue_(times.end, wmsTimeProperty.resolution, opt_toUTC)}`\n    );\n  } else {\n    return this.formatWMSTimeValue_(times.start, wmsTimeProperty.resolution, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/WMSTime.js","/**\n * @module ngeo.query.MapQuerent\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoQueryQuerent from 'ngeo/query/Querent';\nimport ngeoDatasourceDataSourcesHelper from 'ngeo/datasource/DataSourcesHelper';\nimport olObj from 'ol/obj';\n\n\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\nngeoBase.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n  sources: [],\n  total: 0,\n  pending: false\n}));\n\n\nconst exports = class {\n\n  /**\n   * The ngeo Map Querent is the service bound to a map that issues\n   * queries using the Querent service. The result is stored inside this\n   * service.\n   *\n   * NOTE: This will replace the ngeo.Query service.\n   *\n   * @struct\n   * @param {angular.$injector} $injector Main injector.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data source objects.\n   * @param {ngeo.datasource.DataSourcesHelper} ngeoDataSourcesHelper Ngeo data\n   *     sources helper service.\n   * @param {ngeo.query.Querent} ngeoQuerent The ngeo querent service.\n   * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   *//* @ngInject\n   */\n  constructor($injector, ngeoDataSources, ngeoDataSourcesHelper, ngeoQuerent,\n    ngeoQueryResult) {\n\n    const options = /** @type {ngeox.QueryOptions} */ (\n      $injector.has('ngeoQueryOptions') ?\n        $injector.get('ngeoQueryOptions') : {});\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ngeo.datasource.DataSourcesHelper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.result_ = ngeoQueryResult;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n    /**\n     * When set, before making WFS GetFeature requests to fetch features,\n     * WFS GetFeature requests with `resultType = 'hits'` are made first. If\n     * the number of records for the request would exceed the limit, then\n     * no features are returned.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n      options.queryCountFirst : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerancePx_ = options.tolerance !== undefined ?\n      options.tolerance : 3;\n\n    /**\n     * A hash of data source names classified by ids.\n     * @type {Object.<number, string>}\n     * @private\n     */\n    this.dataSourceNames_ = {};\n  }\n\n  /**\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @export\n   */\n  issue(options) {\n    // (1) Clear previous result\n    this.clear();\n\n    // (2) Get queryable data sources, unless they are already set\n    let queryableDataSources;\n    if (options.dataSources === undefined &&\n        options.queryableDataSources === undefined\n    ) {\n      queryableDataSources = this.ngeoQuerent_.getQueryableDataSources(\n        this.ngeoDataSources_.getArray(),\n        options.map\n      );\n    }\n\n    // (3) Update query options, update the pending property and issue the\n    //     request.\n    const limit = options.limit !== undefined ? options.limit : this.limit_;\n    olObj.assign(options, {\n      queryableDataSources: queryableDataSources,\n      limit: limit,\n      tolerancePx: this.tolerancePx_,\n      wfsCount: this.queryCountFirst_\n    });\n    this.result_.pending = true;\n    this.ngeoQuerent_.issue(options).then(this.handleResult_.bind(this));\n  }\n\n  /**\n   * Clear result, i.e. clear all 'result source' from their features and other\n   * information.\n   * @export\n   */\n  clear() {\n    this.result_.total = 0;\n    for (const source of this.result_.sources) {\n      source.features.length = 0;\n      source.pending = false;\n      source.queried = false;\n      source.tooManyResults = false;\n      source.totalFeatureCount = undefined;\n    }\n    this.result_.sources.length = 0; // Clear previous result sources\n    this.result_.pending = false;\n  }\n\n  /**\n   * Called after a request to the querent service. Update the result.\n   *\n   * @param {ngeox.QuerentResult} response Response\n   * @private\n   */\n  handleResult_(response) {\n    let total = 0;\n\n    // (1) Update result sources, i.e. add them\n    for (const idStr in response) {\n      const id = Number(idStr);\n      const dataSource = this.ngeoDataSourcesHelper_.getDataSource(id);\n      let label = dataSource.name;\n      goog.asserts.assert(dataSource);\n\n      const querentResultItem = response[id];\n      const features = querentResultItem.features;\n      const limit = querentResultItem.limit;\n      const tooManyResults = querentResultItem.tooManyFeatures === true;\n      const totalFeatureCount = querentResultItem.totalFeatureCount;\n\n      const typeSeparatedFeatures = {};\n      features.forEach((feature) => {\n        const type = goog.asserts.assertString(feature.get('ngeo_feature_type_'));\n        if (!typeSeparatedFeatures[type]) {\n          typeSeparatedFeatures[type] = [];\n        }\n        // Use properties aliases if any\n        if (dataSource.attributes && dataSource.attributes.length) {\n          const properties = feature.getProperties();\n          const filteredProperties = {};\n          dataSource.attributes.forEach((attribute) => {\n            if (attribute.alias) {\n              filteredProperties[attribute.alias] = properties[attribute.name];\n              feature.unset(attribute.name, /* silent */ true);\n            } else {\n              // No alias is available => use the attribute as is.\n              filteredProperties[attribute.name] = properties[attribute.name];\n            }\n          });\n          feature.setProperties(filteredProperties, /* silent */ true);\n        }\n        typeSeparatedFeatures[type].push(feature);\n      });\n\n      for (const type in typeSeparatedFeatures) {\n        label = type ? type : label;\n        const featuresByType = typeSeparatedFeatures[type];\n        this.result_.sources.push({\n          features: featuresByType,\n          id: id,\n          label: label,\n          limit: limit,\n          pending: false,\n          queried: true,\n          tooManyResults: tooManyResults,\n          totalFeatureCount: totalFeatureCount\n        });\n        total += features.length;\n      }\n    }\n\n    // (2) Update total & pending\n    this.result_.total = total;\n    this.result_.pending = false;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoMapQuerent', [\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoMapQuerent', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/query/MapQuerent.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nvar WMSGetFeatureInfo = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  var localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  var features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (var i = 0, ii = node.childNodes.length; i < ii; i++) {\n      var layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      var context = objectStack[0];\n\n      var toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      var layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      var featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      var parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n          this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      var parsersNS = _ol_xml_.makeStructureNS(\n          [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      var layerFeatures = _ol_xml_.pushParseAndPop(\n          [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    var gmlFeatures = _ol_xml_.pushParseAndPop([],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n        [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  var options = {};\n  if (opt_options) {\n    _ol_obj_.assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 187\n// module chunks = 0 1","/**\n * @module ngeo.filter.RuleHelper\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime';\nimport ngeoRuleDate from 'ngeo/rule/Date';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry';\nimport ngeoRuleRule from 'ngeo/rule/Rule';\nimport ngeoRuleSelect from 'ngeo/rule/Select';\nimport ngeoRuleText from 'ngeo/rule/Text';\nimport olFormatWFS from 'ol/format/WFS';\nimport olFormatFilter from 'ol/format/filter';\nimport olArray from 'ol/array';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to create `ngeo.rule.Rule`\n   * objects.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoRuleHelper\n   *//* @ngInject\n   */\n  constructor(gettextCatalog, ngeoFeatureHelper, ngeoWMSTime) {\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.Attribute>} attributes Attributes.\n   * @param {boolean=} opt_isCustom Whether the created rules should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRulesFromAttributes(attributes, opt_isCustom) {\n    const rules = [];\n    for (const attribute of attributes) {\n      rules.push(this.createRuleFromAttribute(attribute, opt_isCustom));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.Attribute} attribute Attribute.\n   * @param {boolean=} opt_isCustom Whether the created rule should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRuleFromAttribute(attribute, opt_isCustom) {\n\n    let rule;\n    const isCustom = opt_isCustom === true;\n\n    /**\n     * @type {string}\n     */\n    const name = this.gettextCatalog_.getString(attribute.name);\n\n    // Todo: support geometry\n\n    switch (attribute.type) {\n      case ngeoBase.AttributeType.DATE:\n      case ngeoBase.AttributeType.DATETIME:\n        if (isCustom) {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.EQUALS,\n            operators: [\n              ngeoRuleRule.TemporalOperatorType.EQUALS,\n              ngeoRuleRule.TemporalOperatorType.BEGINS,\n              ngeoRuleRule.TemporalOperatorType.ENDS\n            ],\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        } else {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.DURING,\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        }\n        break;\n      case ngeoBase.AttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry({\n          name: name,\n          operator: ngeoRuleRule.SpatialOperatorType.WITHIN,\n          operators: [\n            ngeoRuleRule.SpatialOperatorType.CONTAINS,\n            ngeoRuleRule.SpatialOperatorType.INTERSECTS,\n            ngeoRuleRule.SpatialOperatorType.WITHIN\n          ],\n          propertyName: attribute.name,\n          type: attribute.type\n        });\n        break;\n      case ngeoBase.AttributeType.NUMBER:\n        if (isCustom) {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.EQUAL_TO,\n            operators: [\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.GREATER_THAN,\n              ngeoRuleRule.OperatorType.GREATER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.LESSER_THAN,\n              ngeoRuleRule.OperatorType.LESSER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name,\n            type: ngeoBase.AttributeType.NUMBER\n          });\n        } else {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.BETWEEN,\n            propertyName: attribute.name,\n            type: ngeoBase.AttributeType.NUMBER\n          });\n        }\n        break;\n      case ngeoBase.AttributeType.SELECT:\n        rule = new ngeoRuleSelect({\n          choices: goog.asserts.assert(attribute.choices),\n          name: name,\n          propertyName: attribute.name\n        });\n        break;\n      default:\n        if (isCustom) {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            operators: [\n              ngeoRuleRule.OperatorType.LIKE,\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name\n          });\n        } else {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            propertyName: attribute.name\n          });\n        }\n        break;\n    }\n\n    return rule;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions>} optionsList List of options\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRules(optionsList) {\n    const rules = [];\n    for (const options of optionsList) {\n      rules.push(this.createRule(options));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions} options Options\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRule(options) {\n    let rule;\n    switch (options.type) {\n      case ngeoBase.AttributeType.DATE:\n      case ngeoBase.AttributeType.DATETIME:\n        rule = new ngeoRuleDate(options);\n        break;\n      case ngeoBase.AttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry(options);\n        break;\n      case ngeoBase.AttributeType.SELECT:\n        const selectOptions = /** @type {!ngeox.rule.SelectOptions} */ (\n          options);\n        goog.asserts.assert(selectOptions.choices);\n        rule = new ngeoRuleSelect(selectOptions);\n        break;\n      default:\n        rule = new ngeoRuleText(options);\n        break;\n    }\n    return rule;\n  }\n\n  /**\n   * Create a new `ngeo.rule.Rule` object using an other given rule.\n   *\n   * @param {!ngeo.rule.Rule} rule Original rule to clone.\n   * @return {!ngeo.rule.Rule} A clone rule.\n   * @export\n   */\n  cloneRule(rule) {\n\n    let clone;\n\n    let expression = rule.getExpression();\n    if (expression === null) {\n      expression = undefined;\n    }\n    const isCustom = rule.isCustom;\n    const lowerBoundary = rule.lowerBoundary !== null ? rule.lowerBoundary :\n      undefined;\n    const name = rule.name;\n    const operator = rule.operator !== null ? rule.operator : undefined;\n    const operators = rule.operators ? rule.operators.slice(0) : undefined;\n    const propertyName = rule.propertyName;\n    const type = rule.type !== null ? rule.type : undefined;\n    const upperBoundary = rule.upperBoundary !== null ? rule.upperBoundary :\n      undefined;\n\n    const options = {\n      expression,\n      isCustom,\n      lowerBoundary,\n      name,\n      operator,\n      operators,\n      propertyName,\n      type,\n      upperBoundary\n    };\n\n    if (rule instanceof ngeoRuleDate) {\n      clone = new ngeoRuleDate(options);\n    } else if (rule instanceof ngeoRuleGeometry) {\n      clone = new ngeoRuleGeometry(options);\n      clone.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(rule.feature)\n      );\n    } else if (rule instanceof ngeoRuleSelect) {\n      options.choices = rule.choices.slice(0);\n      clone = new ngeoRuleSelect(options);\n    } else if (rule instanceof ngeoRuleText) {\n      clone = new ngeoRuleText(options);\n    } else {\n      clone = new ngeoRuleRule(options);\n    }\n\n    return clone;\n  }\n\n  /**\n   * Extend the dynamic properties from a source rule to destination rule.\n   * The source rule remains unchanged, while the destination rule changes.\n   *\n   * @param {!ngeo.rule.Rule} sourceRule Source rule to collect the dynamic\n   *     properties from.\n   * @param {!ngeo.rule.Rule} destRule Destination rule where the dynamic\n   *     properties are set.\n   * @export\n   */\n  extendRule(sourceRule, destRule) {\n\n    if (destRule.getExpression() !== sourceRule.getExpression()) {\n      destRule.setExpression(sourceRule.getExpression());\n    }\n\n    if (destRule.lowerBoundary !== sourceRule.lowerBoundary) {\n      destRule.lowerBoundary = sourceRule.lowerBoundary;\n    }\n\n    if (destRule.operator !== sourceRule.operator) {\n      destRule.operator = sourceRule.operator;\n    }\n\n    if (destRule.upperBoundary !== sourceRule.upperBoundary) {\n      destRule.upperBoundary = sourceRule.upperBoundary;\n    }\n\n    if (sourceRule instanceof ngeoRuleGeometry &&\n       destRule instanceof ngeoRuleGeometry\n    ) {\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(destRule.feature);\n      destRule.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(sourceRule.feature)\n      );\n    }\n  }\n\n  /**\n   * @param {!Array.<!ngeo.rule.Rule>} rules Rules\n   * @return {!Array.<!ngeox.rule.AnyOptions>} List of serialized rule options.\n   * @export\n   */\n  serializeRules(rules) {\n    return rules.map((rule) => {\n      const serializedRule = this.serializeRule(rule);\n      return serializedRule;\n    });\n  }\n\n  /**\n   * Selialize a rule into options to re-create it later.\n   * @param {!ngeo.rule.Rule} rule Rule to serialize.\n   * @return {!ngeox.rule.AnyOptions} Serialized rule options.\n   * @export\n   */\n  serializeRule(rule) {\n    const obj = {\n      name: rule.name,\n      propertyName: rule.propertyName,\n      type: rule.type\n    };\n\n    if (rule.expression !== null) {\n      obj.expression = rule.expression;\n    }\n\n    if (rule.lowerBoundary !== null) {\n      obj.lowerBoundary = rule.lowerBoundary;\n    }\n\n    if (rule.operator !== null) {\n      obj.operator = rule.operator;\n    }\n\n    if (rule.operators !== null) {\n      obj.operators = rule.operators.slice(0);\n    }\n\n    if (rule.upperBoundary !== null) {\n      obj.upperBoundary = rule.upperBoundary;\n    }\n\n    if (rule instanceof ngeoRuleGeometry) {\n      obj.featureProperties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        rule.feature);\n    }\n\n    if (rule instanceof ngeoRuleSelect) {\n      obj.choices = rule.choices;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Create a `ol.format.filter.Filter` object for a given data source.\n   * See the `ngeox.CreateFilterOptions` to learn more.\n   *\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?ol.format.filter.Filter} Filter.\n   * @export\n   */\n  createFilter(options) {\n\n    const dataSource = /** @type {ngeo.datasource.OGC} */ (options.dataSource);\n    let mainFilter = null;\n\n    if (options.filter) {\n      mainFilter = options.filter;\n    } else {\n      const rules = options.filterRules || dataSource.filterRules;\n      const conditions = [];\n\n      if (rules && rules.length) {\n        for (const rule of rules) {\n          const filter = this.createFilterFromRule_(\n            rule,\n            dataSource,\n            options.srsName\n          );\n          if (filter) {\n            conditions.push(filter);\n          }\n        }\n      }\n\n      const condition = dataSource.filterCondition;\n      if (conditions.length === 1) {\n        mainFilter = conditions[0];\n      } else if (conditions.length >= 2) {\n        if (condition === ngeoBase.FilterCondition.AND) {\n          mainFilter = olFormatFilter.and.apply(null, conditions);\n        } else if (condition === ngeoBase.FilterCondition.OR ||\n                   condition === ngeoBase.FilterCondition.NOT\n        ) {\n          mainFilter = olFormatFilter.or.apply(null, conditions);\n        }\n      }\n      if (mainFilter && condition === ngeoBase.FilterCondition.NOT) {\n        mainFilter = olFormatFilter.not(mainFilter);\n      }\n    }\n\n    if (options.incTime) {\n      const timeFilter = this.createTimeFilterFromDataSource_(dataSource);\n      if (timeFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              timeFilter\n            ]\n          );\n        } else {\n          mainFilter = timeFilter;\n        }\n      }\n    }\n\n    return mainFilter;\n  }\n\n  /**\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?string} Filter string.\n   * @export\n   */\n  createFilterString(options) {\n    let filterString = null;\n    const filter = this.createFilter(options);\n    if (filter) {\n      const filterNode = olFormatWFS.writeFilter(filter);\n      const xmlSerializer = new XMLSerializer();\n      filterString = xmlSerializer.serializeToString(filterNode);\n    }\n    return filterString;\n  }\n\n  /**\n   * @param {ngeo.rule.Rule} rule Rule.\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *     set on geometries when this is not provided.\n   * @return {?ol.format.filter.Filter} filter Filter;\n   * @private\n   */\n  createFilterFromRule_(rule, dataSource, opt_srsName) {\n\n    let filter = null;\n\n    const value = rule.value;\n    if (!value) {\n      return null;\n    }\n\n    const expression = value.expression;\n    const lowerBoundary = value.lowerBoundary;\n    const operator = value.operator;\n    const propertyName = value.propertyName;\n    const upperBoundary = value.upperBoundary;\n\n    const rot =  ngeoRuleRule.OperatorType;\n    const rsot = ngeoRuleRule.SpatialOperatorType;\n    const rtot = ngeoRuleRule.TemporalOperatorType;\n\n    const spatialTypes = [\n      rsot.CONTAINS,\n      rsot.INTERSECTS,\n      rsot.WITHIN\n    ];\n\n    const numericTypes = [\n      rot.GREATER_THAN,\n      rot.GREATER_THAN_OR_EQUAL_TO,\n      rot.LESSER_THAN,\n      rot.LESSER_THAN_OR_EQUAL_TO\n    ];\n\n    if (rule instanceof ngeoRuleDate) {\n      let beginValue;\n      let endValue;\n\n      if (operator === rtot.DURING) {\n        beginValue = moment(lowerBoundary).format('YYYY-MM-DD');\n        endValue = moment(upperBoundary).format('YYYY-MM-DD');\n      } else if (operator === rtot.EQUALS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n        endValue = moment(\n          expression\n        ).add(\n          1, 'days'\n        ).subtract(\n          1, 'seconds'\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n      } else if (operator === rtot.BEGINS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n        // NOTE: end value is CURRENT + 30 years\n        endValue = moment(\n          expression\n        ).add(\n          30, 'years'\n        ).format(\n          'YYYY-MM-DD'\n        );\n      } else if (operator === rtot.ENDS) {\n        // NOTE: begin value is hardcoded to 1970-01-01\n        beginValue = '1970-01-01';\n        endValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n      }\n      if (beginValue && endValue) {\n        filter = olFormatFilter.during(\n          propertyName,\n          beginValue,\n          endValue\n        );\n      }\n    } else if (rule instanceof ngeoRuleSelect) {\n      const selectedChoices = rule.selectedChoices;\n      if (selectedChoices.length === 1) {\n        filter = olFormatFilter.equalTo(\n          propertyName,\n          selectedChoices[0]\n        );\n      } else if (selectedChoices.length >= 2) {\n        const conditions = [];\n        for (const selectedChoice of selectedChoices) {\n          conditions.push(\n            olFormatFilter.equalTo(\n              propertyName,\n              selectedChoice\n            )\n          );\n        }\n        filter = olFormatFilter.or.apply(null, conditions);\n      }\n    } else if (olArray.includes(spatialTypes, operator)) {\n      const geometryName = dataSource.geometryName;\n      goog.asserts.assertInstanceof(rule, ngeoRuleGeometry);\n      const geometry = goog.asserts.assert(rule.geometry);\n      if (operator === rsot.CONTAINS) {\n        filter = olFormatFilter.contains(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.INTERSECTS) {\n        filter = olFormatFilter.intersects(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.WITHIN) {\n        filter = olFormatFilter.within(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      }\n    } else if (olArray.includes(numericTypes, operator)) {\n      const numericExpression = goog.asserts.assertNumber(expression);\n      if (operator === rot.GREATER_THAN) {\n        filter = olFormatFilter.greaterThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.GREATER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.greaterThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN) {\n        filter = olFormatFilter.lessThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.lessThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      }\n    } else if (operator === rot.BETWEEN) {\n      filter = olFormatFilter.between(\n        propertyName,\n        lowerBoundary,\n        upperBoundary\n      );\n    } else if (operator === rot.EQUAL_TO) {\n      filter = olFormatFilter.equalTo(\n        propertyName,\n        expression\n      );\n    } else if (operator === rot.LIKE) {\n      const stringExpression = String(expression)\n        .replace(/!/g, '!!')\n        .replace(/\\./g, '!.')\n        .replace(/\\*/g, '!*');\n      filter = olFormatFilter.like(\n        propertyName,\n        `*${stringExpression}*`,\n        '*', /* wildCard */\n        '.', /* singleChar */\n        '!', /* escapeChar */\n        false /* matchCase */\n      );\n    } else if (operator === rot.NOT_EQUAL_TO) {\n      filter = olFormatFilter.notEqualTo(\n        propertyName,\n        expression\n      );\n    }\n\n    return filter;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * time properties within the data source.\n   * @param {ngeo.datasource.OGC} dataSource Data source from which to\n   *     create the filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createTimeFilterFromDataSource_(dataSource) {\n    let filter = null;\n    const range = dataSource.timeRangeValue;\n    const timeProperty = dataSource.timeProperty;\n    const name = dataSource.timeAttributeName;\n\n    if (range && timeProperty && name) {\n\n      if (range.end !== undefined) {\n        // Case 1: the range has both 'start' and 'end' values.  Use them to\n        //         create a During filter.\n\n        const values = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        ).split('/');\n\n        filter = olFormatFilter.during(name, values[0], values[1]);\n      } else {\n\n        // Case 2: we only have a 'start' value. We need to calculate the 'end'\n        //         using the resolution of the time property.\n\n        const resolution = timeProperty.resolution || 'seconds';\n        const value = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        );\n        let momentEnd;\n\n        switch (resolution) {\n          case 'year':\n            momentEnd = moment(value).add(1, 'years').subtract(1, 'seconds');\n            break;\n          case 'month':\n            momentEnd = moment(value).add(1, 'months').subtract(1, 'seconds');\n            break;\n          case 'day':\n            momentEnd = moment(value).add(1, 'days').subtract(1, 'seconds');\n            break;\n          default:\n            //case \"second\":\n            // This would require a TContains filter, which neither OpenLayers\n            // and MapServer support. Skip...\n        }\n\n        if (momentEnd) {\n          const startValue = moment(value).format('YYYY-MM-DD HH:mm:ss');\n          const endValue = momentEnd.format('YYYY-MM-DD HH:mm:ss');\n          filter = olFormatFilter.during(name, startValue, endValue);\n        }\n      }\n    }\n\n    return filter;\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRuleHelper', [\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoRuleHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/RuleHelper.js","/**\n * @module ngeo.rule.Date\n*/\nimport ngeoRuleRule from 'ngeo/rule/Rule';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A date rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.DateOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = options.type || ngeo.AttributeType.DATE;\n\n    super(options);\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Date.js","/**\n * @module ngeo.rule.Geometry\n*/\nimport ngeoRuleRule from 'ngeo/rule/Rule';\nimport olEvents from 'ol/events';\nimport olFeature from 'ol/Feature';\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A rule bound to the geometry of a `ol.Feature` object. Changes made\n   * to the geometry are applied to the `expression` property of the rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.GeometryOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = ngeo.AttributeType.GEOMETRY;\n\n    super(options);\n\n    // === STATIC properties ===\n\n    const properties = options.featureProperties || {};\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature(properties);\n\n    /**\n     * @type {!ol.format.GeoJSON}\n     * @private\n     */\n    this.format_ = new olFormatGeoJSON();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingExpression_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingGeometry_ = false;\n\n    /**\n     * @type {?ol.EventsKey}\n     * @private\n     */\n    this.geometryChangeListenerKey_ = null;\n\n    this.listenerKeys.push(\n      olEvents.listen(\n        this.feature_,\n        ol.Object.getChangeEventType(this.feature.getGeometryName()),\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    this.setGeometryFromExpression_();\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {!ol.Feature} Feature.\n   * @export\n   */\n  get feature() {\n    return this.feature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setExpression(expression) {\n    this.updatingExpression_ = true;\n    super.setExpression(expression);\n\n    if (!this.updatingGeometry_) {\n      this.setGeometryFromExpression_();\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingExpression_ = false;\n  }\n\n  // === Calculated property getters/setters ===\n\n  /**\n   * @return {?ol.geom.Geometry} Geometry\n   * @export\n   */\n  get geometry() {\n    return this.feature_.getGeometry() || null;\n  }\n\n  /**\n   * @param {?ol.geom.Geometry} geometry Geometry\n   * @export\n   */\n  set geometry(geometry) {\n    this.feature_.setGeometry(geometry);\n  }\n\n  // === Other methods ===\n\n  /**\n   * Called when the geometry property in the feature changes. Update the\n   * expression accordingly.\n   * @private\n   */\n  handleFeatureGeometryChange_() {\n    if (this.updatingExpression_) {\n      return;\n    }\n\n    this.updatingGeometry_ = true;\n\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.expression = this.format_.writeGeometry(geometry);\n    } else {\n      this.expression = null;\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Called when the geometry of the features changes. Update the expression\n   * accordingly.\n   * @param {ol.Object.Event} evt Event\n   * @private\n   */\n  handleGeometryChange_(evt) {\n    const geometry = goog.asserts.assertInstanceof(\n      evt.target, ol.geom.Geometry\n    );\n    this.updatingGeometry_ = true;\n    this.expression = this.format_.writeGeometry(geometry);\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Set geometry property using the expression property.\n   * @private\n   */\n  setGeometryFromExpression_() {\n    let geometry = null;\n    if (this.expression) {\n      // An expression can only have a string value with a geometry rule.\n      const expression = goog.asserts.assertString(this.expression);\n      geometry = this.format_.readGeometry(expression);\n    }\n    this.geometry = geometry;\n  }\n\n  /**\n   * Unlisten the feature geometry change event, then listen to it if the\n   * feature has a geometry.\n   * @private\n   */\n  registerGeometryChange_() {\n\n    // (1) Unlisten\n    if (this.geometryChangeListenerKey_ !== null) {\n      ol.Observable.unByKey(this.geometryChangeListenerKey_);\n      this.geometryChangeListenerKey_ = null;\n    }\n\n    // (2) Listen, if geom\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.geometryChangeListenerKey_ = olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      );\n    }\n  }\n\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Geometry.js","/**\n * @module ngeo.rule.Select\n*/\nimport ngeoRuleRule from 'ngeo/rule/Rule';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A select rule, which allows the selection of multiple values among a list\n   * of choices.\n   *\n   * The expression property holds the list of selected choices, which is\n   * comma-separated.\n   *\n   * @struct\n   * @param {!ngeox.rule.SelectOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = ngeoRuleRule.OperatorType.EQUAL_TO;\n    options.type = ngeo.AttributeType.SELECT;\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.choices_ = options.choices;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {Array.<string>} Choices\n   * @export\n   */\n  get choices() {\n    return this.choices_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {Array.<string>} Selected choices\n   * @export\n   */\n  get selectedChoices() {\n    let selectedChoices;\n    if (this.expression) {\n      const stringExpression = String(this.expression);\n      selectedChoices = stringExpression.split(',');\n    } else {\n      selectedChoices = [];\n    }\n    return selectedChoices;\n  }\n\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Select.js","/**\n * @module ngeo.rule.Text\n*/\nimport ngeoRuleRule from 'ngeo/rule/Rule';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A text rule, which always compares the value with the LIKE operator, by\n   * default.\n   *\n   * @struct\n   * @param {!ngeox.rule.TextOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = options.operator || ngeoRuleRule.OperatorType.LIKE;\n    options.type = ngeo.AttributeType.TEXT;\n\n    super(options);\n\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Text.js","/**\n * @module ngeo.WFSDescribeFeatureType\n*/\nimport olBase from 'ol';\nimport olFormatXML from 'ol/format/XML';\nimport olXml from 'ol/xml';\n\n/**\n * @classdesc\n * Format for reading WFS DescribeFeatureType data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst exports = function() {\n\n  olFormatXML.call(this);\n\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * Read a WFS DescribeFeatureType document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WFS DescribeFeatureType.\n * @api\n */\nexports.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromNode = function(node) {\n  let result = {};\n  result = olXml.pushParseAndPop(\n    result,\n    exports.PARSERS_,\n    node,\n    []\n  );\n  return result;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Attributes.\n */\nexports.readElement_ = function(node, objectStack) {\n  const attributes = {};\n  for (let i = 0, len = node.attributes.length; i < len; i++) {\n    const attribute = node.attributes.item(i);\n    attributes[attribute.name] = attribute.value;\n  }\n  if (objectStack.length === 1) {\n    // remove namespace from type\n    attributes['type'] = attributes['type'].split(':').pop();\n  }\n  return attributes;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexType_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const object = olXml.pushParseAndPop(\n    {'name': name},\n    exports.COMPLEX_TYPE_PARSERS_,\n    node, objectStack\n  );\n  // flatten\n  object['complexContent'] =\n    object['complexContent']['extension']['sequence']['element'];\n  return object;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexContent_ = function(\n  node, objectStack\n) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.COMPLEX_CONTENT_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readExtension_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.EXTENSION_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readSequence_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.SEQUENCE_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nexports.NAMESPACE_URIS_ = [\n  null,\n  'http://www.w3.org/2001/XMLSchema'\n];\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    ),\n    'complexType': olXml.makeObjectPropertyPusher(\n      exports.readComplexType_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_TYPE_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'complexContent': olXml.makeObjectPropertySetter(\n      exports.readComplexContent_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_CONTENT_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'extension': olXml.makeObjectPropertySetter(\n      exports.readExtension_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.EXTENSION_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'sequence': olXml.makeObjectPropertySetter(\n      exports.readSequence_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.SEQUENCE_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    )\n  }));\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/WFSDescribeFeatureType.js","/**\n * @module ol/format/WMSCapabilities\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nvar WMSCapabilities = function() {\n\n  XML.call(this);\n\n  /**\n   * @type {string|undefined}\n   */\n  this.version = undefined;\n};\n\ninherits(WMSCapabilities, XML);\n\n\n/**\n * Read a WMS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMS capabilities.\n * @api\n */\nWMSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMSCapabilities.prototype.readFromDocument = function(doc) {\n  for (var n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMSCapabilities.prototype.readFromNode = function(node) {\n  this.version = node.getAttribute('version').trim();\n  var wmsCapabilityObject = _ol_xml_.pushParseAndPop({\n    'version': this.version\n  }, WMSCapabilities.PARSERS_, node, []);\n  return wmsCapabilityObject ? wmsCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMSCapabilities.readAttribution_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.ATTRIBUTION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nWMSCapabilities.readBoundingBox_ = function(node, objectStack) {\n  var extent = [\n    XSD.readDecimalString(node.getAttribute('minx')),\n    XSD.readDecimalString(node.getAttribute('miny')),\n    XSD.readDecimalString(node.getAttribute('maxx')),\n    XSD.readDecimalString(node.getAttribute('maxy'))\n  ];\n\n  var resolutions = [\n    XSD.readDecimalString(node.getAttribute('resx')),\n    XSD.readDecimalString(node.getAttribute('resy'))\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions\n  };\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Extent|undefined} Bounding box object.\n */\nWMSCapabilities.readEXGeographicBoundingBox_ = function(node, objectStack) {\n  var geographicBoundingBox = _ol_xml_.pushParseAndPop(\n      {},\n      WMSCapabilities.EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS_,\n      node, objectStack);\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  var westBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['westBoundLongitude']);\n  var southBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['southBoundLatitude']);\n  var eastBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['eastBoundLongitude']);\n  var northBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['northBoundLatitude']);\n  if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude, southBoundLatitude,\n    eastBoundLongitude, northBoundLatitude\n  ];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Capability object.\n */\nWMSCapabilities.readCapability_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.CAPABILITY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Service object.\n */\nWMSCapabilities.readService_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.SERVICE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Contact information object.\n */\nWMSCapabilities.readContactInformation_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.CONTACT_INFORMATION_PARSERS_,\n      node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Contact person object.\n */\nWMSCapabilities.readContactPersonPrimary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.CONTACT_PERSON_PARSERS_,\n      node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Contact address object.\n */\nWMSCapabilities.readContactAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.CONTACT_ADDRESS_PARSERS_,\n      node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<string>|undefined} Format array.\n */\nWMSCapabilities.readException_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      [], WMSCapabilities.EXCEPTION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Layer object.\n */\nWMSCapabilities.readCapabilityLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nWMSCapabilities.readLayer_ = function(node, objectStack) {\n  var parentLayerObject = /**  @type {Object.<string,*>} */\n        (objectStack[objectStack.length - 1]);\n\n  var layerObject = _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.LAYER_PARSERS_, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  var queryable =\n        XSD.readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  var cascaded = XSD.readNonNegativeIntegerString(\n      node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  var opaque = XSD.readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  var noSubsets =\n        XSD.readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  var fixedWidth =\n        XSD.readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  var fixedHeight =\n        XSD.readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  var addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function(key) {\n    if (key in parentLayerObject) {\n      var childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  var replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n    'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n  replaceKeys.forEach(function(key) {\n    if (!(key in layerObject)) {\n      var parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nWMSCapabilities.readDimension_ = function(node, objectStack) {\n  var dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': XSD.readBooleanString(\n        node.getAttribute('multipleValues')),\n    'nearestValue': XSD.readBooleanString(\n        node.getAttribute('nearestValue')),\n    'current': XSD.readBooleanString(node.getAttribute('current')),\n    'values': XSD.readString(node)\n  };\n  return dimensionObject;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nWMSCapabilities.readFormatOnlineresource_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.FORMAT_ONLINERESOURCE_PARSERS_,\n      node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nWMSCapabilities.readRequest_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.REQUEST_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nWMSCapabilities.readDCPType_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.DCPTYPE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nWMSCapabilities.readHTTP_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.HTTP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nWMSCapabilities.readOperationType_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.OPERATIONTYPE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nWMSCapabilities.readSizedFormatOnlineresource_ = function(node, objectStack) {\n  var formatOnlineresource =\n        WMSCapabilities.readFormatOnlineresource_(node, objectStack);\n  if (formatOnlineresource) {\n    var size = [\n      XSD.readNonNegativeIntegerString(node.getAttribute('width')),\n      XSD.readNonNegativeIntegerString(node.getAttribute('height'))\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nWMSCapabilities.readAuthorityURL_ = function(node, objectStack) {\n  var authorityObject =\n        WMSCapabilities.readFormatOnlineresource_(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nWMSCapabilities.readMetadataURL_ = function(node, objectStack) {\n  var metadataObject =\n        WMSCapabilities.readFormatOnlineresource_(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMSCapabilities.readStyle_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.STYLE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Keyword list.\n */\nWMSCapabilities.readKeywordList_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      [], WMSCapabilities.KEYWORDLIST_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wms'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'Service': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readService_),\n      'Capability': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readCapability_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CAPABILITY_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'Request': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readRequest_),\n      'Exception': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readException_),\n      'Layer': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readCapabilityLayer_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.SERVICE_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'Name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'KeywordList': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readKeywordList_),\n      'OnlineResource': _ol_xml_.makeObjectPropertySetter(\n          XLink.readHref),\n      'ContactInformation': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readContactInformation_),\n      'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'AccessConstraints': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'LayerLimit': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger),\n      'MaxWidth': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger),\n      'MaxHeight': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CONTACT_INFORMATION_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'ContactPersonPrimary': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readContactPersonPrimary_),\n      'ContactPosition': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'ContactAddress': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readContactAddress_),\n      'ContactVoiceTelephone': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'ContactFacsimileTelephone': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'ContactElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CONTACT_PERSON_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'ContactPerson': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'ContactOrganization': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CONTACT_ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'AddressType': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'Address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'StateOrProvince': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'PostCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.EXCEPTION_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'Format': _ol_xml_.makeArrayPusher(XSD.readString)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'Name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'KeywordList': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readKeywordList_),\n      'CRS': _ol_xml_.makeObjectPropertyPusher(XSD.readString),\n      'EX_GeographicBoundingBox': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readEXGeographicBoundingBox_),\n      'BoundingBox': _ol_xml_.makeObjectPropertyPusher(\n          WMSCapabilities.readBoundingBox_),\n      'Dimension': _ol_xml_.makeObjectPropertyPusher(\n          WMSCapabilities.readDimension_),\n      'Attribution': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readAttribution_),\n      'AuthorityURL': _ol_xml_.makeObjectPropertyPusher(\n          WMSCapabilities.readAuthorityURL_),\n      'Identifier': _ol_xml_.makeObjectPropertyPusher(XSD.readString),\n      'MetadataURL': _ol_xml_.makeObjectPropertyPusher(\n          WMSCapabilities.readMetadataURL_),\n      'DataURL': _ol_xml_.makeObjectPropertyPusher(\n          WMSCapabilities.readFormatOnlineresource_),\n      'FeatureListURL': _ol_xml_.makeObjectPropertyPusher(\n          WMSCapabilities.readFormatOnlineresource_),\n      'Style': _ol_xml_.makeObjectPropertyPusher(\n          WMSCapabilities.readStyle_),\n      'MinScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n          XSD.readDecimal),\n      'MaxScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n          XSD.readDecimal),\n      'Layer': _ol_xml_.makeObjectPropertyPusher(\n          WMSCapabilities.readLayer_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.ATTRIBUTION_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'OnlineResource': _ol_xml_.makeObjectPropertySetter(\n          XLink.readHref),\n      'LogoURL': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readSizedFormatOnlineresource_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS_ =\n    _ol_xml_.makeStructureNS(WMSCapabilities.NAMESPACE_URIS_, {\n      'westBoundLongitude': _ol_xml_.makeObjectPropertySetter(\n          XSD.readDecimal),\n      'eastBoundLongitude': _ol_xml_.makeObjectPropertySetter(\n          XSD.readDecimal),\n      'southBoundLatitude': _ol_xml_.makeObjectPropertySetter(\n          XSD.readDecimal),\n      'northBoundLatitude': _ol_xml_.makeObjectPropertySetter(\n          XSD.readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.REQUEST_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'GetCapabilities': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readOperationType_),\n      'GetMap': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readOperationType_),\n      'GetFeatureInfo': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readOperationType_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.OPERATIONTYPE_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'Format': _ol_xml_.makeObjectPropertyPusher(XSD.readString),\n      'DCPType': _ol_xml_.makeObjectPropertyPusher(\n          WMSCapabilities.readDCPType_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.DCPTYPE_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'HTTP': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readHTTP_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'Get': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readFormatOnlineresource_),\n      'Post': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readFormatOnlineresource_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'Name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n          WMSCapabilities.readSizedFormatOnlineresource_),\n      'StyleSheetURL': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readFormatOnlineresource_),\n      'StyleURL': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readFormatOnlineresource_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.FORMAT_ONLINERESOURCE_PARSERS_ =\n    _ol_xml_.makeStructureNS(WMSCapabilities.NAMESPACE_URIS_, {\n      'Format': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'OnlineResource': _ol_xml_.makeObjectPropertySetter(\n          XLink.readHref)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.KEYWORDLIST_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'Keyword': _ol_xml_.makeArrayPusher(XSD.readString)\n    });\nexport default WMSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSCapabilities.js\n// module id = 206\n// module chunks = 0 1","/**\n * @module ngeo.datasource.DataSourcesHelper\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources';\nimport ngeoQueryQuerent from 'ngeo/query/Querent';\nimport ngeoFormatWFSAttribute from 'ngeo/format/WFSAttribute';\nimport olEvents from 'ol/events';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to manipulate or get data sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data source\n   *     collection.\n   * @param {ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @ngdoc service\n   * @ngname ngeoDataSourcesHelper\n   *//* @ngInject\n   */\n  constructor($q, ngeoDataSources, ngeoQuerent) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = ngeoDataSources;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Object.<number, ngeo.datasource.DataSource>}\n     * @private\n     */\n    this.cache_ = {};\n\n    // Events\n\n    olEvents.listen(ngeoDataSources, 'add', this.handleDataSourcesAdd_, this);\n    olEvents.listen(ngeoDataSources, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n  /**\n   * @return {ngeo.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?ngeo.datasource.DataSource} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return this.cache_[id] || null;\n  }\n\n  /**\n   * Get the attributes of a data source. If they are not set, they are obtained\n   * from the querent service using a WFS DescribeFeatureType request, then set\n   * in the data source.\n   *\n   * Please, note that in order to be dynamically set, the data source must\n   * only have 1 ogcLayer set and be queryable.\n   *\n   * @param {ngeo.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  getDataSourceAttributes(dataSource) {\n\n    const wfsDescribeFeatureTypeDefer = this.q_.defer();\n\n    if (dataSource.attributes) {\n      wfsDescribeFeatureTypeDefer.resolve(dataSource.attributes);\n    } else {\n      this.ngeoQuerent_.wfsDescribeFeatureType(\n        dataSource\n      ).then((featureType) => {\n        // We know, at this point, that there's only one definition that\n        // was returned.  Just to be sure, let's do a bunch of assertions.\n        const ogcLayerName = dataSource.getOGCLayerNames()[0];\n        goog.asserts.assertString(\n          ogcLayerName, 'The data source should have only one ogcLayer.');\n        const element = featureType.element[0];\n        goog.asserts.assert(element.name === ogcLayerName);\n        goog.asserts.assert(\n          featureType.complexType[0].name === element.type);\n\n        const complexContent = featureType['complexType'][0]['complexContent'];\n        const attributes = new ngeoFormatWFSAttribute().read(complexContent);\n\n        // Set the attributes in the data source\n        dataSource.setAttributes(attributes);\n\n        wfsDescribeFeatureTypeDefer.resolve(attributes);\n      });\n    }\n\n    return wfsDescribeFeatureTypeDefer.promise;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. Add it\n   * to the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = goog.asserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    this.cache_[dataSource.id] = dataSource;\n  }\n\n  /**\n   * Called when a data source is removed from the ngeo collection. Remove it\n   * from the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = goog.asserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    delete this.cache_[dataSource.id];\n  }\n\n};\n\n\nngeoBase.module.service('ngeoDataSourcesHelper', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSourcesHelper.js","/**\n * @module ngeo.format.WFSAttribute\n*/\nimport ngeoAttribute from 'ngeo/Attribute';\n\nconst exports = class {\n\n\n  /**\n   * A format that reads the complexType from a WFS DescribeFeatureType\n   * response for a single set of attributes and return an array of\n   * `ngeox.Attribute`.\n   */\n\n\n  /**\n   * @param {Array.<Object>} complexTypeElements Complex type element\n   * @return {Array.<ngeox.Attribute>} Attributes\n   */\n  read(complexTypeElements) {\n    return complexTypeElements.map(this.readFromComplexTypeElement_);\n  }\n\n\n  /**\n   * @param {Object} object Complex type element\n   * @return {ngeox.Attribute} Attribute\n   * @private\n   */\n  readFromComplexTypeElement_(object) {\n\n    const name = goog.asserts.assertString(object['name']);\n    const alias = 'alias' in object ?\n      goog.asserts.assertString(object['alias']) : null;\n    const required = object['minOccurs'] != '0';\n\n    const attribute = {\n      name,\n      alias,\n      required\n    };\n\n    const type = goog.asserts.assertString(object['type']);\n\n    if (!ngeoAttribute.setGeometryType(attribute, type)) {\n      if (type === 'gml:TimeInstantType') {\n        attribute.type = ngeo.AttributeType.DATETIME;\n      } else if (type === 'double') {\n        attribute.type = ngeo.AttributeType.NUMBER;\n      } else {\n        attribute.type = ngeo.AttributeType.TEXT;\n      }\n    }\n\n    return attribute;\n  }\n\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/WFSAttribute.js","/**\n * @module ngeo.query.mapQueryComponent\n*/\nimport ngeoBase from 'ngeo';\n\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent';\n\nimport olEvents from 'ol/events';\n\nconst exports = angular.module('ngeoMapQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a \"map query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, clicks made on the map are listened by the directive\n * and a request gets issued to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-map-query=\"\"\n *        ngeo-map-query-map=\"::ctrl.map\"\n *        ngeo-map-query-active=\"ctrl.queryActive\"\n *        ngeo-map-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See our live example: [../examples/mapquery.html](../examples/mapquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @param {angular.$injector} $injector Main injector.\n * @return {angular.Directive} The Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoMapQuery\n */\nexports.directive_ = function(ngeoMapQuerent, $injector) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      const map = scope.$eval(attrs['ngeoMapQueryMap']);\n      let clickEventKey_ = null;\n      let pointerMoveEventKey_ = null;\n\n      /**\n       * Called when the map is clicked while this controller is active. Issue\n       * a request to the query service using the coordinate that was clicked.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handleMapClick_ = function(evt) {\n        const coordinate = evt.coordinate;\n        ngeoMapQuerent.issue({\n          coordinate,\n          map\n        });\n      };\n\n      /**\n       * Called when the pointer is moved while this controller is active.\n       * Change the mouse pointer when hovering a non-transparent pixel on the\n       * map.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handlePointerMove_ = function(evt) {\n        if (!evt.dragging) {\n          const pixel = map.getEventPixel(evt.originalEvent);\n          const queryable = function(layer) {\n            const visible = layer.get('visible');\n            const sourceids = layer.get('querySourceIds');\n            return visible && !!sourceids;\n          };\n          const hit = map.forEachLayerAtPixel(pixel, () => true, undefined, queryable);\n          map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n        }\n      };\n\n      /**\n       * Listen to the map events.\n       */\n      const activate_ = function() {\n        clickEventKey_ = olEvents.listen(map, 'click', handleMapClick_);\n        const queryOptions = /** @type {ngeox.QueryOptions} */ (\n          $injector.has('ngeoQueryOptions') ? $injector.get('ngeoQueryOptions') : {}\n        );\n        if (queryOptions.cursorHover) {\n          pointerMoveEventKey_ = olEvents.listen(map, 'pointermove', handlePointerMove_);\n        }\n      };\n\n      /**\n       * Unlisten the map events.\n       */\n      const deactivate_ = function() {\n        if (clickEventKey_ !== null) {\n          olEvents.unlistenByKey(clickEventKey_);\n          clickEventKey_ = null;\n        }\n        if (pointerMoveEventKey_ !== null) {\n          olEvents.unlistenByKey(pointerMoveEventKey_);\n          pointerMoveEventKey_ = null;\n        }\n        if (scope.$eval(attrs['ngeoMapQueryAutoclear']) !== false) {\n          ngeoMapQuerent.clear();\n        }\n      };\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoMapQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            activate_();\n          } else {\n            deactivate_();\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoMapQuery', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/query/mapQueryComponent.js","/**\n * @module ngeo.CustomEvent\n*/\nimport olBase from 'ol';\nimport olEventsEvent from 'ol/events/Event';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nvar TileWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var params = options.params || {};\n\n  var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, params) {\n\n  var urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    var tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  var url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    var index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return _ol_uri_.appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  var i = 0;\n  var res = [];\n  for (var key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo';\nimport olCollection from 'ol/Collection';\n\n\nngeoBase.module.value('ngeoDataSources', new olCollection());\n\n\n/**\n * @typedef {!ol.Collection.<!ngeo.datasource.DataSource>}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olLayerVector from 'ol/layer/Vector';\nimport olObj from 'ol/obj';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleStyle from 'ol/style/Style';\nimport googAsserts from 'goog/asserts';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {};\nexports.assertNumber = function(value, opt_message, var_args) {};\nexports.assertString = function(value, opt_message, var_args) {};\nexports.assertFunction = function(value, opt_message, var_args) {};\nexports.assertObject = function(value, opt_message, var_args) {};\nexports.assertArray = function(value, opt_message, var_args) {};\nexports.assertBoolean = function(value, opt_message, var_args) {};\nexports.assertElement = function(value, opt_message, var_args) {};\nexports.assertInstanceof = function(value, type, opt_message, var_args) {};\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.prod.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr';\nimport ngeoMapDirective from 'ngeo/map/directive';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr';\nimport ngeoMapRecenter from 'ngeo/map/recenter';\nimport ngeoMapResizemap from 'ngeo/map/resizemap';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport ngeoCustomEvent from 'ngeo/CustomEvent';\nimport olBase from 'ol';\nimport olObservable from 'ol/Observable';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerLayer from 'ol/layer/Layer';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\nimport olSourceTileWMS from 'ol/source/TileWMS';\nimport olSourceWMTS from 'ol/source/WMTS';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module app.mapquery\n*/\nconst exports = {};\n\nimport 'examples/mapquery.css';\nimport './common_dependencies.js';\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781';\n\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC';\nimport ngeoMapModule from 'ngeo/map/module';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent';\n\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr';\n\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQueryComponent from 'ngeo/query/mapQueryComponent';\n\nimport olMap from 'ol/Map';\nimport olView from 'ol/View';\nimport olLayerImage from 'ol/layer/Image';\nimport olLayerTile from 'ol/layer/Tile';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\nimport olSourceOSM from 'ol/source/OSM';\n\n\n/** @type {!angular.Module} **/\napp.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\napp.module.value('ngeoQueryOptions', {\n  'limit': 20\n});\n\n\n/**\n * A sample component to display the result.\n *\n * @type {!angular.Component}\n */\napp.queryresultComponent = {\n  controller: 'AppQueryresultController',\n  controllerAs: 'qrCtrl',\n  templateUrl: 'partials/queryresult.html'\n};\n\napp.module.component('appQueryresult', app.queryresultComponent);\n\n\n/**\n * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query service.\n * @constructor\n *//* @ngInject\n */\napp.QueryresultController = function(ngeoQueryResult) {\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @export\n   */\n  this.result = ngeoQueryResult;\n\n};\n\n\napp.module.controller('AppQueryresultController', app.QueryresultController);\n\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo collection of\n *     data sources objects.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr The ngeo ToolActivate\n *     manager.\n * @constructor\n *//* @ngInject\n */\napp.MainController = function($scope, ngeoDataSources, ngeoToolActivateMgr) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.dummyActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.queryActive = true;\n\n  ngeoDataSources.push(new ngeoDatasourceOGC({\n    id: 1,\n    name: 'bus_stop',\n    visible: true,\n    wmsUrl: 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/mapserv_proxy',\n    ogcLayers: [{\n      name: 'bus_stop',\n      queryable: true\n    }]\n  }));\n  const busStopLayer = new olLayerImage({\n    'source': new olSourceImageWMS({\n      'url': 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/mapserv_proxy',\n      params: {'LAYERS': 'bus_stop'}\n    })\n  });\n\n  ngeoDataSources.push(new ngeoDatasourceOGC({\n    id: 2,\n    name: 'information',\n    visible: true,\n    wmsUrl: 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/mapserv_proxy',\n    ogcLayers: [{\n      name: 'information',\n      queryable: true\n    }]\n  }));\n  const informationLayer = new olLayerImage({\n    'source': new olSourceImageWMS({\n      'url': 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/mapserv_proxy',\n      params: {'LAYERS': 'information'}\n    })\n  });\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      }),\n      informationLayer,\n      busStopLayer\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [537635, 152640],\n      zoom: 0\n    })\n  });\n\n  const queryToolActivate = new ngeoMiscToolActivate(this, 'queryActive');\n  ngeoToolActivateMgr.registerTool('mapTools', queryToolActivate, true);\n\n  const dummyToolActivate = new ngeoMiscToolActivate(this, 'dummyActive');\n  ngeoToolActivateMgr.registerTool('mapTools', dummyToolActivate);\n\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\napp.MainController.prototype.getSetDummyActive = function(val) {\n  if (val !== undefined) {\n    this.dummyActive = val;\n  } else {\n    return this.dummyActive;\n  }\n};\n\n\napp.module.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/mapquery.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap';\n\nimport olEvents from 'ol/events';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources';\n\nimport olEvents from 'ol/events';\nimport olObservable from 'ol/Observable';\nimport olView from 'ol/View';\nimport googAsserts from 'goog/asserts';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\nngeoBase.module.service(\n  'ngeoSyncDataSourcesMap', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olEvents from 'ol/events';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo';\nimport olArray from 'ol/array';\nimport olMap from 'ol/Map';\nimport olEvents from 'ol/events';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  var multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  var flatCoordinates = this.flatCoordinates;\n  var stride = this.stride;\n  var i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  var n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  var point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  var flatCoordinates = this.flatCoordinates;\n  var layout = this.layout;\n  var stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  var points = [];\n  var i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    var point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  var flatCoordinates = this.flatCoordinates;\n  var stride = this.stride;\n  var i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n        this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nvar OSM = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  var crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  var url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nvar XYZ = function(opt_options) {\n  var options = opt_options || {};\n  var projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  var multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  var lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  var flatCoordinates = this.flatCoordinates;\n  var ends = this.ends_;\n  var layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  var lineStrings = [];\n  var offset = 0;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  var midpoints = [];\n  var flatCoordinates = this.flatCoordinates;\n  var offset = 0;\n  var ends = this.ends_;\n  var stride = this.stride;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var midpoint = _ol_geom_flat_interpolate_.lineString(\n        flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n  var simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n      GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = _ol_geom_flat_deflate_.coordinatess(\n        this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var ends = [];\n  var i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    var lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  var ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    var offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  var multiPolygon = new MultiPolygon(null);\n\n  var len = this.endss_.length;\n  var newEndss = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  var flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n      flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    var flatCenters = _ol_geom_flat_center_.linearRingss(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  var interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n      this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    var flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n  var simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n      GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  var offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    var prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  var ends = this.endss_[index].slice();\n  var end = ends[ends.length - 1];\n  if (offset !== 0) {\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  var polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  var layout = this.layout;\n  var flatCoordinates = this.flatCoordinates;\n  var endss = this.endss_;\n  var polygons = [];\n  var offset = 0;\n  var i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    var polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n        layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = _ol_geom_flat_deflate_.coordinatesss(\n        this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var endss = [];\n  var i, ii, ends;\n  for (i = 0, ii = polygons.length; i < ii; ++i) {\n    var polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    var offset = flatCoordinates.length;\n    ends = polygon.getEnds();\n    var j, jj;\n    for (j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nvar GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  var clonedGeometries = [];\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  var i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  var i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  var geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    _ol_obj_.clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  var key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    var simplifiedGeometries = [];\n    var geometries = this.geometries_;\n    var simplified = false;\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      var geometry = geometries[i];\n      var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      var simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  var anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n      GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 72\n// module chunks = 0 1 2 3 4 5 7 9 10","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  var projCodes = Object.keys(proj4.defs);\n  var len = projCodes.length;\n  var i, j;\n  for (i = 0; i < len; ++i) {\n    var code = projCodes[i];\n    if (!get(code)) {\n      var def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    var code1 = projCodes[i];\n    var proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      var code2 = projCodes[j];\n      var proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          var transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 73\n// module chunks = 0 1 3 4 5 12 13 17 18","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 74\n// module chunks = 0 1 3 4 5 12 13 17 18","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport _ol_interaction_Pointer_ from '../interaction/Pointer.js';\nimport _ol_interaction_Property_ from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport _ol_style_Style_ from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nvar Draw = function(options) {\n\n  _ol_interaction_Pointer_.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  var geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        var circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        var squaredLength = _ol_coordinate_.squaredDistance(\n            coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      var Constructor;\n      var mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        var geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction()\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n      BaseObject.getChangeEventType(_ol_interaction_Property_.ACTIVE),\n      this.updateState_, this);\n\n};\n\ninherits(Draw, _ol_interaction_Pointer_);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  var styles = _ol_style_Style_.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  _ol_interaction_Pointer_.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  var pass = true;\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (event.type === MapBrowserEventType.POINTERMOVE) {\n    pass = this.handlePointerMove_(event);\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n  return _ol_interaction_Pointer_.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  var pass = true;\n\n  this.handlePointerMove_(event);\n\n  var circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    var downPx = this.downPx_;\n    var clickPx = event.pixel;\n    var dx = downPx[0] - clickPx[0];\n    var dy = downPx[1] - clickPx[1];\n    var squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  var at = false;\n  if (this.sketchFeature_) {\n    var potentiallyDone = false;\n    var potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      var map = event.map;\n      for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        var finishCoordinate = potentiallyFinishCoordinates[i];\n        var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        var pixel = event.pixel;\n        var dx = pixel[0] - finishPixel[0];\n        var dy = pixel[1] - finishPixel[1];\n        var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  var coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    var sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  var start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n    if (this.mode_ === Draw.Mode_.CIRCLE) {\n      this.sketchLineCoords_ = this.sketchCoords_;\n    }\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n  }\n  var geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  var coordinate = event.coordinate;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    var sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  var sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    var ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  var coordinate = event.coordinate;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var done;\n  var coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  var sketchFeature = this.abortDrawing_();\n  var coordinates = this.sketchCoords_;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  var sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  var geometry = feature.getGeometry();\n  var lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  var sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  var overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  var map = this.getMap();\n  var active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      var center = coordinates[0];\n      var end = coordinates[1];\n      var radius = Math.sqrt(\n          _ol_coordinate_.squaredDistance(center, end));\n      var geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      var angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(coordinates);\n      var geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nvar XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  var dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  var m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  var date = new Date(dateTime * 1000);\n  var string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  var string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  var string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 79\n// module chunks = 0 1 2 5 10","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  var radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  var circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  var flatCoordinates = this.flatCoordinates;\n  var dx = x - flatCoordinates[0];\n  var dy = y - flatCoordinates[1];\n  var squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    var i;\n    if (squaredDistance === 0) {\n      for (i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      var delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  var flatCoordinates = this.flatCoordinates;\n  var dx = x - flatCoordinates[0];\n  var dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  var flatCoordinates = this.flatCoordinates;\n  var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  var circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    var center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  var stride = this.stride;\n  var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  var flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  var i;\n  for (i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = _ol_geom_flat_deflate_.coordinate(\n        flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    var i, ii;\n    for (i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 80\n// module chunks = 0 1 2 6 7 8 9 11 14","/**\n * @module ngeo.interaction.Measure\n*/\nimport ngeoCustomEvent from 'ngeo/CustomEvent';\nimport googAsserts from 'goog/asserts';\nimport olDom from 'ol/dom';\nimport olFeature from 'ol/Feature';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent';\nimport olOverlay from 'ol/Overlay';\nimport olSphere from 'ol/sphere';\nimport olEvents from 'ol/events';\nimport olInteractionInteraction from 'ol/interaction/Interaction';\nimport olLayerVector from 'ol/layer/Vector';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleFill from 'ol/style/Fill';\nimport olStyleStroke from 'ol/style/Stroke';\nimport olStyleStyle from 'ol/style/Style';\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nngeo.interaction.MeasureBaseOptions;\n\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ?\n    options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nol.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\nexports.SPHERE_WGS84 = new olSphere(olProjEPSG4326.RADIUS);\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(\n  polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (\n    polygon.clone().transform(projection, 'EPSG:4326'));\n  const coordinates = geom.getLinearRing(0).getCoordinates();\n  const area = Math.abs(exports.SPHERE_WGS84.geodesicArea(coordinates));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(\n  circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection,\n  precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = ol.proj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = ol.proj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += exports.SPHERE_WGS84.haversineDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(\n  point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  googAsserts.assert(this.changeEventKey_ !== null);\n  googAsserts.assert(this.postcomposeEventKey_ !== null);\n  olEvents.unlistenByKey(this.changeEventKey_);\n  olEvents.unlistenByKey(this.postcomposeEventKey_);\n  this.changeEventKey_ = null;\n  this.postcomposeEventKey_ = null;\n};\n\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js","/**\n * @module ngeo.proj.EPSG21781\n*/\nimport olProj from 'ol/proj';\nimport olProjProj4 from 'ol/proj/proj4';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc';\n\nif (typeof olProjProj4.get() == 'function') {\n  const epsg21781def = [\n    '+proj=somerc',\n    '+lat_0=46.95240555555556',\n    '+lon_0=7.439583333333333',\n    '+k_0=1',\n    '+x_0=600000',\n    '+y_0=200000',\n    '+ellps=bessel',\n    '+towgs84=674.374,15.056,405.346,0,0,0,0',\n    '+units=m',\n    '+no_defs'\n  ].join(' ');\n  const epsg21781extent = [420000, 30000, 900000, 350000];\n\n  olProjProj4.get().defs('EPSG:21781', epsg21781def);\n  olProj.get('EPSG:21781').setExtent(epsg21781extent);\n}\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n*/\nconst exports = {};\nimport olProj from 'ol/proj';\nimport olProjProj4 from 'ol/proj/proj4';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nif (typeof olProjProj4.get() !== 'function' && typeof proj4 === 'function') {\n  olProj.setProj4(proj4);\n}\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 93\n// module chunks = 0 1 3 4 5 12 13 17 18","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nvar XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n        /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n    doc, opt_options) {\n  var features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n    doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  var features = [];\n  var n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n        /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  var node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  var node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  var node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 97\n// module chunks = 0 1 2 10","/**\n * @module ol/style/Text\n */\nimport _ol_style_Fill_ from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nvar _ol_style_Text_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new _ol_style_Fill_({color: _ol_style_Text_.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\n_ol_style_Text_.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\n_ol_style_Text_.prototype.clone = function() {\n  return new _ol_style_Text_({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\n_ol_style_Text_.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\n_ol_style_Text_.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\n_ol_style_Text_.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\n_ol_style_Text_.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\n_ol_style_Text_.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\n_ol_style_Text_.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_Text_.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\n_ol_style_Text_.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\n_ol_style_Text_.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\n_ol_style_Text_.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\n_ol_style_Text_.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\n_ol_style_Text_.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\n_ol_style_Text_.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_Text_.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\n_ol_style_Text_.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\n_ol_style_Text_.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\n_ol_style_Text_.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\n_ol_style_Text_.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\n_ol_style_Text_.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\n_ol_style_Text_.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\n_ol_style_Text_.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\n_ol_style_Text_.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\n_ol_style_Text_.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\n_ol_style_Text_.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\n_ol_style_Text_.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\n_ol_style_Text_.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\n_ol_style_Text_.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\n_ol_style_Text_.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\n_ol_style_Text_.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default _ol_style_Text_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 98\n// module chunks = 0 1 2 8 10 19 23"],"sourceRoot":""}