{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./src/utils.js","webpack:///./src/misc/decorate.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/CustomEvent.js","webpack:///./src/misc/debounce.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.prod.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./examples/permalink.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/statemanager/module.js","webpack:///./src/statemanager/Service.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js"],"names":["__webpack_require__","d","__webpack_exports__","DEFAULT_WMS_VERSION","exports","geometry","multiGeom","_MultiPoint2","default","appendPoint","_MultiLineString2","appendLineString","_MultiPolygon2","appendPolygon","navigator","userAgent","indexOf","hex","length","rgb","r","g","b","Error","colorZeroPadding","toString","queryString","queryData","pairs","substring","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","pair","value","indexOfEquals","name","decodeURIComponent","err","return","queryItem","key","push","encodeURIComponent","join","interaction","_asserts2","assertInstanceof","_Interaction2","Object","defineProperty","get","getActive","set","val","setActive","layer","_Base2","configurable","getVisible","setVisible","getOpacity","setOpacity","$scope","source","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","parent","decrementLoadCount_","decrement_","getLayers","on","olEvent","element","getSource","fail","$applyAsync","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","call","this","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","ol","prototype","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","forEach","unlistenByKey","ol_Image","ImageWMS","opt_options","options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","assign","x","Math","floor","y","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","listen","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","bbox","axisOrientation","getAxisOrientation","substr","uri","appendParams","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","type","detail","arguments","_Event2","_ol2","inherits","_ngeo","angular","module","_ngeo2","requires","factory_","$timeout","func","wait","invokeApply","timeout","_len","args","Array","_key","context","cancel","apply","factory","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","i","res","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","location","history","history_","schema_","protocol","domain_","hostname","port_","port","parseInt","path_","pathname","queryData_","_utils2","decodeQueryString","search","fragment_","replaceState","error","getPath","getUriString","out","String","charAt","encodedQueryData","encodeQueryString","encodedFragment","hasParam","hasFragmentParam","getParam","getFragmentParam","getParamAsInt","goog","assertString","valueAsInt","isNaN","getParamAsFloat","valueAsFloat","parseFloat","getFragmentParamAsInt","getParamKeys","keys","getFragmentParamKeys","getParamKeysWithPrefix","prefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteParam","deleteFragmentParam","refresh","setPath","path","LocationFactory","$rootScope","$window","service","lastUri","$watch","newUri","$evalAsync","$broadcast","MockProvider","$locationProvider","absUrl","opt_path","host","replace","opt_search","opt_paramValue","opt_url","_Collection2","featureUidToGroupIndex_","groups_","source_","_Vector4","useSpatialIndex","layer_","_Vector2","style","styleFunction_","bind","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","assert","featureUid","getUid","features","removeFeature","clear","group","_obj2","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","map","setMap","setStyle","createFunction","condition","opt_message","var_args","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","item","mapUid","previous","setAt","removeAt","insertAt","event","_CustomEvent2","current","dispatchEvent","updateDimensions","dimensions","baseBgLayer","layers","getArray","_Layer2","hasUpdates","updatedDimensions","directive_","ngeoSyncDataSourcesMap","restrict","link","scope","attrs","prop","$eval","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","_events2","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","e","code","app","ngeo","_module2","_debounce2","_module4","mapComponent","controller","bindings","template","component","MapComponentController","ngeoLocation","ngeoDebounce","ngeoLocation_","ngeoDebounce_","$onInit","_this","view","getView","zoom","setCenter","setZoom","z","getCenter","getZoom","drawComponent","DrawComponentController","scope_","featureSeq_","_this2","vectorSource","_Draw2","addInteraction","_decorate2","fhFormat","_FeatureHash2","stroke","_Stroke2","color","width","getFeatures","encodedFeatures","writeFeatures","readFeatures","addFeatures","clearLayer","MainController","_Tile2","_OSM2","vectorLayer","format","FeatureHashStyleType","LINE_STRING","POINT","POLYGON","FeatureHashStyleTypes_","LineString","Point","Polygon","MultiLineString","MultiPoint","MultiPolygon","FeatureHashLegacyProperties_","_TextFeature2","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","propertiesType","readFeature","readGeometry","writeFeature","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","styles","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","radius","getRadius","encodeStyleFill_","opt_propertyName","propertyName","fillColor","getColor","isArray","fillColorRgba","_color2","asArray","fillColorHex","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","flatCoordinates","decodeCoordinates_","lineString","_LineString2","setFlatCoordinates","_GeometryLayout2","XY","readMultiLineStringGeometry_","ends","lineStrings","ii","multiLineString","readPointGeometry_","point","_Point2","readMultiPointGeometry_","multiPoint","readPolygonGeometry_","rings","end","polygon","_Polygon2","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","_Fill2","_Circle2","fill","_Text2","setStyleProperties_","getGeometry","FeatureProperties","IS_TEXT","clone","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","array","includes","parts","keyVal","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","index","shift","result","dx","dy","encodedCoordinates","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","_Feature2","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","Feature","transformWithOptions","_Location2","_Service2","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","filter","_loop","some","keyRegexp","match","window","localStorage","console","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","updateState","object","RegExp","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","evt","target","_View2","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","manager","manager_","features_","index_","setFeatures","unlisten","handleFeatureAdd_","handleFeatureRemove_","$element","$attrs","mapExpr","recenter","attr","getSize","fit","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","newVal","oldVal","cancelAnimationFrame","templateUrl","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","newLength","Number","sort","_array2","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","__WEBPACK_IMPORTED_MODULE_9__math_js__","coordinates","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","setCoordinates","__WEBPACK_IMPORTED_MODULE_0__index_js__","__WEBPACK_IMPORTED_MODULE_1__array_js__","slice","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","squaredDistance","getCoordinates","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","points","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_POINT","intersectsExtent","setLayout","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","setFlatCoordinatesInternal","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","ends_","maxDelta_","maxDeltaRevision_","sqrt","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","m","opt_extrapolate","opt_interpolate","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","MULTI_LINE_STRING","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","multiPolygon","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","DrawEventType","Draw","Pointer","handleDownEvent","handleDownEvent_","handleEvent","handleUpEvent","handleUpEvent_","shouldHandle_","downPx_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","maxPoints_","maxPoints","Infinity","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","CIRCLE","opt_geometry","circle","Circle","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","concat","geometryFunction_","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","getDefaultStyleFunction","geometryName_","geometryName","condition_","noModifierKeys","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","ol_Object","getChangeEventType","Property","ACTIVE","updateState_","Style","createDefaultEditing","pass","MapBrowserEventType","POINTERDRAG","addToDrawing_","POINTERDOWN","POINTERMOVE","handlePointerMove_","DBLCLICK","pixel","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","getPixelFromCoordinate","updateSketchFeatures_","setGeometryName","setGeometry","Event","last","ring","getLinearRing","pop","removeLastPoint","splice","sketchFeature","extend","shouldStopEvent","sketchFeatures","overlaySource","getMap","active","createRegularPolygon","opt_sides","opt_angle","angle","atan","createBox","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","delta","getRadiusSquared_","computeExtent","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","circleExtent","intersectsCoordinate","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","setRadius","transform","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","_ol_style_Text_","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","placement","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding"],"mappings":"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","file":"permalink.min.js","sourcesContent":["/**\n * @type {string} Default WMS version.\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.utils\n*/\nconst exports = {};\nimport olGeomLineString from 'ol/geom/LineString';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon';\nimport olGeomPoint from 'ol/geom/Point';\nimport olGeomPolygon from 'ol/geom/Polygon';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    if (value) {\n      queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n    } else {\n      queryItem.push(encodeURIComponent(key));\n    }\n  }\n  return queryItem.join('&');\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.misc.decorate\n*/\nconst exports = {};\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport olInteractionInteraction from 'ol/interaction/Interaction';\nimport olLayerBase from 'ol/layer/Base';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerLayer from 'ol/layer/Layer';\nimport olSourceImage from 'ol/source/Image';\nimport olSourceTile from 'ol/source/Tile';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nvar _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nvar ImageWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var extent = getForViewAndSize(coordinate, resolution, 0,\n      ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n      extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var imageResolution = resolution / pixelRatio;\n\n  var center = getCenter(extent);\n  var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n  var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n  var image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  var params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return _ol_uri_.appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n    imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.CustomEvent\n*/\nimport olBase from 'ol';\nimport olEventsEvent from 'ol/events/Event';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ngeo.misc.debounce\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n *//* @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nvar TileWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var params = options.params || {};\n\n  var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, params) {\n\n  var urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    var tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  var url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    var index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return _ol_uri_.appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  var i = 0;\n  var res = [];\n  for (var key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.statemanager.Location\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoUtils from 'ngeo/utils';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n *//* @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n *//* @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo';\nimport olCollection from 'ol/Collection';\n\n\nngeoBase.module.value('ngeoDataSources', new olCollection());\n\n\n/**\n * @typedef {!ol.Collection.<!ngeo.datasource.DataSource>}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olLayerVector from 'ol/layer/Vector';\nimport olObj from 'ol/obj';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleStyle from 'ol/style/Style';\nimport googAsserts from 'goog/asserts';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {};\nexports.assertNumber = function(value, opt_message, var_args) {};\nexports.assertString = function(value, opt_message, var_args) {};\nexports.assertFunction = function(value, opt_message, var_args) {};\nexports.assertObject = function(value, opt_message, var_args) {};\nexports.assertArray = function(value, opt_message, var_args) {};\nexports.assertBoolean = function(value, opt_message, var_args) {};\nexports.assertElement = function(value, opt_message, var_args) {};\nexports.assertInstanceof = function(value, type, opt_message, var_args) {};\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.prod.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr';\nimport ngeoMapDirective from 'ngeo/map/directive';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr';\nimport ngeoMapRecenter from 'ngeo/map/recenter';\nimport ngeoMapResizemap from 'ngeo/map/resizemap';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport ngeoCustomEvent from 'ngeo/CustomEvent';\nimport olBase from 'ol';\nimport olObservable from 'ol/Observable';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerLayer from 'ol/layer/Layer';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\nimport olSourceTileWMS from 'ol/source/TileWMS';\nimport olSourceWMTS from 'ol/source/WMTS';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap';\n\nimport olEvents from 'ol/events';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module app.permalink\n*/\nconst exports = {};\n\nimport 'examples/permalink.css';\nimport './common_dependencies.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash';\n\nimport ngeoMapModule from 'ngeo/map/module';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module';\nimport olMap from 'ol/Map';\nimport olGeomGeometryType from 'ol/geom/GeometryType';\nimport olInteractionDraw from 'ol/interaction/Draw';\nimport olLayerTile from 'ol/layer/Tile';\nimport olLayerVector from 'ol/layer/Vector';\nimport olSourceOSM from 'ol/source/OSM';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleStroke from 'ol/style/Stroke';\nimport olStyleStyle from 'ol/style/Style';\n\n\n/** @type {!angular.Module} **/\napp.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name,\n  ngeoMiscDebounce.name,\n  ngeoStatemanagerModule.name,\n]);\n\n/**\n * An application-specific map component that updates the URL in the browser\n * address bar when the map view changes. It also sets the initial view based\n * on the URL query params at init time.\n *\n * This component gets a reference to the map instance through the \"app-map\"\n * attribute.\n *\n * @type {!angular.Component}\n */\napp.mapComponent = {\n  controller: 'AppMapController as ctrl',\n  bindings: {\n    'map': '=appMap'\n  },\n  template: '<div ngeo-map=ctrl.map></div>'\n};\n\n\napp.module.component('appMap', app.mapComponent);\n\n\n/**\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @constructor\n *//* @ngInject\n */\napp.MapComponentController = function(ngeoLocation, ngeoDebounce) {\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n};\n\napp.module.controller('AppMapController', app.MapComponentController);\n\napp.MapComponentController.prototype.$onInit = function() {\n  const view = this.map.getView();\n\n  let zoom = this.ngeoLocation_.getParam('z');\n  zoom = zoom !== undefined ? +zoom : 4;\n\n  const x = this.ngeoLocation_.getParam('x');\n  const y = this.ngeoLocation_.getParam('y');\n  const center = (x !== undefined) && (y !== undefined) ?\n    [+x, +y] : [0, 0];\n\n  view.setCenter(center);\n  view.setZoom(zoom);\n\n  this.ngeoLocation_.updateParams({\n    'z': zoom,\n    'x': Math.round(center[0]),\n    'y': Math.round(center[1])\n  });\n\n  view.on('propertychange',\n    this.ngeoDebounce_(\n      /**\n       * @param {ol.Object.Event} e Object event.\n       */\n      (e) => {\n        const center = view.getCenter();\n        const params = {\n          'z': view.getZoom(),\n          'x': Math.round(center[0]),\n          'y': Math.round(center[1])\n        };\n        this.ngeoLocation_.updateParams(params);\n      }, 300, /* invokeApply */ true));\n};\n\n/**\n * A draw component that adds a simple draw tool.\n *\n * @type {!angular.Component}\n */\napp.drawComponent = {\n  controller: 'AppDrawController as ctrl',\n  bindings: {\n    'map': '=appDrawMap',\n    'layer': '=appDrawLayer'\n  },\n  template:\n      '<label>Enable drawing:' +\n      '<input type=\"checkbox\" ng-model=\"ctrl.interaction.active\" />' +\n      '</label><br>' +\n      '<button ng-click=\"ctrl.clearLayer()\">Clear layer</button>'\n};\n\n\napp.module.component('appDraw', app.drawComponent);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n * @constructor\n * @export\n *//* @ngInject\n */\napp.DrawComponentController = function($scope, ngeoLocation) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {ol.layer.Vector}\n   */\n  this.layer;\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.featureSeq_ = 0;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.interaction;\n};\n\napp.DrawComponentController.prototype.$onInit = function() {\n  const vectorSource = this.layer.getSource();\n\n  this.interaction = new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: vectorSource\n  });\n\n  this.interaction.setActive(false);\n  this.map.addInteraction(this.interaction);\n  ngeoMiscDecorate.interaction(this.interaction);\n\n  this.interaction.on('drawend', function(e) {\n    e.feature.set('id', ++this.featureSeq_);\n  }, this);\n\n  // Deal with the encoding and decoding of features in the URL.\n\n  const fhFormat = new ngeoFormatFeatureHash();\n\n  vectorSource.on('addfeature', (e) => {\n    const feature = e.feature;\n    feature.setStyle(new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: [255, 0, 0, 1],\n        width: 2\n      })\n    }));\n    const features = vectorSource.getFeatures();\n    const encodedFeatures = fhFormat.writeFeatures(features);\n    this.scope_.$applyAsync(() => {\n      this.ngeoLocation_.updateParams({'features': encodedFeatures});\n    });\n  });\n\n  const encodedFeatures = this.ngeoLocation_.getParam('features');\n  if (encodedFeatures !== undefined) {\n    const features = fhFormat.readFeatures(encodedFeatures);\n    this.featureSeq_ = features.length;\n    vectorSource.addFeatures(features);\n  }\n};\n\n\n/**\n * Clear the vector layer.\n * @export\n */\napp.DrawComponentController.prototype.clearLayer = function() {\n  this.layer.getSource().clear(true);\n  this.featureSeq_ = 0;\n  this.ngeoLocation_.deleteParam('features');\n};\n\napp.module.controller('AppDrawController', app.DrawComponentController);\n\n\n/**\n * @constructor\n */\napp.MainController = function() {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ]\n  });\n\n\n  const vectorSource = new olSourceVector();\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer = new olLayerVector({\n    source: vectorSource\n  });\n\n  // Use vectorLayer.setMap(map) rather than map.addLayer(vectorLayer). This\n  // makes the vector layer \"unmanaged\", meaning that it is always on top.\n  this.vectorLayer.setMap(this.map);\n\n};\n\n\napp.module.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/permalink.js","/**\n * @module ngeo.format.FeatureHash\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoUtils from 'ngeo/utils';\nimport olFeature from 'ol/Feature';\nimport olColor from 'ol/color';\nimport olFormatTextFeature from 'ol/format/TextFeature';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout';\nimport olGeomGeometryType from 'ol/geom/GeometryType';\nimport olGeomLineString from 'ol/geom/LineString';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon';\nimport olGeomPoint from 'ol/geom/Point';\nimport olGeomPolygon from 'ol/geom/Polygon';\nimport olStyleCircle from 'ol/style/Circle';\nimport olStyleFill from 'ol/style/Fill';\nimport olStyleStroke from 'ol/style/Stroke';\nimport olStyleStyle from 'ol/style/Style';\nimport olStyleText from 'ol/style/Text';\n\n\n/**\n * @enum {string}\n */\nngeo.format.FeatureHashStyleType = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nngeo.format.FeatureHashStyleTypes_ = {\n  'LineString': ngeo.format.FeatureHashStyleType.LINE_STRING,\n  'Point': ngeo.format.FeatureHashStyleType.POINT,\n  'Polygon': ngeo.format.FeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeo.format.FeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeo.format.FeatureHashStyleType.POINT,\n  'MultiPolygon': ngeo.format.FeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nngeo.format.FeatureHashLegacyProperties_ = {};\n\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  ngeo.format.FeatureHashLegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nol.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = ngeo.format.FeatureHashStyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeo.format.FeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeo.format.FeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeo.format.FeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeo.FeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (ngeo.format.FeatureHashLegacyProperties_[key]) {\n      clone[ngeo.format.FeatureHashLegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeo.FeatureProperties.ANGLE,\n    ngeo.FeatureProperties.OPACITY,\n    ngeo.FeatureProperties.SIZE,\n    ngeo.FeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeo.FeatureProperties.IS_CIRCLE,\n    ngeo.FeatureProperties.IS_RECTANGLE,\n    ngeo.FeatureProperties.IS_TEXT,\n    ngeo.FeatureProperties.SHOW_MEASURE,\n    ngeo.FeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (ol.array.includes(numProperties, key)) {\n    return +value;\n  } else if (ol.array.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && ngeo.format.FeatureHashLegacyProperties_[key]) {\n          key = ngeo.format.FeatureHashLegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (ol.format.Feature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.statemanager.module\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ngeo.statemanager.Service\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n *//* @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources';\n\nimport olEvents from 'ol/events';\nimport olObservable from 'ol/Observable';\nimport olView from 'ol/View';\nimport googAsserts from 'goog/asserts';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\nngeoBase.module.service(\n  'ngeoSyncDataSourcesMap', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olEvents from 'ol/events';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo';\nimport olArray from 'ol/array';\nimport olMap from 'ol/Map';\nimport olEvents from 'ol/events';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  var multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  var flatCoordinates = this.flatCoordinates;\n  var stride = this.stride;\n  var i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  var n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  var point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  var flatCoordinates = this.flatCoordinates;\n  var layout = this.layout;\n  var stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  var points = [];\n  var i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    var point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  var flatCoordinates = this.flatCoordinates;\n  var stride = this.stride;\n  var i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n        this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nvar OSM = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  var crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  var url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nvar XYZ = function(opt_options) {\n  var options = opt_options || {};\n  var projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  var multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  var lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  var flatCoordinates = this.flatCoordinates;\n  var ends = this.ends_;\n  var layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  var lineStrings = [];\n  var offset = 0;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  var midpoints = [];\n  var flatCoordinates = this.flatCoordinates;\n  var offset = 0;\n  var ends = this.ends_;\n  var stride = this.stride;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var midpoint = _ol_geom_flat_interpolate_.lineString(\n        flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n  var simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n      GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = _ol_geom_flat_deflate_.coordinatess(\n        this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var ends = [];\n  var i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    var lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  var ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    var offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  var multiPolygon = new MultiPolygon(null);\n\n  var len = this.endss_.length;\n  var newEndss = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  var flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n      flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    var flatCenters = _ol_geom_flat_center_.linearRingss(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  var interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n      this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    var flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n  var simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n      GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  var offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    var prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  var ends = this.endss_[index].slice();\n  var end = ends[ends.length - 1];\n  if (offset !== 0) {\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  var polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  var layout = this.layout;\n  var flatCoordinates = this.flatCoordinates;\n  var endss = this.endss_;\n  var polygons = [];\n  var offset = 0;\n  var i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    var polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n        layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = _ol_geom_flat_deflate_.coordinatesss(\n        this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var endss = [];\n  var i, ii, ends;\n  for (i = 0, ii = polygons.length; i < ii; ++i) {\n    var polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    var offset = flatCoordinates.length;\n    ends = polygon.getEnds();\n    var j, jj;\n    for (j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport _ol_interaction_Pointer_ from '../interaction/Pointer.js';\nimport _ol_interaction_Property_ from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport _ol_style_Style_ from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nvar Draw = function(options) {\n\n  _ol_interaction_Pointer_.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  var geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        var circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        var squaredLength = _ol_coordinate_.squaredDistance(\n            coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      var Constructor;\n      var mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        var geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction()\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n      BaseObject.getChangeEventType(_ol_interaction_Property_.ACTIVE),\n      this.updateState_, this);\n\n};\n\ninherits(Draw, _ol_interaction_Pointer_);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  var styles = _ol_style_Style_.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  _ol_interaction_Pointer_.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  var pass = true;\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (event.type === MapBrowserEventType.POINTERMOVE) {\n    pass = this.handlePointerMove_(event);\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n  return _ol_interaction_Pointer_.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  var pass = true;\n\n  this.handlePointerMove_(event);\n\n  var circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    var downPx = this.downPx_;\n    var clickPx = event.pixel;\n    var dx = downPx[0] - clickPx[0];\n    var dy = downPx[1] - clickPx[1];\n    var squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  var at = false;\n  if (this.sketchFeature_) {\n    var potentiallyDone = false;\n    var potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      var map = event.map;\n      for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        var finishCoordinate = potentiallyFinishCoordinates[i];\n        var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        var pixel = event.pixel;\n        var dx = pixel[0] - finishPixel[0];\n        var dy = pixel[1] - finishPixel[1];\n        var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  var coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    var sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  var start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n    if (this.mode_ === Draw.Mode_.CIRCLE) {\n      this.sketchLineCoords_ = this.sketchCoords_;\n    }\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n  }\n  var geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  var coordinate = event.coordinate;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    var sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  var sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    var ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  var coordinate = event.coordinate;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var done;\n  var coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  var sketchFeature = this.abortDrawing_();\n  var coordinates = this.sketchCoords_;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  var sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  var geometry = feature.getGeometry();\n  var lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  var sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  var overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  var map = this.getMap();\n  var active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      var center = coordinates[0];\n      var end = coordinates[1];\n      var radius = Math.sqrt(\n          _ol_coordinate_.squaredDistance(center, end));\n      var geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      var angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(coordinates);\n      var geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  var radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  var circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  var flatCoordinates = this.flatCoordinates;\n  var dx = x - flatCoordinates[0];\n  var dy = y - flatCoordinates[1];\n  var squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    var i;\n    if (squaredDistance === 0) {\n      for (i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      var delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  var flatCoordinates = this.flatCoordinates;\n  var dx = x - flatCoordinates[0];\n  var dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  var flatCoordinates = this.flatCoordinates;\n  var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  var circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    var center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  var stride = this.stride;\n  var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  var flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  var i;\n  for (i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = _ol_geom_flat_deflate_.coordinate(\n        flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    var i, ii;\n    for (i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 80\n// module chunks = 0 1 2 6 7 8 9 11 14","/**\n * @module ol/style/Text\n */\nimport _ol_style_Fill_ from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nvar _ol_style_Text_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new _ol_style_Fill_({color: _ol_style_Text_.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\n_ol_style_Text_.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\n_ol_style_Text_.prototype.clone = function() {\n  return new _ol_style_Text_({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\n_ol_style_Text_.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\n_ol_style_Text_.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\n_ol_style_Text_.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\n_ol_style_Text_.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\n_ol_style_Text_.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\n_ol_style_Text_.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_Text_.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\n_ol_style_Text_.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\n_ol_style_Text_.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\n_ol_style_Text_.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\n_ol_style_Text_.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\n_ol_style_Text_.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\n_ol_style_Text_.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_Text_.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\n_ol_style_Text_.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\n_ol_style_Text_.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\n_ol_style_Text_.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\n_ol_style_Text_.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\n_ol_style_Text_.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\n_ol_style_Text_.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\n_ol_style_Text_.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\n_ol_style_Text_.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\n_ol_style_Text_.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\n_ol_style_Text_.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\n_ol_style_Text_.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\n_ol_style_Text_.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\n_ol_style_Text_.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\n_ol_style_Text_.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\n_ol_style_Text_.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default _ol_style_Text_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 98\n// module chunks = 0 1 2 8 10 19 23"],"sourceRoot":""}