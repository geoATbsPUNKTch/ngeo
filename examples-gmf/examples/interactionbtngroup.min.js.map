{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/misc/decorate.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.prod.js","webpack:///./examples/interactionbtngroup.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js"],"names":["__webpack_require__","d","__webpack_exports__","DEFAULT_WMS_VERSION","_ngeo","exports","angular","module","_ngeo2","default","requires","push","name","btnGroupComponent_","$parse","restrict","controller","link","scope","element","attrs","setActive","assign","$watch","buttons_","some","buttonModel","newValue","directive","BtnGroupController","$scope","this","scope_","prototype","activate","index","forEach","expressionFn","i","addButton","length","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","undefined","on","$apply","$setViewValue","$viewValue","$render","toggleClass","interaction","_asserts2","assertInstanceof","_Interaction2","Object","defineProperty","get","getActive","set","val","layer","_Base2","configurable","getVisible","setVisible","getOpacity","setOpacity","source","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","parent","decrementLoadCount_","decrement_","getLayers","olEvent","getSource","fail","$applyAsync","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","call","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","ol","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","unlistenByKey","ol_Image","ImageWMS","opt_options","options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","x","Math","floor","y","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","listen","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","bbox","axisOrientation","getAxisOrientation","substr","join","uri","appendParams","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","type","detail","arguments","_Event2","_ol2","inherits","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","res","key","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","value","_Collection2","featureUidToGroupIndex_","groups_","source_","_Vector4","useSpatialIndex","layer_","_Vector2","style","styleFunction_","bind","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","assert","featureUid","getUid","toString","features","removeFeature","clear","group","_obj2","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","map","setMap","setStyle","createFunction","service","condition","opt_message","var_args","e","Error","code","app","ngeo","_module2","_btnComponent2","MainController","ngeoFeatureOverlayMgr","overlay","setFeatures","fill","_Fill2","color","stroke","_Stroke2","width","_Circle2","radius","_Map2","layers","_Tile2","_OSM2","view","_View2","zoom","drawPolygon","_Draw2","_decorate2","addInteraction","drawPoint","drawLine","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","item","mapUid","previous","setAt","removeAt","insertAt","event","_CustomEvent2","current","dispatchEvent","updateDimensions","dimensions","baseBgLayer","getArray","_Layer2","hasUpdates","updatedDimensions","refresh","directive_","$window","ngeoSyncDataSourcesMap","prop","$eval","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","_events2","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","getView","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","evt","target","_this","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","manager","manager_","features_","index_","unlisten","handleFeatureAdd_","handleFeatureRemove_","$element","$attrs","mapExpr","recenter","attr","getSize","fit","setZoom","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","newVal","oldVal","cancelAnimationFrame","templateUrl","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","goog","zoomLevels","keys","newLength","Number","sort","_array2","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","_this2","__WEBPACK_IMPORTED_MODULE_9__math_js__","MultiPoint","coordinates","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","setCoordinates","__WEBPACK_IMPORTED_MODULE_0__index_js__","appendPoint","point","flatCoordinates","__WEBPACK_IMPORTED_MODULE_1__array_js__","getFlatCoordinates","slice","clone","multiPoint","setFlatCoordinates","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","ii","j","stride","squaredDistance","getCoordinates","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","points","getType","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_POINT","intersectsExtent","setLayout","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XY","setFlatCoordinatesInternal","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","MultiLineString","ends_","maxDelta_","maxDeltaRevision_","appendLineString","lineString","multiLineString","sqrt","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","m","opt_extrapolate","opt_interpolate","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","ends","lineStrings","offset","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","MULTI_LINE_STRING","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","MultiPolygon","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","polygon","multiPolygon","len","newEndss","Array","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","jj","endss","polygons","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","DrawEventType","Draw","Pointer","handleDownEvent","handleDownEvent_","handleEvent","handleUpEvent","handleUpEvent_","shouldHandle_","downPx_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","POLYGON","maxPoints_","maxPoints","Infinity","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","CIRCLE","opt_geometry","circle","Circle","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","POINT","Point","LINE_STRING","LineString","Polygon","geometry","concat","geometryFunction_","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","getDefaultStyleFunction","geometryName_","geometryName","condition_","noModifierKeys","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","ol_Object","getChangeEventType","Property","ACTIVE","updateState_","styles","Style","createDefaultEditing","getGeometry","pass","MapBrowserEventType","POINTERDRAG","addToDrawing_","POINTERDOWN","POINTERMOVE","handlePointerMove_","DBLCLICK","pixel","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","dx","dy","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","getPixelFromCoordinate","Feature","updateSketchFeatures_","setGeometryName","setGeometry","Event","last","ring","getLinearRing","done","pop","removeLastPoint","splice","sketchFeature","extend","shouldStopEvent","sketchFeatures","overlaySource","addFeatures","getMap","active","createRegularPolygon","opt_sides","opt_angle","angle","atan","createBox","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","delta","getRadius","getRadiusSquared_","getCenter","computeExtent","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","circleExtent","intersectsCoordinate","setCenter","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","setRadius","transform"],"mappings":"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","file":"interactionbtngroup.min.js","sourcesContent":["/**\n * @type {string} Default WMS version.\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.misc.btnComponent\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n *//* @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach(function(expressionFn, i) {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  }, this);\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/btnComponent.js","/**\n * @module ngeo.misc.decorate\n*/\nconst exports = {};\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport olInteractionInteraction from 'ol/interaction/Interaction';\nimport olLayerBase from 'ol/layer/Base';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerLayer from 'ol/layer/Layer';\nimport olSourceImage from 'ol/source/Image';\nimport olSourceTile from 'ol/source/Tile';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nvar _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nvar ImageWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var extent = getForViewAndSize(coordinate, resolution, 0,\n      ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n      extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var imageResolution = resolution / pixelRatio;\n\n  var center = getCenter(extent);\n  var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n  var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n  var image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  var params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return _ol_uri_.appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n    imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.CustomEvent\n*/\nimport olBase from 'ol';\nimport olEventsEvent from 'ol/events/Event';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nvar TileWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var params = options.params || {};\n\n  var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, params) {\n\n  var urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    var tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  var url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    var index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return _ol_uri_.appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  var i = 0;\n  var res = [];\n  for (var key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo';\nimport olCollection from 'ol/Collection';\n\n\nngeoBase.module.value('ngeoDataSources', new olCollection());\n\n\n/**\n * @typedef {!ol.Collection.<!ngeo.datasource.DataSource>}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olLayerVector from 'ol/layer/Vector';\nimport olObj from 'ol/obj';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleStyle from 'ol/style/Style';\nimport googAsserts from 'goog/asserts';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {};\nexports.assertNumber = function(value, opt_message, var_args) {};\nexports.assertString = function(value, opt_message, var_args) {};\nexports.assertFunction = function(value, opt_message, var_args) {};\nexports.assertObject = function(value, opt_message, var_args) {};\nexports.assertArray = function(value, opt_message, var_args) {};\nexports.assertBoolean = function(value, opt_message, var_args) {};\nexports.assertElement = function(value, opt_message, var_args) {};\nexports.assertInstanceof = function(value, type, opt_message, var_args) {};\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.prod.js","/**\n * @module app.interactionbtngroup\n*/\nconst exports = {};\n\nimport 'examples/interactionbtngroup.css';\nimport './common_dependencies.js';\nimport ngeoMapModule from 'ngeo/map/module';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate';\nimport olCollection from 'ol/Collection';\nimport olMap from 'ol/Map';\nimport olView from 'ol/View';\nimport olInteractionDraw from 'ol/interaction/Draw';\nimport olLayerTile from 'ol/layer/Tile';\nimport olSourceOSM from 'ol/source/OSM';\nimport olStyleCircle from 'ol/style/Circle';\nimport olStyleFill from 'ol/style/Fill';\nimport olStyleStroke from 'ol/style/Stroke';\nimport olStyleStyle from 'ol/style/Style';\n\n\n/** @type {!angular.Module} **/\napp.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name,\n  ngeoMiscBtnComponent.name,\n]);\n\n\n/**\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @constructor\n *//* @ngInject\n */\napp.MainController = function(ngeoFeatureOverlayMgr) {\n\n  /**\n   * Collection shared between the drawing interactions and the feature\n   * overlay used to render the drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   */\n  const features = new olCollection();\n\n  const overlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  overlay.setFeatures(features);\n  overlay.setStyle(new olStyleStyle({\n    fill: new olStyleFill({\n      color: 'rgba(255, 255, 255, 0.2)'\n    }),\n    stroke: new olStyleStroke({\n      color: '#ffcc33',\n      width: 2\n    }),\n    image: new olStyleCircle({\n      radius: 7,\n      fill: new olStyleFill({\n        color: '#ffcc33'\n      })\n    })\n  }));\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [-10997148, 4569099],\n      zoom: 4\n    })\n  });\n\n  const map = this.map;\n\n  // initialize the feature overlay manager with the map\n  ngeoFeatureOverlayMgr.init(map);\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPolygon = new olInteractionDraw(\n    /** @type {olx.interaction.DrawOptions} */ ({\n      type: 'Polygon',\n      features: features\n    }));\n\n  const drawPolygon = this.drawPolygon;\n\n  drawPolygon.setActive(false);\n  ngeoMiscDecorate.interaction(drawPolygon);\n  map.addInteraction(drawPolygon);\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint = new olInteractionDraw(\n    /** @type {olx.interaction.DrawOptions} */ ({\n      type: 'Point',\n      features: features\n    }));\n\n  const drawPoint = this.drawPoint;\n  drawPoint.setActive(false);\n  ngeoMiscDecorate.interaction(drawPoint);\n  map.addInteraction(drawPoint);\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawLine = new olInteractionDraw(\n    /** @type {olx.interaction.DrawOptions} */ ({\n      type: 'LineString',\n      features: features\n    }));\n\n  const drawLine = this.drawLine;\n  drawLine.setActive(false);\n  ngeoMiscDecorate.interaction(drawLine);\n  map.addInteraction(drawLine);\n\n};\n\n\napp.module.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/interactionbtngroup.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr';\nimport ngeoMapDirective from 'ngeo/map/directive';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr';\nimport ngeoMapRecenter from 'ngeo/map/recenter';\nimport ngeoMapResizemap from 'ngeo/map/resizemap';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport ngeoCustomEvent from 'ngeo/CustomEvent';\nimport olBase from 'ol';\nimport olObservable from 'ol/Observable';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerLayer from 'ol/layer/Layer';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\nimport olSourceTileWMS from 'ol/source/TileWMS';\nimport olSourceWMTS from 'ol/source/WMTS';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap';\n\nimport olEvents from 'ol/events';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources';\n\nimport olEvents from 'ol/events';\nimport olObservable from 'ol/Observable';\nimport olView from 'ol/View';\nimport googAsserts from 'goog/asserts';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\nngeoBase.module.service(\n  'ngeoSyncDataSourcesMap', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olEvents from 'ol/events';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo';\nimport olArray from 'ol/array';\nimport olMap from 'ol/Map';\nimport olEvents from 'ol/events';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  var multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  var flatCoordinates = this.flatCoordinates;\n  var stride = this.stride;\n  var i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  var n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  var point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  var flatCoordinates = this.flatCoordinates;\n  var layout = this.layout;\n  var stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  var points = [];\n  var i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    var point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  var flatCoordinates = this.flatCoordinates;\n  var stride = this.stride;\n  var i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n        this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nvar OSM = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  var crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  var url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nvar XYZ = function(opt_options) {\n  var options = opt_options || {};\n  var projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  var multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  var lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  var flatCoordinates = this.flatCoordinates;\n  var ends = this.ends_;\n  var layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  var lineStrings = [];\n  var offset = 0;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  var midpoints = [];\n  var flatCoordinates = this.flatCoordinates;\n  var offset = 0;\n  var ends = this.ends_;\n  var stride = this.stride;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var midpoint = _ol_geom_flat_interpolate_.lineString(\n        flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n  var simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n      GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = _ol_geom_flat_deflate_.coordinatess(\n        this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var ends = [];\n  var i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    var lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  var ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    var offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  var multiPolygon = new MultiPolygon(null);\n\n  var len = this.endss_.length;\n  var newEndss = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  var flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n      flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    var flatCenters = _ol_geom_flat_center_.linearRingss(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  var interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n      this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    var flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n  var simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n      GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  var offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    var prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  var ends = this.endss_[index].slice();\n  var end = ends[ends.length - 1];\n  if (offset !== 0) {\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  var polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  var layout = this.layout;\n  var flatCoordinates = this.flatCoordinates;\n  var endss = this.endss_;\n  var polygons = [];\n  var offset = 0;\n  var i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    var polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n        layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = _ol_geom_flat_deflate_.coordinatesss(\n        this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var endss = [];\n  var i, ii, ends;\n  for (i = 0, ii = polygons.length; i < ii; ++i) {\n    var polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    var offset = flatCoordinates.length;\n    ends = polygon.getEnds();\n    var j, jj;\n    for (j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport _ol_interaction_Pointer_ from '../interaction/Pointer.js';\nimport _ol_interaction_Property_ from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport _ol_style_Style_ from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nvar Draw = function(options) {\n\n  _ol_interaction_Pointer_.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  var geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        var circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        var squaredLength = _ol_coordinate_.squaredDistance(\n            coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      var Constructor;\n      var mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        var geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction()\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n      BaseObject.getChangeEventType(_ol_interaction_Property_.ACTIVE),\n      this.updateState_, this);\n\n};\n\ninherits(Draw, _ol_interaction_Pointer_);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  var styles = _ol_style_Style_.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  _ol_interaction_Pointer_.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  var pass = true;\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (event.type === MapBrowserEventType.POINTERMOVE) {\n    pass = this.handlePointerMove_(event);\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n  return _ol_interaction_Pointer_.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  var pass = true;\n\n  this.handlePointerMove_(event);\n\n  var circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    var downPx = this.downPx_;\n    var clickPx = event.pixel;\n    var dx = downPx[0] - clickPx[0];\n    var dy = downPx[1] - clickPx[1];\n    var squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  var at = false;\n  if (this.sketchFeature_) {\n    var potentiallyDone = false;\n    var potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      var map = event.map;\n      for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        var finishCoordinate = potentiallyFinishCoordinates[i];\n        var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        var pixel = event.pixel;\n        var dx = pixel[0] - finishPixel[0];\n        var dy = pixel[1] - finishPixel[1];\n        var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  var coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    var sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  var start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n    if (this.mode_ === Draw.Mode_.CIRCLE) {\n      this.sketchLineCoords_ = this.sketchCoords_;\n    }\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n  }\n  var geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  var coordinate = event.coordinate;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    var sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  var sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    var ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  var coordinate = event.coordinate;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var done;\n  var coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  var sketchFeature = this.abortDrawing_();\n  var coordinates = this.sketchCoords_;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  var sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  var geometry = feature.getGeometry();\n  var lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  var sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  var overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  var map = this.getMap();\n  var active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      var center = coordinates[0];\n      var end = coordinates[1];\n      var radius = Math.sqrt(\n          _ol_coordinate_.squaredDistance(center, end));\n      var geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      var angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(coordinates);\n      var geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  var radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  var circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  var flatCoordinates = this.flatCoordinates;\n  var dx = x - flatCoordinates[0];\n  var dy = y - flatCoordinates[1];\n  var squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    var i;\n    if (squaredDistance === 0) {\n      for (i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      var delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  var flatCoordinates = this.flatCoordinates;\n  var dx = x - flatCoordinates[0];\n  var dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  var flatCoordinates = this.flatCoordinates;\n  var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  var circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    var center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  var stride = this.stride;\n  var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  var flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  var i;\n  for (i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = _ol_geom_flat_deflate_.coordinate(\n        flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    var i, ii;\n    for (i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 80\n// module chunks = 0 1 2 6 7 8 9 11 14"],"sourceRoot":""}