{"version":3,"sources":["webpack:///./src/filters.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/misc/decorate.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.prod.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./examples/measure.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/interaction/Measure.js"],"names":["__webpack_require__","_ngeo2","default","Scalify","$filter","numberFilter","filterFn","scale","text","module","filter","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","undefined","Infinity","sign","Math","abs","nb_decimal","floor","log","factor","pow","round","decimal","unit","str_number","length","substring","groups","str_unit","index","unshift","join","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","opt_type","divisor","prefix","index_max","postfix","space","NumberCoordinates","coordinates","opt_fractionDigits","opt_template","template","x","y","fractionDigits","parseInt","replace","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","_math2","modulo","dms","d","m","s","_string2","padNumber","charAt","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","__webpack_exports__","DEFAULT_WMS_VERSION","_ngeo","exports","angular","requires","push","name","btnGroupComponent_","$parse","restrict","controller","link","scope","element","attrs","setActive","assign","$watch","buttons_","some","buttonModel","newValue","directive","BtnGroupController","$scope","this","scope_","prototype","activate","forEach","expressionFn","i","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","on","$apply","$setViewValue","$viewValue","$render","toggleClass","interaction","_asserts2","assertInstanceof","_Interaction2","Object","defineProperty","get","getActive","set","val","layer","_Base2","configurable","getVisible","setVisible","getOpacity","setOpacity","source","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","parent","decrementLoadCount_","decrement_","getLayers","olEvent","getSource","fail","$applyAsync","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","unitPrefixFormat","numberFormat","opt_options","options","_Measure2","call","continueMsg","document","createElement","textContent","assert","ol","inherits","createDrawInteraction","style","_DrawAzimut2","handleMeasure","callback","geom","sketchFeature","getGeometry","_GeometryCollection2","line","getGeometries","_LineString2","getFormattedAzimutRadius","getMap","getView","getProjection","proj","Projection","decimals","precision","getLastCoordinate","projection","formatLength","formatAzimut","output","getFormattedAzimut","getFormattedLength","format","getAzimut","coords","getCoordinates","dx","dy","rad","acos","sqrt","PI","_Pointer2","handleDownEvent","handleDownEvent_","handleEvent","handleEvent_","handleUpEvent","handleUpEvent_","downPx_","source_","started_","sketchFeature_","sketchPoint_","squaredClickTolerance_","sketchLayer_","_Vector2","_Vector4","useSpatialIndex","wrapX","_Draw2","getDefaultStyleFunction","_events2","listen","updateState_","event","pixel","downPx","clickPx","pass","handlePointerMove_","finishDrawing_","startDrawing_","mapBrowserEvent","type","modifyDrawing_","createOrUpdateSketchPoint_","coordinate","slice","_Feature2","_Point2","updateSketchFeatures_","sketchPointGeom","setCoordinates","sketchFeatures","clear","addFeatures","start","circle","_Circle2","geometry","setGeometry","dispatchEvent","Event","geometries","getGeometriesArray","last","setRadius","getLength","abortDrawing_","shouldStopEvent","_functions2","FALSE","map","active","setMap","addFeature","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","unlistenByKey","ol_Image","ImageWMS","source_Image","attributions","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","bbox","axisOrientation","getAxisOrientation","substr","uri","appendParams","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","br","appendChild","goog","_Polygon2","getFormattedArea","coord","getInteriorPoint","detail","arguments","_Event2","_ol2","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","res","key","fixedTileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__string_js__","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","value","_Collection2","featureUidToGroupIndex_","groups_","layer_","styleFunction_","bind","updateWhileAnimating","updateWhileInteracting","feature","groupIndex","featureUid","getUid","toString","features","removeFeature","group","_obj2","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","setStyle","createFunction","service","condition","opt_message","var_args","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","item","mapUid","previous","setAt","removeAt","insertAt","_CustomEvent2","current","updateDimensions","dimensions","baseBgLayer","layers","getArray","_Layer2","hasUpdates","updatedDimensions","refresh","e","Error","code","app","ngeo","_module2","_btnComponent2","measuretoolsComponent","bindings","lang","controllerAs","templateUrl","component","MeasuretoolsController","$compile","_this","measureStartMsg","measureLengthContinueMsg","measureAreaContinueMsg","measureAzimutContinueMsg","measureStartMsgs","en","fr","measureLengthContinueMsgs","measureAreaContinueMsgs","measureAzimutContinueMsgs","newVal","fill","_Fill2","color","stroke","_Stroke2","lineDash","width","radius","measureLength","_MeasureLength2","sketchStyle","startMsg","_decorate2","measureArea","_MeasureArea2","measureAzimut","_MeasureAzimut2","evt","target","getTooltipElement","innerHTML","$onInit","addInteraction","MainController","_Map2","_Tile2","_OSM2","view","_View2","zoom","addControl","_ScaleLine2","directive_","$window","ngeoSyncDataSourcesMap","prop","$eval","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","manager","manager_","features_","index_","setFeatures","unlisten","handleFeatureAdd_","handleFeatureRemove_","$element","$attrs","mapExpr","recenter","attr","getSize","fit","setZoom","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","oldVal","cancelAnimationFrame","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","keys","newLength","sort","_array2","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","_this2","__WEBPACK_IMPORTED_MODULE_9__math_js__","MultiPoint","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","__WEBPACK_IMPORTED_MODULE_0__index_js__","appendPoint","point","flatCoordinates","__WEBPACK_IMPORTED_MODULE_1__array_js__","getFlatCoordinates","clone","multiPoint","setFlatCoordinates","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","ii","j","stride","squaredDistance","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","points","getType","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_POINT","intersectsExtent","setLayout","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XY","setFlatCoordinatesInternal","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","MultiLineString","ends_","maxDelta_","maxDeltaRevision_","appendLineString","lineString","multiLineString","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","ends","lineStrings","offset","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","MULTI_LINE_STRING","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","MultiPolygon","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","polygon","multiPolygon","len","newEndss","Array","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","jj","endss","polygons","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","__WEBPACK_IMPORTED_MODULE_6__obj_js__","GeometryCollection","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","GEOMETRY_COLLECTION","rotate","angle","anchor","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","DrawEventType","Draw","Pointer","shouldHandle_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","POLYGON","maxPoints_","maxPoints","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","CIRCLE","opt_geometry","Circle","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","POINT","Point","LINE_STRING","LineString","Polygon","concat","geometryFunction_","finishCoordinate_","sketchCoords_","sketchLine_","sketchLineCoords_","clickTolerance","overlay_","Vector","source_Vector","geometryName_","geometryName","condition_","noModifierKeys","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","ol_Object","getChangeEventType","Property","ACTIVE","styles","Style","createDefaultEditing","MapBrowserEventType","POINTERDRAG","addToDrawing_","POINTERDOWN","POINTERMOVE","DBLCLICK","circleMode","finishDrawing","atFinish_","stopPropagation","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","getPixelFromCoordinate","Feature","setGeometryName","ring","getLinearRing","done","pop","removeLastPoint","splice","extend","overlaySource","createRegularPolygon","opt_sides","opt_angle","atan","createBox","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","delta","getRadius","getRadiusSquared_","getCenter","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","circleExtent","intersectsCoordinate","setCenter","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","transform","MeasureBaseOptions","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","displayHelpTooltip_","displayHelpTooltip","changeEventKey_","postcomposeEventKey_","vectorLayer_","drawInteraction_","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","SPHERE_WGS84","_sphere2","_EPSG2","RADIUS","geodesicArea","getFormattedCircleArea","c1","c2","haversineDistance","getFormattedPoint","dragging","helpMsg","_dom2","removeChildren","setPosition","getDrawInteraction","prevMap","removeInteraction","createMeasureTooltip_","measure","classList","add","setOffset","createHelpTooltip_","removeHelpTooltip_","_Overlay2","positioning","addOverlay","removeOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent"],"mappings":"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","file":"measure.min.js","sourcesContent":["/**\n * @module ngeo.filters\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo';\nimport olMath from 'ol/math';\nimport olString from 'ol/string';\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nngeoBase.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoScalify', ngeoBase.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nngeoBase.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoNumber', ngeoBase.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nngeoBase.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoUnitPrefix', ngeoBase.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nngeoBase.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoNumberCoordinates', ngeoBase.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nngeoBase.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoDMSCoordinates', ngeoBase.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * @return {function(?):string} The filter function.\n *//* @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nngeoBase.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nngeoBase.module.filter('ngeoTrustHtml', ngeoBase.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filters.js","/**\n * @type {string} Default WMS version.\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.misc.btnComponent\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n *//* @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach(function(expressionFn, i) {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  }, this);\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/btnComponent.js","/**\n * @module ngeo.misc.decorate\n*/\nconst exports = {};\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport olInteractionInteraction from 'ol/interaction/Interaction';\nimport olLayerBase from 'ol/layer/Base';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerLayer from 'ol/layer/Layer';\nimport olSourceImage from 'ol/source/Image';\nimport olSourceTile from 'ol/source/Tile';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.interaction.MeasureAzimut\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection';\nimport olGeomLineString from 'ol/geom/LineString';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, opt_options) {\n\n  const options = opt_options || {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nol.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), ol.proj.Projection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureAzimut.js","/**\n * @module ngeo.interaction.DrawAzimut\n*/\nimport googAsserts from 'goog/asserts';\nimport olFeature from 'ol/Feature';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent';\nimport olEvents from 'ol/events';\nimport olFunctions from 'ol/functions';\nimport olGeomCircle from 'ol/geom/Circle';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection';\nimport olGeomLineString from 'ol/geom/LineString';\nimport olGeomPoint from 'ol/geom/Point';\nimport olInteractionDraw from 'ol/interaction/Draw';\nimport olInteractionPointer from 'ol/interaction/Pointer';\nimport olLayerVector from 'ol/layer/Vector';\nimport olSourceVector from 'ol/source/Vector';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style !== undefined ?\n      options.style : olInteractionDraw.getDefaultStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nol.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), sketchFeature));\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/DrawAzimut.js","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nvar _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nvar ImageWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var extent = getForViewAndSize(coordinate, resolution, 0,\n      ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n      extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var imageResolution = resolution / pixelRatio;\n\n  var center = getCenter(extent);\n  var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n  var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n  var image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  var params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return _ol_uri_.appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n    imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.interaction.MeasureArea\n*/\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure';\nimport olGeomPolygon from 'ol/geom/Polygon';\nimport olInteractionDraw from 'ol/interaction/Draw';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the polygon.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click starting point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nol.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = goog.asserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  goog.asserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureArea.js","/**\n * @module ngeo.interaction.MeasureLength\n*/\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure';\nimport olGeomLineString from 'ol/geom/LineString';\nimport olInteractionDraw from 'ol/interaction/Draw';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the line.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click last point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nol.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = goog.asserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  goog.asserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureLength.js","/**\n * @module ngeo.CustomEvent\n*/\nimport olBase from 'ol';\nimport olEventsEvent from 'ol/events/Event';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nvar TileWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var params = options.params || {};\n\n  var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, params) {\n\n  var urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    var tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  var url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    var index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return _ol_uri_.appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  var i = 0;\n  var res = [];\n  for (var key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo';\nimport olCollection from 'ol/Collection';\n\n\nngeoBase.module.value('ngeoDataSources', new olCollection());\n\n\n/**\n * @typedef {!ol.Collection.<!ngeo.datasource.DataSource>}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olLayerVector from 'ol/layer/Vector';\nimport olObj from 'ol/obj';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleStyle from 'ol/style/Style';\nimport googAsserts from 'goog/asserts';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {};\nexports.assertNumber = function(value, opt_message, var_args) {};\nexports.assertString = function(value, opt_message, var_args) {};\nexports.assertFunction = function(value, opt_message, var_args) {};\nexports.assertObject = function(value, opt_message, var_args) {};\nexports.assertArray = function(value, opt_message, var_args) {};\nexports.assertBoolean = function(value, opt_message, var_args) {};\nexports.assertElement = function(value, opt_message, var_args) {};\nexports.assertInstanceof = function(value, type, opt_message, var_args) {};\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.prod.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr';\nimport ngeoMapDirective from 'ngeo/map/directive';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr';\nimport ngeoMapRecenter from 'ngeo/map/recenter';\nimport ngeoMapResizemap from 'ngeo/map/resizemap';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport ngeoCustomEvent from 'ngeo/CustomEvent';\nimport olBase from 'ol';\nimport olObservable from 'ol/Observable';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerLayer from 'ol/layer/Layer';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\nimport olSourceTileWMS from 'ol/source/TileWMS';\nimport olSourceWMTS from 'ol/source/WMTS';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module app.measure\n*/\nconst exports = {};\n\nimport 'examples/measure.css';\nimport './common_dependencies.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea';\n\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength';\nimport ngeoMapModule from 'ngeo/map/module';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate';\n\n/** @suppress {extraRequire} */\nimport ngeoFilters from 'ngeo/filters';\n\nimport olMap from 'ol/Map';\nimport olView from 'ol/View';\nimport olControlScaleLine from 'ol/control/ScaleLine';\nimport olLayerTile from 'ol/layer/Tile';\nimport olSourceOSM from 'ol/source/OSM';\nimport olStyleStyle from 'ol/style/Style';\nimport olStyleCircle from 'ol/style/Circle';\nimport olStyleStroke from 'ol/style/Stroke';\nimport olStyleFill from 'ol/style/Fill';\n\n/** @type {!angular.Module} **/\napp.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name,\n  ngeoMiscBtnComponent.name,\n]);\n\n\n/**\n * App-specific component wrapping the measure tools. The component's\n * controller has a property \"map\" including a reference to the OpenLayers\n * map.\n *\n * @type {!angular.Component}\n */\napp.measuretoolsComponent = {\n  bindings: {\n    'map': '=appMeasuretoolsMap',\n    'lang': '=appMeasuretoolsLang'\n  },\n  controller: 'AppMeasuretoolsController',\n  controllerAs: 'ctrl',\n  templateUrl: 'partials/measuretools.html'\n};\n\napp.module.component('appMeasuretools', app.measuretoolsComponent);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$filter} $filter Angular filter service.\n * @constructor\n *//* @ngInject\n */\napp.MeasuretoolsController = function($scope, $compile, $sce,\n  $filter) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.lang;\n\n  /**\n   * @type {Object}\n   * @export\n   */\n  this.measureStartMsg = null;\n\n  /**\n   * @type {Object}\n   * @export\n   */\n  this.measureLengthContinueMsg = null;\n\n\n  /**\n   * @type {Object}\n   * @export\n   */\n  this.measureAreaContinueMsg = null;\n\n  /**\n   * @type {Object}\n   * @export\n   */\n  this.measureAzimutContinueMsg = null;\n\n  // Translations for the measure tools' tooltips.\n  const measureStartMsgs = {\n    'en': $sce.trustAsHtml('Click to start drawing.'),\n    'fr': $sce.trustAsHtml('Cliquer pour commencer à dessiner.')\n  };\n  const measureLengthContinueMsgs = {\n    'en': $sce.trustAsHtml('Click to continue drawing.<br>' +\n        'Double-click or click last point to finish.'),\n    'fr': $sce.trustAsHtml('Cliquer pour continuer le dessin.<br>' +\n        'Double-cliquer ou cliquer sur dernier point pour finir.')\n  };\n  const measureAreaContinueMsgs = {\n    'en': $sce.trustAsHtml('Click to continue drawing.<br>' +\n        'Double-click or click starting point to finish.'),\n    'fr': $sce.trustAsHtml('Cliquer pour continuer le dessin.<br>' +\n        'Double-cliquer ou cliquer sur point de départ pour finir.')\n  };\n  const measureAzimutContinueMsgs = {\n    'en': $sce.trustAsHtml('Click to finish.'),\n    'fr': $sce.trustAsHtml('Cliquer pour finir.')\n  };\n\n  // Create elements for the measure tools' tooltips.\n  let measureStartMsg = angular.element(\n    '<span ng-bind-html=\"ctrl.measureStartMsg\"></span>');\n  measureStartMsg = $compile(measureStartMsg)($scope);\n  let measureLengthContinueMsg = angular.element(\n    '<span ng-bind-html=\"ctrl.measureLengthContinueMsg\"></span>');\n  measureLengthContinueMsg = $compile(measureLengthContinueMsg)($scope);\n  let measureAreaContinueMsg = angular.element(\n    '<span ng-bind-html=\"ctrl.measureAreaContinueMsg\"></span>');\n  measureAreaContinueMsg = $compile(measureAreaContinueMsg)($scope);\n  let measureAzimutContinueMsg = angular.element(\n    '<span ng-bind-html=\"ctrl.measureAzimutContinueMsg\"></span>');\n  measureAzimutContinueMsg = $compile(measureAzimutContinueMsg)($scope);\n\n  // Watch the \"lang\" property and update the toolip messages\n  // based on the selected language.\n  $scope.$watch(() => this.lang, (newVal) => {\n    this.measureStartMsg = measureStartMsgs[newVal];\n    this.measureLengthContinueMsg = measureLengthContinueMsgs[newVal];\n    this.measureAreaContinueMsg = measureAreaContinueMsgs[newVal];\n    this.measureAzimutContinueMsg = measureAzimutContinueMsgs[newVal];\n  });\n\n  const style = new olStyleStyle({\n    fill: new olStyleFill({\n      color: 'rgba(255, 255, 255, 0.2)'\n    }),\n    stroke: new olStyleStroke({\n      color: 'rgba(0, 0, 0, 0.5)',\n      lineDash: [10, 10],\n      width: 2\n    }),\n    image: new olStyleCircle({\n      radius: 5,\n      stroke: new olStyleStroke({\n        color: 'rgba(0, 0, 0, 0.7)'\n      }),\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    })\n  });\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), {\n    sketchStyle: style,\n    startMsg: measureStartMsg[0],\n    continueMsg: measureLengthContinueMsg[0]\n  });\n\n  this.measureLength.setActive(false);\n  ngeoMiscDecorate.interaction(this.measureLength);\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), {\n    sketchStyle: style,\n    startMsg: measureStartMsg[0],\n    continueMsg: measureAreaContinueMsg[0]\n  });\n\n  this.measureArea.setActive(false);\n  ngeoMiscDecorate.interaction(this.measureArea);\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut = new ngeoInteractionMeasureAzimut(\n    $filter('ngeoUnitPrefix'), $filter('ngeoNumber'), {\n      sketchStyle: style,\n      startMsg: measureStartMsg[0],\n      continueMsg: measureAzimutContinueMsg[0]\n    });\n\n  this.measureAzimut.setActive(false);\n  ngeoMiscDecorate.interaction(this.measureAzimut);\n\n\n  // the following code shows how one can add additional information to the\n  // tooltip. This can be useful to display the elevation offset from the\n  // 2 points of an azimut measurement.\n  this.measureAzimut.on('measureend', (evt) => {\n    const el = evt.target.getTooltipElement();\n    el.innerHTML += '<br>Additional info';\n  });\n};\n\napp.module.controller('AppMeasuretoolsController', app.MeasuretoolsController);\n\napp.MeasuretoolsController.prototype.$onInit = function() {\n  this.map.addInteraction(this.measureLength);\n  this.map.addInteraction(this.measureArea);\n  this.map.addInteraction(this.measureAzimut);\n};\n\n/**\n * @constructor\n *//* @ngInject\n */\napp.MainController = function() {\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.lang = 'en';\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [692114.718759744, 5743119.914347709],\n      zoom: 15\n    })\n  });\n\n  this.map.addControl(new olControlScaleLine());\n};\n\n\napp.module.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/measure.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap';\n\nimport olEvents from 'ol/events';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources';\n\nimport olEvents from 'ol/events';\nimport olObservable from 'ol/Observable';\nimport olView from 'ol/View';\nimport googAsserts from 'goog/asserts';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\nngeoBase.module.service(\n  'ngeoSyncDataSourcesMap', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olEvents from 'ol/events';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo';\nimport olArray from 'ol/array';\nimport olMap from 'ol/Map';\nimport olEvents from 'ol/events';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  var multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  var flatCoordinates = this.flatCoordinates;\n  var stride = this.stride;\n  var i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  var n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  var point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  var flatCoordinates = this.flatCoordinates;\n  var layout = this.layout;\n  var stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  var points = [];\n  var i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    var point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  var flatCoordinates = this.flatCoordinates;\n  var stride = this.stride;\n  var i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n        this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nvar OSM = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  var crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  var url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nvar XYZ = function(opt_options) {\n  var options = opt_options || {};\n  var projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  var multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  var lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  var flatCoordinates = this.flatCoordinates;\n  var ends = this.ends_;\n  var layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  var lineStrings = [];\n  var offset = 0;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  var midpoints = [];\n  var flatCoordinates = this.flatCoordinates;\n  var offset = 0;\n  var ends = this.ends_;\n  var stride = this.stride;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var midpoint = _ol_geom_flat_interpolate_.lineString(\n        flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n  var simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n      GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = _ol_geom_flat_deflate_.coordinatess(\n        this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var ends = [];\n  var i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    var lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  var ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    var offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  var multiPolygon = new MultiPolygon(null);\n\n  var len = this.endss_.length;\n  var newEndss = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  var flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n      flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    var flatCenters = _ol_geom_flat_center_.linearRingss(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  var interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n      this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    var flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n  var simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n      GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  var offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    var prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  var ends = this.endss_[index].slice();\n  var end = ends[ends.length - 1];\n  if (offset !== 0) {\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  var polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  var layout = this.layout;\n  var flatCoordinates = this.flatCoordinates;\n  var endss = this.endss_;\n  var polygons = [];\n  var offset = 0;\n  var i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    var polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n        layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = _ol_geom_flat_deflate_.coordinatesss(\n        this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var endss = [];\n  var i, ii, ends;\n  for (i = 0, ii = polygons.length; i < ii; ++i) {\n    var polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    var offset = flatCoordinates.length;\n    ends = polygon.getEnds();\n    var j, jj;\n    for (j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nvar GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  var clonedGeometries = [];\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  var i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  var i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  var geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    _ol_obj_.clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  var key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    var simplifiedGeometries = [];\n    var geometries = this.geometries_;\n    var simplified = false;\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      var geometry = geometries[i];\n      var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      var simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  var anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n      GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 72\n// module chunks = 0 1 2 3 4 5 7 9 10","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport _ol_interaction_Pointer_ from '../interaction/Pointer.js';\nimport _ol_interaction_Property_ from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport _ol_style_Style_ from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nvar Draw = function(options) {\n\n  _ol_interaction_Pointer_.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  var geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        var circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        var squaredLength = _ol_coordinate_.squaredDistance(\n            coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      var Constructor;\n      var mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        var geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction()\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n      BaseObject.getChangeEventType(_ol_interaction_Property_.ACTIVE),\n      this.updateState_, this);\n\n};\n\ninherits(Draw, _ol_interaction_Pointer_);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  var styles = _ol_style_Style_.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  _ol_interaction_Pointer_.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  var pass = true;\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (event.type === MapBrowserEventType.POINTERMOVE) {\n    pass = this.handlePointerMove_(event);\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n  return _ol_interaction_Pointer_.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  var pass = true;\n\n  this.handlePointerMove_(event);\n\n  var circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    var downPx = this.downPx_;\n    var clickPx = event.pixel;\n    var dx = downPx[0] - clickPx[0];\n    var dy = downPx[1] - clickPx[1];\n    var squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  var at = false;\n  if (this.sketchFeature_) {\n    var potentiallyDone = false;\n    var potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      var map = event.map;\n      for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        var finishCoordinate = potentiallyFinishCoordinates[i];\n        var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        var pixel = event.pixel;\n        var dx = pixel[0] - finishPixel[0];\n        var dy = pixel[1] - finishPixel[1];\n        var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  var coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    var sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  var start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n    if (this.mode_ === Draw.Mode_.CIRCLE) {\n      this.sketchLineCoords_ = this.sketchCoords_;\n    }\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n  }\n  var geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  var coordinate = event.coordinate;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    var sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  var sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    var ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  var coordinate = event.coordinate;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var done;\n  var coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  var sketchFeature = this.abortDrawing_();\n  var coordinates = this.sketchCoords_;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  var sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  var geometry = feature.getGeometry();\n  var lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  var sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  var overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  var map = this.getMap();\n  var active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      var center = coordinates[0];\n      var end = coordinates[1];\n      var radius = Math.sqrt(\n          _ol_coordinate_.squaredDistance(center, end));\n      var geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      var angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(coordinates);\n      var geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  var radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  var circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  var flatCoordinates = this.flatCoordinates;\n  var dx = x - flatCoordinates[0];\n  var dy = y - flatCoordinates[1];\n  var squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    var i;\n    if (squaredDistance === 0) {\n      for (i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      var delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  var flatCoordinates = this.flatCoordinates;\n  var dx = x - flatCoordinates[0];\n  var dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  var flatCoordinates = this.flatCoordinates;\n  var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  var circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    var center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  var stride = this.stride;\n  var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  var flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  var i;\n  for (i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = _ol_geom_flat_deflate_.coordinate(\n        flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    var i, ii;\n    for (i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 80\n// module chunks = 0 1 2 6 7 8 9 11 14","/**\n * @module ngeo.interaction.Measure\n*/\nimport ngeoCustomEvent from 'ngeo/CustomEvent';\nimport googAsserts from 'goog/asserts';\nimport olDom from 'ol/dom';\nimport olFeature from 'ol/Feature';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent';\nimport olOverlay from 'ol/Overlay';\nimport olSphere from 'ol/sphere';\nimport olEvents from 'ol/events';\nimport olInteractionInteraction from 'ol/interaction/Interaction';\nimport olLayerVector from 'ol/layer/Vector';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleFill from 'ol/style/Fill';\nimport olStyleStroke from 'ol/style/Stroke';\nimport olStyleStyle from 'ol/style/Style';\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nngeo.interaction.MeasureBaseOptions;\n\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ?\n    options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nol.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\nexports.SPHERE_WGS84 = new olSphere(olProjEPSG4326.RADIUS);\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(\n  polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (\n    polygon.clone().transform(projection, 'EPSG:4326'));\n  const coordinates = geom.getLinearRing(0).getCoordinates();\n  const area = Math.abs(exports.SPHERE_WGS84.geodesicArea(coordinates));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(\n  circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection,\n  precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = ol.proj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = ol.proj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += exports.SPHERE_WGS84.haversineDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(\n  point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  googAsserts.assert(this.changeEventKey_ !== null);\n  googAsserts.assert(this.postcomposeEventKey_ !== null);\n  olEvents.unlistenByKey(this.changeEventKey_);\n  olEvents.unlistenByKey(this.postcomposeEventKey_);\n  this.changeEventKey_ = null;\n  this.postcomposeEventKey_ = null;\n};\n\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js"],"sourceRoot":""}