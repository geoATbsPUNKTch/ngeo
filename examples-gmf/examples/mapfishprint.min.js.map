{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./src/utils.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/format/JSONFeature.js","webpack:///./node_modules/openlayers/src/ol/format/GeoJSON.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/map/LayerHelper.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.prod.js","webpack:///./src/map/module.js","webpack:///./examples/mapfishprint.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/print/Service.js","webpack:///./src/print/VectorEncoder.js","webpack:///./src/print/Utils.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/proj4/package.json"],"names":["__WEBPACK_IMPORTED_MODULE_0__xml_js__","__webpack_require__","XML","prototype","read","source","isDocument","this","readFromDocument","isNode","readFromNode","doc","parse","node","__webpack_exports__","d","DEFAULT_WMS_VERSION","exports","geometry","multiGeom","_MultiPoint2","default","appendPoint","_MultiLineString2","appendLineString","_MultiPolygon2","appendPolygon","navigator","userAgent","indexOf","hex","length","rgb","r","g","b","Error","colorZeroPadding","toString","queryString","queryData","pairs","substring","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","pair","value","indexOfEquals","name","decodeURIComponent","err","return","queryItem","key","push","encodeURIComponent","join","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","XLink","readHref","getAttributeNS","JSONFeature","format_Feature","call","getObject","object","JSON","Object","ol","getType","FormatType","readFeature","opt_options","readFeatureFromObject","getReadOptions","readFeatures","readFeaturesFromObject","readGeometry","readGeometryFromObject","readProjection","readProjectionFromObject","writeFeature","feature","stringify","writeFeatureObject","writeFeatures","features","writeFeaturesObject","writeGeometry","writeGeometryObject","format_JSONFeature","GeoJSON","options","defaultDataProjection","proj","featureProjection","defaultFeatureProjection","geometryName_","geometryName","extractGeometryName_","extractGeometryName","GEOMETRY_READERS","Point","coordinates","LineString","Polygon","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","geometries","map","GEOMETRY_WRITERS","type","getCoordinates","right","rightHanded","getGeometriesArray","obj","assign","Circle","geometryReader","geometryWriter","geoJSONFeature","Feature","setGeometryName","geometry_name","setGeometry","id","setId","properties","setProperties","i","ii","geoJSONFeatures","projection","crs","asserts","adaptOptions","getId","getGeometry","getProperties","getGeometryName","isEmpty","objects","OWS","n","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","owsObject","xml","pushParseAndPop","PARSERS_","readAddress_","objectStack","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","getAttribute","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","XSD","readString","NAMESPACE_URIS_","makeStructureNS","ServiceIdentification","makeObjectPropertySetter","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","_ol_format_WMTSCapabilities_","owsParser_","version","trim","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","style","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","format","template","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","extent","readLegendUrl_","legend","readCoordinates_","x","y","isNaN","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","makeArrayPusher","TileMatrix","MinTileRow","readNonNegativeInteger","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","readDecimal","TileWidth","TileHeight","MatrixWidth","MatrixHeight","_ol_Image_","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","forEach","unlistenByKey","ol_Image","ImageWMS","source_Image","attributions","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","Math","floor","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","listen","CHANGE","handleImageChange","getImageLoadFunction","size","getCode","WMSServerType","dpi","bbox","axisOrientation","getAxisOrientation","substr","uri","appendParams","getUrl","setImageLoadFunction","setUrl","updateParams","string","compareVersions","$q","$http","$q_","$http_","GROUP_KEY","REFRESH_PARAM","createBasicWMSLayer","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","LAYERS","olServerType","replace","_ImageWMS2","serverType","_Image2","createBasicWMSLayerFromDataSource","dataSource","wmsUrl","_asserts2","assert","layerNames","getOGCLayerNames","ogcServerType","imageType","ogcImageType","layer","setVisible","visible","set","createWMTSLayerFromCapabilitites","capabilitiesURL","layerName","opt_dimensions","parser","_WMTSCapabilities2","_Tile2","preload","Infinity","get","cache","then","response","result","data","_WMTS2","optionsFromCapabilities","_obj2","updateDimensions","setSource","layers","l","_array2","find","elt","index","array","resolve","reject","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","createBasicGroup","opt_layers","group","_Group2","setLayers","getGroupFromMap","groupName","getLayerGroup","getLayers","getArray","some","existingGroup","addLayer","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","styles","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","LAYER","_uri2","isLayerVisible","getVisible","currentResolution","getView","getMinResolution","getMaxResolution","refreshWMSLayer","source_","getSource","random","updateWMSLayerState","names","TIME","getQuerySourceIds","module","angular","service","_ngeo2","requires","detail","arguments","_Event2","_ol2","inherits","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","res","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","_ngeo","_classCallCheck","inRange_","inRange","visible_","attributes","id_","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","_Collection2","featureUidToGroupIndex_","groups_","_Vector4","useSpatialIndex","layer_","_Vector2","styleFunction_","bind","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","featureUid","getUid","removeFeature","clear","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","setMap","setStyle","createFunction","condition","opt_message","var_args","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","e","code","ngeo","_module3","app","WMS_URL_","PRINT_URL_","PRINT_SCALES_","PRINT_FORMAT_","PRINT_LAYOUT_","PRINT_DPI_","PRINT_PAPER_SIZE_","MainController","$timeout","ngeoCreatePrint","ngeoPrintUtils","_Map2","_GeoJSON2","view","_View2","zoom","printState","$timeout_","print_","printUtils_","postcomposeListener","createPrintMaskPostcompose","frameState","mapSize","mapResolution","viewState","getOptimalScale","on","print","getSize","viewResolution","layout","spec","createSpec","datasource","debug","comments","title","createReport","handleCreateReportSuccess_","handleCreateReportError_","resp","mfResp","getStatus_","ref","getStatus","handleGetStatusSuccess_","handleGetStatusError_","window","location","getReportUrl","that","controller","_Observable2","mapUids_","item","mapUid","previous","setAt","removeAt","insertAt","event","_CustomEvent2","current","dispatchEvent","dimensions","baseBgLayer","assertInstanceof","_Layer2","hasUpdates","updatedDimensions","refresh","ngeoLayerHelper","ngeoLayerHelper_","vectorEncoder_","_VectorEncoder2","cancel","opt_httpConfig","httpConfig","customAttributes","specMap","rotation","encodeMap_","_this","viewCenter","getCenter","viewProjection","viewRotation","_math2","toDegrees","getRotation","goog","mapLayerGroup","slice","reverse","encodeLayer","arr","encodeImageLayer_","encodeTileLayer_","encodeVectorLayer","encodeImageWmsLayer_","encodeWmsLayer_","getOpacity","opacity","startsWith","protocol","url_url","URL","customParams","searchParams","element","baseURL","getAbsoluteUrl_","origin","pathname","imageFormat","a","document","createElement","encodeURI","decodeURI","encodeTileWmtsLayer_","encodeTileWmsLayer_","_WMTS4","matrixIds","getMatrixIds","matrices","tileRange","getFullTileRange","identifier","scaleDenominator","getMetersPerUnit","_size2","topLeftCorner","getOrigin","matrixSize","maxX","minX","maxY","minY","getDimensions","dimensionKeys","keys","getWmtsUrl_","dimensionParams","getFormat","matrixSet","getMatrixSet","requestEncoding","getRequestEncoding","getStyle","getVersion","_TileWMS2","getUrls","printSpec","headers","Content-Type","post","getCapabilities","withCredentials","createPrintServiceFactory","_LayerHelper2","factory","geojsonFormat","PrintStyleTypes_","PrintStyleType","LINE_STRING","POINT","POLYGON","getFeatures","geojsonFeatures","mapfishStyleObject","originalFeature","styleData","getStyleFunction","origGeojsonFeature","Array","isArray","isOriginalFeatureAdded","j","jj","styleId","geojsonFeature","styledFeature","clone","geometryType","featureStyleProp","encodeVectorStyle","geoJson","styleType","styleObject","symbolizers","fillStyle","getFill","imageStyle","strokeStyle","getStroke","textStyle","getText","encodeVectorStylePolygon_","encodeVectorStyleLine_","encodeVectorStylePoint_","encodeTextStyle_","encodeVectorStyleFill_","symbolizer","fillColor","getColor","_color2","asArray","_utils2","rgbArrayToHex","fillOpacity","encodeVectorStyleStroke_","pointRadius","getRadius","getSrc","externalGraphic","graphicOpacity","getScale","graphicWidth","graphicHeight","points","getPoints","graphicName","sizeShape","rotationShape","opacityShape","strokeShape","fillShape","strokeColor","strokeColorRgba","strokeOpacity","strokeDashstyle","getLineDash","strokeWidth","getWidth","getLineCap","strokeLinecap","label","xAlign","yAlign","olTextAlign","getTextAlign","olTextBaseline","getTextBaseline","labelAlign","labelRotation","PI","fontStyle","getFont","font","fontWeight","fontSize","fontFamily","splice","haloColor","haloOpacity","width","haloRadius","fillColorRgba","fontColor","labelXOffset","getOffsetX","labelYOffset","getOffsetY","extentHalfHorizontalDistance_","extentHalfVerticalDistance_","INCHES_PER_METER_","DOTS_PER_INCH_","opt_rotation","self","evt","context","viewportWidth","viewportHeight","_has2","DEVICE_PIXEL_RATIO","ppi","ipm","extentHalfWidth","extentHalfHeight","beginPath","moveTo","lineTo","closePath","toRadians","drawPrintZoneWithRotation_","drawPrintZone_","fill","minx","miny","maxx","maxy","diagonal","sqrt","pow","gamma","atan","omega","x1","cos","y1","sin","x2","y2","x3","y3","x4","y4","printMapSize","printMapScales","mapWidth","mapHeight","scaleWidth","scaleHeight","min","optimal","getOptimalResolution","printMapScale","dotsPerMeter","resolutionX","resolutionY","max","getBottomLeftCorner","mapCenter","getBottomRightCorner","getUpLeftCorner","getUpRightCorner","directive_","$window","ngeoSyncDataSourcesMap","restrict","link","scope","attrs","prop","$eval","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","_events2","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","target","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","manager","manager_","features_","index_","setFeatures","unlisten","handleFeatureAdd_","handleFeatureRemove_","$scope","$element","$attrs","mapExpr","recenter","attr","fit","setZoom","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","$watch","newVal","oldVal","cancelAnimationFrame","templateUrl","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","newLength","Number","sort","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","_this2","$applyAsync","__WEBPACK_IMPORTED_MODULE_9__math_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","setCoordinates","__WEBPACK_IMPORTED_MODULE_0__index_js__","point","flatCoordinates","__WEBPACK_IMPORTED_MODULE_1__array_js__","getFlatCoordinates","multiPoint","setFlatCoordinates","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","stride","squaredDistance","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_POINT","intersectsExtent","setLayout","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XY","setFlatCoordinatesInternal","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","ends_","maxDelta_","maxDeltaRevision_","lineString","multiLineString","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","m","opt_extrapolate","opt_interpolate","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","ends","lineStrings","offset","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","MULTI_LINE_STRING","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","polygon","multiPolygon","len","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","endss","polygons","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","__WEBPACK_IMPORTED_MODULE_6__obj_js__","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getGeometries","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","GEOMETRY_COLLECTION","rotate","angle","anchor","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","proj4","projCodes","defs","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","transform","forward","inverse","phy0","lat0","lambda0","long0","sinPhy0","semiMajorAxis","flattening","rf","e2","R","k0","alpha","b0","asin","k1","log","tan","k2","k3","K","p","Sa1","Sa2","S","exp","I","rotI","rotB","y0","x0","Y","X","lambda","phy","prevPhy","iteration","abs","__WEBPACK_IMPORTED_MODULE_1__string_js__","readBoolean","s","getAllTextContent","readBooleanString","exec","readDateTime","dateTime","readDecimalString","parseFloat","readNonNegativeIntegerString","parseInt","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","_proj4","epsg21781def","_proj2","setExtent","_proj6","setProj4","Proj","projections","add","_somerc2","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","ft","us-ft","ignoredChar","match","testkey","lkey","toLowerCase","projString","defData","paramName","paramVal","paramOutname","paramObj","v","filter","reduce","datum","lat_0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","lon_1","long1","lon_2","long2","lonc","longc","x_0","y_0","k_0","k","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","legalAxis","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","text","level","place","root","stack","currentObject","mapit","unshift","thing","out","newObj","sExpr","shift","convert","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","wkt_parser_D2R","d2r","input","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","charAt","apply","EPSG","ESRI","IAU2000","console","WGS84","GOOGLE","lib_defs","codeWords","parseCode","extend","destination","property","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","tsfnz","phi","com","phi2z","ts","dphi","eccnth","identity","pt","projs","es","lon","lat","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","callback","error","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","checkParams","datum_transform","dest","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","Z","atan2","geocentricToGeodetic","adjust_axis","denorm","t","xin","yin","zin","toPoint","checkSanity","checkCoord","num","TypeError","core_wgs84","transformer","from","to","coords","transformedArray","checkProj","oProj","core","fromProj","toProj","coord","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","O","mgrs_V","mgrs_Z","mgrs","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","top","mgrs_toPoint","ll","accuracy","utm","eccPrimeSquared","N","T","C","A","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","northing","easting","zoneNumber","zoneLetter","LetterDesignator","getLetterDesignator","LLtoUTM","seasting","snorthing","setParm","get100kSetForZone","setColumn","setRow","column","row","colOrigin","charCodeAt","rowOrigin","rowInt","rollover","colInt","String","fromCharCode","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","warn","fromMGRS","mgrsStr","toMGRS","lib_Point","C06","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","ds","f","temp","h","sinh","hypot","asinhy","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","krovak","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","APA","mode","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","somerc","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","homepage","license","main","repository","scripts","build","build:tmerc"],"mappings":"oGAAA,IAAAA,EAAAC,EAAA,IAaAC,EAAA,aAQAA,EAAAC,UAAAC,KAAA,SAAAC,GACA,GAAAL,EAAA,QAAAM,WAAAD,GACA,OAAAE,KAAAC,iBAAqD,GAClD,GAAAR,EAAA,QAAAS,OAAAJ,GACH,OAAAE,KAAAG,aAA6C,GAC1C,oBAAAL,EAAA,CACH,IAAAM,EAAAX,EAAA,QAAAY,MAAAP,GACA,OAAAE,KAAAC,iBAAAG,GAEA,aAUAT,EAAAC,UAAAK,iBAAA,SAAAG,KAQAT,EAAAC,UAAAO,aAAA,SAAAG,KACAC,EAAA,2CCjDAb,EAAAc,EAAAD,EAAA,sBAAAE,IAGA,IAAAA,EAAA,2FCCA,QAAAf,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,wDANA,IAAMgB,GAeNA,QAAkB,SAASC,GACzB,IAAIC,SAaJ,OAZID,wBACFC,EAAY,IAAAC,EAAAC,aACFC,YAAYJ,GACbA,wBACTC,EAAY,IAAAI,EAAAF,aACFG,iBAAiBN,GAClBA,wBACTC,EAAY,IAAAM,EAAAJ,aACFK,cAAcR,GAExBC,EAAYD,EAEPC,GAOTF,SAAmB,WACjB,OAAiD,GAA1CU,UAAUC,UAAUC,QAAQ,YAA6D,GAA1CF,UAAUC,UAAUC,QAAQ,WASpFZ,iBAA2B,SAASa,GAClC,OAAqB,GAAdA,EAAIC,OAAJ,IAAsBD,EAAQA,GAQvCb,cAAwB,SAASe,GAC/B,IAAMC,EAAID,EAAI,GACRE,EAAIF,EAAI,GACRG,EAAIH,EAAI,GACd,GAAIC,IAAU,IAAJA,IAAYC,IAAU,IAAJA,IAAYC,IAAU,IAAJA,GAC5C,MAAMC,WAAWH,EAAX,IAAgBC,EAAhB,IAAqBC,EAArB,+BAKR,UAHalB,EAAQoB,iBAAiBJ,EAAEK,SAAS,KACpCrB,EAAQoB,iBAAiBH,EAAEI,SAAS,KACpCrB,EAAQoB,iBAAiBF,EAAEG,SAAS,MASnDrB,kBAA4B,SAASsB,GACnC,IAAMC,KACN,GAAID,EAAa,CACf,IAAME,EAAQF,EAAYG,UAAU,GAAGC,MAAM,KAD9BC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAEf,QAAAC,EAAAC,EAAmBR,EAAnBS,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAA0B,KAAfU,EAAeN,EAAAO,MAClBC,EAAgBF,EAAKzB,QAAQ,KACnC,GAAI2B,GAAiB,EAAG,CACtB,IAAMC,EAAOH,EAAKZ,UAAU,EAAGc,GACzBD,EAAQD,EAAKZ,UAAUc,EAAgB,GAC7ChB,EAAUkB,mBAAmBD,IAASC,mBAAmBH,QAEzDf,EAAUc,GAAQ,IATP,MAAAK,GAAAd,GAAA,EAAAC,EAAAa,EAAA,aAAAf,GAAAK,EAAAW,QAAAX,EAAAW,SAAA,WAAAf,EAAA,MAAAC,IAajB,OAAON,GAQTvB,kBAA4B,SAASuB,GACnC,IAAMqB,KACN,IAAK,IAAMC,KAAOtB,EAAW,CAC3B,IAAMe,EAAQf,EAAUsB,GACpBP,EACFM,EAAUE,KAAQC,mBAAmBF,GAArC,IAA6CE,mBAAmBT,IAEhEM,EAAUE,KAAKC,mBAAmBF,IAGtC,OAAOD,EAAUI,KAAK,iBAIThD,mCCvGfH,EAAA,GACAoD,gBAAA,iBACAC,UAAA,YACAC,UAAA,YACAC,KAAA,0CCXA,IAAAC,KAcAA,EAAAC,SAAA,SAAA1D,GACA,OAAAA,EAAA2D,eARA,+BAQA,SAEA1D,EAAA,mICHA2D,EAAA,WACAC,EAAA,EAAAC,KAAApE,OAUA,SAAAqE,EAAAvE,GACA,oBAAAA,EAAA,CACA,IAAAwE,EAAAC,KAAAlE,MAAAP,GACA,OAAAwE,GAAsC,KACnC,cAAAxE,EACHA,EAEA,KAdA0E,OAAAC,EAAA,SAAAD,CAAAN,EAAAC,EAAA,GAsBAD,EAAAtE,UAAA8E,QAAA,WACA,OAAAC,EAAA,EAAAJ,MAOAL,EAAAtE,UAAAgF,YAAA,SAAA9E,EAAA+E,GACA,OAAA7E,KAAA8E,sBACAT,EAAAvE,GAAAE,KAAA+E,eAAAjF,EAAA+E,KAOAX,EAAAtE,UAAAoF,aAAA,SAAAlF,EAAA+E,GACA,OAAA7E,KAAAiF,uBACAZ,EAAAvE,GAAAE,KAAA+E,eAAAjF,EAAA+E,KAWAX,EAAAtE,UAAAkF,sBAAA,SAAAR,EAAAO,KAUAX,EAAAtE,UAAAqF,uBAAA,SAAAX,EAAAO,KAMAX,EAAAtE,UAAAsF,aAAA,SAAApF,EAAA+E,GACA,OAAA7E,KAAAmF,uBACAd,EAAAvE,GAAAE,KAAA+E,eAAAjF,EAAA+E,KAWAX,EAAAtE,UAAAuF,uBAAA,SAAAb,EAAAO,KAMAX,EAAAtE,UAAAwF,eAAA,SAAAtF,GACA,OAAAE,KAAAqF,yBAAAhB,EAAAvE,KAUAoE,EAAAtE,UAAAyF,yBAAA,SAAAf,KAMAJ,EAAAtE,UAAA0F,aAAA,SAAAC,EAAAV,GACA,OAAAN,KAAAiB,UAAAxF,KAAAyF,mBAAAF,EAAAV,KAUAX,EAAAtE,UAAA6F,mBAAA,SAAAF,EAAAV,KAMAX,EAAAtE,UAAA8F,cAAA,SAAAC,EAAAd,GACA,OAAAN,KAAAiB,UAAAxF,KAAA4F,oBAAAD,EAAAd,KAUAX,EAAAtE,UAAAgG,oBAAA,SAAAD,EAAAd,KAMAX,EAAAtE,UAAAiG,cAAA,SAAAlF,EAAAkE,GACA,OAAAN,KAAAiB,UAAAxF,KAAA8F,oBAAAnF,EAAAkE,KAUAX,EAAAtE,UAAAkG,oBAAA,SAAAnF,EAAAkE,KACA,IAAAkB,EAAA,wEC7IAC,EAAA,SAAAnB,GAEA,IAAAoB,EAAApB,MAEAkB,EAAA3B,KAAApE,MAKAA,KAAAkG,sBAAA1B,OAAA2B,EAAA,IAAA3B,CACAyB,EAAAC,sBACAD,EAAAC,sBAAA,aAGAD,EAAAG,oBACApG,KAAAqG,yBAAA7B,OAAA2B,EAAA,IAAA3B,CAAAyB,EAAAG,oBAQApG,KAAAsG,cAAAL,EAAAM,aAOAvG,KAAAwG,qBAAAP,EAAAQ,qBAIAjC,OAAAC,EAAA,SAAAD,CAAAwB,EAAAD,GAOA,IAAAW,GACAC,MAiEA,SAAArC,GACA,WAAAqC,EAAA,QAAArC,EAAAsC,cAjEAC,WAyEA,SAAAvC,GACA,WAAAuC,EAAA,QAAAvC,EAAAsC,cAzEAE,QA4GA,SAAAxC,GACA,WAAAwC,EAAA,QAAAxC,EAAAsC,cA5GAG,WAyFA,SAAAzC,GACA,WAAAyC,EAAA,QAAAzC,EAAAsC,cAzFAI,gBA+EA,SAAA1C,GACA,WAAA0C,EAAA,QAAA1C,EAAAsC,cA/EAK,aAgGA,SAAA3C,GACA,WAAA2C,EAAA,QAAA3C,EAAAsC,cAhGAM,mBA0CA,SAAA5C,EAAAO,GACA,IAAAsC,EAAA7C,EAAA6C,WAAAC,IAKA,SAAAzG,GACA,OAAAuE,EAAAvE,EAAAkE,KAEA,WAAAqC,EAAA,QAAAC,KA3CAE,GACAV,MA2MA,SAAAhG,EAAAkE,GACA,OACAyC,KAAA,QACAV,YAAAjG,EAAA4G,mBA7MAV,WAkJA,SAAAlG,EAAAkE,GACA,OACAyC,KAAA,aACAV,YAAAjG,EAAA4G,mBApJAT,QAsNA,SAAAnG,EAAAkE,GACA,IAAA2C,EACA3C,IACA2C,EAAA3C,EAAA4C,aAEA,OACAH,KAAA,UACAV,YAAAjG,EAAA4G,eAAAC,KA5NAT,WA0KA,SAAApG,EAAAkE,GACA,OACAyC,KAAA,aACAV,YAAAjG,EAAA4G,mBA5KAP,gBA4JA,SAAArG,EAAAkE,GACA,OACAyC,KAAA,kBACAV,YAAAjG,EAAA4G,mBA9JAN,aAqLA,SAAAtG,EAAAkE,GACA,IAAA2C,EACA3C,IACA2C,EAAA3C,EAAA4C,aAEA,OACAH,KAAA,eACAV,YAAAjG,EAAA4G,eAAAC,KA3LAN,mBA2HA,SAAAvG,EAAAkE,GAMA,OACAyC,KAAA,qBACAH,WAPAxG,EAAA+G,qBAAAN,IAAA,SAAAzG,GACA,IAAAsF,EAAA0B,EAAA,QAAAC,UAAoC/C,GAEpC,cADAoB,EAAAG,kBACAP,EAAAlF,EAAAsF,OA9HA4B,OA6GA,SAAAlH,GACA,OACA2G,KAAA,qBACAH,iBAvGA,SAAAjC,EAAAZ,EAAAO,GACA,IAAAP,EACA,YAEA,IAAAwD,EAAApB,EAAApC,EAAAgD,MACA,OACgC9C,OAAAL,EAAA,EADhC,CAEA2D,EAAAxD,IAAA,EAAAO,GAkFA,SAAAgB,EAAAlF,EAAAkE,GAEA,OAAAkD,EADAV,EAAA1G,EAAA+D,YAEAF,OAAAL,EAAA,EADoD,CACpDxD,GAAA,EAAAkE,MAoIAmB,EAAApG,UAAAgF,YAcAoB,EAAApG,UAAAoF,aAMAgB,EAAApG,UAAAkF,sBAAA,SAAAR,EAAAO,GAIA,IAAAmD,EAAA,KAUArH,EAAAuE,GARA8C,EADA,YAAA1D,EAAAgD,KAC+C,GAG/CA,KAAA,UACA3G,SAAqE,IAIrEA,SAAAkE,GACAU,EAAA,IAAA0C,EAAA,QAaA,OAZAjI,KAAAsG,cACAf,EAAA2C,gBAAAlI,KAAAsG,eACGtG,KAAAwG,2BAAAhE,IAAAwF,EAAAG,eACH5C,EAAA2C,gBAAAF,EAAAG,eAEA5C,EAAA6C,YAAAzH,QACA6B,IAAAwF,EAAAK,IACA9C,EAAA+C,MAAAN,EAAAK,IAEAL,EAAAO,YACAhD,EAAAiD,cAAAR,EAAAO,YAEAhD,GAOAS,EAAApG,UAAAqF,uBAAA,SAAAX,EAAAO,GACA,IAEAc,EAAA,KACA,yBAH+C,EAG/C2B,KAAA,CAGA3B,KACA,IACA8C,EAAAC,EADAC,EAFA,EAEAhD,SAEA,IAAA8C,EAAA,EAAAC,EAAAC,EAAAnH,OAA4CiH,EAAAC,IAAQD,EACpD9C,EAAAnC,KAAAxD,KAAA8E,sBAAA6D,EAAAF,GACA5D,SAGAc,GAAA3F,KAAA8E,sBAAAR,EAAAO,IAEA,OAAAc,GAaAK,EAAApG,UAAAsF,aAMAc,EAAApG,UAAAuF,uBAAA,SAAAb,EAAAO,GACA,OAAAK,EAAiD,EAAAL,IAYjDmB,EAAApG,UAAAwF,eAMAY,EAAApG,UAAAyF,yBAAA,SAAAf,GACA,IAEAsE,EADAC,EAD+C,EAC/CA,IAWA,OATAA,EACA,QAAAA,EAAAvB,KACAsB,EAAApE,OAAA2B,EAAA,IAAA3B,CAAAqE,EAAAN,WAAArF,MAEAsB,OAAAsE,EAAA,EAAAtE,EAAA,MAGAoE,EAAA5I,KAAAkG,sBAEuC,GAcvCF,EAAApG,UAAA0F,aAYAU,EAAApG,UAAA6F,mBAAA,SAAAF,EAAAV,GACAA,EAAA7E,KAAA+I,aAAAlE,GAEA,IAAAP,GACAgD,KAAA,WAEAe,EAAA9C,EAAAyD,aACAxG,IAAA6F,IACA/D,EAAA+D,MAEA,IAAA1H,EAAA4E,EAAA0D,cAEA3E,EAAA3D,SADAA,EACAkF,EAAAlF,EAAAkE,GAEA,KAEA,IAAA0D,EAAAhD,EAAA2D,gBAOA,cANAX,EAAAhD,EAAA4D,mBACAxB,EAAA,QAAAyB,QAAAb,GAGAjE,EAAAiE,WAAA,KAFAjE,EAAAiE,aAIAjE,GAaA0B,EAAApG,UAAA8F,cAYAM,EAAApG,UAAAgG,oBAAA,SAAAD,EAAAd,GACAA,EAAA7E,KAAA+I,aAAAlE,GACA,IACA4D,EAAAC,EADAW,KAEA,IAAAZ,EAAA,EAAAC,EAAA/C,EAAAnE,OAAmCiH,EAAAC,IAAQD,EAC3CY,EAAA7F,KAAAxD,KAAAyF,mBAAAE,EAAA8C,GAAA5D,IAEA,OACAyC,KAAA,oBACA3B,SAAA0D,IAcArD,EAAApG,UAAAiG,cAYAG,EAAApG,UAAAkG,oBAAA,SAAAnF,EAAAkE,GACA,OAAAgB,EAAAlF,EAAAX,KAAA+I,aAAAlE,KAEAtE,EAAA,iJCriBA+I,EAAA,WACA3J,EAAA,QAAAyE,KAAApE,OAGAwE,OAAAC,EAAA,SAAAD,CAAA8E,EAAA3J,EAAA,SAMA2J,EAAA1J,UAAAK,iBAAA,SAAAG,GACA,QAAAmJ,EAAAnJ,EAAAoJ,WAA8BD,EAAGA,IAAAE,YACjC,GAAAF,EAAAG,UAAAC,KAAAC,aACA,OAAA5J,KAAAG,aAAAoJ,GAGA,aAOAD,EAAA1J,UAAAO,aAAA,SAAAG,GACA,IAAAuJ,EAAAC,EAAA,QAAAC,mBACAT,EAAAU,SAAA1J,MACA,OAAAuJ,GAAA,MAUAP,EAAAW,aAAA,SAAA3J,EAAA4J,GACA,OAAAJ,EAAA,QAAAC,mBACAT,EAAAa,iBAAA7J,EAAA4J,IAUAZ,EAAAc,mBAAA,SAAA9J,EAAA4J,GACA,OAAAJ,EAAA,QAAAC,mBACAT,EAAAe,wBAAA/J,EAAA4J,IAUAZ,EAAAgB,gBAAA,SAAAhK,EAAA4J,GACA,IAAAhH,EAAA5C,EAAAiK,aAAA,QACA,GAAArH,EAGA,OAAA4G,EAAA,QAAAC,iBAAmC7G,QACnCoG,EAAAkB,oBAAAlK,EACA4J,IAUAZ,EAAAmB,iBAAA,SAAAnK,EAAA4J,GACA,OAAAJ,EAAA,QAAAC,mBACAT,EAAAoB,sBAAApK,EAAA4J,IAUAZ,EAAAqB,SAAA,SAAArK,EAAA4J,GACA,OAAAJ,EAAA,QAAAC,mBACAT,EAAAsB,aAAAtK,EAAA4J,IAUAZ,EAAAuB,SAAA,SAAAvK,EAAA4J,GACA,IAAAY,EAAA/G,EAAA,EAAAC,SAAA1D,GACA,GAAAwK,EAGA,OAAAhB,EAAA,QAAAC,iBAAmCe,QACnCxB,EAAAyB,wBAAAzK,EAAA4J,IAUAZ,EAAA0B,UAAA,SAAA1K,EAAA4J,GACA,OAAAJ,EAAA,QAAAC,mBAAoCT,EAAA2B,cACpC3K,EAAA4J,IAUAZ,EAAA4B,eAAA,SAAA5K,EAAA4J,GACA,IAAAhH,EAAA5C,EAAAiK,aAAA,QACAvH,EAAA8G,EAAA,QAAAC,mBACAT,EAAA6B,mBAAA7K,EAAA4J,GACAlH,IAIAkH,IAAA1I,OAAA,GACA0B,GAAAF,IAUAsG,EAAA8B,wBAAA,SAAA9K,EACA4J,GACA,OAAAJ,EAAA,QAAAC,mBACAT,EAAA+B,6BAAA/K,EACA4J,IAUAZ,EAAAgC,WAAA,SAAAhL,EAAA4J,GACA,OAAAJ,EAAA,QAAAC,mBACAT,EAAAiC,eAAAjL,EAAA4J,IAUAZ,EAAAkC,2BAAA,SAAAlL,EACA4J,GACA,OAAAJ,EAAA,QAAAC,mBACQT,EAAAmC,gCAAAnL,EACR4J,IAUAZ,EAAAoC,oBAAA,SAAApL,EAAA4J,GACA,OAAAJ,EAAA,QAAAC,mBACQT,EAAAqC,yBAAArL,EACR4J,IAUAZ,EAAAsC,qBAAA,SAAAtL,EAAA4J,GACA,OAAAJ,EAAA,QAAAC,mBACQT,EAAAuC,0BAAAvL,EACR4J,IAUAZ,EAAAwC,WAAA,SAAAxL,EAAA4J,GACA,OAAA6B,EAAA,EAAAC,WAAA1L,IASAgJ,EAAA2C,iBACA,KACA,kCASA3C,EAAAU,SAAAF,EAAA,QAAAoC,gBACA5C,EAAA2C,iBACAE,sBAAArC,EAAA,QAAAsC,yBACA9C,EAAAkC,4BACAa,gBAAAvC,EAAA,QAAAsC,yBACA9C,EAAAsC,sBACAU,mBAAAxC,EAAA,QAAAsC,yBACA9C,EAAA8B,2BASA9B,EAAAa,iBAAAL,EAAA,QAAAoC,gBACA5C,EAAA2C,iBACAM,cAAAzC,EAAA,QAAAsC,yBACAL,EAAA,EAAAC,YACAQ,KAAA1C,EAAA,QAAAsC,yBAAAL,EAAA,EAAAC,YACAS,mBAAA3C,EAAA,QAAAsC,yBACAL,EAAA,EAAAC,YACAU,WAAA5C,EAAA,QAAAsC,yBAAAL,EAAA,EAAAC,YACAW,QAAA7C,EAAA,QAAAsC,yBAAAL,EAAA,EAAAC,YACAY,sBAAA9C,EAAA,QAAAsC,yBACAL,EAAA,EAAAC,cASA1C,EAAAe,wBAAAP,EAAA,QAAAoC,gBACA5C,EAAA2C,iBACAY,MAAA/C,EAAA,QAAAgD,yBAAAxD,EAAAwC,cASAxC,EAAAkB,oBAAAV,EAAA,QAAAoC,gBACA5C,EAAA2C,iBACAc,cAAAjD,EAAA,QAAAsC,yBACA9C,EAAAc,sBASAd,EAAAoB,sBAAAZ,EAAA,QAAAoC,gBACA5C,EAAA2C,iBACAe,MAAAlD,EAAA,QAAAsC,yBAAA9C,EAAAgC,YACA2B,QAAAnD,EAAA,QAAAsC,yBAAA9C,EAAAW,gBASAX,EAAAsB,aAAAd,EAAA,QAAAoC,gBACA5C,EAAA2C,iBACAiB,KAAApD,EAAA,QAAAsC,yBAAA9C,EAAA0B,aASA1B,EAAA2B,cAAAnB,EAAA,QAAAoC,gBACA5C,EAAA2C,iBACAkB,IAAArD,EAAA,QAAAgD,yBAAAxD,EAAAuB,UACAuC,UAAA5K,IASA8G,EAAA6B,mBAAArB,EAAA,QAAAoC,gBACA5C,EAAA2C,iBACAoB,IAAAvD,EAAA,QAAAsC,yBAAA9C,EAAAqB,YASArB,EAAA+B,6BAAAvB,EAAA,QAAAoC,gBACA5C,EAAA2C,iBACAqB,UAAAhE,EAAA4B,iBASA5B,EAAAiC,eAAAzB,EAAA,QAAAoC,gBACA5C,EAAA2C,iBACAsB,MAAAzD,EAAA,QAAAsC,yBAAAL,EAAA,EAAAC,YACAwB,UAAA1D,EAAA,QAAAsC,yBAAAL,EAAA,EAAAC,cASA1C,EAAAyB,wBAAAjB,EAAA,QAAAoC,gBACA5C,EAAA2C,iBACAwB,WAAA3D,EAAA,QAAAgD,yBACAxD,EAAAgB,mBASAhB,EAAAqC,yBACA7B,EAAA,QAAAoC,gBACA5C,EAAA2C,iBACAyB,eAAA5D,EAAA,QAAAsC,yBACAL,EAAA,EAAAC,YACA2B,aAAA7D,EAAA,QAAAsC,yBAAAL,EAAA,EAAAC,YACA4B,YAAA9D,EAAA,QAAAsC,yBACA9C,EAAAmB,oBASAnB,EAAAmC,gCACA3B,EAAA,QAAAoC,gBACA5C,EAAA2C,iBACA4B,SAAA/D,EAAA,QAAAsC,yBAAAL,EAAA,EAAAC,YACA8B,kBAAAhE,EAAA,QAAAsC,yBAAAL,EAAA,EAAAC,YACA+B,KAAAjE,EAAA,QAAAsC,yBAAAL,EAAA,EAAAC,YACAgC,MAAAlE,EAAA,QAAAsC,yBAAAL,EAAA,EAAAC,YACAiC,mBAAAnE,EAAA,QAAAsC,yBACAL,EAAA,EAAAC,YACAkC,YAAApE,EAAA,QAAAsC,yBAAAL,EAAA,EAAAC,cASA1C,EAAAuC,0BACA/B,EAAA,QAAAoC,gBACA5C,EAAA2C,iBACAkC,aAAArE,EAAA,QAAAsC,yBAAAL,EAAA,EAAAC,YACAoC,aAAAtE,EAAA,QAAAsC,yBAAArI,EAAA,EAAAC,UACAqK,eAAAvE,EAAA,QAAAsC,yBACA9C,EAAAoC,uBAEA,IAAA4C,EAAA,EC1ZAC,EAAA,WACA5O,EAAA,QAAAyE,KAAApE,MAMAA,KAAAwO,WAAA,IAAAF,GAGA9J,OAAAC,EAAA,SAAAD,CAAA+J,EAAA5O,EAAA,SAWA4O,EAAA3O,UAAAC,KAMA0O,EAAA3O,UAAAK,iBAAA,SAAAG,GACA,QAAAmJ,EAAAnJ,EAAAoJ,WAA8BD,EAAGA,IAAAE,YACjC,GAAAF,EAAAG,UAAAC,KAAAC,aACA,OAAA5J,KAAAG,aAAAoJ,GAGA,aAOAgF,EAAA3O,UAAAO,aAAA,SAAAG,GACA,IAAAmO,EAAAnO,EAAAiK,aAAA,WAAAmE,OACAC,EAAA3O,KAAAwO,WAAArO,aAAAG,GACA,OAAAqO,GAGAA,EAAA,QAAAF,GACAE,EAAA7E,EAAA,QAAAC,gBAAA4E,EACAJ,EAAAvE,SAAA1J,QACA,MALA,MAeAiO,EAAAK,cAAA,SAAAtO,EAAA4J,GACA,OAAAJ,EAAA,QAAAC,mBACAwE,EAAAM,kBAAAvO,EAAA4J,IAUAqE,EAAAO,WAAA,SAAAxO,EAAA4J,GACA,OAAAJ,EAAA,QAAAC,mBACAwE,EAAAQ,eAAAzO,EAAA4J,IAUAqE,EAAAS,mBAAA,SAAA1O,EAAA4J,GACA,OAAAJ,EAAA,QAAAC,mBACAwE,EAAAU,aAAA3O,EAAA4J,IAUAqE,EAAAW,WAAA,SAAA5O,EAAA4J,GACA,IAAAiF,EAAArF,EAAA,QAAAC,mBACAwE,EAAAa,eAAA9O,EAAA4J,GACA,GAAAiF,EAAA,CAGA,IAAAE,EAAA,SAAA/O,EAAAiK,aAAA,aAEA,OADA4E,EAAA,UAAAE,EACAF,IAWAZ,EAAAe,uBAAA,SAAAhP,EACA4J,GACA,OAAAJ,EAAA,QAAAC,mBACAwE,EAAAgB,mBAAAjP,EAAA4J,IAUAqE,EAAAiB,gBAAA,SAAAlP,EAAA4J,GACA,OAAAJ,EAAA,QAAAC,mBACAwE,EAAAkB,mBAAAnP,EAAA4J,IAUAqE,EAAAmB,iBAAA,SAAApP,EAAA4J,GACA,IAAAyF,EAAArP,EAAAiK,aAAA,UACAqF,EAAAtP,EAAAiK,aAAA,YACAsF,EAAAvP,EAAAiK,aAAA,gBACAuF,KAUA,OATAH,IACAG,EAAA,OAAAH,GAEAC,IACAE,EAAA,SAAAF,GAEAC,IACAC,EAAA,aAAAD,GAEAC,GAUAvB,EAAAwB,sBAAA,SAAAzP,EAAA4J,GACA,IAAAtD,EAAAkD,EAAA,QAAAC,mBACAwE,EAAAyB,oBAAA1P,EAAA4J,GACA,MAAAtD,EAAApF,OAGA,OAAAgD,OAAAyL,EAAA,eAAAzL,CAAAoC,IAUA2H,EAAA2B,eAAA,SAAA5P,EAAA4J,GACA,IAAAiG,KAGA,OAFAA,EAAA,OAAA7P,EAAAiK,aAAA,UACA4F,EAAA,KAAApM,EAAA,EAAAC,SAAA1D,GACA6P,GAUA5B,EAAA6B,iBAAA,SAAA9P,EAAA4J,GACA,IAAAtD,EAAAmF,EAAA,EAAAC,WAAA1L,GAAA8B,MAAA,KACA,GAAAwE,GAAA,GAAAA,EAAApF,OAAA,CAGA,IAAA6O,GAAAzJ,EAAA,GACA0J,GAAA1J,EAAA,GACA,IAAA2J,MAAAF,KAAAE,MAAAD,GAGA,OAAAD,EAAAC,KAUA/B,EAAAiC,gBAAA,SAAAlQ,EAAA4J,GACA,OAAAJ,EAAA,QAAAC,mBACAwE,EAAAkC,YAAAnQ,EAAA4J,IAUAqE,EAAAmC,0BAAA,SAAApQ,EACA4J,GACA,OAAAJ,EAAA,QAAAC,mBACAwE,EAAAoC,yBAAArQ,EACA4J,IAUAqE,EAAAqC,sBAAA,SAAAtQ,EAAA4J,GACA,OAAAJ,EAAA,QAAAC,mBACAwE,EAAAsC,oBAAAvQ,EAAA4J,IASAqE,EAAAtC,iBACA,KACA,mCASAsC,EAAAuC,qBACA,KACA,kCASAvC,EAAAvE,SAAAF,EAAA,QAAAoC,gBACAqC,EAAAtC,iBACA8E,SAAAjH,EAAA,QAAAsC,yBACAmC,EAAAK,iBASAL,EAAAM,kBAAA/E,EAAA,QAAAoC,gBACAqC,EAAAtC,iBACA+E,MAAAlH,EAAA,QAAAgD,yBACAyB,EAAAO,YACAmC,cAAAnH,EAAA,QAAAgD,yBACAyB,EAAAS,sBASAT,EAAAQ,eAAAjF,EAAA,QAAAoC,gBACAqC,EAAAtC,iBACAiF,MAAApH,EAAA,QAAAgD,yBACAyB,EAAAW,YACAiC,OAAArH,EAAA,QAAAgD,yBACAf,EAAA,EAAAC,YACAoF,kBAAAtH,EAAA,QAAAgD,yBACAyB,EAAAe,wBACA+B,UAAAvH,EAAA,QAAAgD,yBACAyB,EAAAiB,iBACA8B,YAAAxH,EAAA,QAAAgD,yBACAyB,EAAAmB,mBACK5F,EAAA,QAAAoC,gBAAAqC,EAAAuC,qBACL9C,MAAAlE,EAAA,QAAAsC,yBACAL,EAAA,EAAAC,YACA6B,SAAA/D,EAAA,QAAAsC,yBACAL,EAAA,EAAAC,YACAuF,iBAAAzH,EAAA,QAAAsC,yBACAmC,EAAAwB,uBACAyB,WAAA1H,EAAA,QAAAsC,yBACAL,EAAA,EAAAC,eASAuC,EAAAa,eAAAtF,EAAA,QAAAoC,gBACAqC,EAAAtC,iBACAwF,UAAA3H,EAAA,QAAAgD,yBACAyB,EAAA2B,iBACKpG,EAAA,QAAAoC,gBAAAqC,EAAAuC,qBACL9C,MAAAlE,EAAA,QAAAsC,yBACAL,EAAA,EAAAC,YACAwF,WAAA1H,EAAA,QAAAsC,yBACAL,EAAA,EAAAC,eASAuC,EAAAgB,mBAAAzF,EAAA,QAAAoC,gBACAqC,EAAAtC,iBACAgF,cAAAnH,EAAA,QAAAsC,yBACAL,EAAA,EAAAC,YACA0F,oBAAA5H,EAAA,QAAAsC,yBACAmC,EAAAmC,6BAQAnC,EAAAoC,yBAAA7G,EAAA,QAAAoC,gBACAqC,EAAAtC,iBACA0F,iBAAA7H,EAAA,QAAA8H,gBACArD,EAAAqC,yBASArC,EAAAsC,oBAAA/G,EAAA,QAAAoC,gBACAqC,EAAAtC,iBACA4F,WAAA/H,EAAA,QAAAsC,yBACAL,EAAA,EAAAC,YACA8F,WAAAhI,EAAA,QAAAsC,yBACAL,EAAA,EAAAgG,wBACAC,WAAAlI,EAAA,QAAAsC,yBACAL,EAAA,EAAAgG,wBACAE,WAAAnI,EAAA,QAAAsC,yBACAL,EAAA,EAAAgG,wBACAG,WAAApI,EAAA,QAAAsC,yBACAL,EAAA,EAAAgG,0BASAxD,EAAAkB,mBAAA3F,EAAA,QAAAoC,gBACAqC,EAAAtC,iBACAkG,QAAArI,EAAA,QAAAsC,yBACAL,EAAA,EAAAC,YACAa,MAAA/C,EAAA,QAAAgD,yBACAf,EAAA,EAAAC,aACKlC,EAAA,QAAAoC,gBAAAqC,EAAAuC,qBACLU,WAAA1H,EAAA,QAAAsC,yBACAL,EAAA,EAAAC,eASAuC,EAAAyB,oBAAAlG,EAAA,QAAAoC,gBACAqC,EAAAuC,qBACAsB,YAAAtI,EAAA,QAAA8H,gBACArD,EAAA6B,kBACAiC,YAAAvI,EAAA,QAAA8H,gBACArD,EAAA6B,oBASA7B,EAAAU,aAAAnF,EAAA,QAAAoC,gBACAqC,EAAAtC,iBACAqG,kBAAAxI,EAAA,QAAAsC,yBACAL,EAAA,EAAAC,YACA6F,WAAA/H,EAAA,QAAAgD,yBACAyB,EAAAiC,kBACK1G,EAAA,QAAAoC,gBAAAqC,EAAAuC,qBACLyB,aAAAzI,EAAA,QAAAsC,yBACAL,EAAA,EAAAC,YACAwF,WAAA1H,EAAA,QAAAsC,yBACAL,EAAA,EAAAC,eASAuC,EAAAkC,YAAA3G,EAAA,QAAAoC,gBACAqC,EAAAtC,iBACAuG,cAAA1I,EAAA,QAAAsC,yBACAmC,EAAA6B,kBACAqC,iBAAA3I,EAAA,QAAAsC,yBACAL,EAAA,EAAA2G,aACAC,UAAA7I,EAAA,QAAAsC,yBACAL,EAAA,EAAAgG,wBACAa,WAAA9I,EAAA,QAAAsC,yBACAL,EAAA,EAAAgG,wBACAc,YAAA/I,EAAA,QAAAsC,yBACAL,EAAA,EAAAgG,wBACAe,aAAAhJ,EAAA,QAAAsC,yBACAL,EAAA,EAAAgG,yBACKjI,EAAA,QAAAoC,gBAAAqC,EAAAuC,qBACLU,WAAA1H,EAAA,QAAAsC,yBACAL,EAAA,EAAAC,eAEAzL,EAAA,oJCxcAwS,EAAA,SAAA9C,EAAA+C,EAAAC,EAAAC,EAAAC,EAAAC,GAEAC,EAAA,EAAAjP,KAAApE,KAAAiQ,EAAA+C,EAAAC,EAAAK,EAAA,EAAAC,MAMAvT,KAAAwT,KAAAN,EAMAlT,KAAAyT,OAAA,IAAAC,MACA,OAAAP,IACAnT,KAAAyT,OAAAN,eAOAnT,KAAA2T,mBAAA,KAMA3T,KAAA4T,MAAAN,EAAA,EAAAC,KAMAvT,KAAA6T,mBAAAT,GAIA5O,OAAAC,EAAA,SAAAD,CAAAuO,EAAAM,EAAA,GAOAN,EAAAnT,UAAAkU,SAAA,WACA,OAAA9T,KAAAyT,QASAV,EAAAnT,UAAAmU,kBAAA,WACA/T,KAAA4T,MAAAN,EAAA,EAAAU,MACAhU,KAAAiU,iBACAjU,KAAAkU,WASAnB,EAAAnT,UAAAuU,iBAAA,gBACA3R,IAAAxC,KAAAgT,aACAhT,KAAAgT,WAAAxO,OAAA4P,EAAA,UAAA5P,CAAAxE,KAAAiQ,QAAAjQ,KAAAyT,OAAAY,QAEArU,KAAA4T,MAAAN,EAAA,EAAAgB,OACAtU,KAAAiU,iBACAjU,KAAAkU,WAWAnB,EAAAnT,UAAA2U,KAAA,WACAvU,KAAA4T,OAAAN,EAAA,EAAAC,MAAAvT,KAAA4T,OAAAN,EAAA,EAAAU,QACAhU,KAAA4T,MAAAN,EAAA,EAAAkB,QACAxU,KAAAkU,UACAlU,KAAA2T,oBACAc,EAAA,QAAAC,WAAA1U,KAAAyT,OAAAkB,EAAA,EAAAX,MACAhU,KAAA+T,kBAAA/T,MACAyU,EAAA,QAAAC,WAAA1U,KAAAyT,OAAAkB,EAAA,EAAAC,KACA5U,KAAAmU,iBAAAnU,OAEAA,KAAA6T,mBAAA7T,UAAAwT,QAQAT,EAAAnT,UAAAiV,SAAA,SAAAC,GACA9U,KAAAyT,OAAAqB,GASA/B,EAAAnT,UAAAqU,eAAA,WACAjU,KAAA2T,mBAAAoB,QAAAN,EAAA,QAAAO,eACAhV,KAAA2T,mBAAA,MAEA,IAAAsB,EAAA,gEC5GAC,EAAA,SAAArQ,GAEA,IAAAoB,EAAApB,MAEAsQ,EAAA,QAAA/Q,KAAApE,MACAoV,aAAAnP,EAAAmP,aACAxM,WAAA3C,EAAA2C,WACAyM,YAAApP,EAAAoP,cAOArV,KAAAsV,kBACA9S,IAAAyD,EAAAkN,YAAAlN,EAAAkN,YAAA,KAMAnT,KAAAuV,KAAAtP,EAAAuP,IAMAxV,KAAA6T,wBAAArR,IAAAyD,EAAAmN,kBACAnN,EAAAmN,kBAAA+B,EAAA,QAAAM,yBAMAzV,KAAA0V,QAAAzP,EAAA0P,WAMA3V,KAAA4V,MAAA,EACA5V,KAAA6V,aAMA7V,KAAA8V,YAAkE7P,EAAA,WAMlEjG,KAAA+V,YAAAvT,IAAAyD,EAAA+P,OAAA/P,EAAA+P,MAMAhW,KAAAyT,OAAA,KAMAzT,KAAAiW,YAAA,KAMAjW,KAAAkW,kBAAA,EAMAlW,KAAAmW,YAAA3T,IAAAyD,EAAAmQ,MAAAnQ,EAAAmQ,MAAA,KAIA5R,OAAAC,EAAA,SAAAD,CAAA0Q,EAAAC,EAAA,SAQAD,EAAAmB,4BAAA,SAiBAnB,EAAAtV,UAAA0W,qBAAA,SAAAC,EAAAvD,EAAApK,EAAA+M,GACA,QAAAnT,IAAAxC,KAAAuV,KAAA,CAGA,IAAAiB,EAAAhS,OAAA2B,EAAA,IAAA3B,CAAAoE,GACA6N,EAAAzW,KAAA0W,gBAEAD,OAAAD,IACAxD,EAAA2D,EAAA,EAAAC,0BAAAH,EAAAD,EAAAD,EAAAvD,GACAuD,EAAA/R,OAAA2B,EAAA,UAAA3B,CAAA+R,EAAAC,EAAAC,IAGA,IAAAxG,EAAAzL,OAAA4P,EAAA,kBAAA5P,CAAA+R,EAAAvD,EAAA,EACAkC,EAAAmB,4BAEAQ,GACAC,QAAA,MACAC,QAAAC,EAAA,EACAC,QAAA,iBACAC,OAAA,YACAC,aAAA,EACAC,aAAApX,KAAA0V,QAAA,QAEA/N,EAAA,QAAAC,OAAAiP,EAAA7W,KAAA0V,QAAAC,GAEA,IAAAtF,EAAAgH,KAAAC,OAAAf,EAAA,GAAAtG,EAAA,IAAA+C,GACA1C,EAAA+G,KAAAC,OAAArH,EAAA,GAAAsG,EAAA,IAAAvD,GAIA,OAHA6D,EAAA7W,KAAA4V,KAAA,SAAAvF,EACAwG,EAAA7W,KAAA4V,KAAA,SAAAtF,EAEAtQ,KAAAuX,eACAtH,EAAAiF,EAAAmB,2BACA,EAAAI,GAAAD,EAAAK,KAUA3B,EAAAtV,UAAA4X,UAAA,WACA,OAAAxX,KAAA0V,SAOAR,EAAAtV,UAAA6X,iBAAA,SAAAxH,EAAA+C,EAAAC,EAAArK,GAEA,QAAApG,IAAAxC,KAAAuV,KACA,YAGAvC,EAAAhT,KAAA0X,sBAAA1E,GAEA,GAAAC,GAAAjT,KAAA+V,aAAAvT,IAAAxC,KAAA8V,cACA7C,EAAA,GAGA,IAAA0E,EAAA3E,EAAAC,EAEA2E,EAAApT,OAAA4P,EAAA,UAAA5P,CAAAyL,GACA4H,EAAAR,KAAAS,KAAAtT,OAAA4P,EAAA,SAAA5P,CAAAyL,GAAA0H,GACAI,EAAAV,KAAAS,KAAAtT,OAAA4P,EAAA,UAAA5P,CAAAyL,GAAA0H,GACAK,EAAAxT,OAAA4P,EAAA,kBAAA5P,CAAAoT,EAAAD,EAAA,GACAE,EAAAE,IACAE,EAAAZ,KAAAS,KAAA9X,KAAAmW,OAAA3R,OAAA4P,EAAA,SAAA5P,CAAAyL,GAAA0H,GACAO,EAAAb,KAAAS,KAAA9X,KAAAmW,OAAA3R,OAAA4P,EAAA,UAAA5P,CAAAyL,GAAA0H,GACAQ,EAAA3T,OAAA4P,EAAA,kBAAA5P,CAAAoT,EAAAD,EAAA,GACAM,EAAAC,IAEApD,EAAA9U,KAAAyT,OACA,GAAAqB,GACA9U,KAAAkW,mBAAAlW,KAAAoY,eACAtD,EAAAuD,iBAAArF,GACA8B,EAAAwD,iBAAArF,GACAzO,OAAA4P,EAAA,eAAA5P,CAAAsQ,EAAAyD,YAAAP,GACA,OAAAlD,EAGA,IAAAa,GACAmB,QAAA,MACAC,QAAAC,EAAA,EACAC,QAAA,SACAC,OAAA,YACAC,aAAA,GAEAxP,EAAA,QAAAC,OAAA+N,EAAA3V,KAAA0V,SAEA1V,KAAAiW,WAAA,GAAAoB,KAAAmB,MAAAhU,OAAA4P,EAAA,SAAA5P,CAAA2T,GAAAR,GACA3X,KAAAiW,WAAA,GAAAoB,KAAAmB,MAAAhU,OAAA4P,EAAA,UAAA5P,CAAA2T,GAAAR,GAEA,IAAAnC,EAAAxV,KAAAuX,eAAAY,EAAAnY,KAAAiW,WAAAhD,EACArK,EAAA+M,GAUA,OARA3V,KAAAyT,OAAA,IAAAwB,EAAAkD,EAAAnF,EAAAC,EACAuC,EAAAxV,KAAAsV,aAAAtV,KAAA6T,oBAEA7T,KAAAkW,kBAAAlW,KAAAoY,cAEA3D,EAAA,QAAAgE,OAAAzY,KAAAyT,OAAAkB,EAAA,EAAA+D,OACA1Y,KAAA2Y,kBAAA3Y,MAEAA,KAAAyT,QAUAyB,EAAAtV,UAAAgZ,qBAAA,WACA,OAAA5Y,KAAA6T,oBAaAqB,EAAAtV,UAAA2X,eAAA,SAAAtH,EAAA4I,EAAA5F,EAAArK,EAAA+M,GAUA,GARAnR,OAAAsE,EAAA,EAAAtE,MAAAhC,IAAAxC,KAAAuV,KAAA,GAEAI,EAAA3V,KAAA4V,KAAA,aAAAhN,EAAAkQ,UAEA,WAAA9Y,KAAA0V,UACAC,EAAA,WAGA,GAAA1C,EACA,OAAAjT,KAAA8V,aACA,KAAAiD,EAAA,EAAAnV,UACA,IAAAoV,EAAA,GAAA/F,EAAA,KACA,mBAAA0C,EACAA,EAAA,wBAAwCqD,EAExCrD,EAAA,sBAAAqD,EAEA,MACA,KAAAD,EAAA,EAAAlV,UACA8R,EAAA,kBAAA1C,EACA,MACA,KAAA8F,EAAA,EAAApV,gBACA,KAAAoV,EAAA,EAAAjV,KACA6R,EAAA,OAAA1C,EACA,MACA,QACAzO,OAAAsE,EAAA,EAAAtE,EAAA,KAKAmR,EAAA,MAAAkD,EAAA,GACAlD,EAAA,OAAAkD,EAAA,GAEA,IACAI,EADAC,EAAAtQ,EAAAuQ,qBASA,OANAF,EADAjZ,KAAA4V,MAAA,MAAAsD,EAAAE,OAAA,MACAnJ,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEAA,EAEA0F,EAAA,KAAAsD,EAAAvV,KAAA,KAEA2V,EAAA,QAAAC,aAAiDtZ,KAAA,KAAA2V,IASjDT,EAAAtV,UAAA2Z,OAAA,WACA,OAAAvZ,KAAAuV,MASAL,EAAAtV,UAAA4Z,qBAAA,SACApG,GACApT,KAAAyT,OAAA,KACAzT,KAAA6T,mBAAAT,EACApT,KAAAkU,WASAgB,EAAAtV,UAAA6Z,OAAA,SAAAjE,GACAA,GAAAxV,KAAAuV,OACAvV,KAAAuV,KAAAC,EACAxV,KAAAyT,OAAA,KACAzT,KAAAkU,YAUAgB,EAAAtV,UAAA8Z,aAAA,SAAA/D,GACAhO,EAAA,QAAAC,OAAA5H,KAAA0V,QAAAC,GACA3V,KAAA6V,aACA7V,KAAAyT,OAAA,KACAzT,KAAAkU,WAOAgB,EAAAtV,UAAAiW,WAAA,WACA,IAAApH,EAAAzO,KAAA0V,QAAA,SAAAsB,EAAA,EACAhX,KAAA4V,KAAA+D,EAAA,QAAAC,gBAAAnL,EAAA,WAEAlO,EAAA,6FChXA,QAAAb,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,wDAYA,IAAMgB,EAAU,SAASmZ,EAAIC,GAM3B9Z,KAAK+Z,IAAMF,EAMX7Z,KAAKga,OAASF,qDAOhBpZ,EAAQuZ,UAAY,YAMpBvZ,EAAQwZ,cAAgB,SAkBxBxZ,EAAQd,UAAUua,oBAAsB,SAASC,EAC/CC,EAAkBC,EAAcC,EAAgBC,EAAUC,EAAYC,GAEtE,IAAM/E,GACJuB,OAAUoD,EACVK,OAAUN,GAERO,SACAJ,IACF7E,EAAA,KAAiB6E,GAEfD,IACF5E,EAAA,WAAuB4E,EAEvBK,EAAeL,EAAeM,QAAQ,aAAc,SAEtD,IAAM/a,EAAS,IAAAgb,EAAAha,SACb0U,IAAK4E,EACLzE,OAAQA,EACRoF,WAAYH,EACZzH,YAAauH,IAMf,OAJID,GACF3a,EAAO4Z,aAAae,GAGf,IAAAO,EAAAla,SAAkBhB,YAY3BY,EAAQd,UAAUqb,kCAAoC,SACpDC,EAAYR,GAEZ,IAAMlF,EAAM0F,EAAWC,OACvBC,EAAAta,QAAYua,OAAO7F,GAEnB,IAAM8F,EAAaJ,EAAWK,mBAAmB7X,KAAK,KAChDqX,EAAaG,EAAWM,cACxBC,EAAYP,EAAWQ,aAGvBC,EAAQ3b,KAAKma,oBACjB3E,EACA8F,EACAG,EACAV,OACAvY,OACAA,EACAkY,GASF,OALAiB,EAAMC,WAAWV,EAAWW,SAG5BF,EAAMG,IAAI,kBAAmBZ,EAAW7S,KAEjCsT,GAkBTjb,EAAQd,UAAUmc,iCAAmC,SAASC,EAAiBC,EAAWC,GACxF,IAAMC,EAAS,IAAAC,EAAAtb,QACT6a,EAAQ,IAAAU,EAAAvb,SACZwb,QAASC,MAEL1C,EAAK7Z,KAAK+Z,IAEhB,OAAO/Z,KAAKga,OAAOwC,IAAIR,GAAkBS,OAAO,IAAOC,KAAK,SAACC,GAC3D,IAAIC,SAIJ,GAHID,EAASE,OACXD,EAAST,EAAOtc,KAAK8c,EAASE,OAE5BD,EAAQ,CACV,IAAM3W,EAAU6W,EAAAhc,QAAaic,wBAAwBH,GACnDzJ,YAAa,YACbwI,MAAOM,IAETb,EAAAta,QAAYua,OAAOpV,GACnB,IAAMnG,EAAS,IAAAgd,EAAAhc,QAAwDmF,GACnEiW,IAAmBc,EAAAlc,QAAMsI,QAAQ8S,IACnCpc,EAAOmd,iBAAiBf,GAE1BP,EAAMuB,UAAUpd,GAGhB,IAAMqd,EAASP,EAAA,eACTQ,EAAIC,EAAAvc,QAAQwc,KAAKH,EAAQ,SAACI,EAAKC,EAAOC,GAAb,OAAuBF,EAAA,YAAqBtB,IAG3E,OAFAN,EAAMG,IAAI,qBAAsBsB,EAAA,OAEzBvD,EAAG6D,QAAQ/B,GAEpB,OAAO9B,EAAG8D,OAAH,wCAAkD3B,MAe7Dtb,EAAQd,UAAUge,oCAAsC,SACtDC,EAAcC,EAAU5B,GAGxB,IAAMjW,EAAU6W,EAAAhc,QAAaic,wBAAwBc,GACnD1K,YAAa,YACbwI,MAAOmC,EAAA,aAGT1C,EAAAta,QAAYua,OAAOpV,GACnB,IAAMnG,EAAS,IAAAgd,EAAAhc,QAC0BmF,GAMzC,OAJIiW,IAAmBc,EAAAlc,QAAMsI,QAAQ8S,IACnCpc,EAAOmd,iBAAiBf,GAGnB,IAAAG,EAAAvb,SACLid,mBAAsBD,EAAA,MACtBxB,QAASC,IACTzc,OAAQA,KAaZY,EAAQd,UAAUoe,iBAAmB,SAASC,GAC5C,IAAMC,EAAQ,IAAAC,EAAArd,QAId,OAHImd,GACFC,EAAME,UAAUH,GAEXC,GAcTxd,EAAQd,UAAUye,gBAAkB,SAASjX,EAAKkX,GAChD,IACIJ,SAcJ,OAfe9W,EAAImX,gBAAgBC,YAE5BC,WAAWC,KAAK,SAACC,GACtB,OAAIA,EAAcnC,IAAI9b,EAAQuZ,aAAeqE,IAC3CJ,EAAuCS,GAChC,KAKNT,KACHA,EAAQle,KAAKge,oBACPlC,IAAIpb,EAAQuZ,UAAWqE,GAC7BlX,EAAIwX,SAASV,IAERA,GAWTxd,EAAQd,UAAUif,cAAgB,SAASlD,GACzC,OAAO3b,KAAK8e,eAAenD,OAY7Bjb,EAAQd,UAAUkf,eAAiB,SAASnD,EAAO8B,GAC7C9B,uBACgBA,EAAM6C,YACdzJ,QAAQ,SAASqI,GACzBpd,KAAK8e,eAAe1B,EAAGK,IACtBzd,MAECyd,EAAMnc,QAAQqa,GAAS,GACzB8B,EAAMja,KAAKmY,GAGf,OAAO8B,GAaT/c,EAAQd,UAAUmf,eAAiB,SAAS9C,EAAWkB,GACrD,IAAI6B,EAAQ,KAWZ,OAVA7B,EAAOuB,KAAK,SAAS/C,GACnB,GAAIA,uBAA+B,CACjC,IAAMsD,EAAYtD,EAAM6C,YAAYC,WACpCO,EAAQhf,KAAK+e,eAAe9C,EAAWgD,QAC9BtD,EAAMa,IAAI,mBAAqBP,IACxC+C,EAAQrD,GAEV,QAASqD,GACRhf,MAEIgf,GAWTte,EAAQd,UAAUsf,iBAAmB,SAASvD,GAE5C,IAAInG,SACE2J,EAASxD,EAAMa,IAAI,sBACzB,QAAeha,IAAX2c,EAAsB,CACxB,IAAMC,EAAYD,EAAO,GAAP,eACA3c,IAAd4c,IACF5J,EAAM4J,EAAU,GAAV,MAGV,OAAO5J,GAaT9U,EAAQd,UAAUyf,gBAAkB,SAAS7J,EAC3CyG,EAAWqD,EAAWC,GACtB,GAAK/J,EAAL,CAGA,IAAMxT,GACJkV,OAAU,YACVC,aAAe,EACfL,QAAW,MACXC,QAAW,QACXE,QAAW,mBACXuI,MAASvD,GAQX,YANkBzZ,IAAd8c,IACFtd,EAAA,MAAuBsd,QAEF9c,IAAnB+c,IACFvd,EAAA,KAAsBud,GAEjBE,EAAA3e,QAAMwY,aAAa9D,EAAKxT,KAUjCtB,EAAQd,UAAU8f,eAAiB,SAAS/D,EAAOvU,GACjD,IAAKuU,EAAMgE,aACT,OAAO,EAGT,IAAMC,EAAoBxY,EAAIyY,UAAUxH,gBACxC,OAAOuH,EAAoBjE,EAAMmE,oBAC7BF,EAAoBjE,EAAMoE,oBAQhCrf,EAAQd,UAAUogB,gBAAkB,SAASrE,GAC3C,IAAMsE,EAAUtE,EAAMuE,YACtB9E,EAAAta,QAAYua,OACV4E,wBACAA,wBAEF,IAAMngB,EAA8DmgB,EAC9DtK,EAAS7V,EAAO0X,YACtB7B,EAAOjV,EAAQwZ,eAAiB7C,KAAK8I,SACrCrgB,EAAO4Z,aAAa/D,IActBjV,EAAQd,UAAUwgB,oBAAsB,SAASzE,EAAO0E,EAAO7F,GAE7D,GAAI6F,EAAM7e,QAAU,EAClBma,EAAMC,YAAW,OACZ,CACLD,EAAMC,YAAW,GACjB,IAAM9b,EAA4C6b,EAAMuE,YACpD1F,EACF1a,EAAO4Z,cAAciB,OAAU0F,EAAOC,KAAQ9F,IAE9C1a,EAAO4Z,cAAciB,OAAU0F,MAYrC3f,EAAQd,UAAU2gB,kBAAoB,SAAS5E,GAC7C,OACEA,EAAMa,IAAI,oBAOd9b,EAAQ8f,OAASC,QAAQD,OAAO,uBACjBE,QAAQ,kBAAmBhgB,GAC1CigB,EAAA7f,QAAS0f,OAAOI,SAASpd,KAAK9C,EAAQ8f,OAAOtd,gBAG9BxC,oFC5cf,QAAAhB,EAAA,QACAA,EAAA,wDASA,IAAMgB,EAAU,SAAS4G,GAAmB,IAAbuZ,EAAaC,UAAAtf,OAAA,QAAAgB,IAAAse,UAAA,GAAAA,UAAA,MAE1CC,EAAAjgB,QAAcsD,KAAKpE,KAAMsH,GAKzBtH,KAAK6gB,OAASA,GAIhBG,EAAAlgB,QAAOmgB,SAASvgB,EAAhBqgB,EAAAjgB,mBAGeJ,4LC3BfwgB,EAAAxhB,EAAA,IA4BAyhB,EAAA,SAAAtc,GAEA,IAAAoB,EAAApB,MAEA8Q,EAAA1P,EAAA0P,WAEAyL,IAAA,gBAAAzL,MAAA,YAEA0L,EAAA,EAAAjd,KAAApE,MACAoV,aAAAnP,EAAAmP,aACAkM,UAAArb,EAAAqb,UACAnO,YAAAlN,EAAAkN,YACAoO,QAAAH,EACAxY,WAAA3C,EAAA2C,WACA4Y,2BAAAvb,EAAAub,2BACAC,UAAAxb,EAAAwb,UACAC,SAAAzb,EAAAyb,SACAC,iBAAA1b,EAAA0b,iBACAnM,IAAAvP,EAAAuP,IACAoM,KAAA3b,EAAA2b,KACAC,WAAArf,IAAAyD,EAAA4b,OAAA5b,EAAA4b,MACAC,WAAA7b,EAAA6b,aAOA9hB,KAAA+hB,aAAAvf,IAAAyD,EAAA+b,OAAA/b,EAAA+b,OAAA,EAMAhiB,KAAA0V,QAAAC,EAMA3V,KAAA4V,MAAA,EAMA5V,KAAA8V,YAAkE7P,EAAA,WAMlEjG,KAAA+V,YAAAvT,IAAAyD,EAAA+P,OAAA/P,EAAA+P,MAMAhW,KAAAiiB,WAAAzd,OAAA0d,EAAA,YAAA1d,GAEAxE,KAAA6V,aACA7V,KAAAmiB,OAAAniB,KAAAoiB,qBAIA5d,OAAA6d,EAAA,SAAA7d,CAAA2c,EAAAE,EAAA,GAiBAF,EAAAvhB,UAAA0W,qBAAA,SAAAC,EAAAvD,EAAApK,EAAA+M,GACA,IAAAa,EAAAhS,OAAA8d,EAAA,IAAA9d,CAAAoE,GACA6N,EAAAzW,KAAA0W,gBAEAgL,EAAA1hB,KAAAuiB,cACAb,IACAA,EAAA1hB,KAAAwiB,yBAAAhM,IAGA,IAAAiM,EAAAf,EAAAgB,kCAAAnM,EAAAvD,GAEA,KAAA0O,EAAAiB,iBAAAnhB,QAAAihB,EAAA,KAIA,IAAAG,EAAAlB,EAAArJ,cAAAoK,EAAA,IACAI,EAAAnB,EAAAoB,mBAAAL,EAAAziB,KAAAiiB,YACAc,EAAAC,EAAA,QAAAC,OAAAvB,EAAAwB,YAAAT,EAAA,IAAAziB,KAAAmjB,SAGAnB,EAAAhiB,KAAA+hB,QACA,IAAAC,IACAe,EAAAC,EAAA,QAAAI,OAAAL,EAAAf,EAAAhiB,KAAAmjB,SACAN,EAAAre,OAAA0d,EAAA,OAAA1d,CAAAqe,EAAAD,EAAAZ,EAAAa,IAGApM,OAAAD,IACAoM,EAAAS,EAAA,EAAAzM,0BAAAH,EAAAD,EAAAD,EAAAqM,GACAC,EAAAre,OAAA8d,EAAA,gBAAA9d,CAAAqe,EAAArM,EAAAC,GACAF,EAAA/R,OAAA8d,EAAA,UAAA9d,CAAA+R,EAAAC,EAAAC,IAGA,IAAAI,GACAC,QAAA,MACAC,QAAAuM,EAAA,EACArM,QAAA,iBACAC,OAAA,YACAC,aAAA,EACAC,aAAApX,KAAA0V,QAAA,QAEA6N,EAAA,QAAA3b,OAAAiP,EAAA7W,KAAA0V,QAAAC,GAEA,IAAAtF,EAAAgH,KAAAC,OAAAf,EAAA,GAAAsM,EAAA,IAAAD,GACAtS,EAAA+G,KAAAC,OAAAuL,EAAA,GAAAtM,EAAA,IAAAqM,GAKA,OAHA/L,EAAA7W,KAAA4V,KAAA,SAAAvF,EACAwG,EAAA7W,KAAA4V,KAAA,SAAAtF,EAEAtQ,KAAAuX,eAAAkL,EAAAM,EAAAF,EACA,EAAApM,GAAAD,EAAAK,KAOAsK,EAAAvhB,UAAA4jB,kBAAA,WACA,OAAAxjB,KAAA+hB,SAUAZ,EAAAvhB,UAAA4X,UAAA,WACA,OAAAxX,KAAA0V,SAcAyL,EAAAvhB,UAAA2X,eAAA,SAAAkL,EAAAM,EAAAF,EACA5P,EAAArK,EAAA+M,GAEA,IAAAiM,EAAA5hB,KAAA4hB,KACA,GAAAA,EAAA,CAaA,GATAjM,EAAA,MAAAoN,EAAA,GACApN,EAAA,OAAAoN,EAAA,GAEApN,EAAA3V,KAAA4V,KAAA,aAAAhN,EAAAkQ,UAEA,WAAA9Y,KAAA0V,UACAC,EAAA,WAGA,GAAA1C,EACA,OAAAjT,KAAA8V,aACA,KAAA2N,EAAA,EAAA7f,UACA,IAAAoV,EAAA,GAAA/F,EAAA,KACA,mBAAA0C,EACAA,EAAA,wBAAwCqD,EAExCrD,EAAA,sBAAAqD,EAEA,MACA,KAAAyK,EAAA,EAAA5f,UACA8R,EAAA,kBAAA1C,EACA,MACA,KAAAwQ,EAAA,EAAA9f,gBACA,KAAA8f,EAAA,EAAA3f,KACA6R,EAAA,OAAA1C,EACA,MACA,QACAzO,OAAAkf,EAAA,EAAAlf,EAAA,MAKA,IAGAmf,EAUAnO,EAbA0D,EAAAtQ,EAAAuQ,qBACAF,EAAA4J,EACA,GAAA7iB,KAAA4V,MAAA,MAAAsD,EAAAE,OAAA,KAEAuK,EAAAd,EAAA,GACA5J,EAAA,GAAA4J,EAAA,GACA5J,EAAA,GAAA0K,EACAA,EAAAd,EAAA,GACA5J,EAAA,GAAA4J,EAAA,GACA5J,EAAA,GAAA0K,EAKA,GAHAhO,EAAA,KAAAsD,EAAAvV,KAAA,KAGA,GAAAke,EAAApgB,OACAgU,EAAAoM,EAAA,QAGApM,EAAAoM,EADApd,OAAAof,EAAA,OAAApf,CAAAqf,EAAA,EAAAC,KAAArB,GAAAb,EAAApgB,SAGA,OAAA0f,EAAA,QAAA5H,aAAA9D,EAAAG,KAOAwL,EAAAvhB,UAAAmkB,kBAAA,SAAA9Q,GACA,OAAAjT,KAAA+V,aAAAvT,IAAAxC,KAAA8V,YACoB,EADpB,GASAqL,EAAAvhB,UAAAwiB,iBAAA,WACA,IAAA3Z,EAAA,EACAub,KACA,QAAAzgB,KAAAvD,KAAA0V,QACAsO,EAAAvb,KAAAlF,EAAA,IAAAvD,KAAA0V,QAAAnS,GAEA,OAAAygB,EAAAtgB,KAAA,MAOAyd,EAAAvhB,UAAAqkB,qBAAA,SAAAxB,EAAAxP,EAAArK,GAEA,IAAA8Y,EAAA1hB,KAAAuiB,cAKA,GAJAb,IACAA,EAAA1hB,KAAAwiB,yBAAA5Z,MAGA8Y,EAAAiB,iBAAAnhB,QAAAihB,EAAA,KAIA,GAAAxP,GAAAjT,KAAA+V,aAAAvT,IAAAxC,KAAA8V,cACA7C,EAAA,GAGA,IAAA2P,EAAAlB,EAAArJ,cAAAoK,EAAA,IACAI,EAAAnB,EAAAoB,mBAAAL,EAAAziB,KAAAiiB,YACAc,EAAAC,EAAA,QAAAC,OACAvB,EAAAwB,YAAAT,EAAA,IAAAziB,KAAAmjB,SAEAnB,EAAAhiB,KAAA+hB,QACA,IAAAC,IACAe,EAAAC,EAAA,QAAAI,OAAAL,EAAAf,EAAAhiB,KAAAmjB,SACAN,EAAAre,OAAA0d,EAAA,OAAA1d,CAAAqe,EAAAD,EAAAZ,EAAAa,IAGA,GAAA5P,IACA8P,EAAAC,EAAA,QAAAkB,MAAAnB,EAAA9P,EAAAjT,KAAAmjB,UAGA,IAAAtM,GACAC,QAAA,MACAC,QAAAuM,EAAA,EACArM,QAAA,SACAC,OAAA,YACAC,aAAA,GAIA,OAFAoM,EAAA,QAAA3b,OAAAiP,EAAA7W,KAAA0V,SAEA1V,KAAAuX,eAAAkL,EAAAM,EAAAF,EACA5P,EAAArK,EAAAiO,KAQAsK,EAAAvhB,UAAA8Z,aAAA,SAAA/D,GACA4N,EAAA,QAAA3b,OAAA5H,KAAA0V,QAAAC,GACA3V,KAAA6V,aACA7V,KAAAmiB,OAAAniB,KAAAoiB,qBAOAjB,EAAAvhB,UAAAiW,WAAA,WACA,IAAApH,EAAAzO,KAAA0V,QAAA,SAAA4N,EAAA,EACAtjB,KAAA4V,KAAAuO,EAAA,QAAAvK,gBAAAnL,EAAA,WAEAlO,EAAA,uVCrVA6jB,EAAA1kB,EAAA,uBAKA,IAAMgB,aAkBJ,SAAAA,EAAYuF,gGAASoe,CAAArkB,KAAAU,GAiBnBV,KAAKskB,UAA+B,IAApBre,EAAQse,QAQxBvkB,KAAKwkB,UAA+B,IAApBve,EAAQ4V,QAcxB7b,KAAKykB,WAAaxe,EAAQwe,YAAc,KAOxCzkB,KAAK0kB,IAAMze,EAAQoC,GASnBrI,KAAK2kB,qBAAuB1e,EAAQ2e,oBAOpC5kB,KAAK6kB,eAAiB5e,EAAQ6e,cAO9B9kB,KAAK+kB,eAAiB9e,EAAQ+e,cAO9BhlB,KAAKilB,MAAQhf,EAAQ/C,KA9FnB,OAAAgiB,EAAAxkB,IAAA6C,IAAA,gBAAAP,MAAA,WA8IF,OAAOhD,KAAKykB,cA9IVlhB,IAAA,gBAAAP,MAAA,SAqJUyhB,GACZzkB,KAAKykB,WAAaA,KAtJhBlhB,IAAA,UAAAiZ,IAAA,WA0GF,OAAOxc,KAAKskB,UA1GVxI,IAAA,SAiHQyI,GACVvkB,KAAKskB,SAAWC,KAlHdhhB,IAAA,UAAAiZ,IAAA,WA0HF,OAAOxc,KAAKwkB,UA1HV1I,IAAA,SAiIQD,GACV7b,KAAKwkB,SAAW3I,KAlIdtY,IAAA,KAAAiZ,IAAA,WA8JF,OAAOxc,KAAK0kB,OA9JVnhB,IAAA,sBAAAiZ,IAAA,WAsKF,OAAOxc,KAAK2kB,wBAtKVphB,IAAA,gBAAAiZ,IAAA,WA8KF,OAAOxc,KAAK6kB,kBA9KVthB,IAAA,gBAAAiZ,IAAA,WAsLF,OAAOxc,KAAK+kB,kBAtLVxhB,IAAA,OAAAiZ,IAAA,WA8LF,OAAOxc,KAAKilB,SA9LV1hB,IAAA,YAAAiZ,IAAA,WA4MF,OAAO,KA5MLjZ,IAAA,yBAAAiZ,IAAA,WAqNF,OAA8B,OAAvBxc,KAAK8kB,eAAiD,OAAvB9kB,KAAKglB,kBArNzCtkB,eA0NSA,oFC9Nf,QAAAhB,EAAA,QACAA,EAAA,wDAFA,IAAMgB,KAKNigB,EAAA7f,QAAS0f,OAAOxd,MAAM,kBAAmB,IAAAmiB,EAAArkB,mBAS1BJ,oFCdf,QAAAhB,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,wDAyBA,IAAMgB,EAAU,WAMdV,KAAKolB,2BAMLplB,KAAKqlB,WAMLrlB,KAAKigB,QAAU,IAAAqF,EAAAxkB,SACbykB,iBAAiB,IAOnBvlB,KAAKwlB,OAAS,IAAAC,EAAA3kB,SACZhB,OAAQE,KAAKigB,QACb9Q,MAAOnP,KAAK0lB,eAAeC,KAAK3lB,MAChC4lB,sBAAsB,EACtBC,wBAAwB,KAW5BnlB,EAAQd,UAAUkmB,WAAa,SAASvgB,EAASwgB,GAC/C3K,EAAAta,QAAYua,OAAO0K,GAAc,GACjC3K,EAAAta,QAAYua,OAAO0K,EAAa/lB,KAAKqlB,QAAQ7jB,QAC7C,IAAMwkB,EAAahF,EAAAlgB,QAAOmlB,OAAO1gB,GAASxD,WAC1C/B,KAAKolB,wBAAwBY,GAAcD,EAC3C/lB,KAAKqlB,QAAQU,GAAYpgB,SAASqgB,GAAczgB,EAChDvF,KAAKigB,QAAQ6F,WAAWvgB,IAS1B7E,EAAQd,UAAUsmB,cAAgB,SAAS3gB,EAASwgB,GAClD3K,EAAAta,QAAYua,OAAO0K,GAAc,GACjC3K,EAAAta,QAAYua,OAAO0K,EAAa/lB,KAAKqlB,QAAQ7jB,QAC7C,IAAMwkB,EAAahF,EAAAlgB,QAAOmlB,OAAO1gB,GAASxD,kBACnC/B,KAAKolB,wBAAwBY,UAC7BhmB,KAAKqlB,QAAQU,GAAYpgB,SAASqgB,GACzChmB,KAAKigB,QAAQiG,cAAc3gB,IAQ7B7E,EAAQd,UAAUumB,MAAQ,SAASJ,GACjC3K,EAAAta,QAAYua,OAAO0K,GAAc,GACjC3K,EAAAta,QAAYua,OAAO0K,EAAa/lB,KAAKqlB,QAAQ7jB,QAC7C,IAAM0c,EAAQle,KAAKqlB,QAAQU,GAC3B,IAAK,IAAMC,KAAc9H,EAAMvY,SAC7B3F,KAAKkmB,cAAchI,EAAMvY,SAASqgB,GAAaD,GAEjD3K,EAAAta,QAAYua,OAAO2B,EAAAlc,QAAMsI,QAAQ8U,EAAMvY,YAQzCjF,EAAQd,UAAUwmB,SAAW,WAC3B,OAAOpmB,KAAKwlB,QAQd9kB,EAAQd,UAAUymB,kBAAoB,WACpC,IAAMN,EAAa/lB,KAAKqlB,QAAQ7jB,OAKhC,OAJAxB,KAAKqlB,QAAQ7hB,MACX8iB,cAAeC,EAAAzlB,QAAa0lB,gBAC5B7gB,cAEK,IAAA8gB,EAAA3lB,QAA0Bd,KAAM+lB,IAQzCrlB,EAAQd,UAAU8mB,KAAO,SAAStf,GAChCpH,KAAKwlB,OAAOmB,OAAOvf,IAUrB1G,EAAQd,UAAUgnB,SAAW,SAASzX,EAAO4W,GAC3C3K,EAAAta,QAAYua,OAAO0K,GAAc,GACjC3K,EAAAta,QAAYua,OAAO0K,EAAa/lB,KAAKqlB,QAAQ7jB,QAC7CxB,KAAKqlB,QAAQU,GAAYO,cAA0B,OAAVnX,EACvCoX,EAAAzlB,QAAa0lB,gBAAkBD,EAAAzlB,QAAa+lB,eAAe1X,IAU/DzO,EAAQd,UAAU8lB,eAAiB,SAASngB,EAASyN,GACnD,IAAMgT,EAAahF,EAAAlgB,QAAOmlB,OAAO1gB,GAASxD,WAC1CqZ,EAAAta,QAAYua,OAAO2K,KAAchmB,KAAKolB,yBACtC,IAAMW,EAAa/lB,KAAKolB,wBAAwBY,GAEhD,OADchmB,KAAKqlB,QAAQU,GACdO,cAAc/gB,EAASyN,KAOtCtS,EAAQ8f,OAASC,QAAQD,OAAO,yBAC9BiG,EAAA3lB,QAAsB0f,OAAOtd,QAEhBwd,QAAQ,wBAAyBhgB,GAChDigB,EAAA7f,QAAS0f,OAAOI,SAASpd,KAAK9C,EAAQ8f,OAAOtd,gBAG9BxC,mFC3Lf,IAAMA,GAENA,OAAiB,SAASomB,EAAWC,EAAaC,KAClDtmB,aAAuB,SAASsC,EAAO+jB,EAAaC,KACpDtmB,aAAuB,SAASsC,EAAO+jB,EAAaC,KACpDtmB,eAAyB,SAASsC,EAAO+jB,EAAaC,KACtDtmB,aAAuB,SAASsC,EAAO+jB,EAAaC,KACpDtmB,YAAsB,SAASsC,EAAO+jB,EAAaC,KACnDtmB,cAAwB,SAASsC,EAAO+jB,EAAaC,KACrDtmB,cAAwB,SAASsC,EAAO+jB,EAAaC,KACrDtmB,iBAA2B,SAASsC,EAAOsE,EAAMyf,EAAaC,KAC9DtmB,8BAAwC,wBAEzBA,oFCVf,QAAAhB,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,wDAQA,IAAMgB,EAAU+f,QAAQD,OAAO,iBAC7BG,EAAA7f,QAAS0f,OAAOtd,KAChB+jB,EAAAnmB,QAA0B0f,OAAOtd,KACjCgkB,EAAApmB,QAAiBoC,KACjBikB,EAAArmB,QAAyB0f,OAAOtd,KAChCkkB,EAAAtmB,QAAgBoC,KAChBmkB,EAAAvmB,QAAiBoC,KACjBokB,EAAAxmB,QAAqBoC,iBAIRxC,qFCvBfhB,GAAA,eAAA6nB,EAAA,IAAA1lB,MAAA,wDAAA0lB,EAAAC,KAAA,mBAAAD,EAAA,IACA7nB,EAAA,MAEAA,EAAA,OAEAA,EAAA,QACAA,EAAA,MAHA,QAIAA,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,wDAhBA,IAoBM8gB,EAASC,QAAQD,OAAO,OAC5BiH,KAAKjH,OAAOtd,KACZwkB,EAAA5mB,QAAcoC,OAQhBykB,IAAIC,SAAW,gEAQfD,IAAIE,WAAa,6DAQjBF,IAAIG,eAAiB,IAAK,IAAK,IAAK,KAAM,IAAM,IAAO,KAAO,IAC5D,IAAQ,KAOVH,IAAII,cAAgB,MAOpBJ,IAAIK,cAAgB,cAOpBL,IAAIM,WAAa,GAOjBN,IAAIO,mBAAqB,IAAK,KAW9BP,IAAIQ,eAAiB,SAASC,EAAUC,EAAiBC,GAKvDtoB,KAAKoH,IAAM,IAAAmhB,EAAAznB,SACTqc,QACE,IAAAnC,EAAAla,SACEhB,OAAQ,IAAAgb,EAAAha,SACN0U,IAAKmS,IAAIC,SACTjS,QACEgF,OAAU,OAEZI,WAAoD,gBAGxD,IAAA0K,EAAA3kB,SACEhB,OAAQ,IAAAwlB,EAAAxkB,SACN0U,IAAK,+BACL7F,OAAQ,IAAA6Y,EAAA1nB,SACNoF,sBAAuB,oBAK/BuiB,KAAM,IAAAC,EAAA5nB,SACJ8H,WAAY,aACZyM,aAAc,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,GAC/CuC,QAAS,OAAQ,QACjB+Q,KAAM,MASV3oB,KAAK4oB,WAAa,GAMlB5oB,KAAK6oB,UAAYT,EAMjBpoB,KAAK8oB,OAAST,EAAgBV,IAAIE,YAMlC7nB,KAAK+oB,YAAcT,EAKnB,IAAMU,EAAsBV,EAAeW,2BAIzC,kBAAMtB,IAAIO,mBAKV,SAACgB,GACC,IAAMC,EAAUD,EAAWrQ,KACrBuQ,EAAgBF,EAAWG,UAAUrW,WAE3C,YAAmBxQ,IAAZ2mB,QAA2C3mB,IAAlB4mB,EAC9Bd,EAAegB,gBAAgBH,EAASC,EACtCzB,IAAIO,kBAAmBP,IAAIG,eAC7BH,IAAIG,cAAc,KAMxB9nB,KAAKoH,IAAImiB,GAAG,cAAeP,IAO7BrB,IAAIQ,eAAevoB,UAAU4pB,MAAQ,WACnC,IAAMpiB,EAAMpH,KAAKoH,IAEX+hB,EAAU/hB,EAAIqiB,UACdC,EAAiBtiB,EAAIyY,UAAUxH,gBAG/B6L,OAAoB1hB,IAAZ2mB,QAA4C3mB,IAAnBknB,EACrC1pB,KAAK+oB,YAAYO,gBAAgBH,EAASO,EACxC/B,IAAIO,kBAAmBP,IAAIG,eAC7BH,IAAIG,cAAc,GAEd9O,EAAM2O,IAAIM,WACVtY,EAASgY,IAAII,cACb4B,EAAShC,IAAIK,cAEnBhoB,KAAK4oB,WAAa,cAElB,IAAMgB,EAAO5pB,KAAK8oB,OAAOe,WAAWziB,EAAK8c,EAAOlL,EAAK2Q,EAAQha,GAC3Dma,cACAC,MAAS,EACTC,SAAY,cACZC,MAAS,aAGXjqB,KAAK8oB,OAAOoB,aAAaN,GAAMlN,KAC7B1c,KAAKmqB,2BAA2BxE,KAAK3lB,MACrCA,KAAKoqB,yBAAyBzE,KAAK3lB,QASvC2nB,IAAIQ,eAAevoB,UAAUuqB,2BAA6B,SAASE,GACjE,IAAMC,EAAoDD,EAAKxN,KAC/D7c,KAAKuqB,WAAWD,EAAOE,MAQzB7C,IAAIQ,eAAevoB,UAAU2qB,WAAa,SAASC,GACjDxqB,KAAK8oB,OAAO2B,UAAUD,GAAK9N,KACzB1c,KAAK0qB,wBAAwB/E,KAAK3lB,KAAMwqB,GACxCxqB,KAAK2qB,sBAAsBhF,KAAK3lB,QASpC2nB,IAAIQ,eAAevoB,UAAUwqB,yBAA2B,SAASC,GAC/DrqB,KAAK4oB,WAAa,eASpBjB,IAAIQ,eAAevoB,UAAU8qB,wBAA0B,SAASF,EAAKH,GAGnE,GAF0DA,EAAKxN,KAC3C/Z,KAGlB9C,KAAK4oB,WAAa,GAClBgC,OAAOC,SAAS/f,KAAO9K,KAAK8oB,OAAOgC,aAAaN,OAC3C,CAEL,IAAMO,EAAO/qB,KACbA,KAAK6oB,UAAU,WACbkC,EAAKR,WAAWC,IACf,KAAM,KASb7C,IAAIQ,eAAevoB,UAAU+qB,sBAAwB,SAASN,GAC5DrqB,KAAK4oB,WAAa,eAIpBpI,EAAOwK,WAAW,iBAAkBrD,IAAIQ,+GC9QxC,QAAAzoB,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,wDA8CA,IAAMgB,EAAU,WAEduqB,EAAAnqB,QAAasD,KAAKpE,MAOlBA,KAAKkrB,aAGPlK,EAAAlgB,QAAOmgB,SAASvgB,EAAhBuqB,EAAAnqB,SAUAJ,EAAQd,UAAU4c,IAAM,SAASpV,GAE/B,OADe4Z,EAAAlgB,QAAOmlB,OAAO7e,GAAKrF,aACjB/B,KAAKkrB,SAAW9jB,EAAIoX,YAAY2M,KAAK,GAAK,MAY7DzqB,EAAQd,UAAUkc,IAAM,SAAS1U,EAAKuU,GACpC,IAAMyP,EAASpK,EAAAlgB,QAAOmlB,OAAO7e,GAAKrF,WAC5BspB,EAAWrrB,KAAKwc,IAAIpV,GACT,OAAbikB,GACFjQ,EAAAta,QAAYua,OAAO+P,KAAUprB,KAAKkrB,UACpB,OAAVvP,EACFvU,EAAIoX,YAAY8M,MAAM,EAAG3P,IAEzBvU,EAAIoX,YAAY+M,SAAS,UAClBvrB,KAAKkrB,SAASE,KAEJ,OAAVzP,IACTvU,EAAIoX,YAAYgN,SAAS,EAAG7P,GAC5B3b,KAAKkrB,SAASE,IAAU,GAG1B,IAAMK,EAAQ,IAAAC,EAAA5qB,QAAoB,UAChC6qB,QAAShQ,EACT0P,SAAUA,IAIZ,OAFArrB,KAAK4rB,cAAcH,GAEZJ,GAQT3qB,EAAQd,UAAUqd,iBAAmB,SAAS7V,EAAKykB,GACjD,IAAMC,EAAc9rB,KAAKwc,IAAIpV,GAC7B,GAAI0kB,EAAa,CACf,IAAI3O,GAAU2O,GACVA,yBAEF3O,EAAS2O,EAAYtN,YAAYC,YAGnCtB,EAAOpI,QAAQ,SAAC4G,GAEd,GADAP,EAAAta,QAAYirB,iBAAiBpQ,EAA7BqQ,EAAAlrB,SACI6a,EAAO,CACT,IAAIsQ,GAAa,EACXC,KACN,IAAK,IAAM3oB,KAAOoY,EAAMa,IAAI,cAAe,CACzC,IAAMxZ,EAAQ6oB,EAAWtoB,QACXf,IAAVQ,IACFkpB,EAAkB3oB,GAAOP,EACzBipB,GAAa,GAGjB,GAAIA,EAAY,CACd,IAAMnsB,EAAS6b,EAAMuE,YACjBpgB,wBACFA,EAAOmd,iBAAiBiP,GACxBpsB,EAAOqsB,YACErsB,wBAAqCA,0BAC9CA,EAAO4Z,aAAawS,GACpBpsB,EAAOqsB,kBAWnBzrB,EAAQ8f,OAASC,QAAQD,OAAO,8BACjBE,QAAQ,yBAA0BhgB,GACjDigB,EAAA7f,QAAS0f,OAAOI,SAASpd,KAAK9C,EAAQ8f,OAAOtd,gBAG9BxC,qFCrKf,QAAAhB,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,yDA6CA,IAAMgB,EAAU,SAAS8U,EAAKsE,EAAOsS,GAKnCpsB,KAAKuV,KAAOC,EAMZxV,KAAKga,OAASF,EAMd9Z,KAAKqsB,iBAAmBD,EAMxBpsB,KAAKssB,eAAiB,IAAAC,EAAAzrB,qDAWxBJ,EAAQd,UAAU4sB,OAAS,SAAShC,EAAKiC,GACvC,IAAMC,OAAgClqB,IAAnBiqB,EAA+BA,KAE5CjX,EAASxV,KAAKuV,KAAd,WAA6BiV,EAEnC,OAAOxqB,KAAKga,OAAL,OAAsBxE,EAAKkX,IAepChsB,EAAQd,UAAUiqB,WAAa,SAC7BziB,EAAK8c,EAAOlL,EAAK2Q,EAAQha,EAAQgd,GAEjC,IAAMC,GACJ5T,IAAKA,EACL6T,SAAyBF,EAAA,UAG3B3sB,KAAK8sB,WAAW1lB,EAAK8c,EAAO0I,GAE5B,IAAMnI,GACJrd,IAAKwlB,GAUP,OARA5L,EAAAlgB,QAAO6G,IAAIC,OAAO6c,EAAYkI,IAG5BlI,aACA9U,SACAga,WAaJjpB,EAAQd,UAAUktB,WAAa,SAAS1lB,EAAK8c,EAAO5f,GAAQ,IAAAyoB,EAAA/sB,KACpDyoB,EAAOrhB,EAAIyY,UACXmN,EAAavE,EAAKwE,YAClBC,EAAiBzE,EAAK/R,gBACtBgT,EAAiBjB,EAAKpQ,gBACtB8U,EAAe7oB,EAAOuoB,UAAYO,EAAAtsB,QAAOusB,UAAU5E,EAAK6E,eAE9DC,KAAKzkB,QAAQuS,YAAsB7Y,IAAfwqB,GACpBO,KAAKzkB,QAAQuS,YAA0B7Y,IAAnB0qB,GAEpB5oB,EAAOsT,OAASoV,EAChB1oB,EAAOsE,WAAaskB,EAAepU,UACnCxU,EAAOuoB,SAAWM,EAClB7oB,EAAO4f,MAAQA,EACf5f,EAAO6Y,UAEP,IAAMqQ,EAAgBpmB,EAAImX,gBAC1BgP,KAAKzkB,QAAQuS,OAAyB,OAAlBmS,GACpB,IAAIrQ,EAASnd,KAAKqsB,iBAAiBxN,cAAc2O,IACjDrQ,EAASA,EAAOsQ,QAAQC,WAEjB3Y,QAAQ,SAAC4G,GACVA,EAAMgE,eACR4N,KAAKzkB,QAAQuS,YAA0B7Y,IAAnBknB,GACpBqD,EAAKY,YAAYrpB,EAAO6Y,OAAQxB,EAAO+N,OAW7ChpB,EAAQd,UAAU+tB,YAAc,SAASC,EAAKjS,EAAO3I,GAC/C2I,uBACF3b,KAAK6tB,kBAAkBD,EAAKjS,GACnBA,uBACT3b,KAAK8tB,iBAAiBF,EAAKjS,GAClBA,wBACT3b,KAAKssB,eAAeyB,kBAAkBH,EAAKjS,EAAO3I,IAUtDtS,EAAQd,UAAUiuB,kBAAoB,SAASD,EAAKjS,GAClD4R,KAAKzkB,QAAQijB,iBAAiBpQ,EAA9BX,EAAAla,SACe6a,EAAMuE,sBACjBpgB,WACFE,KAAKguB,qBAAqBJ,EAAKjS,IAUnCjb,EAAQd,UAAUouB,qBAAuB,SAASJ,EAAKjS,GACrD,IAAM7b,EAAS6b,EAAMuE,YAErBqN,KAAKzkB,QAAQijB,iBAAiBpQ,EAA9BX,EAAAla,SACAysB,KAAKzkB,QAAQijB,iBAAiBjsB,EAA9Bgb,EAAAha,SAEA,IAAM0U,EAAM1V,EAAOyZ,cACP/W,IAARgT,GACFxV,KAAKiuB,gBACHL,EAAKjS,EAAMuS,aAAc1Y,EAAK1V,EAAO0X,cAY3C9W,EAAQd,UAAUquB,gBAAkB,SAASL,EAAKO,EAAS3Y,EAAKG,GAC1DH,EAAI4Y,WAAW,QACjB5Y,EAAMoV,OAAOC,SAASwD,SAAY7Y,GAEpC,IAAM8Y,EAAU,IAAIC,IAAI/Y,GAClBgZ,GAAgBrX,aAAe,GACrC,GAAImX,EAAQG,aAAc,KAAApsB,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IACxB,QAAAC,EAAAC,EAAsB4rB,EAAQG,aAA9B9rB,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAA4C,KAAjCqsB,EAAiCjsB,EAAAO,MAC1CwrB,EAAaE,EAAQ,IAAMA,EAAQ,IAFb,MAAAtrB,GAAAd,GAAA,EAAAC,EAAAa,EAAA,aAAAf,GAAAK,EAAAW,QAAAX,EAAAW,SAAA,WAAAf,EAAA,MAAAC,IAK1B,IAAK,IAAMgB,KAAOoS,EAAQ,CACxB,IAAM3S,EAAQ2S,EAAOpS,GAEP,OAAVP,QAA4BR,IAAVQ,IACpBwrB,EAAajrB,GAAOP,UAGjBwrB,EAAA,cACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,QAEP,IAAMlqB,GACJqqB,QAASjuB,EAAQkuB,gBAAgBN,EAAQO,OAASP,EAAQQ,UAC1DC,YAAa,WAAYpZ,EAASA,EAAA,OAAmB,YACrDwH,OAAQxH,EAAA,OAAiBvT,MAAM,KAC/BosB,aAAcA,EACdzT,WAAYpF,EAAA,WACZrO,KAAM,MACN6mB,QAASA,EACT1f,QAASkH,EAAA,SAEXiY,EAAIpqB,KAAKc,IASX5D,EAAQkuB,gBAAkB,SAASpZ,GACjC,IAAMwZ,EAAIC,SAASC,cAAc,KAEjC,OADAF,EAAElkB,KAAOqkB,UAAU3Z,GACZ4Z,UAAUJ,EAAElkB,OASrBpK,EAAQd,UAAUkuB,iBAAmB,SAASF,EAAKjS,GACjD4R,KAAKzkB,QAAQijB,iBAAiBpQ,EAA9BU,EAAAvb,SACA,IAAMhB,EAAS6b,EAAMuE,YACjBpgB,uBACFE,KAAKqvB,qBAAqBzB,EAAKjS,GACtB7b,wBACTE,KAAKsvB,oBAAoB1B,EAAKjS,IAUlCjb,EAAQd,UAAUyvB,qBAAuB,SAASzB,EAAKjS,GACrD4R,KAAKzkB,QAAQijB,iBAAiBpQ,EAA9BU,EAAAvb,SACA,IAAMhB,EAAS6b,EAAMuE,YACrBqN,KAAKzkB,QAAQijB,iBAAiBjsB,EAA9Bgd,EAAAhc,SAEA,IAAM8H,EAAa9I,EAAO4W,gBACpBgL,EAAW5hB,EAAOyiB,cACxBgL,KAAKzkB,QAAQijB,iBAAiBrK,EAA9B6N,EAAAzuB,SAMA,IALA,IAAM0uB,EAAY9N,EAAS+N,eAGrBC,KAEGjnB,EAAI,EAAGC,EAAK8mB,EAAUhuB,OAAQiH,EAAIC,IAAMD,EAAG,CAClD,IAAMknB,EAAYjO,EAASkO,iBAAiBnnB,GAC5CinB,EAASlsB,MACPqsB,WAAYL,EAAU/mB,GACtBqnB,iBAAkBpO,EAASrJ,cAAc5P,GACrCG,EAAWmnB,mBAAqB,MACpChN,SAAUiN,EAAAlvB,QAAOmiB,OAAOvB,EAASwB,YAAYza,IAC7CwnB,cAAevO,EAASwO,UAAUznB,GAClC0nB,YACER,EAAUS,KAAOT,EAAUU,KAC3BV,EAAUW,KAAOX,EAAUY,QAKjC,IAAM1E,EAAa/rB,EAAO0wB,gBACpBC,EAAgBjsB,OAAOksB,KAAK7E,GAE5BvnB,GACJqqB,QAAS3uB,KAAK2wB,YAAY7wB,GAC1B+rB,WAAY4E,EACZG,gBAAiB/E,EACjBkD,YAAajvB,EAAO+wB,YACpBlV,MAAO7b,EAAOsmB,WACdsJ,SAAUA,EACVoB,UAAWhxB,EAAOixB,eAClB5C,QAASxS,EAAMuS,aACf8C,gBAAiBlxB,EAAOmxB,qBACxB9hB,MAAOrP,EAAOoxB,WACd5pB,KAAM,OACNmH,QAAS3O,EAAOqxB,cAGlBvD,EAAIpqB,KAAKc,IASX5D,EAAQd,UAAU0vB,oBAAsB,SAAS1B,EAAKjS,GACpD,IAAM7b,EAAS6b,EAAMuE,YAErBqN,KAAKzkB,QAAQijB,iBAAiBpQ,EAA9BU,EAAAvb,SACAysB,KAAKzkB,QAAQijB,iBAAiBjsB,EAA9BsxB,EAAAtwB,SAEAd,KAAKiuB,gBACHL,EAAKjS,EAAMuS,aAAcpuB,EAAOuxB,UAAU,GAAIvxB,EAAO0X,cAUzD9W,EAAQd,UAAU+wB,YAAc,SAAS7wB,GACvC,IAAM8hB,EAAO9hB,EAAOuxB,UAEpB,OADA9D,KAAKzkB,QAAQuS,OAAOuG,EAAKpgB,OAAS,GAC3Bd,EAAQkuB,gBAAgBhN,EAAK,KAWtClhB,EAAQd,UAAUsqB,aAAe,SAASoH,EAAW7E,GACnD,IAAM9c,EAAS2hB,EAAU3hB,QAAU,MAC7B6F,EAASxV,KAAKuV,KAAd,WAA6B5F,EAC7B+c,GACJ6E,SACEC,eAAgB,oCAKpB,OAFAxQ,EAAAlgB,QAAO6G,IAAIC,OAAO8kB,OACGlqB,IAAnBiqB,EAA+BA,MAC1BzsB,KAAKga,OAAOyX,KAAKjc,EAAK8b,EAAW5E,IAW1ChsB,EAAQd,UAAU6qB,UAAY,SAASD,EAAKiC,GAC1C,IAAMC,OAAgClqB,IAAnBiqB,EAA+BA,KAE5CjX,EAASxV,KAAKuV,KAAd,WAA6BiV,EAA7B,QACN,OAAOxqB,KAAKga,OAAOwC,IAAIhH,EAAKkX,IAU9BhsB,EAAQd,UAAUkrB,aAAe,SAASN,GACxC,OAAUxqB,KAAKuV,KAAf,WAA8BiV,GAShC9pB,EAAQd,UAAU8xB,gBAAkB,SAASjF,GAC3C,IAAMC,OACelqB,IAAnBiqB,EAA+BA,GAC7BkF,iBAAiB,GAEfnc,EAASxV,KAAKuV,KAAd,qBACN,OAAOvV,KAAKga,OAAOwC,IAAIhH,EAAKkX,IAY9BhsB,EAAQkxB,0BAA4B,SAAS9X,EAAOsS,GAClD,gBAIW5W,GACP,OAAO,IAAI9U,EAAQ8U,EAAKsE,EAAOsS,MAQrC1rB,EAAQ8f,OAASC,QAAQD,OAAO,aAC9BqR,EAAA/wB,QAAmB0f,OAAOtd,QAEbwd,QAAQ,mBAAoBhgB,GAC3CA,EAAQ8f,OAAOsR,QAAQ,kBAAmBpxB,EAAQkxB,2BAClDjR,EAAA7f,QAAS0f,OAAOI,SAASpd,KAAK9C,EAAQ8f,OAAOtd,gBAG9BxC,qFCrdf,QAAAhB,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,yDAKA,IAAMgB,EAAU,WAIdV,KAAK+xB,cAAgB,IAAAvJ,EAAA1nB,SAkBvBJ,EAAQsxB,kBACNnrB,YAZFnG,EAAQuxB,gBACNC,YAAa,aACbC,MAAO,QACPC,QAAS,YAS4BF,YACrCvrB,MAASjG,EAAQuxB,eAAeE,MAChCrrB,QAAWpG,EAAQuxB,eAAeG,QAClCprB,gBAAmBtG,EAAQuxB,eAAeC,YAC1CnrB,WAAcrG,EAAQuxB,eAAeE,MACrClrB,aAAgBvG,EAAQuxB,eAAeG,SASzC1xB,EAAQd,UAAUmuB,kBAAoB,SAASH,EAAKjS,EAAO3I,GACzD,IAAMlT,EAAS6b,EAAMuE,YACrB9E,EAAAta,QAAYirB,iBAAiBjsB,EAA7B2lB,EAAA3kB,SASA,IAPA,IAAM6E,EAAW7F,EAAOuyB,cAEoBC,KACtCC,GACJ9jB,QAAS,GAGFhG,EAAI,EAAGC,EAAK/C,EAASnE,OAAQiH,EAAIC,IAAMD,EAAG,CACjD,IAAM+pB,EAAkB7sB,EAAS8C,GAE7BgqB,EAAY,KACZnM,EAAgBkM,EAAgBE,wBACdlwB,IAAlB8jB,EACFmM,EAAYnM,EAAcliB,KAAKouB,EAAiBxf,QAG1BxQ,KADtB8jB,EAAgB3K,EAAM+W,sBAEpBD,EAAYnM,EAAcliB,KAAKuX,EAAO6W,EAAiBxf,IAG3D,IAAM2f,EAAqB3yB,KAAK+xB,cAActsB,mBAAmB+sB,GAI3DrT,EAAwB,OAAdsT,GAAuBG,MAAMC,QAAQJ,GAA4BA,GAAbA,GAGpE,GAFArX,EAAAta,QAAYua,OAAOuX,MAAMC,QAAQ1T,IAElB,OAAXA,GAAmBA,EAAO3d,OAAS,EAErC,IADA,IAAIsxB,GAAyB,EACpBC,EAAI,EAAGC,EAAK7T,EAAO3d,OAAQuxB,EAAIC,IAAMD,EAAG,CAC/C,IAAM5jB,EAAQgQ,EAAO4T,GACfE,EAAUjS,EAAAlgB,QAAOmlB,OAAO9W,GAAOpN,WACjCpB,EAAWwO,EAAMlG,cACjBiqB,SACJ,GAAKvyB,EAWE,CACL,IAAIwyB,EAAgBX,EAAgBY,QACpCD,EAAc/qB,YAAYzH,GAC1BuyB,EAAiBlzB,KAAK+xB,cAActsB,mBAAmB0tB,GACvDxyB,EAAWwyB,EAAclqB,cACzBkqB,EAAgB,KAChBb,EAAgB9uB,KAAK0vB,OAjBR,CAIb,GAHAA,EAAiBP,IACjBhyB,EAAW6xB,EAAgBvpB,eAGzB,SAEG6pB,IACHR,EAAgB9uB,KAAK0vB,GACrBJ,GAAyB,GAW7B,IAAMO,EAAe1yB,EAAS+D,UACI,OAA9BwuB,EAAe3qB,aACjB2qB,EAAe3qB,eAGjB,IAAM+qB,iBAAkCP,EACxC/yB,KAAKuzB,kBAAkBhB,EAAoBc,EAAclkB,EAAO8jB,EAASK,GACzEJ,EAAe3qB,WAAW+qB,GAAoBL,GAUpD,GAAIX,EAAgB9wB,OAAS,EAAG,CAC9B,IAIM8C,GACJkvB,SAJAlsB,KAAM,oBACN3B,SAAU2sB,GAIVnE,QAASxS,EAAMuS,aACf/e,MAAOojB,EACPjrB,KAAM,WAERsmB,EAAIpqB,KAAKc,KAYb5D,EAAQd,UAAU2zB,kBAAoB,SAASjvB,EAAQ+uB,EAAclkB,EAAO8jB,EAASK,GACnF,GAAMD,KAAgB3yB,EAAQsxB,iBAA9B,CAIA,IAAMyB,EAAY/yB,EAAQsxB,iBAAiBqB,GACrC9vB,MAAU+vB,EAAV,OAAiCL,EAAjC,KACN,KAAI1vB,KAAOe,GAAX,CAIA,IAAMovB,GACJC,gBAEFrvB,EAAOf,GAAOmwB,EACd,IAAME,EAAYzkB,EAAM0kB,UAClBC,EAAa3kB,EAAM2E,WACnBigB,EAAc5kB,EAAM6kB,YACpBC,EAAY9kB,EAAM+kB,UACpBT,IAAc/yB,EAAQuxB,eAAeG,QACrB,OAAdwB,GACF5zB,KAAKm0B,0BACHT,EAAYC,YAAaC,EAAWG,GAE/BN,IAAc/yB,EAAQuxB,eAAeC,YAC1B,OAAhB6B,GACF/zB,KAAKo0B,uBAAuBV,EAAYC,YAAaI,GAE9CN,IAAc/yB,EAAQuxB,eAAeE,OAC3B,OAAf2B,GACF9zB,KAAKq0B,wBAAwBX,EAAYC,YAAaG,GAGxC,OAAdG,GACFj0B,KAAKs0B,iBAAiBZ,EAAYC,YAAaM,MAUnDvzB,EAAQd,UAAU20B,uBAAyB,SAASC,EAAYZ,GAC9D,IAAIa,EAAYb,EAAUc,WACR,OAAdD,IACFrZ,EAAAta,QAAYua,OAA4B,iBAAdoZ,GAA0B7B,MAAMC,QAAQ4B,IAClEA,EAAYE,EAAA7zB,QAAQ8zB,QAAQH,GAC5BrZ,EAAAta,QAAYua,OAAOuX,MAAMC,QAAQ4B,GAAY,+BAC7CD,EAAWC,UAAYI,EAAA/zB,QAAUg0B,cAAcL,GAC/CD,EAAWO,YAAcN,EAAU,KAWvC/zB,EAAQd,UAAUw0B,uBAAyB,SAAST,EAAaI,GAC/D,IAAMS,GACJltB,KAAM,QAERtH,KAAKg1B,yBAAyBR,EAAYT,GAC1CJ,EAAYnwB,KAAKgxB,IAUnB9zB,EAAQd,UAAUy0B,wBAA0B,SAASV,EAAaG,GAChE,IAAIU,SACJ,GAAIV,uBAAqC,EACvCU,GACEltB,KAAM,UAEG2tB,YAAcnB,EAAWoB,YACpC,IAAMtB,EAAYE,EAAWD,UACX,OAAdD,GACF5zB,KAAKu0B,uBAAuBC,EAAYZ,GAE1C,IAAMG,EAAcD,EAAWE,YACX,OAAhBD,GACF/zB,KAAKg1B,yBAAyBR,EAAYT,QAEvC,GAAID,uBAAmC,CAC5C,IAAM5gB,EAAM4gB,EAAWqB,SACvB,QAAY3yB,IAAR0Q,EAAmB,CACrBshB,GACEltB,KAAM,QACN8tB,gBAAiBliB,GAEnB,IAAMib,EAAU2F,EAAW5F,aACX,OAAZC,IACFqG,EAAWa,eAAiBlH,GAE9B,IAAMtV,EAAOib,EAAWrK,UACxB,GAAa,OAAT5Q,EAAe,CACjB,IAAIqL,EAAQ4P,EAAWwB,WACnB/kB,MAAM2T,KACRA,EAAQ,GAEVsQ,EAAWe,aAAe1c,EAAK,GAAKqL,EACpCsQ,EAAWgB,cAAgB3c,EAAK,GAAKqL,EAEvC,IAAI2I,EAAWiH,EAAWxG,cACtB/c,MAAMsc,KACRA,EAAW,GAEb2H,EAAW3H,SAAWO,EAAAtsB,QAAOusB,UAAUR,SAEpC,GAAIiH,uBAA2C,CAKpD,IAAM2B,EAA+C3B,EAAY4B,YACjE,GAAe,OAAXD,EAAiB,CACnBjB,GACEltB,KAAM,SAEO,IAAXmuB,EACFjB,EAAWmB,YAAc,SACL,IAAXF,EACTjB,EAAWmB,YAAc,WACL,IAAXF,EACTjB,EAAWmB,YAAc,OACL,IAAXF,IACTjB,EAAWmB,YAAc,SAE3B,IAAMC,EAAY9B,EAAWrK,UACX,OAAdmM,IACFpB,EAAWe,aAAeK,EAAU,GACpCpB,EAAWgB,cAAgBI,EAAU,IAEvC,IAAMC,EAAgB/B,EAAWxG,cAC5B/c,MAAMslB,IAAoC,IAAlBA,IAC3BrB,EAAW3H,SAAWO,EAAAtsB,QAAOusB,UAAUwI,IAEzC,IAAMC,EAAehC,EAAW5F,aACX,OAAjB4H,IACFtB,EAAWa,eAAiBS,GAE9B,IAAMC,EAAcjC,EAAWE,YACX,OAAhB+B,GACF/1B,KAAKg1B,yBAAyBR,EAAYuB,GAE5C,IAAMC,EAAYlC,EAAWD,UACX,OAAdmC,GACFh2B,KAAKu0B,uBAAuBC,EAAYwB,SAI3BxzB,IAAfgyB,GACFb,EAAYnwB,KAAKgxB,IAYrB9zB,EAAQd,UAAUu0B,0BAA4B,SAASR,EAAaC,EAAWG,GAC7E,IAAMS,GACJltB,KAAM,WAERtH,KAAKu0B,uBAAuBC,EAAYZ,GACpB,OAAhBG,GACF/zB,KAAKg1B,yBAAyBR,EAAYT,GAE5CJ,EAAYnwB,KAAKgxB,IAUnB9zB,EAAQd,UAAUo1B,yBAA2B,SAASR,EAAYT,GAChE,IAAMkC,EAAclC,EAAYW,WAChC,GAAoB,OAAhBuB,EAAsB,CACxB7a,EAAAta,QAAYua,OAA8B,iBAAhB4a,GAA4BrD,MAAMC,QAAQoD,IACpE,IAAMC,EAAkBvB,EAAA7zB,QAAQ8zB,QAAQqB,GACxC7a,EAAAta,QAAYua,OAAOuX,MAAMC,QAAQqD,GAAkB,iCACnD1B,EAAWyB,YAAcpB,EAAA/zB,QAAUg0B,cAAcoB,GACjD1B,EAAW2B,cAAgBD,EAAgB,GAE7C,IAAME,EAAkBrC,EAAYsC,cACZ,OAApBD,IACF5B,EAAW4B,gBAAkBA,EAAgB1yB,KAAK,MAEpD,IAAM4yB,EAAcvC,EAAYwC,gBACZ/zB,IAAhB8zB,IACF9B,EAAW8B,YAAcA,GAELvC,EAAYyC,eAEhChC,EAAWiC,cAAgB1C,EAAYyC,eAW3C91B,EAAQd,UAAU00B,iBAAmB,SAASX,EAAaM,GACzD,IAAMO,GACJltB,KAAM,QAEFovB,EAAQzC,EAAUC,UACxB,QAAc1xB,IAAVk0B,EAAqB,CACvBlC,EAAWkC,MAAQA,EACnB,IAAIC,EAAS,IACTC,EAAS,IAEPC,EAAc5C,EAAU6C,eAEV,SAAhBD,GAA0C,UAAhBA,EAC5BF,EAAS,IACgB,UAAhBE,GAA2C,QAAhBA,IACpCF,EAAS,KAGX,IAAMI,EAAiB9C,EAAU+C,kBAEV,WAAnBD,EACFH,EAAS,IACmB,QAAnBG,IACTH,EAAS,KAEXpC,EAAWyC,WAAX,GAA2BN,EAASC,EAEpC,IAAMM,EAAgBjD,EAAU3G,mBACV9qB,IAAlB00B,IAEF1C,EAAW0C,eAAiC,IAAhBA,EAAsB7f,KAAK8f,IAAIp1B,WAE3DyyB,EAAWyC,WAAa,MAG1B,IAAMG,EAAYnD,EAAUoD,UAC5B,QAAkB70B,IAAd40B,EAAyB,CAC3B,IAAME,EAAOF,EAAUh1B,MAAM,KACzBk1B,EAAK91B,QAAU,IACjBgzB,EAAW+C,WAAaD,EAAK,GAC7B9C,EAAWgD,SAAWF,EAAK,GAC3B9C,EAAWiD,WAAaH,EAAKI,OAAO,GAAGh0B,KAAK,MAIhD,IAAMqwB,EAAcE,EAAUD,YAC9B,GAAoB,OAAhBD,EAAsB,CACxB,IAAMkC,EAAclC,EAAYW,WAChCtZ,EAAAta,QAAYua,OAA8B,iBAAhB4a,GAA4BrD,MAAMC,QAAQoD,IACpE,IAAMC,EAAkBvB,EAAA7zB,QAAQ8zB,QAAQqB,GACxC7a,EAAAta,QAAYua,OAAOuX,MAAMC,QAAQqD,GAAkB,iCACnD1B,EAAWmD,UAAY9C,EAAA/zB,QAAUg0B,cAAcoB,GAC/C1B,EAAWoD,YAAc1B,EAAgB,GACzC,IAAM2B,EAAQ9D,EAAYwC,gBACZ/zB,IAAVq1B,IAEFrD,EAAWsD,WAAaD,EAAQ,GAIpC,IAAMjE,EAAYK,EAAUJ,UAC5B,GAAkB,OAAdD,EAAoB,CACtB,IAAMa,EAAYb,EAAUc,WAC5BtZ,EAAAta,QAAYua,OAA4B,iBAAdoZ,GAA0B7B,MAAMC,QAAQ4B,IAClE,IAAMsD,EAAgBpD,EAAA7zB,QAAQ8zB,QAAQH,GACtCrZ,EAAAta,QAAYua,OAAOuX,MAAMC,QAAQkF,GAAgB,+BACjDvD,EAAWwD,UAAYnD,EAAA/zB,QAAUg0B,cAAciD,QAInBv1B,IAA1BgyB,EAAWyC,aACbzC,EAAWyD,aAAehE,EAAUiE,aAGpC1D,EAAW2D,cAAgBlE,EAAUmE,cAGvCzE,EAAYnwB,KAAKgxB,eAKN9zB,qFCpcf,QAAAhB,EAAA,QACAA,EAAA,SACAA,EAAA,wDAUA,IAAMgB,EAAU,WAMdV,KAAKq4B,8BAMLr4B,KAAKs4B,6BASP53B,EAAQ63B,kBAAoB,MAO5B73B,EAAQ83B,eAAiB,GAiBzB93B,EAAQd,UAAUqpB,2BAA6B,SAASQ,EAAS6L,EAAUmD,GACzE,IAAMC,EAAO14B,KAEb,gBAIW24B,GACP,IAAMC,EAAUD,EAAIC,QACd1P,EAAayP,EAAIzP,WAEjBlW,EAAakW,EAAWG,UAAUrW,WAElC6lB,EAAgB3P,EAAWrQ,KAAK,GAAKqQ,EAAWjW,WAChD6lB,EAAiB5P,EAAWrQ,KAAK,GAAKqQ,EAAWjW,WAEjD2E,GAAUihB,EAAgB,EAAGC,EAAiB,GAE9CjgB,EAAO4Q,IACPpV,EAASwE,EAAK,GAAKkgB,EAAAj4B,QAAMk4B,mBACzBnB,EAAQhf,EAAK,GAAKkgB,EAAAj4B,QAAMk4B,mBACxB9U,EAAQoR,EAASpM,GAEjB+P,EAAMv4B,EAAQ83B,eACdU,EAAMx4B,EAAQ63B,kBAEdY,EACEtB,EAAQoB,EAAOC,EAAOhV,EAAQlR,EAAc,EACpD0lB,EAAKL,8BACGxf,EAAK,GAAKogB,EAAOC,EAAOhV,EAAS,EAEzC,IAAMkV,EACE/kB,EAAS4kB,EAAOC,EAAOhV,EAAQlR,EAAc,EAcrD,GAbA0lB,EAAKJ,4BACGzf,EAAK,GAAKogB,EAAOC,EAAOhV,EAAS,EAGzC0U,EAAQS,YACRT,EAAQU,OAAO,EAAG,GAClBV,EAAQW,OAAOV,EAAe,GAC9BD,EAAQW,OAAOV,EAAeC,GAC9BF,EAAQW,OAAO,EAAGT,GAClBF,EAAQW,OAAO,EAAG,GAClBX,EAAQY,YAGHf,EAGE,CACL,IAAM5L,EAAWO,EAAAtsB,QAAO24B,UAAUhB,KAClCC,EAAKgB,2BAA2Bd,EAAShhB,EAAQuhB,EAC/CC,EAAkBvM,QALpB6L,EAAKiB,eAAef,EAAShhB,EAAQuhB,EACnCC,GAQJR,EAAQhF,UAAY,sBACpBgF,EAAQgB,SAadl5B,EAAQd,UAAU+5B,eAAiB,SAASf,EAAShhB,EACnDuhB,EAAiBC,GACjB,IAAMS,EAAOjiB,EAAO,GAAKuhB,EACnBW,EAAOliB,EAAO,GAAKwhB,EACnBW,EAAOniB,EAAO,GAAKuhB,EACnBa,EAAOpiB,EAAO,GAAKwhB,EAEzBR,EAAQU,OAAOO,EAAMC,GACrBlB,EAAQW,OAAOM,EAAMG,GACrBpB,EAAQW,OAAOQ,EAAMC,GACrBpB,EAAQW,OAAOQ,EAAMD,GACrBlB,EAAQW,OAAOM,EAAMC,GACrBlB,EAAQY,aAYV94B,EAAQd,UAAU85B,2BAA6B,SAASd,EAAShhB,EAC/DuhB,EAAiBC,EAAkBvM,GAEnC,IAAMoN,EAAW5iB,KAAK6iB,KAAK7iB,KAAK8iB,IAAIhB,EAAiB,GACjD9hB,KAAK8iB,IAAIf,EAAkB,IAEzBgB,EAAQ/iB,KAAKgjB,KAAKjB,EAAmBD,GAAmBtM,EAExDyN,EAAQjjB,KAAKgjB,KAAKlB,EAAkBC,GAAoBvM,EAExD0N,EAAK3iB,EAAO,GAAKP,KAAKmjB,IAAIJ,GAASH,EACnCQ,EAAK7iB,EAAO,GAAKP,KAAKqjB,IAAIN,GAASH,EACnCU,EAAK/iB,EAAO,GAAKP,KAAKqjB,IAAIJ,GAASL,EACnCW,EAAKhjB,EAAO,GAAKP,KAAKmjB,IAAIF,GAASL,EACnCY,EAAKjjB,EAAO,GAAKP,KAAKmjB,IAAIJ,GAASH,EACnCa,EAAKljB,EAAO,GAAKP,KAAKqjB,IAAIN,GAASH,EACnCc,EAAKnjB,EAAO,GAAKP,KAAKqjB,IAAIJ,GAASL,EACnCe,EAAKpjB,EAAO,GAAKP,KAAKmjB,IAAIF,GAASL,EAEzCrB,EAAQU,OAAOiB,EAAIE,GACnB7B,EAAQW,OAAOoB,EAAIC,GACnBhC,EAAQW,OAAOsB,EAAIC,GACnBlC,EAAQW,OAAOwB,EAAIC,GACnBpC,EAAQW,OAAOgB,EAAIE,GACnB7B,EAAQY,aAkBV94B,EAAQd,UAAU0pB,gBAAkB,SAClCH,EAASC,EAAe6R,EAAcC,GAatC,IAXA,IAAMC,EAAWhS,EAAQ,GAAKC,EACxBgS,EAAYjS,EAAQ,GAAKC,EAEzBiS,EAAaF,EAAWz6B,EAAQ63B,kBAClC73B,EAAQ83B,eAAiByC,EAAa,GACpCK,EAAcF,EAAY16B,EAAQ63B,kBACpC73B,EAAQ83B,eAAiByC,EAAa,GAEpC/W,EAAQ7M,KAAKkkB,IAAIF,EAAYC,GAE/BE,GAAW,EACN/yB,EAAI,EAAGC,EAAKwyB,EAAe15B,OAAQiH,EAAIC,IAAMD,EAChDyb,EAAQgX,EAAezyB,KACzB+yB,EAAUN,EAAezyB,IAI7B,OAAO+yB,GAYT96B,EAAQd,UAAU67B,qBAAuB,SACvCtS,EAAS8R,EAAcS,GAEvB,IAAMC,EACFj7B,EAAQ83B,eAAiB93B,EAAQ63B,kBAE/BqD,EAAeX,EAAa,GAAKS,GAClCC,EAAexS,EAAQ,IACtB0S,EAAeZ,EAAa,GAAKS,GAClCC,EAAexS,EAAQ,IAI5B,OAF0B9R,KAAKykB,IAAIF,EAAaC,IAWlDn7B,EAAQd,UAAUm8B,oBAAsB,SAASC,GAC/C,OAAQA,EAAU,GAAKh8B,KAAKq4B,8BAC1B2D,EAAU,GAAKh8B,KAAKs4B,8BASxB53B,EAAQd,UAAUq8B,qBAAuB,SAASD,GAChD,OAAQA,EAAU,GAAKh8B,KAAKq4B,8BAC1B2D,EAAU,GAAKh8B,KAAKs4B,8BASxB53B,EAAQd,UAAUs8B,gBAAkB,SAASF,GAC3C,OAAQA,EAAU,GAAKh8B,KAAKq4B,8BAC1B2D,EAAU,GAAKh8B,KAAKs4B,8BASxB53B,EAAQd,UAAUu8B,iBAAmB,SAASH,GAC5C,OAAQA,EAAU,GAAKh8B,KAAKq4B,8BAC1B2D,EAAU,GAAKh8B,KAAKs4B,+BAMxB53B,EAAQ8f,OAASC,QAAQD,OAAO,sBACjBE,QAAQ,iBAAkBhgB,GACzCigB,EAAA7f,QAAS0f,OAAOI,SAASpd,KAAK9C,EAAQ8f,OAAOtd,gBAG9BxC,oFCrSf,QAAAhB,EAAA,QACAA,EAAA,SAGAA,EAAA,OAEAA,EAAA,SACAA,EAAA,uDAKA,IAAMgB,EAAU+f,QAAQD,OAAO,cAE/BG,EAAA7f,QAAS0f,OAAOI,SAASpd,KAAK9C,EAAQwC,MAkCtCxC,EAAQ07B,WAAa,SAASC,EAASC,GACrC,OACEC,SAAU,IAMVC,KAAM,SAACC,EAAO/N,EAASgO,GAErB,IACMC,EAAOD,EAAA,QAEPt1B,EAAMq1B,EAAMG,MAAMD,GACxBvhB,EAAAta,QAAYirB,iBAAiB3kB,EAA7BmhB,EAAAznB,SAEAsG,EAAIy1B,UAAUnO,EAAQ,IAEtB4N,EAAuBl1B,IAAMA,EAQ7B,IACM01B,EAAmBJ,EAAA,oBAGzB,GAFqBD,EAAMG,MAAME,GAEf,CAChB,IACMC,EAAuBL,EAAA,wBAEvBM,EACJP,EAAMG,MAAMG,GAEdE,EAAAn8B,QAAS2X,OACP4jB,EACA,SACA,WACE,GAAIW,EAAkB,CAEpB,IAAME,EAAQC,KAAKC,MACfC,GAAO,GACQ,SAAbC,IACJl2B,EAAIm2B,aACJn2B,EAAIo2B,aACAH,GACFhB,EAAQoB,sBAAsBH,GAE5BH,KAAKC,MAAQF,EAAQF,IACvBK,GAAO,GAGXC,QAGAl2B,EAAIm2B,mBA1DlB78B,EAAQ07B,wDAoER17B,EAAQg9B,UAAU,UAAWh9B,EAAQ07B,sBAGtB17B,iVCvHfhB,EAAA,QACAA,EAAA,UAGAA,EAAA,OAEAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,uDAEA,IAAMgB,aAqBJ,SAAAA,EAAYi9B,gGAAiBtZ,CAAArkB,KAAAU,GAM3BV,KAAK49B,iBAAmBD,EAMxB39B,KAAK69B,KAAO,KAMZ79B,KAAK89B,iBAELb,EAAAn8B,QAAS2X,OAAOzY,KAAK49B,iBAAkB,MAAO59B,KAAK+9B,sBAAuB/9B,MAzCxE,OAAAU,EAAAs9B,SAAA,mBAAA9Y,EAAAxkB,IAAA6C,IAAA,WAAAP,MAAA,SAiEKoE,GAGP,IAAMqhB,EAAOrhB,EAAIyY,UACjB7f,KAAK89B,cAAct6B,KACjBy5B,EAAAn8B,QAAS2X,OAAOgQ,EAAM,oBAAqBzoB,KAAKi+B,4BAA6Bj+B,OAI/E,IAAMgT,EAAayV,EAAKpQ,gBACxB+C,EAAAta,QAAYo9B,aAAalrB,GACzBhT,KAAKm+B,6BAA6BnrB,MA5EhCzP,IAAA,aAAAP,MAAA,SAoFOoE,GACT6jB,EAAAnqB,QAAas9B,QAAQp+B,KAAK89B,eAC1B99B,KAAK89B,oBAtFHv6B,IAAA,8BAAAP,MAAA,SA+FwB21B,GAC1B,IAAMlQ,EAAOkQ,EAAI0F,OACjBjjB,EAAAta,QAAYirB,iBAAiBtD,EAA7BC,EAAA5nB,SACA,IAAMkS,EAAayV,EAAKpQ,gBACxB+C,EAAAta,QAAYo9B,aAAalrB,GACzBhT,KAAKm+B,6BAA6BnrB,MApGhCzP,IAAA,+BAAAP,MAAA,SA4GyBgQ,GAAY,IAAA+Z,EAAA/sB,KACvCA,KAAK49B,iBAAiB7oB,QAAQ,SAACmG,GAC7B6R,EAAKuR,4BAA4BpjB,EAAYlI,QA9G7CzP,IAAA,8BAAAP,MAAA,SAwHwBkY,EAAYlI,GAGtC,GAAKkI,EAAWqjB,uBAAhB,CAIA,IAAMzZ,EAAgB5J,EAAW4J,cAC3BE,EAAgB9J,EAAW8J,cAQ3BT,GAN+B,OAAlBS,QACGxiB,IAAlBwiB,GACAhS,GAAcgS,KACmB,OAAlBF,QACGtiB,IAAlBsiB,GACA9R,GAAc8R,GAGlB5J,EAAWqJ,QAAUA,MA1InBhhB,IAAA,wBAAAP,MAAA,SAmJkByoB,GACpB,IAAMvQ,EAAaE,EAAAta,QAAYirB,iBAC7BN,EAAMiD,QADW8P,EAAA19B,SAEnB,GAAId,KAAK69B,KAAM,CACb,IAAM7qB,EAAahT,KAAK69B,KAAKhe,UAAUxH,gBACvC+C,EAAAta,QAAYo9B,aAAalrB,GACzBhT,KAAKs+B,4BAA4BpjB,EAAYlI,OAzJ7CzP,IAAA,MAAAuY,IAAA,SAgDI1U,GACFpH,KAAK69B,MACP79B,KAAKy+B,WAAWz+B,KAAK69B,MAGvB79B,KAAK69B,KAAOz2B,EAERA,GACFpH,KAAK0+B,SAASt3B,OAxDd1G,KAgKNigB,EAAA7f,QAAS0f,OAAOE,QACd,yBAA0BhgB,aAGbA,oFC/Kf,QAAAhB,EAAA,SACAA,EAAA,MACAA,EAAA,wDAOA,IAAMgB,EAAU,SAASi+B,EAASnhB,GAMhCxd,KAAK4+B,SAAWD,EAMhB3+B,KAAK6+B,UAAY,KAMjB7+B,KAAK8+B,OAASthB,GAShB9c,EAAQd,UAAUkmB,WAAa,SAASvgB,GACtCvF,KAAK4+B,SAAS9Y,WAAWvgB,EAASvF,KAAK8+B,SASzCp+B,EAAQd,UAAUsmB,cAAgB,SAAS3gB,GACzCvF,KAAK4+B,SAAS1Y,cAAc3gB,EAASvF,KAAK8+B,SAQ5Cp+B,EAAQd,UAAUumB,MAAQ,WACxBnmB,KAAK4+B,SAASzY,MAAMnmB,KAAK8+B,SAa3Bp+B,EAAQd,UAAUm/B,YAAc,SAASp5B,GAChB,OAAnB3F,KAAK6+B,YACP7+B,KAAK6+B,UAAU1Y,QACf8W,EAAAn8B,QAASk+B,SAASh/B,KAAK6+B,UAAW,MAAO7+B,KAAKi/B,kBAAmBj/B,MACjEi9B,EAAAn8B,QAASk+B,SAASh/B,KAAK6+B,UAAW,SAAU7+B,KAAKk/B,qBAAsBl/B,OAExD,OAAb2F,IACFA,EAASoP,QAAQ,SAASxP,GACxBvF,KAAK8lB,WAAWvgB,IACfvF,MACHi9B,EAAAn8B,QAAS2X,OAAO9S,EAAU,MAAO3F,KAAKi/B,kBAAmBj/B,MACzDi9B,EAAAn8B,QAAS2X,OAAO9S,EAAU,SAAU3F,KAAKk/B,qBAAsBl/B,OAEjEA,KAAK6+B,UAAYl5B,GAUnBjF,EAAQd,UAAUgnB,SAAW,SAASzX,GACpCnP,KAAK4+B,SAAShY,SAASzX,EAAOnP,KAAK8+B,SAQrCp+B,EAAQd,UAAUq/B,kBAAoB,SAAStG,GAC7C,IAAMpzB,EAAqCozB,EAAIjK,QAC/C1uB,KAAK8lB,WAAWvgB,IAQlB7E,EAAQd,UAAUs/B,qBAAuB,SAASvG,GAChD,IAAMpzB,EAAqCozB,EAAIjK,QAC/C1uB,KAAKkmB,cAAc3gB,IAMrB7E,EAAQ8f,OAASC,QAAQD,OAAO,yBAChCG,EAAA7f,QAAS0f,OAAOI,SAASpd,KAAK9C,EAAQ8f,OAAOtd,gBAG9BxC,oFC3Hf,MAAA0jB,EAAA1kB,EAAA,uCAKA,IAAMgB,EAAU+f,QAAQD,OAAO,mBAE/BG,EAAA7f,QAAS0f,OAAOI,SAASpd,KAAK9C,EAAQwC,MA6BtCxC,EAAQ07B,WAAa,WACnB,OACEG,SAAU,IACVC,KAAM,SAAC2C,EAAQC,EAAUC,GACvB,IAAMC,EAAUD,EAAA,gBACVj4B,EAA6B+3B,EAAOvC,MAAM0C,GAEhD,SAASC,EAAS7Q,GAChB,IAAMze,EAASye,EAAQ8Q,KAAK,eAC5B,QAAeh9B,IAAXyN,EAAsB,CACxB,IAAM4I,EAA+BzR,EAAIqiB,UACzCriB,EAAIyY,UAAU4f,IAAIN,EAAOvC,MAAM3sB,IAAU4I,SAE3C,IAAM8P,EAAO+F,EAAQ8Q,KAAK,kBACbh9B,IAATmmB,GACFvhB,EAAIyY,UAAU6f,QAAQP,EAAOvC,MAAMjU,IAKvCyW,EAAS7V,GAAG,QAAS,IAAK,SAASkC,GACjC8T,EAAS9e,QAAQiO,QAAQiR,EAAE3/B,UAI7Bo/B,EAAS7V,GAAG,SAAU,SAACkC,GACrB,IAAMmU,EAAWnU,EAAM4S,OAAOp4B,QAAQwlB,EAAM4S,OAAOwB,eACnDN,EAAS9e,QAAQiO,QAAQkR,SAQjCl/B,EAAQg9B,UAAU,eAAgBh9B,EAAQ07B,sBAG3B17B,oFC1Ef,QAAAhB,EAAA,QACAA,EAAA,QACAA,EAAA,uDAKA,IAAMgB,EAAU+f,QAAQD,OAAO,oBAE/BG,EAAA7f,QAAS0f,OAAOI,SAASpd,KAAK9C,EAAQwC,MAuBtCxC,EAAQ07B,WAAa,SAASC,GAG5B,OACEE,SAAU,IAMVC,KAAM,SAACC,EAAO/N,EAASgO,GACrB,IACMC,EAAOD,EAAA,cACPt1B,EAAMq1B,EAAMG,MAAMD,GACxBvhB,EAAAta,QAAYirB,iBAAiB3kB,EAA7BmhB,EAAAznB,SAEA,IAAMg/B,EAAYpD,EAAA,mBAClBthB,EAAAta,QAAYua,YAAqB7Y,IAAds9B,GAEnB,IAAI5C,SACA6C,SAEEC,EAAiB,SAAjBA,IACJ54B,EAAIm2B,aACJn2B,EAAIo2B,aAEAL,KAAKC,MAAQF,EAzBgB,MA0B/B6C,EAAoB1D,EAAQoB,sBAAsBuC,KAMtDtR,EAAQnF,GAAG,gBAAiB,WAC1BniB,EAAIm2B,aACJn2B,EAAIo2B,eAGNf,EAAMwD,OAAOH,EAAW,SAACI,EAAQC,GAC3BD,GAAUC,IACZjD,EAAQC,KAAKC,MACbf,EAAQ+D,qBAAqBL,GAC7BA,EAAoB1D,EAAQoB,sBAAsBuC,SAQ5Dt/B,EAAQg9B,UAAU,gBAAiBh9B,EAAQ07B,sBAG5B17B,oFCrFf,QAAAhB,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,uDAKA,IAAMgB,EAAU+f,QAAQD,OAAO,wBAE/BG,EAAA7f,QAAS0f,OAAOI,SAASpd,KAAK9C,EAAQwC,MAGtCxC,EAAQsC,MAAM,+BAMZ,SAAC0rB,EAASgO,GACR,IAAM2D,EAAc3D,EAAA,6BACpB,YAAuBl6B,IAAhB69B,EAA4BA,EAC9B1f,EAAA7f,QAASw/B,sBADP,4BAwDX5/B,EAAQ07B,WAAa,SAASmE,GAC5B,OACEhE,SAAU,IACVE,OAAO,EACPzR,WAAY,8BACZqV,YAAaE,IAKjB7/B,EAAQg9B,UAAU,oBAAqBh9B,EAAQ07B,YAc/C17B,EAAQ8/B,yBAA2B,SAASrB,EAAQC,EAAUC,GAAQ,IAAAtS,EAAA/sB,KAE9DygC,EAAapB,EAAA,kBAOnBr/B,KAAK0gC,OACFvB,EAAOvC,MAAM6D,GAChBlT,KAAKzkB,QAAQuS,YAAuB7Y,IAAhBxC,KAAK0gC,QAMzB1gC,KAAK2gC,WAELxB,EAAOc,OAAO,kBAAMz7B,OAAOksB,KAAK3D,EAAK2T,QAAQl/B,QAAQ,SAACo/B,GACpD7T,EAAK4T,WAAan8B,OAAOksB,KAAK3D,EAAK2T,QAAQt5B,IAAIy5B,QAC/C9T,EAAK4T,WAAWG,KAAKzjB,EAAAvc,QAAQigC,6BAG/B,IAAMzB,EAAUD,EAAA,qBAMhBr/B,KAAK69B,KAA8BsB,EAAOvC,MAAM0C,GAChD/R,KAAKzkB,QAAQijB,iBAAiB/rB,KAAK69B,KAAnCtV,EAAAznB,SAEA,IAAMkgC,EAAc3B,EAAA,yBACdp5B,EAAUk5B,EAAOvC,MAAMoE,GA2B7B,GArBAhhC,KAAKiG,QAAUvF,EAAQ8/B,yBAAyBS,YAAYh7B,GAM5DjG,KAAKkhC,QAAU/B,EAMfn/B,KAAKmhC,qBAAuB,KAM5BnhC,KAAKohC,kBAAe5+B,EAGP,OADAxC,KAAK69B,KAAKhe,UACJ,CACjB,IAAMwhB,EAAcrhC,KAAK69B,KAAKhe,UAAUyhB,eACpB9+B,IAAhB6+B,IACFrhC,KAAKohC,aAAephC,KAAKs1B,SAAS+L,IAItCpE,EAAAn8B,QAAS2X,OAAOzY,KAAK69B,KAAM,cAAe79B,KAAKuhC,kBAAmBvhC,MAElEA,KAAKwhC,oCAELrC,EAAA,kBAA8Bn/B,MAUhCU,EAAQ8/B,yBAAyBS,YAAc,SAASh7B,GACtD,IAAIw7B,GAAS,EAIb,YAHgBj/B,IAAZyD,IACFw7B,EAA8B,GAArBx7B,EAAA,SAGTw7B,OAAQA,IAUZ/gC,EAAQ8/B,yBAAyB5gC,UAAU01B,SAAW,SAAS3M,GAC7D,OAAO3oB,KAAK0gC,OAAO/X,IAQrBjoB,EAAQ8/B,yBAAyB5gC,UAAU8hC,WAAa,SAAS/Y,GAC/D3oB,KAAK69B,KAAKhe,UAAU6f,QAAQ/W,IAQ9BjoB,EAAQ8/B,yBAAyB5gC,UAAU+hC,wBAA0B,SAASpa,GAAG,IAAAqa,EAAA5hC,KACzEyoB,EAAOzoB,KAAK69B,KAAKhe,UACjBuhB,EAAephC,KAAK0gC,OAA8BjY,EAAK6Y,gBAaxC9+B,IAAjB4+B,GACFphC,KAAKkhC,QAAQW,YAAY,WACvBD,EAAKR,aAAeA,KAU1B1gC,EAAQ8/B,yBAAyB5gC,UAAU2hC,kBAAoB,SAASha,GACtEvnB,KAAKwhC,oCACLxhC,KAAK2hC,wBAAwB,OAO/BjhC,EAAQ8/B,yBAAyB5gC,UAAU4hC,kCAAoC,WAC3C,OAA9BxhC,KAAKmhC,sBACPlE,EAAAn8B,QAASkU,cAAchV,KAAKmhC,sBAE9B,IAAM1Y,EAAOzoB,KAAK69B,KAAKhe,UACvB7f,KAAKmhC,qBAAuBlE,EAAAn8B,QAAS2X,OAAOgQ,EAC1C,oBAAqBzoB,KAAK2hC,wBAC1B3hC,OAIJU,EAAQsqB,WAAW,8BACjBtqB,EAAQ8/B,oCAGK9/B,6JC/QfohC,EAAApiC,EAAA,IAwBAqH,EAAA,SAAAH,EAAAm7B,GACAC,EAAA,EAAA59B,KAAApE,MACAA,KAAAiiC,eAAAr7B,EAAAm7B,IAGAv9B,OAAA09B,EAAA,SAAA19B,CAAAuC,EAAAi7B,EAAA,GAQAj7B,EAAAnH,UAAAmB,YAAA,SAAAohC,GACAniC,KAAAoiC,gBAGA59B,OAAA69B,EAAA,OAAA79B,CAAAxE,KAAAoiC,gBAAAD,EAAAG,sBAFAtiC,KAAAoiC,gBAAAD,EAAAG,qBAAA7U,QAIAztB,KAAAkU,WAUAnN,EAAAnH,UAAAwzB,MAAA,WACA,IAAAmP,EAAA,IAAAx7B,EAAA,MAEA,OADAw7B,EAAAC,mBAAAxiC,KAAA2pB,OAAA3pB,KAAAoiC,gBAAA3U,SACA8U,GAOAx7B,EAAAnH,UAAA6iC,eAAA,SAAApyB,EAAAC,EAAAoyB,EAAAC,GACA,GAAAA,EAAAn+B,OAAAo+B,EAAA,yBAAAp+B,CAAAxE,KAAAuY,YAAAlI,EAAAC,GACA,OAAAqyB,EAEA,IAEAl6B,EAAAC,EAAAqqB,EAFAqP,EAAApiC,KAAAoiC,gBACAS,EAAA7iC,KAAA6iC,OAEA,IAAAp6B,EAAA,EAAAC,EAAA05B,EAAA5gC,OAA0CiH,EAAAC,EAAQD,GAAAo6B,EAAA,CAClD,IAAAC,EAAAt+B,OAAAs9B,EAAA,gBAAAt9B,CACA6L,EAAAC,EAAA8xB,EAAA35B,GAAA25B,EAAA35B,EAAA,IACA,GAAAq6B,EAAAH,EAAA,CAEA,IADAA,EAAAG,EACA/P,EAAA,EAAiBA,EAAA8P,IAAY9P,EAC7B2P,EAAA3P,GAAAqP,EAAA35B,EAAAsqB,GAEA2P,EAAAlhC,OAAAqhC,GAGA,OAAAF,GAUA57B,EAAAnH,UAAA2H,eAAA,WACA,OAAAw7B,EAAA,EAAAn8B,YACA5G,KAAAoiC,gBAAA,EAAApiC,KAAAoiC,gBAAA5gC,OAAAxB,KAAA6iC,SAUA97B,EAAAnH,UAAAojC,SAAA,SAAAxlB,GACA,IAAAjU,EAAAvJ,KAAAoiC,gBACApiC,KAAAoiC,gBAAA5gC,OAAAxB,KAAA6iC,OAAA,EACA,GAAArlB,EAAA,GAAAjU,GAAAiU,EACA,YAEA,IAAA2kB,EAAA,IAAAc,EAAA,cAGA,OAFAd,EAAAK,mBAAAxiC,KAAA2pB,OAAA3pB,KAAAoiC,gBAAA3U,MACAjQ,EAAAxd,KAAA6iC,QAAArlB,EAAA,GAAAxd,KAAA6iC,SACAV,GASAp7B,EAAAnH,UAAA81B,UAAA,WACA,IAKAjtB,EAAAC,EALA05B,EAAApiC,KAAAoiC,gBACAzY,EAAA3pB,KAAA2pB,OACAkZ,EAAA7iC,KAAA6iC,OAEApN,KAEA,IAAAhtB,EAAA,EAAAC,EAAA05B,EAAA5gC,OAA0CiH,EAAAC,EAAQD,GAAAo6B,EAAA,CAClD,IAAAV,EAAA,IAAAc,EAAA,cACAd,EAAAK,mBAAA7Y,EAAAyY,EAAA3U,MAAAhlB,IAAAo6B,IACApN,EAAAjyB,KAAA2+B,GAEA,OAAA1M,GAQA1uB,EAAAnH,UAAA8E,QAAA,WACA,OAAAw+B,EAAA,QAAAC,aAQAp8B,EAAAnH,UAAAwjC,iBAAA,SAAAnzB,GACA,IAEAxH,EAAAC,EAAA2H,EAAAC,EAFA8xB,EAAApiC,KAAAoiC,gBACAS,EAAA7iC,KAAA6iC,OAEA,IAAAp6B,EAAA,EAAAC,EAAA05B,EAAA5gC,OAA0CiH,EAAAC,EAAQD,GAAAo6B,EAGlD,GAFAxyB,EAAA+xB,EAAA35B,GACA6H,EAAA8xB,EAAA35B,EAAA,GACAjE,OAAAo+B,EAAA,WAAAp+B,CAAAyL,EAAAI,EAAAC,GACA,SAGA,UAWAvJ,EAAAnH,UAAAqiC,eAAA,SAAAr7B,EAAAm7B,GACAn7B,GAGA5G,KAAAqjC,UAAAtB,EAAAn7B,EAAA,GACA5G,KAAAoiC,kBACApiC,KAAAoiC,oBAEApiC,KAAAoiC,gBAAA5gC,OAAA8hC,EAAA,EAAA18B,YACA5G,KAAAoiC,gBAAA,EAAAx7B,EAAA5G,KAAA6iC,QACA7iC,KAAAkU,WARAlU,KAAAwiC,mBAAAe,EAAA,QAAAC,GAAA,OAiBAz8B,EAAAnH,UAAA4iC,mBAAA,SAAA7Y,EAAAyY,GACApiC,KAAAyjC,2BAAA9Z,EAAAyY,GACApiC,KAAAkU,WAEA3T,EAAA,8LCnMAmjC,EAAAhkC,EAAA,IA2BAsH,EAAA,SAAAJ,EAAAm7B,GAEAC,EAAA,EAAA59B,KAAApE,MAMAA,KAAA2jC,SAMA3jC,KAAA4jC,WAAA,EAMA5jC,KAAA6jC,mBAAA,EAEA7jC,KAAAiiC,eAAAr7B,EAAAm7B,IAIAv9B,OAAA09B,EAAA,SAAA19B,CAAAwC,EAAAg7B,EAAA,GAQAh7B,EAAApH,UAAAqB,iBAAA,SAAA6iC,GACA9jC,KAAAoiC,gBAGA59B,OAAA69B,EAAA,OAAA79B,CAAAxE,KAAAoiC,gBAAA0B,EAAAxB,qBAAA7U,SAFAztB,KAAAoiC,gBAAA0B,EAAAxB,qBAAA7U,QAIAztB,KAAA2jC,MAAAngC,KAAAxD,KAAAoiC,gBAAA5gC,QACAxB,KAAAkU,WAUAlN,EAAApH,UAAAwzB,MAAA,WACA,IAAA2Q,EAAA,IAAA/8B,EAAA,MAGA,OAFA+8B,EAAAvB,mBACAxiC,KAAA2pB,OAAA3pB,KAAAoiC,gBAAA3U,QAAAztB,KAAA2jC,MAAAlW,SACAsW,GAOA/8B,EAAApH,UAAA6iC,eAAA,SAAApyB,EAAAC,EAAAoyB,EAAAC,GACA,OAAAA,EAAAn+B,OAAAo+B,EAAA,yBAAAp+B,CAAAxE,KAAAuY,YAAAlI,EAAAC,GACAqyB,GAEA3iC,KAAA6jC,mBAAA7jC,KAAAoY,gBACApY,KAAA4jC,UAAAvsB,KAAA6iB,KAAA8J,EAAA,EAAAC,oBACAjkC,KAAAoiC,gBAAA,EAAApiC,KAAA2jC,MAAA3jC,KAAA6iC,OAAA,IACA7iC,KAAA6jC,kBAAA7jC,KAAAoY,eAEA4rB,EAAA,EAAAE,iBACAlkC,KAAAoiC,gBAAA,EAAApiC,KAAA2jC,MAAA3jC,KAAA6iC,OACA7iC,KAAA4jC,WAAA,EAAAvzB,EAAAC,EAAAoyB,EAAAC,KA0BA37B,EAAApH,UAAAukC,iBAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAtkC,KAAA2pB,QAAA4Z,EAAA,QAAAgB,KACAvkC,KAAA2pB,QAAA4Z,EAAA,QAAAiB,MACA,IAAAxkC,KAAAoiC,gBAAA5gC,OACA,YAEA,IAAAijC,OAAAjiC,IAAA6hC,KACAK,OAAAliC,IAAA8hC,KACA,OAAAK,EAAA,EAAAC,yBAAA5kC,KAAAoiC,gBAAA,EACApiC,KAAA2jC,MAAA3jC,KAAA6iC,OAAAuB,EAAAK,EAAAC,IAUA19B,EAAApH,UAAA2H,eAAA,WACA,OAAAs9B,EAAA,EAAAC,aACA9kC,KAAAoiC,gBAAA,EAAApiC,KAAA2jC,MAAA3jC,KAAA6iC,SAOA77B,EAAApH,UAAAmlC,QAAA,WACA,OAAA/kC,KAAA2jC,OAUA38B,EAAApH,UAAAolC,cAAA,SAAAxnB,GACA,GAAAA,EAAA,GAAAxd,KAAA2jC,MAAAniC,QAAAgc,EACA,YAEA,IAAAsmB,EAAA,IAAAmB,EAAA,cAGA,OAFAnB,EAAAtB,mBAAAxiC,KAAA2pB,OAAA3pB,KAAAoiC,gBAAA3U,MACA,IAAAjQ,EAAA,EAAAxd,KAAA2jC,MAAAnmB,EAAA,GAAAxd,KAAA2jC,MAAAnmB,KACAsmB,GASA98B,EAAApH,UAAAslC,eAAA,WACA,IAMAz8B,EAAAC,EANA05B,EAAApiC,KAAAoiC,gBACA+C,EAAAnlC,KAAA2jC,MACAha,EAAA3pB,KAAA2pB,OAEAyb,KACAC,EAAA,EAEA,IAAA58B,EAAA,EAAAC,EAAAy8B,EAAA3jC,OAA+BiH,EAAAC,IAAQD,EAAA,CACvC,IAAA68B,EAAAH,EAAA18B,GACAq7B,EAAA,IAAAmB,EAAA,cACAnB,EAAAtB,mBAAA7Y,EAAAyY,EAAA3U,MAAA4X,EAAAC,IACAF,EAAA5hC,KAAAsgC,GACAuB,EAAAC,EAEA,OAAAF,GAOAp+B,EAAApH,UAAA2lC,iBAAA,WACA,IAKA98B,EAAAC,EALA88B,KACApD,EAAApiC,KAAAoiC,gBACAiD,EAAA,EACAF,EAAAnlC,KAAA2jC,MACAd,EAAA7iC,KAAA6iC,OAEA,IAAAp6B,EAAA,EAAAC,EAAAy8B,EAAA3jC,OAA+BiH,EAAAC,IAAQD,EAAA,CACvC,IAAA68B,EAAAH,EAAA18B,GACAg9B,EAAAd,EAAA,EAAAb,WACA1B,EAAAiD,EAAAC,EAAAzC,EAAA,IACAr+B,OAAA69B,EAAA,OAAA79B,CAAAghC,EAAAC,GACAJ,EAAAC,EAEA,OAAAE,GAOAx+B,EAAApH,UAAA8lC,8BAAA,SAAAC,GACA,IAAAC,KACAC,KACAD,EAAApkC,OAAAkiC,EAAA,EAAAoC,gBACA9lC,KAAAoiC,gBAAA,EAAApiC,KAAA2jC,MAAA3jC,KAAA6iC,OAAA8C,EACAC,EAAA,EAAAC,GACA,IAAAE,EAAA,IAAA/+B,EAAA,MAGA,OAFA++B,EAAAvD,mBACAe,EAAA,QAAAC,GAAAoC,EAAAC,GACAE,GAQA/+B,EAAApH,UAAA8E,QAAA,WACA,OAAAw+B,EAAA,QAAA8C,mBAQAh/B,EAAApH,UAAAwjC,iBAAA,SAAAnzB,GACA,OAAAg2B,EAAA,EAAAb,YACAplC,KAAAoiC,gBAAA,EAAApiC,KAAA2jC,MAAA3jC,KAAA6iC,OAAA5yB,IAWAjJ,EAAApH,UAAAqiC,eAAA,SAAAr7B,EAAAm7B,GACA,GAAAn7B,EAEG,CACH5G,KAAAqjC,UAAAtB,EAAAn7B,EAAA,GACA5G,KAAAoiC,kBACApiC,KAAAoiC,oBAEA,IAAA+C,EAAAe,EAAA,EAAApB,aACA9kC,KAAAoiC,gBAAA,EAAAx7B,EAAA5G,KAAA6iC,OAAA7iC,KAAA2jC,OACA3jC,KAAAoiC,gBAAA5gC,OAAA,IAAA2jC,EAAA3jC,OAAA,EAAA2jC,IAAA3jC,OAAA,GACAxB,KAAAkU,eATAlU,KAAAwiC,mBAAAe,EAAA,QAAAC,GAAA,KAAAxjC,KAAA2jC,QAmBA38B,EAAApH,UAAA4iC,mBAAA,SAAA7Y,EAAAyY,EAAA+C,GACAnlC,KAAAyjC,2BAAA9Z,EAAAyY,GACApiC,KAAA2jC,MAAAwB,EACAnlC,KAAAkU,WAOAlN,EAAApH,UAAAumC,eAAA,SAAAf,GACA,IAGA38B,EAAAC,EAHAihB,EAAA3pB,KAAAomC,YACAhE,KACA+C,KAEA,IAAA18B,EAAA,EAAAC,EAAA08B,EAAA5jC,OAAsCiH,EAAAC,IAAQD,EAAA,CAC9C,IAAAq7B,EAAAsB,EAAA38B,GACA,IAAAA,IACAkhB,EAAAma,EAAAsC,aAEA5hC,OAAA69B,EAAA,OAAA79B,CAAA49B,EAAA0B,EAAAxB,sBACA6C,EAAA3hC,KAAA4+B,EAAA5gC,QAEAxB,KAAAwiC,mBAAA7Y,EAAAyY,EAAA+C,IAEA5kC,EAAA,sOCrTA8lC,EAAA3mC,EAAA,IAgCAuH,EAAA,SAAAL,EAAAm7B,GAEAuE,EAAA,EAAAliC,KAAApE,MAMAA,KAAAumC,UAMAvmC,KAAAwmC,6BAAA,EAMAxmC,KAAAymC,oBAAA,KAMAzmC,KAAA4jC,WAAA,EAMA5jC,KAAA6jC,mBAAA,EAMA7jC,KAAA0mC,mBAAA,EAMA1mC,KAAA2mC,yBAAA,KAEA3mC,KAAAiiC,eAAAr7B,EAAAm7B,IAIAv9B,OAAA09B,EAAA,SAAA19B,CAAAyC,EAAAq/B,EAAA,GAQAr/B,EAAArH,UAAAuB,cAAA,SAAAylC,GAEA,IAAAzB,EACA,GAAAnlC,KAAAoiC,gBAIG,CACH,IAGA35B,EAAAC,EAHA28B,EAAArlC,KAAAoiC,gBAAA5gC,OAIA,IAHAgD,OAAA69B,EAAA,OAAA79B,CAAAxE,KAAAoiC,gBAAAwE,EAAAtE,sBAGA75B,EAAA,EAAAC,GAFAy8B,EAAAyB,EAAA7B,UAAAtX,SAEAjsB,OAAiCiH,EAAAC,IAAQD,EACzC08B,EAAA18B,IAAA48B,OATArlC,KAAAoiC,gBAAAwE,EAAAtE,qBAAA7U,QACA0X,EAAAyB,EAAA7B,UAAAtX,QACAztB,KAAAumC,OAAA/iC,OAUAxD,KAAAumC,OAAA/iC,KAAA2hC,GACAnlC,KAAAkU,WAUAjN,EAAArH,UAAAwzB,MAAA,WAKA,IAJA,IAAAyT,EAAA,IAAA5/B,EAAA,MAEA6/B,EAAA9mC,KAAAumC,OAAA/kC,OACAulC,EAAA,IAAAnU,MAAAkU,GACAr+B,EAAA,EAAiBA,EAAAq+B,IAASr+B,EAC1Bs+B,EAAAt+B,GAAAzI,KAAAumC,OAAA99B,GAAAglB,QAKA,OAFAoZ,EAAArE,mBACAxiC,KAAA2pB,OAAA3pB,KAAAoiC,gBAAA3U,QAAAsZ,GACAF,GAOA5/B,EAAArH,UAAA6iC,eAAA,SAAApyB,EAAAC,EAAAoyB,EAAAC,GACA,OAAAA,EAAAn+B,OAAAo+B,EAAA,yBAAAp+B,CAAAxE,KAAAuY,YAAAlI,EAAAC,GACAqyB,GAEA3iC,KAAA6jC,mBAAA7jC,KAAAoY,gBACApY,KAAA4jC,UAAAvsB,KAAA6iB,KAAA8M,EAAA,EAAAC,qBACAjnC,KAAAoiC,gBAAA,EAAApiC,KAAAumC,OAAAvmC,KAAA6iC,OAAA,IACA7iC,KAAA6jC,kBAAA7jC,KAAAoY,eAEA4uB,EAAA,EAAAE,kBACAlnC,KAAAmnC,6BAAA,EAAAnnC,KAAAumC,OAAAvmC,KAAA6iC,OACA7iC,KAAA4jC,WAAA,EAAAvzB,EAAAC,EAAAoyB,EAAAC,KAOA17B,EAAArH,UAAAwnC,WAAA,SAAA/2B,EAAAC,GACA,OAAA+2B,EAAA,EAAAC,uBACAtnC,KAAAmnC,6BAAA,EAAAnnC,KAAAumC,OAAAvmC,KAAA6iC,OAAAxyB,EAAAC,IASArJ,EAAArH,UAAA2nC,QAAA,WACA,OAAAC,EAAA,EAAAC,aACAznC,KAAAmnC,6BAAA,EAAAnnC,KAAAumC,OAAAvmC,KAAA6iC,SAkBA57B,EAAArH,UAAA2H,eAAA,SAAAmgC,GACA,IAAAtF,EASA,YARA5/B,IAAAklC,GACAtF,EAAApiC,KAAAmnC,6BAAA1Z,QACAka,EAAA,EAAAC,mBACAxF,EAAA,EAAApiC,KAAAumC,OAAAvmC,KAAA6iC,OAAA6E,IAEAtF,EAAApiC,KAAAoiC,gBAGAyF,EAAA,EAAAC,cACA1F,EAAA,EAAApiC,KAAAumC,OAAAvmC,KAAA6iC,SAOA57B,EAAArH,UAAAmoC,SAAA,WACA,OAAA/nC,KAAAumC,QAOAt/B,EAAArH,UAAAooC,sBAAA,WACA,GAAAhoC,KAAAwmC,6BAAAxmC,KAAAoY,cAAA,CACA,IAAA6vB,EAAAC,EAAA,EAAAT,aACAznC,KAAAoiC,gBAAA,EAAApiC,KAAAumC,OAAAvmC,KAAA6iC,QACA7iC,KAAAymC,oBAAA0B,EAAA,EAAAV,aACAznC,KAAAmnC,6BAAA,EAAAnnC,KAAAumC,OAAAvmC,KAAA6iC,OACAoF,GACAjoC,KAAAwmC,4BAAAxmC,KAAAoY,cAEA,OAAApY,KAAAymC,qBAUAx/B,EAAArH,UAAAwoC,kBAAA,WACA,IAAAC,EAAA,IAAAC,EAAA,cAGA,OAFAD,EAAA7F,mBAAAe,EAAA,QAAAgB,IACAvkC,KAAAgoC,wBAAAva,SACA4a,GAOAphC,EAAArH,UAAAunC,2BAAA,WACA,GAAAnnC,KAAA0mC,mBAAA1mC,KAAAoY,cAAA,CACA,IAAAgqB,EAAApiC,KAAAoiC,gBACAuF,EAAA,EAAAY,wBACAnG,EAAA,EAAApiC,KAAAumC,OAAAvmC,KAAA6iC,QACA7iC,KAAA2mC,yBAAAvE,GAEApiC,KAAA2mC,yBAAAvE,EAAA3U,QACAztB,KAAA2mC,yBAAAnlC,OACAmmC,EAAA,EAAAC,mBACA5nC,KAAA2mC,yBAAA,EAAA3mC,KAAAumC,OAAAvmC,KAAA6iC,SAEA7iC,KAAA0mC,kBAAA1mC,KAAAoY,cAEA,OAAApY,KAAA2mC,0BAOA1/B,EAAArH,UAAA8lC,8BAAA,SAAAC,GACA,IAAAC,KACA4C,KACA5C,EAAApkC,OAAA6kC,EAAA,EAAAoC,WACAzoC,KAAAoiC,gBAAA,EAAApiC,KAAAumC,OAAAvmC,KAAA6iC,OACAxrB,KAAA6iB,KAAAyL,GACAC,EAAA,EAAA4C,GACA,IAAAE,EAAA,IAAAzhC,EAAA,MAGA,OAFAyhC,EAAAlG,mBACAe,EAAA,QAAAC,GAAAoC,EAAA4C,GACAE,GAUAzhC,EAAArH,UAAA+oC,WAAA,SAAAnrB,GACA,GAAAA,EAAA,GAAAxd,KAAAumC,OAAA/kC,QAAAgc,EACA,YAEA,IAAA6nB,EACA,OAAA7nB,EACA6nB,EAAA,MACG,CACH,IAAAuD,EAAA5oC,KAAAumC,OAAA/oB,EAAA,GACA6nB,EAAAuD,IAAApnC,OAAA,GAEA,IAGAiH,EAAAC,EAHAy8B,EAAAnlC,KAAAumC,OAAA/oB,GAAAiQ,QACA6X,EAAAH,IAAA3jC,OAAA,GACA,OAAA6jC,EAEA,IAAA58B,EAAA,EAAAC,EAAAy8B,EAAA3jC,OAAiCiH,EAAAC,IAAQD,EACzC08B,EAAA18B,IAAA48B,EAGA,IAAAuB,EAAA,IAAAiC,EAAA,cAGA,OAFAjC,EAAApE,mBACAxiC,KAAA2pB,OAAA3pB,KAAAoiC,gBAAA3U,MAAA4X,EAAAC,GAAAH,GACAyB,GASA3/B,EAAArH,UAAAkpC,YAAA,WACA,IAKArgC,EAAAC,EAAAqqB,EAAAC,EALArJ,EAAA3pB,KAAA2pB,OACAyY,EAAApiC,KAAAoiC,gBACA2G,EAAA/oC,KAAAumC,OACAyC,KACA3D,EAAA,EAEA,IAAA58B,EAAA,EAAAC,EAAAqgC,EAAAvnC,OAAgCiH,EAAAC,IAAQD,EAAA,CACxC,IAAA08B,EAAA4D,EAAAtgC,GAAAglB,QACA6X,EAAAH,IAAA3jC,OAAA,GACA,OAAA6jC,EACA,IAAAtS,EAAA,EAAAC,EAAAmS,EAAA3jC,OAAmCuxB,EAAAC,IAAQD,EAC3CoS,EAAApS,IAAAsS,EAGA,IAAAuB,EAAA,IAAAiC,EAAA,cACAjC,EAAApE,mBACA7Y,EAAAyY,EAAA3U,MAAA4X,EAAAC,GAAAH,GACA6D,EAAAxlC,KAAAojC,GACAvB,EAAAC,EAEA,OAAA0D,GAQA/hC,EAAArH,UAAA8E,QAAA,WACA,OAAAw+B,EAAA,QAAA+F,eAQAhiC,EAAArH,UAAAwjC,iBAAA,SAAAnzB,GACA,OAAAi5B,EAAA,EAAAzB,aACAznC,KAAAmnC,6BAAA,EAAAnnC,KAAAumC,OAAAvmC,KAAA6iC,OAAA5yB,IAWAhJ,EAAArH,UAAAqiC,eAAA,SAAAr7B,EAAAm7B,GACA,GAAAn7B,EAEG,CACH5G,KAAAqjC,UAAAtB,EAAAn7B,EAAA,GACA5G,KAAAoiC,kBACApiC,KAAAoiC,oBAEA,IAAA2G,EAAAI,EAAA,EAAArB,cACA9nC,KAAAoiC,gBAAA,EAAAx7B,EAAA5G,KAAA6iC,OAAA7iC,KAAAumC,QACA,OAAAwC,EAAAvnC,OACAxB,KAAAoiC,gBAAA5gC,OAAA,MACK,CACL,IAAA4nC,EAAAL,IAAAvnC,OAAA,GACAxB,KAAAoiC,gBAAA5gC,OAAA,IAAA4nC,EAAA5nC,OACA,EAAA4nC,IAAA5nC,OAAA,GAEAxB,KAAAkU,eAfAlU,KAAAwiC,mBAAAe,EAAA,QAAAC,GAAA,KAAAxjC,KAAAumC,SAyBAt/B,EAAArH,UAAA4iC,mBAAA,SAAA7Y,EAAAyY,EAAA2G,GACA/oC,KAAAyjC,2BAAA9Z,EAAAyY,GACApiC,KAAAumC,OAAAwC,EACA/oC,KAAAkU,WAOAjN,EAAArH,UAAAypC,YAAA,SAAAL,GACA,IAGAvgC,EAAAC,EAAAy8B,EAHAxb,EAAA3pB,KAAAomC,YACAhE,KACA2G,KAEA,IAAAtgC,EAAA,EAAAC,EAAAsgC,EAAAxnC,OAAmCiH,EAAAC,IAAQD,EAAA,CAC3C,IAAAm+B,EAAAoC,EAAAvgC,GACA,IAAAA,IACAkhB,EAAAid,EAAAR,aAEA,IAEArT,EAAAC,EAFAqS,EAAAjD,EAAA5gC,OAGA,IAAAuxB,EAAA,EAAAC,GAFAmS,EAAAyB,EAAA7B,WAEAvjC,OAAiCuxB,EAAAC,IAAQD,EACzCoS,EAAApS,IAAAsS,EAEA7gC,OAAA69B,EAAA,OAAA79B,CAAA49B,EAAAwE,EAAAtE,sBACAyG,EAAAvlC,KAAA2hC,GAEAnlC,KAAAwiC,mBAAA7Y,EAAAyY,EAAA2G,IAEAxoC,EAAA,4ICraA+oC,EAAA5pC,EAAA,GAoBAwH,EAAA,SAAAqiC,GAEAC,EAAA,EAAAplC,KAAApE,MAMAA,KAAAypC,YAAAF,GAAA,KAEAvpC,KAAA0pC,2BAGAllC,OAAA09B,EAAA,SAAA19B,CAAA0C,EAAAsiC,EAAA,GAQAtiC,EAAAyiC,iBAAA,SAAAxiC,GACA,IACAsB,EAAAC,EADAkhC,KAEA,IAAAnhC,EAAA,EAAAC,EAAAvB,EAAA3F,OAAqCiH,EAAAC,IAAQD,EAC7CmhC,EAAApmC,KAAA2D,EAAAsB,GAAA2qB,SAEA,OAAAwW,GAOA1iC,EAAAtH,UAAAiqC,0BAAA,WACA,IAAAphC,EAAAC,EACA,GAAA1I,KAAAypC,YAGA,IAAAhhC,EAAA,EAAAC,EAAA1I,KAAAypC,YAAAjoC,OAA2CiH,EAAAC,IAAQD,EACnDqhC,EAAA,QAAA9K,SACAh/B,KAAAypC,YAAAhhC,GAAAshC,EAAA,EAAArxB,OACA1Y,KAAAkU,QAAAlU,OAQAkH,EAAAtH,UAAA8pC,wBAAA,WACA,IAAAjhC,EAAAC,EACA,GAAA1I,KAAAypC,YAGA,IAAAhhC,EAAA,EAAAC,EAAA1I,KAAAypC,YAAAjoC,OAA2CiH,EAAAC,IAAQD,EACnDqhC,EAAA,QAAArxB,OACAzY,KAAAypC,YAAAhhC,GAAAshC,EAAA,EAAArxB,OACA1Y,KAAAkU,QAAAlU,OAWAkH,EAAAtH,UAAAwzB,MAAA,WACA,IAAA4W,EAAA,IAAA9iC,EAAA,MAEA,OADA8iC,EAAAC,cAAAjqC,KAAAypC,aACAO,GAOA9iC,EAAAtH,UAAA6iC,eAAA,SAAApyB,EAAAC,EAAAoyB,EAAAC,GACA,GAAAA,EAAAn+B,OAAA0d,EAAA,yBAAA1d,CAAAxE,KAAAuY,YAAAlI,EAAAC,GACA,OAAAqyB,EAEA,IACAl6B,EAAAC,EADAvB,EAAAnH,KAAAypC,YAEA,IAAAhhC,EAAA,EAAAC,EAAAvB,EAAA3F,OAAqCiH,EAAAC,IAAQD,EAC7Ck6B,EAAAx7B,EAAAsB,GAAAg6B,eACApyB,EAAAC,EAAAoyB,EAAAC,GAEA,OAAAA,GAOAz7B,EAAAtH,UAAAwnC,WAAA,SAAA/2B,EAAAC,GACA,IACA7H,EAAAC,EADAvB,EAAAnH,KAAAypC,YAEA,IAAAhhC,EAAA,EAAAC,EAAAvB,EAAA3F,OAAqCiH,EAAAC,IAAQD,EAC7C,GAAAtB,EAAAsB,GAAA2+B,WAAA/2B,EAAAC,GACA,SAGA,UAOApJ,EAAAtH,UAAAsqC,cAAA,SAAAj6B,GACAzL,OAAA0d,EAAA,oBAAA1d,CAAAyL,GAEA,IADA,IAAA9I,EAAAnH,KAAAypC,YACAhhC,EAAA,EAAAC,EAAAvB,EAAA3F,OAAyCiH,EAAAC,IAAQD,EACjDjE,OAAA0d,EAAA,OAAA1d,CAAAyL,EAAA9I,EAAAsB,GAAA8P,aAEA,OAAAtI,GASA/I,EAAAtH,UAAAuqC,cAAA,WACA,OAAAjjC,EAAAyiC,iBAAA3pC,KAAAypC,cAOAviC,EAAAtH,UAAA8H,mBAAA,WACA,OAAA1H,KAAAypC,aAOAviC,EAAAtH,UAAAwqC,sBAAA,SAAAzE,GAMA,GALA3lC,KAAAqqC,4BAAArqC,KAAAoY,gBACAkxB,EAAA,QAAAnjB,MAAAnmB,KAAAsqC,yBACAtqC,KAAAuqC,yCAAA,EACAvqC,KAAAqqC,2BAAArqC,KAAAoY,eAEAutB,EAAA,GACA,IAAA3lC,KAAAuqC,0CACA5E,EAAA3lC,KAAAuqC,yCACA,OAAAvqC,KAEA,IAAAuD,EAAAoiC,EAAA5jC,WACA,GAAA/B,KAAAsqC,wBAAAE,eAAAjnC,GACA,OAAAvD,KAAAsqC,wBAAA/mC,GAEA,IAGAkF,EAAAC,EAHA+hC,KACAtjC,EAAAnH,KAAAypC,YACAiB,GAAA,EAEA,IAAAjiC,EAAA,EAAAC,EAAAvB,EAAA3F,OAAuCiH,EAAAC,IAAQD,EAAA,CAC/C,IAAA9H,EAAAwG,EAAAsB,GACAkiC,EAAAhqC,EAAAypC,sBAAAzE,GACA8E,EAAAjnC,KAAAmnC,GACAA,IAAAhqC,IACA+pC,GAAA,GAGA,GAAAA,EAAA,CACA,IAAAE,EAAA,IAAA1jC,EAAA,MAGA,OAFA0jC,EAAAC,mBAAAJ,GACAzqC,KAAAsqC,wBAAA/mC,GAAAqnC,EACAA,EAGA,OADA5qC,KAAAuqC,yCAAA5E,EACA3lC,MAUAkH,EAAAtH,UAAA8E,QAAA,WACA,OAAAomC,EAAA,QAAAC,qBAQA7jC,EAAAtH,UAAAwjC,iBAAA,SAAAnzB,GACA,IACAxH,EAAAC,EADAvB,EAAAnH,KAAAypC,YAEA,IAAAhhC,EAAA,EAAAC,EAAAvB,EAAA3F,OAAqCiH,EAAAC,IAAQD,EAC7C,GAAAtB,EAAAsB,GAAA26B,iBAAAnzB,GACA,SAGA,UAOA/I,EAAAtH,UAAAwJ,QAAA,WACA,WAAApJ,KAAAypC,YAAAjoC,QAQA0F,EAAAtH,UAAAorC,OAAA,SAAAC,EAAAC,GAEA,IADA,IAAA/jC,EAAAnH,KAAAypC,YACAhhC,EAAA,EAAAC,EAAAvB,EAAA3F,OAAyCiH,EAAAC,IAAQD,EACjDtB,EAAAsB,GAAAuiC,OAAAC,EAAAC,GAEAlrC,KAAAkU,WAQAhN,EAAAtH,UAAAskB,MAAA,SAAAinB,EAAAC,EAAAC,GACA,IAAAH,EAAAG,EACAH,IACAA,EAAA1mC,OAAA0d,EAAA,UAAA1d,CAAAxE,KAAAuY,cAGA,IADA,IAAApR,EAAAnH,KAAAypC,YACAhhC,EAAA,EAAAC,EAAAvB,EAAA3F,OAAyCiH,EAAAC,IAAQD,EACjDtB,EAAAsB,GAAAyb,MAAAinB,EAAAC,EAAAF,GAEAlrC,KAAAkU,WASAhN,EAAAtH,UAAAqqC,cAAA,SAAA9iC,GACAnH,KAAA6qC,mBACA3jC,EAAAyiC,iBAAAxiC,KAOAD,EAAAtH,UAAAirC,mBAAA,SAAA1jC,GACAnH,KAAA6pC,4BACA7pC,KAAAypC,YAAAtiC,EACAnH,KAAA0pC,0BACA1pC,KAAAkU,WAQAhN,EAAAtH,UAAA0rC,eAAA,SAAAC,GACA,IACA9iC,EAAAC,EADAvB,EAAAnH,KAAAypC,YAEA,IAAAhhC,EAAA,EAAAC,EAAAvB,EAAA3F,OAAqCiH,EAAAC,IAAQD,EAC7CtB,EAAAsB,GAAA6iC,eAAAC,GAEAvrC,KAAAkU,WAWAhN,EAAAtH,UAAA4rC,UAAA,SAAAC,EAAAC,GACA,IACAjjC,EAAAC,EADAvB,EAAAnH,KAAAypC,YAEA,IAAAhhC,EAAA,EAAAC,EAAAvB,EAAA3F,OAAqCiH,EAAAC,IAAQD,EAC7CtB,EAAAsB,GAAA+iC,UAAAC,EAAAC,GAEA1rC,KAAAkU,WAOAhN,EAAAtH,UAAA+rC,gBAAA,WACA3rC,KAAA6pC,4BACAL,EAAA,EAAA5pC,UAAA+rC,gBAAAvnC,KAAApE,OAEAO,EAAA,uGCnTA,SAAAqrC,GACA,IAEAnjC,EAAAsqB,EAFA8Y,EAAArnC,OAAAksB,KAAAkb,EAAAE,MACAhF,EAAA+E,EAAArqC,OAEA,IAAAiH,EAAA,EAAaA,EAAAq+B,IAASr+B,EAAA,CACtB,IAAA+e,EAAAqkB,EAAApjC,GACA,IAAAjE,OAAAunC,EAAA,IAAAvnC,CAAAgjB,GAAA,CACA,IAAAwkB,EAAAJ,EAAAE,KAAAtkB,GACAhjB,OAAAunC,EAAA,cAAAvnC,CAAA,IAAAynC,EAAA,GACAzkB,OACAtO,gBAAA8yB,EAAAE,KACAC,cAAAH,EAAAI,SACAC,MAAAL,EAAAK,UAIA,IAAA5jC,EAAA,EAAaA,EAAAq+B,IAASr+B,EAAA,CACtB,IAAA6jC,EAAAT,EAAApjC,GACA8jC,EAAA/nC,OAAAunC,EAAA,IAAAvnC,CAAA8nC,GACA,IAAAvZ,EAAA,EAAeA,EAAA+T,IAAS/T,EAAA,CACxB,IAAAyZ,EAAAX,EAAA9Y,GACA0Z,EAAAjoC,OAAAunC,EAAA,IAAAvnC,CAAAgoC,GACA,IAAAhoC,OAAAkoC,EAAA,EAAAloC,CAAA8nC,EAAAE,GACA,GAAAZ,EAAAE,KAAAQ,KAAAV,EAAAE,KAAAU,GACAhoC,OAAAunC,EAAA,yBAAAvnC,EAAA+nC,EAAAE,QACS,CACT,IAAAE,EAAAf,EAAAU,EAAAE,GACAhoC,OAAAunC,EAAA,wBAAAvnC,CAAA+nC,EAAAE,EAAAE,EAAAC,QAAAD,EAAAE,iCA7CAZ,EAAAvsC,EAAA,sCCQA,SAAAgnB,IACA,IAAAomB,EAAA9sC,KAAA+sC,KACA/sC,KAAAgtC,QAAAhtC,KAAAitC,MACA,IAAAC,EAAA71B,KAAAqjB,IAAAoS,GACAK,EAAAntC,KAAAgvB,EAEAoe,EAAA,EADAptC,KAAAqtC,GAEAC,EAAA,EAAAF,EAAA/1B,KAAA8iB,IAAAiT,EAAA,GACA7lB,EAAAvnB,KAAAunB,EAAAlQ,KAAA6iB,KAAAoT,GACAttC,KAAAutC,EAAAvtC,KAAAwtC,GAAAL,EAAA91B,KAAA6iB,KAAA,EAAAoT,IAAA,EAAAA,EAAAj2B,KAAA8iB,IAAA+S,EAAA,IACAltC,KAAAytC,MAAAp2B,KAAA6iB,KAAA,EAAAoT,GAAA,EAAAA,GAAAj2B,KAAA8iB,IAAA9iB,KAAAmjB,IAAAsS,GAAA,IACA9sC,KAAA0tC,GAAAr2B,KAAAs2B,KAAAT,EAAAltC,KAAAytC,OACA,IAAAG,EAAAv2B,KAAAw2B,IAAAx2B,KAAAy2B,IAAAz2B,KAAA8f,GAAA,EAAAn3B,KAAA0tC,GAAA,IACAK,EAAA12B,KAAAw2B,IAAAx2B,KAAAy2B,IAAAz2B,KAAA8f,GAAA,EAAA2V,EAAA,IACAkB,EAAA32B,KAAAw2B,KAAA,EAAAtmB,EAAA2lB,IAAA,EAAA3lB,EAAA2lB,IACAltC,KAAAiuC,EAAAL,EAAA5tC,KAAAytC,MAAAM,EAAA/tC,KAAAytC,MAAAlmB,EAAA,EAAAymB,EAGA,SAAApB,EAAAsB,GACA,IAAAC,EAAA92B,KAAAw2B,IAAAx2B,KAAAy2B,IAAAz2B,KAAA8f,GAAA,EAAA+W,EAAA59B,EAAA,IACA89B,EAAApuC,KAAAunB,EAAA,EAAAlQ,KAAAw2B,KAAA,EAAA7tC,KAAAunB,EAAAlQ,KAAAqjB,IAAAwT,EAAA59B,KAAA,EAAAtQ,KAAAunB,EAAAlQ,KAAAqjB,IAAAwT,EAAA59B,KACA+9B,GAAAruC,KAAAytC,OAAAU,EAAAC,GAAApuC,KAAAiuC,EAGArsC,EAAA,GAAAyV,KAAAgjB,KAAAhjB,KAAAi3B,IAAAD,IAAAh3B,KAAA8f,GAAA,GAGAoX,EAAAvuC,KAAAytC,OAAAS,EAAA79B,EAAArQ,KAAAgtC,SAGAwB,EAAAn3B,KAAAgjB,KAAAhjB,KAAAqjB,IAAA6T,IAAAl3B,KAAAqjB,IAAA16B,KAAA0tC,IAAAr2B,KAAAy2B,IAAAlsC,GAAAyV,KAAAmjB,IAAAx6B,KAAA0tC,IAAAr2B,KAAAmjB,IAAA+T,KAEAE,EAAAp3B,KAAAs2B,KAAAt2B,KAAAmjB,IAAAx6B,KAAA0tC,IAAAr2B,KAAAqjB,IAAA94B,GAAAyV,KAAAqjB,IAAA16B,KAAA0tC,IAAAr2B,KAAAmjB,IAAA54B,GAAAyV,KAAAmjB,IAAA+T,IAIA,OAFAL,EAAA59B,EAAAtQ,KAAAutC,EAAA,EAAAl2B,KAAAw2B,KAAA,EAAAx2B,KAAAqjB,IAAA+T,KAAA,EAAAp3B,KAAAqjB,IAAA+T,KAAAzuC,KAAA0uC,GACAR,EAAA79B,EAAArQ,KAAAutC,EAAAiB,EAAAxuC,KAAA2uC,GACAT,EAGA,SAAArB,EAAAqB,GAgBA,IAfA,IAAAU,EAAAV,EAAA79B,EAAArQ,KAAA2uC,GACAE,EAAAX,EAAA59B,EAAAtQ,KAAA0uC,GAEAF,EAAAI,EAAA5uC,KAAAutC,EACAkB,EAAA,GAAAp3B,KAAAgjB,KAAAhjB,KAAAi3B,IAAAO,EAAA7uC,KAAAutC,IAAAl2B,KAAA8f,GAAA,GAEAv1B,EAAAyV,KAAAs2B,KAAAt2B,KAAAmjB,IAAAx6B,KAAA0tC,IAAAr2B,KAAAqjB,IAAA+T,GAAAp3B,KAAAqjB,IAAA16B,KAAA0tC,IAAAr2B,KAAAmjB,IAAAiU,GAAAp3B,KAAAmjB,IAAAgU,IACAD,EAAAl3B,KAAAgjB,KAAAhjB,KAAAqjB,IAAA8T,IAAAn3B,KAAAmjB,IAAAx6B,KAAA0tC,IAAAr2B,KAAAmjB,IAAAgU,GAAAn3B,KAAAqjB,IAAA16B,KAAA0tC,IAAAr2B,KAAAy2B,IAAAW,KAEAK,EAAA9uC,KAAAgtC,QAAAuB,EAAAvuC,KAAAytC,MAEAY,EAAA,EACAU,EAAAntC,EACAotC,GAAA,IACAC,EAAA,EACA53B,KAAA63B,IAAAH,EAAAC,GAAA,OACA,KAAAC,EAAA,GAEA,OAGAZ,EAAA,EAAAruC,KAAAytC,OAAAp2B,KAAAw2B,IAAAx2B,KAAAy2B,IAAAz2B,KAAA8f,GAAA,EAAAv1B,EAAA,IAAA5B,KAAAiuC,GAAAjuC,KAAAunB,EAAAlQ,KAAAw2B,IAAAx2B,KAAAy2B,IAAAz2B,KAAA8f,GAAA,EAAA9f,KAAAs2B,KAAA3tC,KAAAunB,EAAAlQ,KAAAqjB,IAAAqU,IAAA,IACAC,EAAAD,EACAA,EAAA,EAAA13B,KAAAgjB,KAAAhjB,KAAAi3B,IAAAD,IAAAh3B,KAAA8f,GAAA,EAKA,OAFA+W,EAAA79B,EAAAy+B,EACAZ,EAAA59B,EAAAy+B,EACAb,oFA5EAxuC,EAAAc,EAAAD,EAAA,0BAAA8f,IA+EA,IAAAA,GAAA,UACA9f,EAAA,SACAmmB,OACAkmB,UACAC,UACAxsB,sDCpFA8uB,EAAAzvC,EAAA,IAKAqM,GAOAqjC,YAAA,SAAA9uC,GACA,IAAA+uC,EAAA5vC,EAAA,QAAA6vC,kBAAAhvC,GAAA,GACA,OAAAyL,EAAAwjC,kBAAAF,IAQAE,kBAAA,SAAA51B,GACA,IAAAyqB,EAAA,6BAAAoL,KAAA71B,GACA,OAAAyqB,OACA5hC,IAAA4hC,EAAA,YAEA,GASAqL,aAAA,SAAAnvC,GACA,IAAA+uC,EAAA5vC,EAAA,QAAA6vC,kBAAAhvC,GAAA,GACAovC,EAAAvS,KAAA98B,MAAAgvC,GACA,OAAA9+B,MAAAm/B,QAAAltC,EAAAktC,EAAA,KAQAh9B,YAAA,SAAApS,GACA,IAAA+uC,EAAA5vC,EAAA,QAAA6vC,kBAAAhvC,GAAA,GACA,OAAAyL,EAAA4jC,kBAAAN,IAQAM,kBAAA,SAAAh2B,GAEA,IAAAyqB,EAAA,4CAAAoL,KAAA71B,GACA,OAAAyqB,EACAwL,WAAAxL,EAAA,SAEA,GASAryB,uBAAA,SAAAzR,GACA,IAAA+uC,EAAA5vC,EAAA,QAAA6vC,kBAAAhvC,GAAA,GACA,OAAAyL,EAAA8jC,6BAAAR,IAQAQ,6BAAA,SAAAl2B,GACA,IAAAyqB,EAAA,gBAAAoL,KAAA71B,GACA,OAAAyqB,EACA0L,SAAA1L,EAAA,YAEA,GASAp4B,WAAA,SAAA1L,GACA,OAAAb,EAAA,QAAA6vC,kBAAAhvC,GAAA,GAAAoO,QAQAqhC,qBAAA,SAAAzvC,EAAA0vC,GACAjkC,EAAAkkC,oBAAA3vC,EAAA,YAQA4vC,kBAAA,SAAA5vC,EAAAqZ,GACArZ,EAAA6vC,YAAA1wC,EAAA,QAAA2wC,SAAAC,mBAAA12B,KAQA22B,sBAAA,SAAAhwC,EAAAovC,GACA,IAAAa,EAAA,IAAApT,KAAA,IAAAuS,GACA/1B,EAAA42B,EAAAC,iBAAA,IACArB,EAAA,QAAAsB,UAAAF,EAAAG,cAAA,SACAvB,EAAA,QAAAsB,UAAAF,EAAAI,aAAA,OACAxB,EAAA,QAAAsB,UAAAF,EAAAK,cAAA,OACAzB,EAAA,QAAAsB,UAAAF,EAAAM,gBAAA,OACA1B,EAAA,QAAAsB,UAAAF,EAAAO,gBAAA,OACAxwC,EAAA6vC,YAAA1wC,EAAA,QAAA2wC,SAAAW,eAAAp3B,KAQAq3B,qBAAA,SAAA1wC,EAAA2wC,GACA,IAAAt3B,EAAAs3B,EAAAC,cACA5wC,EAAA6vC,YAAA1wC,EAAA,QAAA2wC,SAAAW,eAAAp3B,KAQAw3B,gCAAA,SAAA7wC,EAAA8wC,GACA,IAAAz3B,EAAAy3B,EAAArvC,WACAzB,EAAA6vC,YAAA1wC,EAAA,QAAA2wC,SAAAW,eAAAp3B,KAQAs2B,oBAAA,SAAA3vC,EAAAqZ,GACArZ,EAAA6vC,YAAA1wC,EAAA,QAAA2wC,SAAAW,eAAAp3B,MAEApZ,EAAA,sFC/JA,QAAAb,EAAA,QACAA,EAAA,OAGAA,EAAA,wDAEA,GAAgC,mBAArB2xC,EAAAvwC,QAAY0b,MAAqB,CAC1C,IAAM80B,GACJ,eACA,2BACA,2BACA,SACA,cACA,cACA,gBACA,0CACA,WACA,YACA5tC,KAAK,KAGP2tC,EAAAvwC,QAAY0b,MAAMsvB,KAAK,aAAcwF,GACrCC,EAAAzwC,QAAO0b,IAAI,cAAcg1B,WAHA,KAAQ,IAAO,IAAQ,iBAMlC,+FCxBhB,QAAA9xC,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,wDAEiC,mBAAtB2xC,EAAAvwC,QAAY0b,OAAyC,mBAAjBi1B,EAAA3wC,SAC7CywC,EAAAzwC,QAAO4wC,SAAPD,EAAA3wC,SAEF2wC,EAAA3wC,QAAM6wC,KAAKC,YAAYC,IAAvBC,EAAAhxC,wGCZA,ICAAixC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,oBACAC,EAAA/6B,KAAA8f,GAAA,EAEAkb,EAAA,mBAEAC,EAAA,mBAEAC,EAAA,oBACAC,EAAA,MAIAC,EAAA,oBACAC,EAAA,kBACAC,EAAAt7B,KAAA8f,GAAA,EACAyb,EAAA,EAAAv7B,KAAA8f,GAKA0b,EAAA,cCxBAC,GAGAC,UAAA,EACAC,QAAA,eACAC,MAAA,eACAC,QAAA,gBACAC,QAAA,eACAC,KAAA,gBACAC,KAAA,eACAC,QAAA,iBACAC,OAAA,gBACAC,SAAA,SACAC,UAAA,gBACAC,OAAA,WACAC,KAAA,iBCfAtH,GACAuH,IAAOxH,SAAA,OACPyH,SAAYzH,SAAA,YCFZ0H,EAAA,iBACA,SAAAC,EAAApsC,EAAApE,GACA,GAAAoE,EAAApE,GACA,OAAAoE,EAAApE,GAMA,IAJA,IAGAywC,EAHAtjB,EAAAlsB,OAAAksB,KAAA/oB,GACAssC,EAAA1wC,EAAA2wC,cAAAr5B,QAAAi5B,EAAA,IACArrC,GAAA,IAEAA,EAAAioB,EAAAlvB,QAGA,IAFAwyC,EAAAtjB,EAAAjoB,IACAyrC,cAAAr5B,QAAAi5B,EAAA,MACAG,EACA,OAAAtsC,EAAAqsC,GCRA,IAAAG,EAAA,SAAAC,GACA,IAWAC,EAAAC,EAAAC,EAXA7b,KACA8b,EAAAJ,EAAAhyC,MAAA,KAAAgF,IAAA,SAAAqtC,GACA,OAAAA,EAAA/lC,SACGgmC,OAAA,SAAA1lB,GACH,OAAAA,IACG2lB,OAAA,SAAAzG,EAAAlf,GACH,IAAA5sB,EAAA4sB,EAAA5sB,MAAA,KAGA,OAFAA,EAAAoB,MAAA,GACA0qC,EAAA9rC,EAAA,GAAA8xC,eAAA9xC,EAAA,GACA8rC,OAGAv4B,GACAxP,KAAA,WACAyuC,MAAA,YACAvH,GAAA,SAAAoH,GACA/b,EAAA2U,GAAAuC,WAAA6E,IAEAI,MAAA,SAAAJ,GACA/b,EAAAqU,KAAA0H,EAAAhC,GAEAqC,MAAA,SAAAL,GACA/b,EAAAqc,KAAAN,EAAAhC,GAEAuC,MAAA,SAAAP,GACA/b,EAAAuc,KAAAR,EAAAhC,GAEAyC,OAAA,SAAAT,GACA/b,EAAAwc,OAAAT,EAAAhC,GAEA0C,MAAA,SAAAV,GACA/b,EAAAuU,MAAAwH,EAAAhC,GAEA2C,MAAA,SAAAX,GACA/b,EAAA2c,MAAAZ,EAAAhC,GAEA6C,MAAA,SAAAb,GACA/b,EAAA6c,MAAAd,EAAAhC,GAEAhF,MAAA,SAAAgH,GACA/b,EAAA+U,MAAAmC,WAAA6E,GAAAhC,GAEA+C,KAAA,SAAAf,GACA/b,EAAA+c,MAAAhB,EAAAhC,GAEAiD,IAAA,SAAAjB,GACA/b,EAAAiW,GAAAiB,WAAA6E,IAEAkB,IAAA,SAAAlB,GACA/b,EAAAgW,GAAAkB,WAAA6E,IAEAmB,IAAA,SAAAnB,GACA/b,EAAA8U,GAAAoC,WAAA6E,IAEAoB,EAAA,SAAApB,GACA/b,EAAA8U,GAAAoC,WAAA6E,IAEAzlB,EAAA,SAAAylB,GACA/b,EAAA1J,EAAA4gB,WAAA6E,IAEA7yC,EAAA,SAAA6yC,GACA/b,EAAA92B,EAAAguC,WAAA6E,IAEAqB,IAAA,WACApd,EAAAqd,KAAA,GAEAC,KAAA,SAAAvB,GACA/b,EAAAsd,KAAAlG,SAAA2E,EAAA,KAEAwB,MAAA,WACAvd,EAAAwd,UAAA,GAEAC,QAAA,SAAA1B,GACA/b,EAAA0d,aAAA3B,EAAAryC,MAAA,KAAAgF,IAAA,SAAA4nB,GACA,OAAA4gB,WAAA5gB,MAGAod,SAAA,SAAAqI,GACA/b,EAAA0T,SAAAwD,WAAA6E,IAEApI,MAAA,SAAAoI,GACA/b,EAAA2T,MAAAoI,EACA,IAAA4B,EAAAtC,EAAA1H,EAAAoI,GACA4B,IACA3d,EAAA0T,SAAAiK,EAAAjK,WAGAkK,eAAA,SAAA7B,GACA/b,EAAA4d,eAAA7B,EAAAhC,GAEA8D,GAAA,SAAA9B,GACA,IAAA8B,EAAAxC,EAAAjB,EAAA2B,GACA/b,EAAA4d,gBAAAC,GAAA3G,WAAA6E,IAAAhC,GAEA+D,SAAA,SAAA/B,GACA,UAAAA,EACA/b,EAAA+d,UAAA,OAGA/d,EAAA8d,SAAA/B,GAGAvI,KAAA,SAAAuI,GACA,IAAAiC,EAAA,SACA,IAAAjC,EAAAjzC,SAAA,IAAAk1C,EAAAp1C,QAAAmzC,EAAAr7B,OAAA,YAAAs9B,EAAAp1C,QAAAmzC,EAAAr7B,OAAA,YAAAs9B,EAAAp1C,QAAAmzC,EAAAr7B,OAAA,QACAsf,EAAAwT,KAAAuI,KAIA,IAAAJ,KAAAG,EACAF,EAAAE,EAAAH,GACAA,KAAA1+B,EAEA,mBADA4+B,EAAA5+B,EAAA0+B,IAEAE,EAAAD,GAGA5b,EAAA6b,GAAAD,EAIA5b,EAAA2b,GAAAC,EAMA,MAHA,iBAAA5b,EAAA+d,WAAA,UAAA/d,EAAA+d,YACA/d,EAAA+d,UAAA/d,EAAA+d,UAAAvC,eAEAxb,GCrIAvc,EAqKA,SAAAw6B,GAEA,OADA,IAAAC,EAAAD,GACAE,UArKAC,EAAA,EAMAC,EAAA,KACAC,EAAA,WACAC,EAAA,aACAC,EAAA,QACAC,EAAA,cAEA,SAAAP,EAAAQ,GACA,oBAAAA,EACA,UAAAv1C,MAAA,gBAEA7B,KAAAo3C,OAAA1oC,OACA1O,KAAAq3C,MAAA,EACAr3C,KAAAs3C,MAAA,EACAt3C,KAAAu3C,KAAA,KACAv3C,KAAAw3C,SACAx3C,KAAAy3C,cAAA,KACAz3C,KAAA4T,MAAAkjC,ECtBA,SAAAY,EAAA/vC,EAAApE,EAAAP,GACA4vB,MAAAC,QAAAtvB,KACAP,EAAA20C,QAAAp0C,GACAA,EAAA,MAEA,IAAAq0C,EAAAr0C,KAAsBoE,EAEtBkwC,EAAA70C,EAAA2xC,OAAA,SAAAmD,EAAA3sB,GAEA,OADA4sB,EAAA5sB,EAAA2sB,GACAA,GACGF,GACHr0C,IACAoE,EAAApE,GAAAs0C,GAIA,SAAAE,EAAAtD,EAAA9sC,GACA,GAAAirB,MAAAC,QAAA4hB,GAAA,CAIA,IAyBAhsC,EAzBAlF,EAAAkxC,EAAAuD,QAIA,GAHA,cAAAz0C,IACAA,EAAAkxC,EAAAuD,SAEA,IAAAvD,EAAAjzC,OACA,OAAAoxB,MAAAC,QAAA4hB,EAAA,KACA9sC,EAAApE,WACAw0C,EAAAtD,EAAA,GAAA9sC,EAAApE,UAGAoE,EAAApE,GAAAkxC,EAAA,IAGA,GAAAA,EAAAjzC,OAIA,eAAA+B,EASA,OALAqvB,MAAAC,QAAAtvB,KACAoE,EAAApE,OAIAA,GACA,WACA,aACA,iBAQA,OAPAoE,EAAApE,IACAL,KAAAuxC,EAAA,GAAAP,cACA+D,QAAAxD,EAAA,SAEA,IAAAA,EAAAjzC,QACAu2C,EAAAtD,EAAA,GAAA9sC,EAAApE,KAGA,eACA,gBASA,OARAoE,EAAApE,IACAL,KAAAuxC,EAAA,GACAzlB,EAAAylB,EAAA,GACApH,GAAAoH,EAAA,SAEA,IAAAA,EAAAjzC,QACAu2C,EAAAtD,EAAA,GAAA9sC,EAAApE,KAGA,mBACA,cACA,aACA,aACA,aACA,eACA,cACA,kBACA,oBACA,aACA,uBACA,cACA,cACA,kBACA,eACA,kBACA,qBACA,aACA,gBACA,kBACA,YAGA,OAFAkxC,EAAA,WAAAA,EAAA,SACAiD,EAAA/vC,EAAApE,EAAAkxC,GAEA,QAEA,IADAhsC,GAAA,IACAA,EAAAgsC,EAAAjzC,QACA,IAAAoxB,MAAAC,QAAA4hB,EAAAhsC,IACA,OAAAsvC,EAAAtD,EAAA9sC,EAAApE,IAGA,OAAAm0C,EAAA/vC,EAAApE,EAAAkxC,QA9DA9sC,EAAApE,GAAAkxC,OAJA9sC,EAAApE,IAAA,OAjBAoE,EAAA8sC,IAAA,EDMAmC,EAAAh3C,UAAAs4C,cAAA,WACA,IAAAC,EAAAn4C,KAAAo3C,KAAAp3C,KAAAs3C,SACA,GAvBA,IAuBAt3C,KAAA4T,MACA,KAAAmjC,EAAAqB,KAAAD,IAAA,CACA,GAAAn4C,KAAAs3C,OAAAt3C,KAAAo3C,KAAA51C,OACA,OAEA22C,EAAAn4C,KAAAo3C,KAAAp3C,KAAAs3C,SAGA,OAAAt3C,KAAA4T,OACA,KAAAkjC,EACA,OAAA92C,KAAAq4C,QAAAF,GACA,KApCA,EAqCA,OAAAn4C,KAAAi3C,QAAAkB,GACA,KApCA,EAqCA,OAAAn4C,KAAAs4C,OAAAH,GACA,KArCA,EAsCA,OAAAn4C,KAAAu4C,WAAAJ,GACA,KAzCA,EA0CA,OAAAn4C,KAAAw4C,OAAAL,GACA,KAxCA,EAyCA,SAGAvB,EAAAh3C,UAAA24C,WAAA,SAAAJ,GACA,SAAAA,EAGA,OAFAn4C,KAAAy4C,MAAA,SACAz4C,KAAA4T,MAjDA,GAoDA,GAAAsjC,EAAAkB,KAAAD,GAGA,OAFAn4C,KAAAy4C,KAAAz4C,KAAAy4C,KAAA/pC,YACA1O,KAAA04C,UAAAP,GAGA,UAAAt2C,MAAA,oBAAAs2C,EAAA,8BAAAn4C,KAAAs3C,QAEAV,EAAAh3C,UAAA84C,UAAA,SAAAP,GACA,YAAAA,GACA,OAAAn4C,KAAAy4C,MACAz4C,KAAAy3C,cAAAj0C,KAAAxD,KAAAy4C,MAEAz4C,KAAAy4C,KAAA,UACAz4C,KAAA4T,MAAAkjC,IAGA,MAAAqB,GACAn4C,KAAAq3C,QACA,OAAAr3C,KAAAy4C,OACAz4C,KAAAy3C,cAAAj0C,KAAAxD,KAAAy4C,MACAz4C,KAAAy4C,KAAA,MAEAz4C,KAAA4T,MAAAkjC,EACA92C,KAAAy3C,cAAAz3C,KAAAw3C,MAAAmB,WACA34C,KAAAy3C,gBACAz3C,KAAA4T,OA3EA,UAkEA,GAeAgjC,EAAAh3C,UAAA44C,OAAA,SAAAL,GACA,IAAAhB,EAAAiB,KAAAD,GAAA,CAIA,GAAAjB,EAAAkB,KAAAD,GAGA,OAFAn4C,KAAAy4C,KAAA7I,WAAA5vC,KAAAy4C,WACAz4C,KAAA04C,UAAAP,GAGA,UAAAt2C,MAAA,oBAAAs2C,EAAA,0BAAAn4C,KAAAs3C,OARAt3C,KAAAy4C,MAAAN,GAUAvB,EAAAh3C,UAAA04C,OAAA,SAAAH,GACA,MAAAA,EAIAn4C,KAAAy4C,MAAAN,EAHAn4C,KAAA4T,MAhGA,GAsGAgjC,EAAAh3C,UAAAq3C,QAAA,SAAAkB,GACA,GAAAlB,EAAAmB,KAAAD,GACAn4C,KAAAy4C,MAAAN,MADA,CAIA,SAAAA,EAAA,CACA,IAAAS,KAWA,OAVAA,EAAAp1C,KAAAxD,KAAAy4C,MACAz4C,KAAAq3C,QACA,OAAAr3C,KAAAu3C,KACAv3C,KAAAu3C,KAAAqB,EAEA54C,KAAAy3C,cAAAj0C,KAAAo1C,GAEA54C,KAAAw3C,MAAAh0C,KAAAxD,KAAAy3C,eACAz3C,KAAAy3C,cAAAmB,OACA54C,KAAA4T,MAAAkjC,GAGA,IAAAI,EAAAkB,KAAAD,GAIA,UAAAt2C,MAAA,oBAAAs2C,EAAA,2BAAAn4C,KAAAs3C,OAHAt3C,KAAA04C,UAAAP,KAKAvB,EAAAh3C,UAAAy4C,QAAA,SAAAF,GACA,GAAAnB,EAAAoB,KAAAD,GAGA,OAFAn4C,KAAAy4C,KAAAN,OACAn4C,KAAA4T,MArIA,GAwIA,SAAAukC,EAGA,OAFAn4C,KAAAy4C,KAAA,QACAz4C,KAAA4T,MAxIA,GA2IA,GAAAujC,EAAAiB,KAAAD,GAGA,OAFAn4C,KAAAy4C,KAAAN,OACAn4C,KAAA4T,MA9IA,GAiJA,IAAAsjC,EAAAkB,KAAAD,GAIA,UAAAt2C,MAAA,oBAAAs2C,EAAA,2BAAAn4C,KAAAs3C,OAHAt3C,KAAA04C,UAAAP,IAKAvB,EAAAh3C,UAAAi3C,OAAA,WACA,KAAA72C,KAAAs3C,MAAAt3C,KAAAo3C,KAAA51C,QACAxB,KAAAk4C,gBAEA,IAxJA,IAwJAl4C,KAAA4T,MACA,OAAA5T,KAAAu3C,KAEA,UAAA11C,MAAA,2BAAA7B,KAAAo3C,KAAA,eAAAp3C,KAAA4T,QElKA,IAAAilC,EAAA,oBAiBA,SAAAC,EAAAC,GACA,OAAAA,EAAAF,EAuIA,IRzJA/M,EQyJAkN,EAAA,SAAAC,GACA,IAAAC,EAAA/8B,EAAA88B,GACA3xC,EAAA4xC,EAAAlB,QACA90C,EAAAg2C,EAAAlB,QACAkB,EAAAvB,SAAA,OAAAz0C,IACAg2C,EAAAvB,SAAA,OAAArwC,IACA,IAAAK,KAGA,OAFAowC,EAAAmB,EAAAvxC,GA3IA,SAAAsxC,GACA,WAAAA,EAAA3xC,KACA2xC,EAAAE,SAAA,UACG,aAAAF,EAAA3xC,MACH2xC,EAAAE,SAAA,WACAF,EAAAG,OAAA,GAEA,iBAAAH,EAAAI,WACAJ,EAAAE,SAAA30C,OAAAksB,KAAAuoB,EAAAI,YAAA,GAEAJ,EAAAE,SAAAF,EAAAI,WAGAJ,EAAAK,OACAL,EAAA5M,MAAA4M,EAAAK,KAAAp2C,KAAAgxC,cACA,UAAA+E,EAAA5M,QACA4M,EAAA5M,MAAA,SAEA4M,EAAAK,KAAArB,UACA,WAAAgB,EAAA3xC,KACA2xC,EAAAM,OAAAN,EAAAM,MAAAC,WACAP,EAAA7M,SAAA6M,EAAAK,KAAArB,QAAAgB,EAAAM,MAAAC,SAAAxqB,GAGAiqB,EAAA7M,SAAA6M,EAAAK,KAAArB,UAIA,IAAAwB,EAAAR,EAAAS,OA6DA,SAAAC,EAAAZ,GAEA,OAAAA,GADAE,EAAA7M,UAAA,GA7DA,WAAA6M,EAAA3xC,OACAmyC,EAAAR,GAEAQ,IAIAA,EAAAF,MACAN,EAAAxC,UAAAgD,EAAAF,MAAAr2C,KAAAgxC,cAEA+E,EAAAxC,UAAAgD,EAAAv2C,KAAAgxC,cAEA,OAAA+E,EAAAxC,UAAAhpB,MAAA,OACAwrB,EAAAxC,UAAAwC,EAAAxC,UAAAhpB,MAAA,IAEA,oCAAAwrB,EAAAxC,WAAA,qBAAAwC,EAAAxC,YACAwC,EAAAxC,UAAA,UAEA,aAAAwC,EAAAxC,YACA,8BAAAwC,EAAAI,aACAJ,EAAAW,QAAA,GAEAX,EAAAxC,UAAA,SAEA,WAAAwC,EAAAxC,UAAAhpB,OAAA,KACAwrB,EAAAxC,UAAAwC,EAAAxC,UAAAhpB,MAAA,OAEA,aAAAwrB,EAAAxC,UAAAhpB,OAAA,KACAwrB,EAAAxC,UAAAwC,EAAAxC,UAAAhpB,MAAA,QAEAwrB,EAAAxC,UAAAn1C,QAAA,WACA23C,EAAAxC,UAAA,SAEAgD,EAAAF,OAAAE,EAAAF,MAAAC,WACAP,EAAAY,MAAAJ,EAAAF,MAAAC,SAAAt2C,KAAA2X,QAAA,UAAAA,QAAA,wBACA,kBAAAo+B,EAAAY,MAAA3F,cAAAzmB,MAAA,QACAwrB,EAAAY,MAAA,QAGAZ,EAAAjqB,EAAAyqB,EAAAF,MAAAC,SAAAxqB,EACAiqB,EAAA5L,GAAAuC,WAAA6J,EAAAF,MAAAC,SAAAnM,GAAA,MAEA4L,EAAAxC,UAAAn1C,QAAA,eACA23C,EAAAxC,UAAA,WAEAwC,EAAAxC,UAAAn1C,QAAA,eACA23C,EAAAxC,UAAA,YAEAwC,EAAAxC,UAAAn1C,QAAA,UACA23C,EAAAxC,UAAAn1C,QAAA,6BACA23C,EAAAxC,UAAA,SAEA,YAAAwC,EAAAxC,YACAwC,EAAAxC,UAAA,WAGAwC,EAAAr3C,IAAAk4C,SAAAb,EAAAr3C,KACAq3C,EAAAr3C,EAAAq3C,EAAAjqB,KAWA,8CACA,8CACA,kCACA,oCACA,wCACA,4CACA,0CACA,gCACA,sBACA,4CACA,4CACA,4BAAA8pB,IACA,8CACA,8CACA,8BAAAA,IACA,qBAAAa,IACA,sBAAAA,IACA,2BAAAb,IACA,4BAAAA,IACA,6BAAAA,IACA,6BAAAA,IACA,6BAAAA,IACA,sBACA,kBAAAA,IACA,mBAEA/jC,QA9BA,SAAAia,GACA,OA7GArnB,EA6GAsxC,EA5GAc,GADApkC,EA6GAqZ,GA5GA,GACAgrB,EAAArkC,EAAA,UACAokC,KAAApyC,IAAAqyC,KAAAryC,IACAA,EAAAoyC,GAAApyC,EAAAqyC,GACA,IAAArkC,EAAAnU,SACAmG,EAAAoyC,GAAApkC,EAAA,GAAAhO,EAAAoyC,OANA,IAAApyC,EAAAgO,EACAokC,EACAC,IAyIAf,EAAAhM,QAAAgM,EAAAxD,OAAA,4BAAAwD,EAAAE,UAAA,iCAAAF,EAAAE,WACAF,EAAAhM,MAAAgM,EAAAxD,OAEAwD,EAAA/D,SAAA+D,EAAAlE,MAAA,6BAAAkE,EAAAE,UAAA,oCAAAF,EAAAE,WACAF,EAAAlM,KAAA+L,EAAAG,EAAAlE,KAAA,UACAkE,EAAA/D,OAAA+D,EAAAlE,MAWAkF,CAAAtyC,GACAA,GC9JA,SAAAmkC,EAAA5oC,GAEA,IAAA6nB,EAAA/qB,KACA,OAAA8gB,UAAAtf,OAAA,CACA,IAAAwqC,EAAAlrB,UAAA,GACA,iBAAAkrB,EACA,MAAAA,EAAAkO,OAAA,GACApO,EAAA5oC,GAAAixC,EAAArzB,UAAA,IAGAgrB,EAAA5oC,GAAA81C,EAAAl4B,UAAA,IAGAgrB,EAAA5oC,GAAA8oC,OAGA,OAAAlrB,UAAAtf,OAAA,CACA,GAAAoxB,MAAAC,QAAA3vB,GACA,OAAAA,EAAAkE,IAAA,SAAAqtC,GACA7hB,MAAAC,QAAA4hB,GACA3I,EAAAqO,MAAApvB,EAAA0pB,GAGA3I,EAAA2I,KAIA,oBAAAvxC,GACA,GAAAA,KAAA4oC,EACA,OAAAA,EAAA5oC,OAGA,SAAAA,EACA4oC,EAAA,QAAA5oC,EAAAk3C,MAAAl3C,EAEA,SAAAA,EACA4oC,EAAA,QAAA5oC,EAAAm3C,MAAAn3C,EAEA,YAAAA,EACA4oC,EAAA,WAAA5oC,EAAAo3C,SAAAp3C,EAGAq3C,QAAA1M,IAAA3qC,GAEA,SThDA4oC,ESqDAA,GTpDA,+FACAA,EAAA,+HACAA,EAAA,gKAEAA,EAAA0O,MAAA1O,EAAA,aACAA,EAAA,aAAAA,EAAA,aACAA,EAAA2O,OAAA3O,EAAA,aACAA,EAAA,eAAAA,EAAA,aACAA,EAAA,eAAAA,EAAA,aS6CA,IAAA4O,EAAA,EC7CA,IAAAC,GAAA,kIA0BA,IAAAC,EAjBA,SAAApzB,GACA,MAfA,iBAeAA,EAYAA,EAVAA,KAdAkzB,EAeAA,EAAAlzB,IAZAA,EAcAA,EAbAmzB,EAAAj8B,KAAA,SAAA+5B,GACA,OAAAjxB,EAAAlmB,QAAAm3C,IAAA,IAaAO,EAAAxxB,GATA,MAWAA,EAXA,GAYA2sB,EAAA3sB,QADA,GAZA,IALAA,GCVAqzB,EAAA,SAAAC,EAAAh7C,GAEA,IAAAkD,EAAA+3C,EACA,GAFAD,SAEAh7C,EACA,OAAAg7C,EAEA,IAAAC,KAAAj7C,OAEA0C,KADAQ,EAAAlD,EAAAi7C,MAEAD,EAAAC,GAAA/3C,GAGA,OAAA83C,GCZAE,EAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAH,EAAAC,EACA,OAAAC,EAAA9jC,KAAA6iB,KAAA,EAAAkhB,MCFAC,EAAA,SAAAhrC,GACA,OAAAA,EAAA,QCGAirC,EAAA,SAAAjrC,GACA,OAAAgH,KAAA63B,IAAA7+B,IAAAwiC,EAAAxiC,IAAAgrC,EAAAhrC,GAAAuiC,GCHA2I,EAAA,SAAAN,EAAAO,EAAAN,GACA,IAAAE,EAAAH,EAAAC,EACAO,EAAA,GAAAR,EAEA,OADAG,EAAA/jC,KAAA8iB,KAAA,EAAAihB,IAAA,EAAAA,GAAAK,GACApkC,KAAAy2B,IAAA,IAAAsE,EAAAoJ,IAAAJ,GCJAM,EAAA,SAAAT,EAAAU,GAIA,IAHA,IACAP,EAAAQ,EADAC,EAAA,GAAAZ,EAEAO,EAAApJ,EAAA,EAAA/6B,KAAAgjB,KAAAshB,GACAlzC,EAAA,EAAiBA,GAAA,GAASA,IAI1B,GAHA2yC,EAAAH,EAAA5jC,KAAAqjB,IAAA8gB,GAEAA,GADAI,EAAAxJ,EAAA,EAAA/6B,KAAAgjB,KAAAshB,EAAAtkC,KAAA8iB,KAAA,EAAAihB,IAAA,EAAAA,GAAAS,IAAAL,EAEAnkC,KAAA63B,IAAA0M,IAAA,MACA,OAAAJ,EAIA,aCXA,SAAAM,EAAAC,GACA,OAAAA,EAIA,ICPAC,IC6FAt1B,KAzFA,WACA,IAAA00B,EAAAp7C,KAAA4B,EAAA5B,KAAAgvB,EACAhvB,KAAAi8C,GAAA,EAAAb,IACA,OAAAp7C,OACAA,KAAA2uC,GAAA,GAEA,OAAA3uC,OACAA,KAAA0uC,GAAA,GAEA1uC,KAAAunB,EAAAlQ,KAAA6iB,KAAAl6B,KAAAi8C,IACAj8C,KAAAk1C,OACAl1C,KAAA45C,OACA55C,KAAAwtC,GAAAn2B,KAAAmjB,IAAAx6B,KAAAk1C,QAGAl1C,KAAAwtC,GAAAwN,EAAAh7C,KAAAunB,EAAAlQ,KAAAqjB,IAAA16B,KAAAk1C,QAAA79B,KAAAmjB,IAAAx6B,KAAAk1C,SAIAl1C,KAAAwtC,KACAxtC,KAAA61C,EACA71C,KAAAwtC,GAAAxtC,KAAA61C,EAGA71C,KAAAwtC,GAAA,IAkEAZ,QAzDA,SAAAsB,GACA,IAOA79B,EAAAC,EAPA4rC,EAAAhO,EAAA79B,EACA8rC,EAAAjO,EAAA59B,EAEA,GAAA6rC,EAAAzJ,EAAA,IAAAyJ,EAAAzJ,GAAA,IAAAwJ,EAAAxJ,EAAA,KAAAwJ,EAAAxJ,GAAA,IACA,YAIA,GAAAr7B,KAAA63B,IAAA73B,KAAA63B,IAAAiN,GAAA/J,IAAAI,EACA,YAGA,GAAAxyC,KAAA45C,OACAvpC,EAAArQ,KAAA2uC,GAAA3uC,KAAAgvB,EAAAhvB,KAAAwtC,GAAA8N,EAAAY,EAAAl8C,KAAAitC,OACA38B,EAAAtQ,KAAA0uC,GAAA1uC,KAAAgvB,EAAAhvB,KAAAwtC,GAAAn2B,KAAAw2B,IAAAx2B,KAAAy2B,IAAA6E,EAAA,GAAAwJ,QAEA,CACA,IAAAjB,EAAA7jC,KAAAqjB,IAAAyhB,GACAR,EAAAJ,EAAAv7C,KAAAunB,EAAA40B,EAAAjB,GACA7qC,EAAArQ,KAAA2uC,GAAA3uC,KAAAgvB,EAAAhvB,KAAAwtC,GAAA8N,EAAAY,EAAAl8C,KAAAitC,OACA38B,EAAAtQ,KAAA0uC,GAAA1uC,KAAAgvB,EAAAhvB,KAAAwtC,GAAAn2B,KAAAw2B,IAAA8N,GAIA,OAFAzN,EAAA79B,IACA69B,EAAA59B,IACA49B,GAiCArB,QA3BA,SAAAqB,GAEA,IAEAgO,EAAAC,EAFA9rC,EAAA69B,EAAA79B,EAAArQ,KAAA2uC,GACAr+B,EAAA49B,EAAA59B,EAAAtQ,KAAA0uC,GAGA,GAAA1uC,KAAA45C,OACAuC,EAAA/J,EAAA,EAAA/6B,KAAAgjB,KAAAhjB,KAAAi3B,KAAAh+B,GAAAtQ,KAAAgvB,EAAAhvB,KAAAwtC,UAEA,CACA,IAAAmO,EAAAtkC,KAAAi3B,KAAAh+B,GAAAtQ,KAAAgvB,EAAAhvB,KAAAwtC,KAEA,YADA2O,EAAAT,EAAA17C,KAAAunB,EAAAo0B,IAEA,YAOA,OAJAO,EAAAZ,EAAAt7C,KAAAitC,MAAA58B,GAAArQ,KAAAgvB,EAAAhvB,KAAAwtC,KAEAU,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EACAjO,GAQA7tB,OALA,wGFlFAqG,KAXA,aAYAkmB,QAAAkP,EACAjP,QAAAiP,EACAz7B,OALA,wBCNA+7B,KACAC,KAEA,SAAAxK,EAAA1rC,EAAAsC,GACA,IAAAq+B,EAAAuV,EAAA76C,OACA,OAAA2E,EAAAka,OAIAg8B,EAAAvV,GAAA3gC,EACAA,EAAAka,MAAAtL,QAAA,SAAAxL,GACA6yC,EAAA7yC,EAAA2qC,eAAApN,IAEA9mC,OAPAu6C,QAAA1M,IAAAplC,IACA,GAwBA,IAAAmpC,GACA1U,MAJA,WACA8e,EAAAjnC,QAAA88B,IAIAA,MACAr1B,IAhBA,SAAAtZ,GACA,IAAAA,EACA,SAEA,IAAAqG,EAAArG,EAAAgxC,cACA,gBAAAkI,EAAA7yC,IAAA8yC,EAAAD,EAAA7yC,IACA8yC,EAAAD,EAAA7yC,SADA,IE1BA+yC,GAEAC,OACAvtB,EAAA,QACAqe,GAAA,QACAmP,YAAA,cAGAC,OACAztB,EAAA,QACAqe,GAAA,QACAmP,YAAA,6BAGAE,OACA1tB,EAAA,QACAqe,GAAA,cACAmP,YAAA,wBAGAG,OACA3tB,EAAA,QACAqe,GAAA,QACAmP,YAAA,YAGAI,MACA5tB,EAAA,YACAptB,EAAA,WACA46C,YAAA,aAGAK,MACA7tB,EAAA,QACAqe,GAAA,OACAmP,YAAA,uBAGAM,OACA9tB,EAAA,QACAqe,GAAA,OACAmP,YAAA,4BAGAO,UACA/tB,EAAA,YACAptB,EAAA,YACA46C,YAAA,iBAGAQ,QACAhuB,EAAA,WACAqe,GAAA,IACAmP,YAAA,8BAGAS,SACAjuB,EAAA,QACAqe,GAAA,OACAmP,YAAA,mCAGAU,OACAluB,EAAA,QACAqe,GAAA,cACAmP,YAAA,qBAGAW,QACAnuB,EAAA,YACAqe,GAAA,YACAmP,YAAA,eAGAY,UACApuB,EAAA,YACAqe,GAAA,YACAmP,YAAA,yBAGAa,QACAruB,EAAA,UACAptB,EAAA,UACA46C,YAAA,eAGAc,QACAtuB,EAAA,YACAqe,GAAA,SACAmP,YAAA,oBAGAe,QACAvuB,EAAA,kBACAqe,GAAA,kBACAmP,YAAA,eAGAgB,KACAxuB,EAAA,UACAqe,GAAA,OACAmP,YAAA,mCAGAiB,QACAzuB,EAAA,QACAqe,GAAA,MACAmP,YAAA,2BAGAkB,SACA1uB,EAAA,WACAqe,GAAA,SACAmP,YAAA,gBAGAmB,SACA3uB,EAAA,YACAqe,GAAA,SACAmP,YAAA,gBAGAoB,SACA5uB,EAAA,YACAqe,GAAA,SACAmP,YAAA,gBAGAqB,SACA7uB,EAAA,YACAqe,GAAA,SACAmP,YAAA,gBAGAsB,SACA9uB,EAAA,YACAqe,GAAA,SACAmP,YAAA,gBAGAuB,SACA/uB,EAAA,YACAqe,GAAA,SACAmP,YAAA,6BAGAwB,SACAhvB,EAAA,QACAqe,GAAA,MACAmP,YAAA,gCAGAyB,UACAjvB,EAAA,QACAqe,GAAA,MACAmP,YAAA,gBAGA0B,SACAlvB,EAAA,QACAqe,GAAA,MACAmP,YAAA,gBAGA2B,SACAnvB,EAAA,QACAqe,GAAA,MACAmP,YAAA,gBAGA4B,OACApvB,EAAA,QACAqe,GAAA,IACAmP,YAAA,SAGA6B,MACArvB,EAAA,QACAqe,GAAA,IACAmP,YAAA,gCAGA8B,OACAtvB,EAAA,QACAqe,GAAA,OACAmP,YAAA,cAGA+B,OACAvvB,EAAA,QACAqe,GAAA,QACAmP,YAAA,cAGAgC,OACAxvB,EAAA,QACAqe,GAAA,IACAmP,YAAA,mBAGAiC,UACAzvB,EAAA,UACAptB,EAAA,UACA46C,YAAA,0BAGAkC,SACA1vB,EAAA,QACAqe,GAAA,QACAmP,YAAA,yBAGAmC,OACA3vB,EAAA,QACAqe,GAAA,MACAmP,YAAA,oBAGAoC,QACA5vB,EAAA,QACAptB,EAAA,aACA46C,YAAA,kBAGAqC,SACA7vB,EAAA,QACAptB,EAAA,aACA46C,YAAA,WAGAsC,OACA9vB,EAAA,QACAqe,GAAA,MACAmP,YAAA,UAGAuC,OACA/vB,EAAA,QACAqe,GAAA,OACAmP,YAAA,UAGAwC,MACAhwB,EAAA,QACAqe,GAAA,OACAmP,YAAA,WAGAhC,GAAA8B,EAAA9B,OACAxrB,EAAA,QACAqe,GAAA,cACAmP,YAAA,UAGAF,EAAA1C,QACA5qB,EAAA,QACAptB,EAAA,QACA46C,YAAA,6BCjQA,IAAAyC,MAEAA,GAAAC,OACA/I,QAAA,QACAgJ,QAAA,QACAC,UAAA,SAGAH,GAAAI,QACAlJ,QAAA,yBACAgJ,QAAA,SACAC,UAAA,SAGAH,GAAAK,QACAnJ,QAAA,uBACAgJ,QAAA,QACAC,UAAA,wCAGAH,GAAAM,OACApJ,QAAA,QACAgJ,QAAA,QACAC,UAAA,6BAGAH,GAAAO,OACAhJ,SAAA,2CACA2I,QAAA,SACAC,UAAA,6BAGAH,GAAAQ,SACAtJ,QAAA,mBACAgJ,QAAA,SACAC,UAAA,+BAGAH,GAAAS,UACAvJ,QAAA,mBACAgJ,QAAA,UACAC,UAAA,yBAGAH,GAAAU,eACAxJ,QAAA,qBACAgJ,QAAA,SACAC,UAAA,iBAGAH,GAAAW,QACAzJ,QAAA,qDACAgJ,QAAA,OACAC,UAAA,kBAGAH,GAAAY,OACA1J,QAAA,qDACAgJ,QAAA,WACAC,UAAA,gBAGAH,GAAAa,YACA3J,QAAA,yBACAgJ,QAAA,OACAC,UAAA,cAGAH,GAAAc,QACA5J,QAAA,6CACAgJ,QAAA,OACAC,UAAA,mCAGAH,GAAAe,QACA7J,QAAA,yDACAgJ,QAAA,OACAC,UAAA,aAGAH,GAAAgB,QACA9J,QAAA,aACAgJ,QAAA,SACAC,UAAA,kBAGAH,GAAAiB,UACA/J,QAAA,eACAgJ,QAAA,SACAC,UAAA,YAGAH,GAAAkB,eACAhK,QAAA,cACAgJ,QAAA,SACAC,UAAA,yBAGAH,GAAAmB,OACAjK,QAAA,wDACAgJ,QAAA,OACAC,UAAA,8BCnEA,IAAAiB,GAhCA,SAAA5J,EAAAL,EAAApnB,EAAAptB,EAAAq6C,EAAAqE,GACA,IAAAzI,KA4BA,OAzBAA,EAAA0I,gBADA/9C,IAAAi0C,GAAA,SAAAA,EACAvE,EAEAD,EAGAmE,IACAyB,EAAAzB,eAAAhvC,IAAAwoC,YACA,IAAAiI,EAAAzB,aAAA,QAAAyB,EAAAzB,aAAA,QAAAyB,EAAAzB,aAAA,KACAyB,EAAA0I,WAAAxO,GAEA8F,EAAAzB,aAAA50C,OAAA,IACA,IAAAq2C,EAAAzB,aAAA,QAAAyB,EAAAzB,aAAA,QAAAyB,EAAAzB,aAAA,QAAAyB,EAAAzB,aAAA,KACAyB,EAAA0I,WAAAvO,EACA6F,EAAAzB,aAAA,IAAAjE,EACA0F,EAAAzB,aAAA,IAAAjE,EACA0F,EAAAzB,aAAA,IAAAjE,EACA0F,EAAAzB,aAAA,GAAAyB,EAAAzB,aAAA,YAKAyB,EAAA7oB,IACA6oB,EAAAj2C,IACAi2C,EAAAoE,KACApE,EAAAyI,MACAzI,GCvBA,SAAA2I,GAAAC,EAAAC,GACA,KAAA1gD,gBAAAwgD,IACA,WAAAA,GAAAC,GAEAC,KAAA,SAAAC,GACA,GAAAA,EACA,MAAAA,GAGA,IAAAC,EAAAhG,EAAA6F,GACA,oBAAAG,EAAA,CAIA,IAAAC,EAAAL,GAAA5O,YAAAp1B,IAAAokC,EAAAzH,UACA,GAAA0H,EAAA,CAIA,GAAAD,EAAAnK,WAAA,SAAAmK,EAAAnK,UAAA,CACA,IAAAqK,EAAA/M,EAAAkL,GAAA2B,EAAAnK,WACAqK,IACAF,EAAAxK,aAAA0K,EAAA3K,QAAA2K,EAAA3K,QAAA/zC,MAAA,UACAw+C,EAAA/G,MAAAiH,EAAA3B,QACAyB,EAAAxB,UAAA0B,EAAA1B,UAAA0B,EAAA1B,UAAAwB,EAAAnK,WAGAmK,EAAApT,GAAAoT,EAAApT,IAAA,EACAoT,EAAA1U,KAAA0U,EAAA1U,MAAA,MACA0U,EAAA/G,MAAA+G,EAAA/G,OAAA,QACA,IClCA7qB,EAAAptB,EAAAm0C,EACAgL,EACAC,EACA/E,EACA10B,ED8BA05B,ECfA,SAAAjyB,EAAAptB,EAAAyrC,EAAAwM,EAAAD,GACA,IAAA5qB,EAAA,CACA,IAAAmwB,EAAApL,EAAAuI,EAAAzC,GACAsF,IACAA,EAAA3E,IAEAxrB,EAAAmwB,EAAAnwB,EACAptB,EAAAu9C,EAAAv9C,EACAyrC,EAAA8R,EAAA9R,GAUA,OAPAA,IAAAzrC,IACAA,GAAA,IAAAyrC,GAAAre,IAEA,IAAAqe,GAAAh2B,KAAA63B,IAAAlgB,EAAAptB,GAAA4wC,KACAoH,GAAA,EACAh4C,EAAAotB,IAGAA,IACAptB,IACAyrC,KACAuM,UDPAsH,CAAAN,EAAA5xB,EAAA4xB,EAAAh/C,EAAAg/C,EAAAvT,GAAAuT,EAAA/G,MAAA+G,EAAAhH,QACAuH,GCnCAnyB,EDmCAiyB,EAAAjyB,ECnCAptB,EDmCAq/C,EAAAr/C,EAAAq/C,EAAA5T,GCnCA0I,EDmCA6K,EAAA7K,IChCAkG,IAFA8E,EAAA/xB,MACAgyB,EAAAp/C,MACAm/C,EACAx5B,EAAA,EACAwuB,GAEAgL,GADA/xB,GAAA,EAAAitB,GAAA5J,EAAA4J,GAAA3J,EAAA2J,EAAA1J,KACAvjB,EACAitB,EAAA,GAEA10B,EAAAlQ,KAAA6iB,KAAA+hB,IAIAA,KACA10B,IACA+4B,KAJAS,EAAAC,ODwBAI,EAAAR,EAAAhM,OAAAyL,GAAAO,EAAAnK,UAAAmK,EAAAxK,aAAA6K,EAAAjyB,EAAAiyB,EAAAr/C,EAAAu/C,EAAAlF,GAAAkF,EAAAb,KAEAzF,EAAA76C,KAAA4gD,GACA/F,EAAA76C,KAAA6gD,GAGA7gD,KAAAgvB,EAAAiyB,EAAAjyB,EACAhvB,KAAA4B,EAAAq/C,EAAAr/C,EACA5B,KAAAqtC,GAAA4T,EAAA5T,GACArtC,KAAA45C,OAAAqH,EAAArH,OAGA55C,KAAAi8C,GAAAkF,EAAAlF,GACAj8C,KAAAunB,EAAA45B,EAAA55B,EACAvnB,KAAAsgD,IAAAa,EAAAb,IAGAtgD,KAAA40C,MAAAwM,EAGAphD,KAAA0mB,OAGAg6B,EAAA,KAAA1gD,WAvCA0gD,EAAAD,QALAC,EAAAD,GA+CAD,GAAA5O,cACA4O,GAAA5O,YAAA1U,QACA,IAAAyU,GAAA,GEjEA,SAAA0P,GAAA/5C,GACA,OAAAA,IAAAyqC,GAAAzqC,IAAA0qC,EAGA,IAAAsP,GAAA,SAAAxhD,EAAAyhD,EAAApf,GAEA,OCPAof,EDOAA,GCPAzhD,EDOAA,GCNAygD,aAAAgB,EAAAhB,cAEGzgD,EAAAkvB,IAAAuyB,EAAAvyB,GAAA3X,KAAA63B,IAAApvC,EAAAm8C,GAAAsF,EAAAtF,IAAA,SAIAn8C,EAAAygD,aAAAxO,EACHjyC,EAAAs2C,aAAA,KAAAmL,EAAAnL,aAAA,IAAAt2C,EAAAs2C,aAAA,KAAAmL,EAAAnL,aAAA,IAAAt2C,EAAAs2C,aAAA,KAAAmL,EAAAnL,aAAA,GACGt2C,EAAAygD,aAAAvO,GACHlyC,EAAAs2C,aAAA,KAAAmL,EAAAnL,aAAA,IAAAt2C,EAAAs2C,aAAA,KAAAmL,EAAAnL,aAAA,IAAAt2C,EAAAs2C,aAAA,KAAAmL,EAAAnL,aAAA,IAAAt2C,EAAAs2C,aAAA,KAAAmL,EAAAnL,aAAA,IAAAt2C,EAAAs2C,aAAA,KAAAmL,EAAAnL,aAAA,IAAAt2C,EAAAs2C,aAAA,KAAAmL,EAAAnL,aAAA,IAAAt2C,EAAAs2C,aAAA,KAAAmL,EAAAnL,aAAA,IDFAjU,EAMAriC,EAAAygD,aAAArO,GAAAqP,EAAAhB,aAAArO,EACA/P,EAMAriC,EAAAm8C,KAAAsF,EAAAtF,IAAAn8C,EAAAkvB,IAAAuyB,EAAAvyB,GAAAqyB,GAAAvhD,EAAAygD,aAAAc,GAAAE,EAAAhB,aAKApe,ECGA,SAAA+L,EAAA+N,EAAAjtB,GACA,IAIAwyB,EACAC,EACAC,EACAC,EAPAC,EAAA1T,EAAA79B,EACAwxC,EAAA3T,EAAA59B,EACAwxC,EAAA5T,EAAA6T,EAAA7T,EAAA6T,EAAA,EAYA,GAAAF,GAAAzP,GAAAyP,GAAA,MAAAzP,EACAyP,GAAAzP,OACG,GAAAyP,EAAAzP,GAAAyP,EAAA,MAAAzP,EACHyP,EAAAzP,OACG,GAAAyP,GAAAzP,GAAAyP,EAAAzP,EAGH,YAUA,OAPAwP,EAAAvqC,KAAA8f,KACAyqB,GAAA,EAAAvqC,KAAA8f,IAEAsqB,EAAApqC,KAAAqjB,IAAAmnB,GACAF,EAAAtqC,KAAAmjB,IAAAqnB,GACAH,EAAAD,KAGApxC,IAFAmxC,EAAAxyB,EAAA3X,KAAA6iB,KAAA,EAAA+hB,EAAAyF,IAEAI,GAAAH,EAAAtqC,KAAAmjB,IAAAonB,GACAtxC,GAAAkxC,EAAAM,GAAAH,EAAAtqC,KAAAqjB,IAAAknB,GACAG,GAAAP,GAAA,EAAAvF,GAAA6F,GAAAL,GDtCAO,CAAA7f,EAAAriC,EAAAm8C,GAAAn8C,EAAAkvB,GAEAqyB,GAAAvhD,EAAAygD,cACApe,ECmJA,SAAA+L,EAAAqS,EAAAnK,GAEA,GAAAmK,IAAAxO,EAGA,OACA1hC,EAAA69B,EAAA79B,EAAA+lC,EAAA,GACA9lC,EAAA49B,EAAA59B,EAAA8lC,EAAA,GACA2L,EAAA7T,EAAA6T,EAAA3L,EAAA,IAEG,GAAAmK,IAAAvO,EAAA,CACH,IAAAiQ,EAAA7L,EAAA,GACA8L,EAAA9L,EAAA,GACA+L,EAAA/L,EAAA,GACAgM,EAAAhM,EAAA,GACAiM,EAAAjM,EAAA,GACAkM,EAAAlM,EAAA,GACAmM,EAAAnM,EAAA,GAGA,OACA/lC,EAAAkyC,GAAArU,EAAA79B,EAAAiyC,EAAApU,EAAA59B,EAAA+xC,EAAAnU,EAAA6T,GAAAE,EACA3xC,EAAAiyC,GAAAD,EAAApU,EAAA79B,EAAA69B,EAAA59B,EAAA8xC,EAAAlU,EAAA6T,GAAAG,EACAH,EAAAQ,IAAAF,EAAAnU,EAAA79B,EAAA+xC,EAAAlU,EAAA59B,EAAA49B,EAAA6T,GAAAI,ID1KAK,CAAArgB,EAAAriC,EAAAygD,WAAAzgD,EAAAs2C,eAEAiL,GAAAE,EAAAhB,cACApe,ECgLA,SAAA+L,EAAAqS,EAAAnK,GAEA,GAAAmK,IAAAxO,EAGA,OACA1hC,EAAA69B,EAAA79B,EAAA+lC,EAAA,GACA9lC,EAAA49B,EAAA59B,EAAA8lC,EAAA,GACA2L,EAAA7T,EAAA6T,EAAA3L,EAAA,IAGG,GAAAmK,IAAAvO,EAAA,CACH,IAAAiQ,EAAA7L,EAAA,GACA8L,EAAA9L,EAAA,GACA+L,EAAA/L,EAAA,GACAgM,EAAAhM,EAAA,GACAiM,EAAAjM,EAAA,GACAkM,EAAAlM,EAAA,GACAmM,EAAAnM,EAAA,GACAqM,GAAAvU,EAAA79B,EAAA4xC,GAAAM,EACAG,GAAAxU,EAAA59B,EAAA4xC,GAAAK,EACAI,GAAAzU,EAAA6T,EAAAI,GAAAI,EAIA,OACAlyC,EAAAoyC,EAAAH,EAAAI,EAAAL,EAAAM,EACAryC,GAAAgyC,EAAAG,EAAAC,EAAAN,EAAAO,EACAZ,EAAAM,EAAAI,EAAAL,EAAAM,EAAAC,ID5MAC,CAAAzgB,EAAAof,EAAAhB,WAAAgB,EAAAnL,eCoCA,SAAAlI,EAAA+N,EAAAjtB,EAAAptB,GAGA,IAIAihD,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAKA7B,EAEAE,EAvBA4B,EAAA,MAkBA7U,EAAAX,EAAA79B,EACAu+B,EAAAV,EAAA59B,EACAqzC,EAAAzV,EAAA6T,EAAA7T,EAAA6T,EAAA,EASA,GAJAc,EAAAxrC,KAAA6iB,KAAA2U,IAAAD,KACAkU,EAAAzrC,KAAA6iB,KAAA2U,IAAAD,IAAA+U,KAGAd,EAAA7zB,EAAA00B,GAOA,GAJA9B,EAAA,EAIAkB,EAAA9zB,EAAA00B,EAGA,OADA5B,GAAAlgD,GAEAyO,EAAA69B,EAAA79B,EACAC,EAAA49B,EAAA59B,EACAyxC,EAAA7T,EAAA6T,QAMAH,EAAAvqC,KAAAusC,MAAAhV,EAAAC,GAYAkU,EAAAY,EAAAb,EAGAM,GAFAJ,EAAAH,EAAAC,IAEA,EAAA7G,IADAgH,EAAA,EAAA5rC,KAAA6iB,KAAA,EAAA+hB,GAAA,EAAAA,GAAA+G,MAEAK,EAAAN,EAAAE,EACAQ,EAAA,EAIA,GACAA,IAMAP,EAAAjH,GALAkH,EAAAn0B,EAAA3X,KAAA6iB,KAAA,EAAA+hB,EAAAoH,OAKAF,GAFArB,EAAAe,EAAAO,EAAAO,EAAAN,EAAAF,GAAA,EAAAlH,EAAAoH,OAMAG,GADAD,EAAAR,GAFAE,EAAA,EAAA5rC,KAAA6iB,KAAA,EAAAgpB,GAAA,EAAAA,GAAAF,OAGAI,GAFAE,EAAAN,GAAA,EAAAE,GAAAD,GAEAI,EACAD,EAAAE,EACAD,EAAAE,QAEAC,IAnFA,OAmFAC,EAlFA,IAsFA,OACApzC,EAAAuxC,EACAtxC,EAHA+G,KAAAgjB,KAAAkpB,EAAAlsC,KAAA63B,IAAAoU,IAIAvB,EAAAD,GDhIA+B,CAAA1hB,EAAAof,EAAAtF,GAAAsF,EAAAvyB,EAAAuyB,EAAA3/C,IAZAugC,ECtBA,IAAAriC,EAAAyhD,GCFAuC,GAAA,SAAAj7C,EAAAk7C,EAAA5hB,GACA,IAGAsS,EAAAuP,EAAAv7C,EAHAw7C,EAAA9hB,EAAA9xB,EACA6zC,EAAA/hB,EAAA7xB,EACA6zC,EAAAhiB,EAAA4f,GAAA,EAEAlK,KACA,IAAApvC,EAAA,EAAaA,EAAA,EAAOA,IACpB,IAAAs7C,GAAA,IAAAt7C,QAAAjG,IAAA2/B,EAAA4f,EAeA,OAZA,IAAAt5C,GACAgsC,EAAAwP,EACAD,EAAA,KAEA,IAAAv7C,GACAgsC,EAAAyP,EACAF,EAAA,MAGAvP,EAAA0P,EACAH,EAAA,KAEAn7C,EAAAqjC,KAAAzjC,IACA,QACAovC,EAAAmM,GAAAvP,EACA,MACA,QACAoD,EAAAmM,IAAAvP,EACA,MACA,QACAoD,EAAAmM,GAAAvP,EACA,MACA,QACAoD,EAAAmM,IAAAvP,EACA,MACA,aACAjyC,IAAA2/B,EAAA6hB,KACAnM,EAAAkK,EAAAtN,GAEA,MACA,aACAjyC,IAAA2/B,EAAA6hB,KACAnM,EAAAkK,GAAAtN,GAEA,MACA,QAEA,YAGA,OAAAoD,GClDAuM,GAAA,SAAA3mC,GACA,IAAAo6B,GACAxnC,EAAAoN,EAAA,GACAnN,EAAAmN,EAAA,IAQA,OANAA,EAAAjc,OAAA,IACAq2C,EAAAkK,EAAAtkC,EAAA,IAEAA,EAAAjc,OAAA,IACAq2C,EAAAzT,EAAA3mB,EAAA,IAEAo6B,GCXAwM,GAAA,SAAAliB,GACAmiB,GAAAniB,EAAA9xB,GACAi0C,GAAAniB,EAAA7xB,IAEA,SAAAg0C,GAAAC,GACA,sBAAA1jB,OAAAiZ,SAAA,CACA,GAAAjZ,OAAAiZ,SAAAyK,GACA,OAEA,UAAAC,UAAA,sCAEA,oBAAAD,UAAAzK,SAAAyK,GACA,UAAAC,UAAA,sCCDA,SAAA7X,GAAA7sC,EAAAyhD,EAAApf,GACA,IAAA+c,EALAp/C,EAAAyhD,EAqEA,OA/DA3uB,MAAAC,QAAAsP,KACAA,EAAAiiB,GAAAjiB,IAEAkiB,GAAAliB,GAEAriC,EAAA80C,OAAA2M,EAAA3M,QAXA2M,EAWAA,IAXAzhD,EAWAA,GAVA80C,MAAA2L,aAAAxO,GAAAjyC,EAAA80C,MAAA2L,aAAAvO,IAAA,UAAAuP,EAAA9K,YAAA8K,EAAA3M,MAAA2L,aAAAxO,GAAAwP,EAAA3M,MAAA2L,aAAAvO,IAAA,UAAAlyC,EAAA22C,aAYAtU,EAAAwK,GAAA7sC,EADAo/C,EAAA,IAAAvN,GAAA,SACAxP,GACAriC,EAAAo/C,GAGA,QAAAp/C,EAAAosC,OACA/J,EAAA2hB,GAAAhkD,GAAA,EAAAqiC,IAGA,YAAAriC,EAAAq5C,SACAhX,GACA9xB,EAAA8xB,EAAA9xB,EAAAoiC,EACAniC,EAAA6xB,EAAA7xB,EAAAmiC,IAIA3yC,EAAAssC,WACAjK,GACA9xB,EAAA8xB,EAAA9xB,EAAAvQ,EAAAssC,SACA97B,EAAA6xB,EAAA7xB,EAAAxQ,EAAAssC,WAGAjK,EAAAriC,EAAA+sC,QAAA1K,IAGAriC,EAAAw2C,iBACAnU,EAAA9xB,GAAAvQ,EAAAw2C,gBAIAnU,EAAAmf,GAAAxhD,EAAA80C,MAAA2M,EAAA3M,MAAAzS,GAGAof,EAAAjL,iBACAnU,GACA9xB,EAAA8xB,EAAA9xB,EAAAkxC,EAAAjL,eACAhmC,EAAA6xB,EAAA7xB,IAIA,YAAAixC,EAAApI,SAEAhX,GACA9xB,EAAA8xB,EAAA9xB,EAAAqiC,EACApiC,EAAA6xB,EAAA7xB,EAAAoiC,IAGAvQ,EAAAof,EAAA3U,QAAAzK,GACAof,EAAAnV,WACAjK,GACA9xB,EAAA8xB,EAAA9xB,EAAAkxC,EAAAnV,SACA97B,EAAA6xB,EAAA7xB,EAAAixC,EAAAnV,YAMA,QAAAmV,EAAArV,KACA4X,GAAAvC,GAAA,EAAApf,GAGAA,EC9EA,IAAAsiB,GAAA9S,GAAA,SAEA,SAAA+S,GAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAjN,EAAAnnB,EACA,OAAAkC,MAAAC,QAAAgyB,IACAC,EAAAnY,GAAAgY,EAAAC,EAAAC,GACA,IAAAA,EAAArjD,QACAsjD,EAAAz0C,EAAAy0C,EAAAx0C,EAAAw0C,EAAA/C,IAGA+C,EAAAz0C,EAAAy0C,EAAAx0C,KAIAunC,EAAAlL,GAAAgY,EAAAC,EAAAC,GAEA,KADAn0B,EAAAlsB,OAAAksB,KAAAm0B,IACArjD,OACAq2C,GAEAnnB,EAAA3b,QAAA,SAAAxR,GACA,MAAAA,GAAA,MAAAA,IAGAs0C,EAAAt0C,GAAAshD,EAAAthD,MAEAs0C,IAIA,SAAAkN,GAAA55B,GACA,OAAAA,aAAAwmB,GACAxmB,EAEAA,EAAA65B,MACA75B,EAAA65B,MAEArT,GAAAxmB,GAoCA,IAAA85B,GAlCA,SAAAC,EAAAC,EAAAC,GACAF,EAAAH,GAAAG,GACA,IACAv9C,EADA09C,GAAA,EAcA,YAZA,IAAAF,GACAA,EAAAD,EACAA,EAAAT,GACAY,GAAA,SAEA,IAAAF,EAAA90C,GAAAuiB,MAAAC,QAAAsyB,MACAC,EAAAD,EACAA,EAAAD,EACAA,EAAAT,GACAY,GAAA,GAEAF,EAAAJ,GAAAI,GACAC,EACAV,GAAAQ,EAAAC,EAAAC,IAGAz9C,GACAilC,QAAA,SAAAiY,GACA,OAAAH,GAAAQ,EAAAC,EAAAN,IAEAhY,QAAA,SAAAgY,GACA,OAAAH,GAAAS,EAAAD,EAAAL,KAGAQ,IACA19C,EAAAq9C,MAAAG,GAEAx9C,IC9DA29C,GAAA,EAQAC,GAAA,SAQAC,GAAA,SAEAC,GAAA,GACAlX,GAAA,GACAmX,GAAA,GACAC,GAAA,GACAC,GAAA,GACAC,IACAjZ,QAAAkZ,GACAjZ,QA4BA,SAAAgZ,GACA,IAAA5sC,EAAA8sC,GAAAC,GAAAH,EAAAI,gBACA,GAAAhtC,EAAAkjC,KAAAljC,EAAAijC,IACA,OAAAjjC,EAAAijC,IAAAjjC,EAAAkjC,IAAAljC,EAAAijC,IAAAjjC,EAAAkjC,KAEA,OAAAljC,EAAAitC,KAAAjtC,EAAAktC,OAAAltC,EAAAzR,MAAAyR,EAAAmtC,MAhCAhC,QAAAiC,IAWA,SAAAP,GAAAQ,EAAAC,GAEA,OADAA,KAAA,EA6TAC,EA9PA,SAAAF,GACA,IAMAG,EACAC,EAAAC,EAAAC,EAAAC,EAAAC,EAGAC,EACAC,EAXAC,EAAAX,EAAAnK,IACA+K,EAAAZ,EAAApK,IAEAiL,EAAA,UAKAC,EAAAC,GAAAJ,GACAK,EAAAD,GAAAH,GAIAF,EAAA3vC,KAAAC,OAAA4vC,EAAA,UAGA,MAAAA,IACAF,EAAA,IAIAC,GAAA,IAAAA,EAAA,IAAAC,GAAA,GAAAA,EAAA,KACAF,EAAA,IAIAC,GAAA,IAAAA,EAAA,KACAC,GAAA,GAAAA,EAAA,EACAF,EAAA,GAEAE,GAAA,GAAAA,EAAA,GACAF,EAAA,GAEAE,GAAA,IAAAA,EAAA,GACAF,EAAA,GAEAE,GAAA,IAAAA,EAAA,KACAF,EAAA,KAOAD,EAAAM,GAHA,GAAAL,EAAA,UAKAP,EAAA,KAAAU,GAEAT,EA9CA,QA8CArvC,KAAA6iB,KAAA,EAAAitB,EAAA9vC,KAAAqjB,IAAA0sB,GAAA/vC,KAAAqjB,IAAA0sB,IACAT,EAAAtvC,KAAAy2B,IAAAsZ,GAAA/vC,KAAAy2B,IAAAsZ,GACAR,EAAAH,EAAApvC,KAAAmjB,IAAA4sB,GAAA/vC,KAAAmjB,IAAA4sB,GACAP,EAAAxvC,KAAAmjB,IAAA4sB,IAAAE,EAAAP,GAEAD,EAnDA,SAmDA,kBAAAM,EAAA,oBAAA/vC,KAAAqjB,IAAA,EAAA0sB,GAAA,qBAAA/vC,KAAAqjB,IAAA,EAAA0sB,GAAA,GAAAD,MAAA,KAAA9vC,KAAAqjB,IAAA,EAAA0sB,IAEA,IAAAG,EAnDA,MAmDAb,GAAAG,GAAA,EAAAF,EAAAC,GAAAC,MAAA,QAAAF,MAAA,GAAAC,EAAA,GAAAH,GAAAI,UAAA,SAEAW,EArDA,OAqDAV,EAAAJ,EAAArvC,KAAAy2B,IAAAsZ,IAAAP,IAAA,KAAAF,EAAA,EAAAC,EAAA,EAAAA,KAAAC,QAAA,UAAAF,MAAA,IAAAC,EAAA,IAAAH,GAAAI,YAAA,MACAI,EAAA,IACAO,GAAA,KAIA,OACAC,SAAApwC,KAAAmB,MAAAgvC,GACAE,QAAArwC,KAAAmB,MAAA+uC,GACAI,WAAAX,EACAY,WA6GA,SAAAzL,GAGA,IAAA0L,EAAA,IAEA,IAAA1L,MAAA,GACA0L,EAAA,IAEA,GAAA1L,MAAA,GACA0L,EAAA,IAEA,GAAA1L,MAAA,GACA0L,EAAA,IAEA,GAAA1L,MAAA,GACA0L,EAAA,IAEA,GAAA1L,MAAA,GACA0L,EAAA,IAEA,GAAA1L,MAAA,GACA0L,EAAA,IAEA,GAAA1L,MAAA,GACA0L,EAAA,IAEA,GAAA1L,MAAA,GACA0L,EAAA,IAEA,GAAA1L,MAAA,EACA0L,EAAA,IAEA,EAAA1L,MAAA,EACA0L,EAAA,IAEA,EAAA1L,OAAA,EACA0L,EAAA,KAEA,EAAA1L,OAAA,GACA0L,EAAA,KAEA,GAAA1L,OAAA,GACA0L,EAAA,KAEA,GAAA1L,OAAA,GACA0L,EAAA,KAEA,GAAA1L,OAAA,GACA0L,EAAA,KAEA,GAAA1L,OAAA,GACA0L,EAAA,KAEA,GAAA1L,OAAA,GACA0L,EAAA,KAEA,GAAA1L,OAAA,GACA0L,EAAA,KAEA,GAAA1L,OAAA,GACA0L,EAAA,KAEA,GAAA1L,OAAA,KACA0L,EAAA,KAEA,OAAAA,EA9KAC,CAAAb,IAlIAc,EACA5L,IAAAmK,EAAA,GACApK,IAAAoK,EAAA,KA0TAC,EAzTGA,EA2THyB,EAAA,QAAAxB,EAAAkB,QACAO,EAAA,QAAAzB,EAAAiB,SAEAjB,EAAAmB,WAAAnB,EAAAoB,YAaAF,EAbAlB,EAAAkB,QAaAD,EAbAjB,EAAAiB,SAaAE,EAbAnB,EAAAmB,WAcAO,EAAAC,GAAAR,GACAS,EAAA/wC,KAAAC,MAAAowC,EAAA,KACAW,EAAAhxC,KAAAC,MAAAmwC,EAAA,QAoCAa,EAnCAF,EAmCAG,EAnCAF,EAqCA7qC,EArCA0qC,EAqCA,EACAM,EAAAjD,GAAAkD,WAAAjrC,GACAkrC,EAAAlD,GAAAiD,WAAAjrC,GAIAmrC,EAAAD,EAAAH,EACAK,GAAA,GAFAC,EAAAL,EAAAF,EAAA,GAIA1C,KACAiD,IAAAjD,GAAAH,GAAA,EACAmD,GAAA,IAGAC,IAAAta,IAAAia,EAAAja,IAAAsa,EAAAta,KAAAsa,EAAAta,IAAAia,EAAAja,KAAAqa,IACAC,KAGAA,IAAAnD,IAAA8C,EAAA9C,IAAAmD,EAAAnD,KAAAmD,EAAAnD,IAAA8C,EAAA9C,KAAAkD,MACAC,IAEAta,IACAsa,IAIAA,EAAAjD,KACAiD,IAAAjD,GAAAH,GAAA,GAGAkD,EAAAhD,IACAgD,IAAAhD,GAAAF,GAAA,EACAmD,GAAA,GAGAA,GAAA,GAGAD,IAAApa,IAAAma,EAAAna,IAAAoa,EAAApa,KAAAoa,EAAApa,IAAAma,EAAAna,KAAAqa,IACAD,KAGAA,IAAAjD,IAAAgD,EAAAhD,IAAAiD,EAAAjD,KAAAiD,EAAAjD,IAAAgD,EAAAhD,KAAAkD,MACAD,IAEApa,IACAoa,IAIAA,EAAAhD,KACAgD,IAAAhD,GAAAF,GAAA,GAGAqD,OAAAC,aAAAF,GAAAC,OAAAC,aAAAJ,IA5GAX,EAAA5uC,OAAA4uC,EAAAxmD,OAAA,EAAA+kD,GAAA0B,EAAA7uC,OAAA6uC,EAAAzmD,OAAA,EAAA+kD,GALA,IAAAC,EAAAD,EAEAyB,EACAC,EAsDAK,EAAAC,EAEA/qC,EACAgrC,EACAE,EAGAG,EACAF,EACAC,EAhDAlB,EAAAD,EAAAE,EACAO,EACAE,EACAC,EA3TA,SAAAhC,GAAAR,GACA,IAAA5sC,EAAA8sC,GAAAC,GAAAH,EAAAI,gBACA,OAAAhtC,EAAAkjC,KAAAljC,EAAAijC,KACAjjC,EAAAijC,IAAAjjC,EAAAkjC,OAEAljC,EAAAitC,KAAAjtC,EAAAzR,OAAA,GAAAyR,EAAAmtC,IAAAntC,EAAAktC,QAAA,GASA,SAAAkB,GAAA2B,GACA,OAAAA,GAAA3xC,KAAA8f,GAAA,KAUA,SAAA8xB,GAAAC,GACA,OAAAA,EAAA7xC,KAAA8f,GAAA,IAqGA,SAAA4uB,GAAAS,GAEA,IAAAgB,EAAAhB,EAAAiB,SACAF,EAAAf,EAAAkB,QACAE,EAAApB,EAAAoB,WACAD,EAAAnB,EAAAmB,WAEA,GAAAA,EAAA,GAAAA,EAAA,GACA,YAGA,IAGAlB,EAEA0C,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EACAC,EAAAC,EANA16B,EAAA,QACAm4B,EAAA,UAEAwC,GAAA,EAAAtyC,KAAA6iB,KAAA,EAAAitB,KAAA,EAAA9vC,KAAA6iB,KAAA,EAAAitB,IAMA92C,EAAAk3C,EAAA,IACAj3C,EAAAk3C,EAMAI,EAAA,MACAt3C,GAAA,KAKAk5C,EAAA,GAAA7B,EAAA,SAIAlB,EAAA,KAAAU,GAKAuC,GAFAD,EADAn5C,EA7BA,MA8BA,oBAEA,EAAAq5C,EAAA,KAAAA,MAAA,IAAAtyC,KAAAqjB,IAAA,EAAA+uB,IAAA,GAAAE,IAAA,MAAAA,QAAA,IAAAtyC,KAAAqjB,IAAA,EAAA+uB,GAAA,IAAAE,MAAA,GAAAtyC,KAAAqjB,IAAA,EAAA+uB,GAGAN,EAAAn6B,EAAA3X,KAAA6iB,KAAA,EAAAitB,EAAA9vC,KAAAqjB,IAAAgvB,GAAAryC,KAAAqjB,IAAAgvB,IACAN,EAAA/xC,KAAAy2B,IAAA4b,GAAAryC,KAAAy2B,IAAA4b,GACAL,EAAA5C,EAAApvC,KAAAmjB,IAAAkvB,GAAAryC,KAAAmjB,IAAAkvB,GACAJ,EAAAt6B,GAAA,EAAAm4B,GAAA9vC,KAAA8iB,IAAA,EAAAgtB,EAAA9vC,KAAAqjB,IAAAgvB,GAAAryC,KAAAqjB,IAAAgvB,GAAA,KACAH,EAAAl5C,GAvCA,MAuCA84C,GAEA,IAAAhN,EAAAuN,EAAAP,EAAA9xC,KAAAy2B,IAAA4b,GAAAJ,GAAAC,IAAA,OAAAH,EAAA,GAAAC,EAAA,EAAAA,IAAA,EAAA5C,GAAA8C,QAAA,UAAAH,EAAA,IAAAC,EAAA,GAAAD,IAAA,IAAA3C,EAAA,EAAA4C,KAAAE,YAAA,KACApN,EAAA8M,GAAA9M,GAEA,IAGAv/B,EAHAs/B,GAAAqN,GAAA,IAAAH,EAAAC,GAAAE,MAAA,OAAAF,EAAA,GAAAD,EAAA,EAAAC,IAAA,EAAA5C,EAAA,GAAA2C,KAAAG,UAAA,KAAAlyC,KAAAmjB,IAAAkvB,GAIA,GAHAxN,EAAAsN,EAAAP,GAAA/M,GAGAsK,EAAAD,SAAA,CACA,IAAAqD,EAAA7D,IACA0B,SAAAjB,EAAAiB,SAAAjB,EAAAD,SACAmB,QAAAlB,EAAAkB,QAAAlB,EAAAD,SACAqB,WAAApB,EAAAoB,WACAD,WAAAnB,EAAAmB,aAEA/qC,GACAwpC,IAAAwD,EAAAzN,IACA30C,MAAAoiD,EAAA1N,IACAiK,OAAAhK,EACA+J,KAAAhK,QAIAt/B,GACAu/B,MACAD,OAGA,OAAAt/B,EAwHA,SAAAurC,GAAA1/C,GACA,IAAAy/C,EAAAz/C,EAAA68C,GAKA,OAJA,IAAA4C,IACAA,EAAA5C,IAGA4C,EAuFA,SAAAlC,GAAA6D,GAEA,GAAAA,GAAA,IAAAA,EAAAroD,OACA,wCAWA,IARA,IAIAsoD,EAJAtoD,EAAAqoD,EAAAroD,OAEAuoD,EAAA,KACAC,EAAA,GAEAvhD,EAAA,GAGA,QAAA2vC,KAAA0R,EAAAD,EAAA3P,OAAAzxC,KAAA,CACA,GAAAA,GAAA,EACA,uCAAAohD,EAEAG,GAAAF,EACArhD,IAGA,IAAAk/C,EAAA7X,SAAAka,EAAA,IAEA,OAAAvhD,KAAA,EAAAjH,EAGA,uCAAAqoD,EAGA,IAAAjC,EAAAiC,EAAA3P,OAAAzxC,KAGA,GAAAm/C,GAAA,WAAAA,GAAA,MAAAA,MAAA,WAAAA,GAAA,MAAAA,EACA,8BAAAA,EAAA,iBAAAiC,EAGAE,EAAAF,EAAA1nD,UAAAsG,KAAA,GAWA,IATA,IAAAqT,EAAAqsC,GAAAR,GAEAsC,EAqDA,SAAA1iC,EAAAzL,GAGA,IAAAouC,EAAA3E,GAAAkD,WAAA3sC,EAAA,GACAquC,EAAA,IACAC,GAAA,EAEA,KAAAF,IAAA3iC,EAAAkhC,WAAA,KAQA,KAPAyB,IACA3b,IACA2b,IAEAA,IAAAxE,IACAwE,IAEAA,EAAAtE,GAAA,CACA,GAAAwE,EACA,uBAAA7iC,EAEA2iC,EAAAzE,GACA2E,GAAA,EAEAD,GAAA,IAGA,OAAAA,EA9EAE,CAAAN,EAAA7P,OAAA,GAAAp+B,GACAwuC,EAgGA,SAAA/gD,EAAAuS,GAEA,GAAAvS,EAAA,IACA,yCAAAA,EAKA,IAAAghD,EAAA/E,GAAAiD,WAAA3sC,EAAA,GACA0uC,EAAA,EACAJ,GAAA,EAEA,KAAAG,IAAAhhD,EAAAk/C,WAAA,KAUA,KATA8B,IACAhc,IACAgc,IAEAA,IAAA7E,IACA6E,IAIAA,EAAA5E,GAAA,CACA,GAAAyE,EACA,uBAAA7gD,EAEAghD,EAAA9E,GACA2E,GAAA,EAEAI,GAAA,IAGA,OAAAA,EAhIAC,CAAAV,EAAA7P,OAAA,GAAAp+B,GAMAwuC,EAAAI,GAAA9C,IACA0C,GAAA,IAIA,IAAAK,EAAAnpD,EAAAiH,EAEA,GAAAkiD,EAAA,KACA,yKAAAd,EAGA,IAIAe,EAAAC,EAAAC,EAJAC,EAAAJ,EAAA,EAEAK,EAAA,EACAC,EAAA,EAaA,OAXAF,EAAA,IACAH,EAAA,IAAAvzC,KAAA8iB,IAAA,GAAA4wB,GACAF,EAAAhB,EAAA1nD,UAAAsG,IAAAsiD,GACAC,EAAApb,WAAAib,GAAAD,EACAE,EAAAjB,EAAA1nD,UAAAsG,EAAAsiD,GACAE,EAAArb,WAAAkb,GAAAF,IAOAlD,QAJAsD,EAAAf,EAKAxC,SAJAwD,EAAAX,EAKA1C,aACAD,aACApB,SAAAqE,GAuGA,SAAAF,GAAA9C,GACA,IAAAH,EACA,OAAAG,GACA,QACAH,EAAA,KACA,MACA,QACAA,EAAA,IACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,EACA,MACA,QACAA,EAAA,IACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,IACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,GAAA,EAEA,GAAAA,GAAA,EACA,OAAAA,EAGA,6BAAAG,ECpuBA,SAAAjhD,GAAA0J,EAAAC,EAAAyxC,GACA,KAAA/hD,gBAAA2G,IACA,WAAAA,GAAA0J,EAAAC,EAAAyxC,GAEA,GAAAnvB,MAAAC,QAAAxiB,GACArQ,KAAAqQ,IAAA,GACArQ,KAAAsQ,EAAAD,EAAA,GACArQ,KAAA+hD,EAAA1xC,EAAA,WACG,oBAAAA,EACHrQ,KAAAqQ,MACArQ,KAAAsQ,EAAAD,EAAAC,EACAtQ,KAAA+hD,EAAA1xC,EAAA0xC,GAAA,OACG,oBAAA1xC,QAAA,IAAAC,EAAA,CACH,IAAAu0C,EAAAx0C,EAAAjO,MAAA,KACApC,KAAAqQ,EAAAu/B,WAAAiV,EAAA,OACA7kD,KAAAsQ,EAAAs/B,WAAAiV,EAAA,OACA7kD,KAAA+hD,EAAAnS,WAAAiV,EAAA,eAEA7kD,KAAAqQ,IACArQ,KAAAsQ,IACAtQ,KAAA+hD,KAAA,EAEAxH,QAAA2Q,KAAA,+DAGAvkD,GAAAwkD,SAAA,SAAAC,GACA,WAAAzkD,GAAA0/C,GAAA+E,KAEAzkD,GAAA/G,UAAAyrD,OAAA,SAAA9E,GACA,OAAAT,IAAA9lD,KAAAqQ,EAAArQ,KAAAsQ,GAAAi2C,IAEA,IAAA+E,GAAA,YC9BAC,GAAA,UACAC,GAAA,gBASAC,GAAA,SAAAxP,GACA,IAAAyP,KACAA,EAAA,GAfA,EAeAzP,GAdA,IAcAA,GAbA,QAaAA,GAAAsP,GAAAtP,EAAAuP,MACAE,EAAA,GAAAzP,GAXA,IAWAA,GAdA,QAcAA,GAAAsP,GAAAtP,EAAAuP,MACA,IAAAxH,EAAA/H,IAKA,OAJAyP,EAAA,GAAA1H,GAZA,OAYA/H,GAXA,oBACA,oBAUAA,IACA+H,GAAA/H,EACAyP,EAAA,GAAA1H,GAXA,kBACA,oBAUA/H,GACAyP,EAAA,GAAA1H,EAAA/H,EAVA,YAWAyP,GCtBAC,GAAA,SAAAnQ,EAAAoQ,EAAAC,EAAAH,GAGA,OAFAG,GAAAD,EACAA,KACAF,EAAA,GAAAlQ,EAAAqQ,GAAAH,EAAA,GAAAE,GAAAF,EAAA,GAAAE,GAAAF,EAAA,GAAAE,EAAAF,EAAA,OCEAI,GAAA,SAAAC,EAAA9P,EAAAyP,GAGA,IAFA,IAAA7V,EAAA,KAAAoG,GACAT,EAAAuQ,EACAtjD,EALA,GAKwBA,IAAGA,EAAA,CAC3B,IAAA4mC,EAAAh4B,KAAAqjB,IAAA8gB,GACAwI,EAAA,EAAA/H,EAAA5M,IAKA,GADAmM,GADAwI,GAAA2H,GAAAnQ,EAAAnM,EAAAh4B,KAAAmjB,IAAAghB,GAAAkQ,GAAAK,IAAA/H,EAAA3sC,KAAA6iB,KAAA8pB,IAAAnO,EAEAx+B,KAAA63B,IAAA8U,GAAAxR,EACA,OAAAgJ,EAIA,OAAAA,GCkJA,IACAwQ,IACAtlC,KA7JA,WACA1mB,KAAA2uC,QAAAnsC,IAAAxC,KAAA2uC,GAAA3uC,KAAA2uC,GAAA,EACA3uC,KAAA0uC,QAAAlsC,IAAAxC,KAAA0uC,GAAA1uC,KAAA0uC,GAAA,EACA1uC,KAAAitC,WAAAzqC,IAAAxC,KAAAitC,MAAAjtC,KAAAitC,MAAA,EACAjtC,KAAA+sC,UAAAvqC,IAAAxC,KAAA+sC,KAAA/sC,KAAA+sC,KAAA,EAEA/sC,KAAAi8C,KACAj8C,KAAA0rD,GAAAD,GAAAzrD,KAAAi8C,IACAj8C,KAAAisD,IAAAN,GAAA3rD,KAAA+sC,KAAA11B,KAAAqjB,IAAA16B,KAAA+sC,MAAA11B,KAAAmjB,IAAAx6B,KAAA+sC,MAAA/sC,KAAA0rD,MAsJA9e,QA9IA,SAAAsB,GACA,IAIAkN,EACA/qC,EAAAC,EALA4rC,EAAAhO,EAAA79B,EACA8rC,EAAAjO,EAAA59B,EAEA47C,EAAA5Q,EAAAY,EAAAl8C,KAAAitC,OAGAkf,EAAA90C,KAAAqjB,IAAAyhB,GACAiQ,EAAA/0C,KAAAmjB,IAAA2hB,GAEA,GAAAn8C,KAAAi8C,GA8BA,CACA,IAAAoQ,EAAAD,EAAAF,EACAI,EAAAj1C,KAAA8iB,IAAAkyB,EAAA,GACAE,EAAAvsD,KAAAsgD,IAAAjpC,KAAA8iB,IAAAiyB,EAAA,GACAI,EAAAn1C,KAAA8iB,IAAAoyB,EAAA,GACAE,EAAAp1C,KAAA63B,IAAAkd,GAAA5Z,EAAAn7B,KAAAy2B,IAAAqO,GAAA,EACA6H,EAAA3sC,KAAA8iB,IAAAsyB,EAAA,GACA9Q,EAAAtkC,KAAA8iB,IAAA6pB,EAAA,GACA5I,EAAA,EAAAp7C,KAAAi8C,GAAA5kC,KAAA8iB,IAAAgyB,EAAA,GACAE,GAAAh1C,KAAA6iB,KAAAkhB,GACA,IAAAsR,EAAAf,GAAAxP,EAAAgQ,EAAAC,EAAApsD,KAAA0rD,IAEAr7C,EAAArQ,KAAAgvB,GAAAhvB,KAAAwtC,GAAA6e,GAAA,EACAC,EAAA,KAAAtI,EAAAuI,EACAD,EAAA,SAAAtI,EAAArI,EAAA,GAAA4Q,EAAA,GAAAvI,EAAAuI,EACAD,EAAA,WAAA3Q,IAAAqI,EAAA,IAAAA,OACAhkD,KAAA2uC,GAEAr+B,EAAAtQ,KAAAgvB,GAAAhvB,KAAAwtC,IAAAkf,EAAA1sD,KAAAisD,IACAE,EAAAD,EAAAG,EAAA,KACAC,EAAA,MAAAtI,EAAA,EAAAuI,EAAA,EAAAC,EACAF,EAAA,OAAA3Q,EAAA,GAAAqI,EAAA,IAAAuI,EAAA,IAAAvI,EAAAuI,EACAD,EAAA,aAAA3Q,IAAAqI,EAAA,KAAAA,QACAhkD,KAAA0uC,OArDA,CACA,IAAA9sC,EAAAwqD,EAAA/0C,KAAAqjB,IAAAwxB,GAEA,GAAA70C,KAAA63B,IAAA73B,KAAA63B,IAAAttC,GAAA,GAAA4wC,EACA,UAOA,GAJAniC,EAAA,GAAArQ,KAAAgvB,EAAAhvB,KAAAwtC,GAAAn2B,KAAAw2B,KAAA,EAAAjsC,IAAA,EAAAA,IAAA5B,KAAA2uC,GACAr+B,EAAA87C,EAAA/0C,KAAAmjB,IAAA0xB,GAAA70C,KAAA6iB,KAAA,EAAA7iB,KAAA8iB,IAAAv4B,EAAA,KACAA,EAAAyV,KAAA63B,IAAA5+B,KAEA,GACA,GAAA1O,EAAA,EAAA4wC,EACA,UAGAliC,EAAA,OAIAA,EAAA+G,KAAAs1C,KAAAr8C,GAGA6rC,EAAA,IACA7rC,MAGAA,EAAAtQ,KAAAgvB,EAAAhvB,KAAAwtC,IAAAl9B,EAAAtQ,KAAA+sC,MAAA/sC,KAAA0uC,GAgCA,OAHAR,EAAA79B,IACA69B,EAAA59B,IAEA49B,GA0EArB,QApEA,SAAAqB,GACA,IAAAkN,EAAAI,EACAW,EAAAD,EACA7rC,GAAA69B,EAAA79B,EAAArQ,KAAA2uC,KAAA,EAAA3uC,KAAAgvB,GACA1e,GAAA49B,EAAA59B,EAAAtQ,KAAA0uC,KAAA,EAAA1uC,KAAAgvB,GAEA,GAAAhvB,KAAAi8C,GAuBA,GAHAb,EAAAp7C,KAAAisD,IAAA37C,EAAAtQ,KAAAwtC,GACAgO,EAAAsQ,GAAA1Q,EAAAp7C,KAAAi8C,GAAAj8C,KAAA0rD,IAEAr0C,KAAA63B,IAAAsM,GAAApJ,EAAA,CACA,IAAA+Z,EAAA90C,KAAAqjB,IAAA8gB,GACA4Q,EAAA/0C,KAAAmjB,IAAAghB,GACAoR,EAAAv1C,KAAA63B,IAAAkd,GAAA5Z,EAAAn7B,KAAAy2B,IAAA0N,GAAA,EACA+Q,EAAAvsD,KAAAsgD,IAAAjpC,KAAA8iB,IAAAiyB,EAAA,GACAI,EAAAn1C,KAAA8iB,IAAAoyB,EAAA,GACAvI,EAAA3sC,KAAA8iB,IAAAyyB,EAAA,GACAjR,EAAAtkC,KAAA8iB,IAAA6pB,EAAA,GACA5I,EAAA,EAAAp7C,KAAAi8C,GAAA5kC,KAAA8iB,IAAAgyB,EAAA,GACA,IAAA3rD,EAAA6P,EAAAgH,KAAA6iB,KAAAkhB,GAAAp7C,KAAAwtC,GACAqf,EAAAx1C,KAAA8iB,IAAA35B,EAAA,GAGA27C,EAAAX,GAFAJ,GAAAwR,GAEAC,GAAA,EAAA7sD,KAAAi8C,IAAA,MACA4Q,EAAA,QAAA7I,EAAA,EAAAuI,EAAAvI,EAAAuI,EAAA,EAAAC,EACAK,EAAA,UAAA7I,EAAA,IAAAuI,EAAAvI,EAAA,GAAArI,EAAA,GAAA4Q,EACAM,EAAA,cAAA7I,EAAA,KAAArI,EAAA,KAAAA,EAAAqI,MAEA9H,EAAAZ,EAAAt7C,KAAAitC,MAAAzsC,GAAA,EACAqsD,EAAA,OAAA7I,EAAAuI,EACAM,EAAA,SAAA7I,EAAA,GAAArI,EAAA,EAAA4Q,EAAAvI,EAAA,EAAAuI,EACAM,EAAA,WAAA7I,EAAA,KAAArI,EAAA,IAAAA,EAAAqI,MAAAoI,QAGAjQ,EAAA/J,EAAAiJ,EAAA/qC,GACA4rC,EAAA,MAhDA,CACA,IAAA4Q,EAAAz1C,KAAAi3B,IAAAj+B,EAAArQ,KAAAwtC,IACA7rC,EAAA,IAAAmrD,EAAA,EAAAA,GACAC,EAAA/sD,KAAA+sC,KAAAz8B,EAAAtQ,KAAAwtC,GACAwf,EAAA31C,KAAAmjB,IAAAuyB,GACA3R,EAAA/jC,KAAA6iB,MAAA,EAAA7iB,KAAA8iB,IAAA6yB,EAAA,OAAA31C,KAAA8iB,IAAAx4B,EAAA,KACAw6C,EAAA9kC,KAAAs2B,KAAAyN,GAEA9qC,EAAA,IACA6rC,MAIAD,EADA,IAAAv6C,GAAA,IAAAqrD,EACA,EAGA1R,EAAAjkC,KAAAusC,MAAAjiD,EAAAqrD,GAAAhtD,KAAAitC,OAuCA,OAHAiB,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EAEAjO,GAQA7tB,OALA,sDCtKA4sC,GAAA,SAAA58C,GACA,IAAA3O,EAAA2V,KAAAi3B,IAAAj+B,GAEA,OADA3O,KAAA,EAAAA,GAAA,GCFAwrD,GAAA,SAAA78C,EAAAC,GACAD,EAAAgH,KAAA63B,IAAA7+B,GACAC,EAAA+G,KAAA63B,IAAA5+B,GACA,IAAA0e,EAAA3X,KAAAykB,IAAAzrB,EAAAC,GACA1O,EAAAyV,KAAAkkB,IAAAlrB,EAAAC,IAAA0e,GAAA,GAEA,OAAAA,EAAA3X,KAAA6iB,KAAA,EAAA7iB,KAAA8iB,IAAAv4B,EAAA,KCHAurD,GAAA,SAAA98C,GACA,ICJAA,EACAC,EACAyxC,EDEAzxC,EAAA+G,KAAA63B,IAAA7+B,GAGA,OCPAA,EDKAC,GAAA,EAAAA,GAAA48C,GAAA,EAAA58C,GAAA,IAAAA,ECDA,KAFAyxC,GADAzxC,EAAA,EAAAD,GACA,GAEAA,IAAAgH,KAAAw2B,IAAAv9B,GAAAyxC,EDGA1xC,EAAA,GAAAC,KEPA88C,GAAA,SAAAC,EAAAC,GAOA,IANA,IAIAN,EAJAO,EAAA,EAAAl2C,KAAAmjB,IAAA,EAAA8yB,GACA7kD,EAAA4kD,EAAA7rD,OAAA,EACAgsD,EAAAH,EAAA5kD,GACAglD,EAAA,IAGAhlD,GAAA,GACAukD,EAAAO,EAAAC,EAAAC,EAAAJ,EAAA5kD,GACAglD,EAAAD,EACAA,EAAAR,EAGA,OAAAM,EAAAN,EAAA31C,KAAAqjB,IAAA,EAAA4yB,ICbAI,GAAA,SAAAL,EAAAM,GAOA,IANA,IAIAC,EAJAlsD,EAAA,EAAA2V,KAAAmjB,IAAAmzB,GACAllD,EAAA4kD,EAAA7rD,OAAA,EACAqsD,EAAAR,EAAA5kD,GACAqlD,EAAA,IAGArlD,GAAA,GACAmlD,EAAAlsD,EAAAmsD,EAAAC,EAAAT,EAAA5kD,GACAqlD,EAAAD,EACAA,EAAAD,EAGA,OAAAv2C,KAAAqjB,IAAAizB,GAAAC,GCVAG,GAAA,SAAAV,EAAAM,EAAAK,GAeA,IAdA,ICJA39C,EACA3O,EDcAosD,EACAG,EAZAC,EAAA72C,KAAAqjB,IAAAizB,GACAQ,EAAA92C,KAAAmjB,IAAAmzB,GACAS,EAAAnB,GAAAe,GACAK,GCPAh+C,EDOA29C,ECLAtsD,IADAA,EAAA2V,KAAAi3B,IAAAj+B,IACA,EAAA3O,GAAA,GDMAA,EAAA,EAAAysD,EAAAE,EACA5lD,GAAA,EAAAylD,EAAAE,EACAr7B,EAAAs6B,EAAA7rD,OAAA,EACAosD,EAAAP,EAAAt6B,GACAu7B,EAAA,EACAT,EAAA,EACAU,EAAA,IAIAx7B,GAAA,GACA+6B,EAAAD,EACAI,EAAAK,EAGAV,EAAAlsD,GAFAmsD,EAAAD,GAEAE,EAAArlD,GADA6lD,EAAAC,GACAlB,EAAAt6B,GACAw7B,EAAA9lD,EAAAolD,EAAAI,EAAAvsD,EAAA4sD,EAMA,QAHA5sD,EAAAwsD,EAAAG,GAGAT,GAFAnlD,EAAA0lD,EAAAC,GAEAG,EAAA7sD,EAAA6sD,EAAA9lD,EAAAmlD,IEgIA,IACAY,IACA9nC,KArJA,WACA,QAAAlkB,IAAAxC,KAAAi8C,IAAAj8C,KAAAi8C,IAAA,EACA,UAAAp6C,MAAA,8BAGA7B,KAAA2uC,QAAAnsC,IAAAxC,KAAA2uC,GAAA3uC,KAAA2uC,GAAA,EACA3uC,KAAA0uC,QAAAlsC,IAAAxC,KAAA0uC,GAAA1uC,KAAA0uC,GAAA,EACA1uC,KAAAitC,WAAAzqC,IAAAxC,KAAAitC,MAAAjtC,KAAAitC,MAAA,EACAjtC,KAAA+sC,UAAAvqC,IAAAxC,KAAA+sC,KAAA/sC,KAAA+sC,KAAA,EAEA/sC,KAAAyuD,OACAzuD,KAAA0uD,OACA1uD,KAAA2uD,OACA3uD,KAAA4uD,OAEA,IAAA9B,EAAA9sD,KAAAi8C,IAAA,EAAA5kC,KAAA6iB,KAAA,EAAAl6B,KAAAi8C,KACA1yC,EAAAujD,GAAA,EAAAA,GACA+B,EAAAtlD,EAEAvJ,KAAAyuD,IAAA,GAAAllD,GAAA,EAAAA,IAAA,IAAAA,MAAA,OAAAA,GAAA,MAAAA,IAAA,iBACAvJ,KAAA0uD,IAAA,GAAAnlD,MAAA,IAAAA,GAAA,IAAAA,IAAA,MAAAA,GAAA,MAAAA,GAAA,kBAEAslD,GAAAtlD,EACAvJ,KAAAyuD,IAAA,GAAAI,GAAA,IAAAtlD,OAAA,OAAAA,GAAA,SAAAA,GAAA,kBACAvJ,KAAA0uD,IAAA,GAAAG,GAAA,IAAAtlD,IAAA,MAAAA,IAAA,KAAAA,GAAA,QAAAA,IAAA,cAEAslD,GAAAtlD,EACAvJ,KAAAyuD,IAAA,GAAAI,GAAA,MAAAtlD,IAAA,OAAAA,IAAA,SAAAA,GAAA,eACAvJ,KAAA0uD,IAAA,GAAAG,IAAA,MAAAtlD,GAAA,MAAAA,GAAA,IAAAA,IAAA,eAEAslD,GAAAtlD,EACAvJ,KAAAyuD,IAAA,GAAAI,GAAA,SAAAtlD,IAAA,OAAAA,IAAA,gBACAvJ,KAAA0uD,IAAA,GAAAG,GAAA,SAAAtlD,OAAA,mBAEAslD,GAAAtlD,EACAvJ,KAAAyuD,IAAA,GAAAI,GAAA,SAAAtlD,IAAA,cACAvJ,KAAA0uD,IAAA,GAAAG,IAAA,QAAAtlD,GAAA,eAEAslD,GAAAtlD,EACAvJ,KAAAyuD,IAAA,GAAAI,GAAA,cACA7uD,KAAA0uD,IAAA,GAAAG,GAAA,eAEAA,EAAAx3C,KAAA8iB,IAAA5wB,EAAA,GACAvJ,KAAA8uD,GAAA9uD,KAAAwtC,IAAA,EAAAjkC,IAAA,EAAAslD,GAAA,IAAAA,GAAA,KAAAA,EAAA,OAEA7uD,KAAA2uD,IAAA,GAAAplD,MAAA,IAAAA,IAAA,MAAAA,GAAA,MAAAA,GAAA,OAAAA,IAAA,sBACAvJ,KAAA4uD,IAAA,GAAArlD,GAAA,GAAAA,IAAA,IAAAA,GAAA,KAAAA,GAAA,OAAAA,IAAA,QAAAA,GAAA,iBAEAvJ,KAAA2uD,IAAA,GAAAE,IAAA,KAAAtlD,IAAA,KAAAA,GAAA,SAAAA,IAAA,OAAAA,GAAA,qBACAvJ,KAAA4uD,IAAA,GAAAC,GAAA,MAAAtlD,MAAA,SAAAA,GAAA,QAAAA,IAAA,wBAEAslD,GAAAtlD,EACAvJ,KAAA2uD,IAAA,GAAAE,IAAA,OAAAtlD,GAAA,OAAAA,GAAA,SAAAA,IAAA,eACAvJ,KAAA4uD,IAAA,GAAAC,GAAA,OAAAtlD,IAAA,QAAAA,GAAA,YAAAA,GAAA,kBAEAslD,GAAAtlD,EACAvJ,KAAA2uD,IAAA,GAAAE,IAAA,YAAAtlD,GAAA,OAAAA,GAAA,kBACAvJ,KAAA4uD,IAAA,GAAAC,GAAA,aAAAtlD,IAAA,QAAAA,GAAA,mBAEAslD,GAAAtlD,EACAvJ,KAAA2uD,IAAA,GAAAE,IAAA,YAAAtlD,GAAA,iBACAvJ,KAAA4uD,IAAA,GAAAC,GAAA,YAAAtlD,IAAA,kBAEAslD,GAAAtlD,EACAvJ,KAAA2uD,IAAA,uBAAAE,EACA7uD,KAAA4uD,IAAA,qBAAAC,EAEA,IAAAlL,EAAAyJ,GAAAptD,KAAA0uD,IAAA1uD,KAAA+sC,MACA/sC,KAAA+uD,IAAA/uD,KAAA8uD,IAAAnL,EAAA+J,GAAA1tD,KAAA4uD,IAAA,EAAAjL,KAkFA/W,QA/EA,SAAAsB,GACA,IAAA8gB,EAAA1T,EAAApN,EAAA79B,EAAArQ,KAAAitC,OACAgiB,EAAA/gB,EAAA59B,EAEA2+C,EAAA7B,GAAAptD,KAAA0uD,IAAAO,GACA,IAAAC,EAAA73C,KAAAqjB,IAAAu0B,GACAE,EAAA93C,KAAAmjB,IAAAy0B,GACAG,EAAA/3C,KAAAqjB,IAAAs0B,GACAK,EAAAh4C,KAAAmjB,IAAAw0B,GAEAC,EAAA53C,KAAAusC,MAAAsL,EAAAG,EAAAF,GACAH,EAAA33C,KAAAusC,MAAAwL,EAAAD,EAAAjC,GAAAgC,EAAAC,EAAAE,IACAL,EAAA7B,GAAA91C,KAAAy2B,IAAAkhB,IAEA,IAKA3+C,EACAC,EANAqT,EAAAoqC,GAAA/tD,KAAA4uD,IAAA,EAAAK,EAAA,EAAAD,GAoBA,OAlBAC,GAAAtrC,EAAA,GACAqrC,GAAArrC,EAAA,GAKAtM,KAAA63B,IAAA8f,IAAA,gBACA3+C,EAAArQ,KAAAgvB,GAAAhvB,KAAA8uD,GAAAE,GAAAhvD,KAAA2uC,GACAr+B,EAAAtQ,KAAAgvB,GAAAhvB,KAAA8uD,GAAAG,EAAAjvD,KAAA+uD,IAAA/uD,KAAA0uC,KAGAr+B,EAAAkM,IACAjM,EAAAiM,KAGA2xB,EAAA79B,IACA69B,EAAA59B,IAEA49B,GA8CArB,QA3CA,SAAAqB,GACA,IAMAgO,EACAC,EAPA6S,GAAA9gB,EAAA79B,EAAArQ,KAAA2uC,KAAA,EAAA3uC,KAAAgvB,GACAigC,GAAA/gB,EAAA59B,EAAAtQ,KAAA0uC,KAAA,EAAA1uC,KAAAgvB,GAQA,GANAigC,KAAAjvD,KAAA+uD,IAAA/uD,KAAA8uD,GACAE,GAAAhvD,KAAA8uD,GAKAz3C,KAAA63B,IAAA8f,IAAA,gBACA,IAAArrC,EAAAoqC,GAAA/tD,KAAA2uD,IAAA,EAAAM,EAAA,EAAAD,GAEAC,GAAAtrC,EAAA,GACAqrC,GAAArrC,EAAA,GACAqrC,EAAA33C,KAAAgjB,KAAA4yB,GAAA+B,IAEA,IAAAE,EAAA73C,KAAAqjB,IAAAu0B,GACAE,EAAA93C,KAAAmjB,IAAAy0B,GACAG,EAAA/3C,KAAAqjB,IAAAs0B,GACAK,EAAAh4C,KAAAmjB,IAAAw0B,GAEAC,EAAA53C,KAAAusC,MAAAsL,EAAAG,EAAAnC,GAAAkC,EAAAC,EAAAF,IACAH,EAAA33C,KAAAusC,MAAAwL,EAAAC,EAAAF,GAEAjT,EAAAZ,EAAA0T,EAAAhvD,KAAAitC,OACAkP,EAAAiR,GAAAptD,KAAAyuD,IAAAQ,QAGA/S,EAAA3/B,IACA4/B,EAAA5/B,IAMA,OAHA2xB,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EAEAjO,GAQA7tB,OALA,yEC5JAivC,GAAA,SAAAtZ,EAAAkG,GACA,QAAA15C,IAAAwzC,EAAA,CAGA,IAFAA,EAAA3+B,KAAAC,MAAA,IAAAgkC,EAAAY,GAAA7kC,KAAA8f,IAAA9f,KAAA8f,IAAA,GAEA,EACA,SACK,GAAA6e,EAAA,GACL,UAGA,OAAAA,GCUA,IACAwQ,IACA9/B,KAlBA,WACA,IAAAsvB,EAAAsZ,GAAAtvD,KAAAg2C,KAAAh2C,KAAAitC,OACA,QAAAzqC,IAAAwzC,EACA,UAAAn0C,MAAA,oBAEA7B,KAAA+sC,KAAA,EACA/sC,KAAAitC,OAAA,EAAA51B,KAAA63B,IAAA8G,GAAA,KAAAvD,EACAzyC,KAAA2uC,GAAA,IACA3uC,KAAA0uC,GAAA1uC,KAAAk2C,SAAA,MACAl2C,KAAAwtC,GAAA,MAEAghB,GAAA9nC,KAAAyzB,MAAAn6C,MACAA,KAAA4sC,QAAA4hB,GAAA5hB,QACA5sC,KAAA6sC,QAAA2hB,GAAA3hB,SAMAxsB,OAHA,8CAIAkvC,UAxBA,UCFAC,GAAA,SAAAC,EAAAnhB,GACA,OAAAj3B,KAAA8iB,KAAA,EAAAs1B,IAAA,EAAAA,GAAAnhB,ICAAohB,GAAA,GA4CA,IACAC,IACAjpC,KA3CA,WACA,IAAAklC,EAAAv0C,KAAAqjB,IAAA16B,KAAA+sC,MACA8e,EAAAx0C,KAAAmjB,IAAAx6B,KAAA+sC,MACA8e,KACA7rD,KAAA4vD,GAAAv4C,KAAA6iB,KAAA,EAAAl6B,KAAAi8C,KAAA,EAAAj8C,KAAAi8C,GAAA2P,KACA5rD,KAAA4mD,EAAAvvC,KAAA6iB,KAAA,EAAAl6B,KAAAi8C,GAAA4P,KAAA,EAAA7rD,KAAAi8C,KACAj8C,KAAA6vD,MAAAx4C,KAAAs2B,KAAAie,EAAA5rD,KAAA4mD,GACA5mD,KAAA8vD,OAAA,GAAA9vD,KAAA4mD,EAAA5mD,KAAAunB,EACAvnB,KAAAiuC,EAAA52B,KAAAy2B,IAAA,GAAA9tC,KAAA6vD,MAAAld,IAAAt7B,KAAA8iB,IAAA9iB,KAAAy2B,IAAA,GAAA9tC,KAAA+sC,KAAA4F,GAAA3yC,KAAA4mD,GAAA4I,GAAAxvD,KAAAunB,EAAAqkC,EAAA5rD,KAAA8vD,UAoCAljB,QAjCA,SAAAsB,GACA,IAAAgO,EAAAhO,EAAA79B,EACA8rC,EAAAjO,EAAA59B,EAIA,OAFA49B,EAAA59B,EAAA,EAAA+G,KAAAgjB,KAAAr6B,KAAAiuC,EAAA52B,KAAA8iB,IAAA9iB,KAAAy2B,IAAA,GAAAqO,EAAAxJ,GAAA3yC,KAAA4mD,GAAA4I,GAAAxvD,KAAAunB,EAAAlQ,KAAAqjB,IAAAyhB,GAAAn8C,KAAA8vD,SAAA1d,EACAlE,EAAA79B,EAAArQ,KAAA4mD,EAAA1K,EACAhO,GA4BArB,QAzBA,SAAAqB,GAKA,IAJA,IACAgO,EAAAhO,EAAA79B,EAAArQ,KAAA4mD,EACAzK,EAAAjO,EAAA59B,EACAi0C,EAAAltC,KAAA8iB,IAAA9iB,KAAAy2B,IAAA,GAAAqO,EAAAxJ,GAAA3yC,KAAAiuC,EAAA,EAAAjuC,KAAA4mD,GACAn+C,EAAAinD,GAAwBjnD,EAAA,IACxB0zC,EAAA,EAAA9kC,KAAAgjB,KAAAkqB,EAAAiL,GAAAxvD,KAAAunB,EAAAlQ,KAAAqjB,IAAAwT,EAAA59B,IAAA,GAAAtQ,KAAAunB,IAAA6qB,IACA/6B,KAAA63B,IAAAiN,EAAAjO,EAAA59B,GANA,UAI+B7H,EAK/BylC,EAAA59B,EAAA6rC,EAGA,OAAA1zC,GAGAylC,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EACAjO,GAJA,MAYA7tB,OALA,UCYA,IACA0vC,IACArpC,KAxDA,WACAipC,GAAAjpC,KAAAyzB,MAAAn6C,MACAA,KAAA4vD,KAGA5vD,KAAAgwD,MAAA34C,KAAAqjB,IAAA16B,KAAA6vD,OACA7vD,KAAAiwD,MAAA54C,KAAAmjB,IAAAx6B,KAAA6vD,OACA7vD,KAAAkwD,GAAA,EAAAlwD,KAAA4vD,GACA5vD,KAAAiqB,QACAjqB,KAAAiqB,MAAA,uCAgDA2iB,QA5CA,SAAAsB,GACA,IAAAiiB,EAAAC,EAAAC,EAAAxa,EAWA,OAVA3H,EAAA79B,EAAAirC,EAAApN,EAAA79B,EAAArQ,KAAAitC,OACA0iB,GAAA/iB,QAAAuN,MAAAn6C,MAAAkuC,IACAiiB,EAAA94C,KAAAqjB,IAAAwT,EAAA59B,GACA8/C,EAAA/4C,KAAAmjB,IAAA0T,EAAA59B,GACA+/C,EAAAh5C,KAAAmjB,IAAA0T,EAAA79B,GACAwlC,EAAA71C,KAAAwtC,GAAAxtC,KAAAkwD,IAAA,EAAAlwD,KAAAgwD,MAAAG,EAAAnwD,KAAAiwD,MAAAG,EAAAC,GACAniB,EAAA79B,EAAAwlC,EAAAua,EAAA/4C,KAAAqjB,IAAAwT,EAAA79B,GACA69B,EAAA59B,EAAAulC,GAAA71C,KAAAiwD,MAAAE,EAAAnwD,KAAAgwD,MAAAI,EAAAC,GACAniB,EAAA79B,EAAArQ,KAAAgvB,EAAAkf,EAAA79B,EAAArQ,KAAA2uC,GACAT,EAAA59B,EAAAtQ,KAAAgvB,EAAAkf,EAAA59B,EAAAtQ,KAAA0uC,GACAR,GAiCArB,QA9BA,SAAAqB,GACA,IAAAiiB,EAAAC,EAAAlU,EAAAC,EAAAmU,EAMA,GALApiB,EAAA79B,GAAA69B,EAAA79B,EAAArQ,KAAA2uC,IAAA3uC,KAAAgvB,EACAkf,EAAA59B,GAAA49B,EAAA59B,EAAAtQ,KAAA0uC,IAAA1uC,KAAAgvB,EAEAkf,EAAA79B,GAAArQ,KAAAwtC,GACAU,EAAA59B,GAAAtQ,KAAAwtC,GACA8iB,EAAAj5C,KAAA6iB,KAAAgU,EAAA79B,EAAA69B,EAAA79B,EAAA69B,EAAA59B,EAAA49B,EAAA59B,GAAA,CACA,IAAAi8C,EAAA,EAAAl1C,KAAAusC,MAAA0M,EAAAtwD,KAAAkwD,IACAC,EAAA94C,KAAAqjB,IAAA6xB,GACA6D,EAAA/4C,KAAAmjB,IAAA+xB,GACApQ,EAAA9kC,KAAAs2B,KAAAyiB,EAAApwD,KAAAgwD,MAAA9hB,EAAA59B,EAAA6/C,EAAAnwD,KAAAiwD,MAAAK,GACApU,EAAA7kC,KAAAusC,MAAA1V,EAAA79B,EAAA8/C,EAAAG,EAAAtwD,KAAAiwD,MAAAG,EAAAliB,EAAA59B,EAAAtQ,KAAAgwD,MAAAG,QAGAhU,EAAAn8C,KAAA6vD,MACA3T,EAAA,EAOA,OAJAhO,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EACAwT,GAAA9iB,QAAAsN,MAAAn6C,MAAAkuC,IACAA,EAAA79B,EAAAirC,EAAApN,EAAA79B,EAAArQ,KAAAitC,OACAiB,GAQA7tB,OALA,wHC6GA,IACAkwC,IACA7pC,KA3JA,WACA1mB,KAAAwwD,QAAAn5C,KAAAmjB,IAAAx6B,KAAA+sC,MACA/sC,KAAAywD,QAAAp5C,KAAAqjB,IAAA16B,KAAA+sC,MACA/sC,KAAA45C,OACA,IAAA55C,KAAAwtC,KAAAj9B,MAAAvQ,KAAAk1C,SAAA79B,KAAA63B,IAAAlvC,KAAAwwD,UAAAhe,IACAxyC,KAAAwtC,GAAA,MAAA6N,EAAAr7C,KAAA+sC,MAAA11B,KAAAqjB,IAAA16B,KAAAk1C,WAIA79B,KAAA63B,IAAAlvC,KAAAwwD,UAAAhe,IACAxyC,KAAA+sC,KAAA,EAGA/sC,KAAAo7C,IAAA,EAKAp7C,KAAAo7C,KAAA,GAGAp7C,KAAA0wD,KAAAr5C,KAAA6iB,KAAA7iB,KAAA8iB,IAAA,EAAAn6B,KAAAunB,EAAA,EAAAvnB,KAAAunB,GAAAlQ,KAAA8iB,IAAA,EAAAn6B,KAAAunB,EAAA,EAAAvnB,KAAAunB,IACA,IAAAvnB,KAAAwtC,KAAAj9B,MAAAvQ,KAAAk1C,SAAA79B,KAAA63B,IAAAlvC,KAAAwwD,UAAAhe,IACAxyC,KAAAwtC,GAAA,GAAAxtC,KAAA0wD,KAAA1V,EAAAh7C,KAAAunB,EAAAlQ,KAAAqjB,IAAA16B,KAAAk1C,QAAA79B,KAAAmjB,IAAAx6B,KAAAk1C,SAAAqG,EAAAv7C,KAAAunB,EAAAvnB,KAAAo7C,IAAAp7C,KAAAk1C,OAAAl1C,KAAAo7C,IAAA/jC,KAAAqjB,IAAA16B,KAAAk1C,UAEAl1C,KAAA2wD,IAAA3V,EAAAh7C,KAAAunB,EAAAvnB,KAAAywD,QAAAzwD,KAAAwwD,SACAxwD,KAAA4wD,GAAA,EAAAv5C,KAAAgjB,KAAAr6B,KAAA6wD,MAAA7wD,KAAA+sC,KAAA/sC,KAAAywD,QAAAzwD,KAAAunB,IAAA6qB,EACApyC,KAAA8wD,MAAAz5C,KAAAmjB,IAAAx6B,KAAA4wD,IACA5wD,KAAA+wD,MAAA15C,KAAAqjB,IAAA16B,KAAA4wD,MAgIAhkB,QA3HA,SAAAsB,GACA,IAIA2Y,EAAAhY,EAAAmiB,EAAAC,EAAAtV,EAAAuV,EAJAhV,EAAAhO,EAAA79B,EACA8rC,EAAAjO,EAAA59B,EACA6gD,EAAA95C,KAAAqjB,IAAAyhB,GACAiV,EAAA/5C,KAAAmjB,IAAA2hB,GAEAkV,EAAA/V,EAAAY,EAAAl8C,KAAAitC,OAEA,OAAA51B,KAAA63B,IAAA73B,KAAA63B,IAAAgN,EAAAl8C,KAAAitC,OAAA51B,KAAA8f,KAAAqb,GAAAn7B,KAAA63B,IAAAiN,EAAAn8C,KAAA+sC,OAAAyF,GAGAtE,EAAA79B,EAAAihD,IACApjB,EAAA59B,EAAAghD,IACApjB,GAEAluC,KAAA45C,QAEAiN,EAAA,EAAA7mD,KAAAwtC,IAAA,EAAAxtC,KAAAywD,QAAAU,EAAAnxD,KAAAwwD,QAAAY,EAAA/5C,KAAAmjB,IAAA62B,IACAnjB,EAAA79B,EAAArQ,KAAAgvB,EAAA63B,EAAAuK,EAAA/5C,KAAAqjB,IAAA22B,GAAArxD,KAAA2uC,GACAT,EAAA59B,EAAAtQ,KAAAgvB,EAAA63B,GAAA7mD,KAAAwwD,QAAAW,EAAAnxD,KAAAywD,QAAAW,EAAA/5C,KAAAmjB,IAAA62B,IAAArxD,KAAA0uC,GACAR,IAGAW,EAAA,EAAAx3B,KAAAgjB,KAAAr6B,KAAA6wD,MAAA1U,EAAAgV,EAAAnxD,KAAAunB,IAAA6qB,EACA6e,EAAA55C,KAAAmjB,IAAAqU,GACAmiB,EAAA35C,KAAAqjB,IAAAmU,GACAx3B,KAAA63B,IAAAlvC,KAAAwwD,UAAAhe,GACAmJ,EAAAJ,EAAAv7C,KAAAunB,EAAA40B,EAAAn8C,KAAAo7C,IAAAp7C,KAAAo7C,IAAA+V,GACAD,EAAA,EAAAlxD,KAAAgvB,EAAAhvB,KAAAwtC,GAAAmO,EAAA37C,KAAA0wD,KACAxiB,EAAA79B,EAAArQ,KAAA2uC,GAAAuiB,EAAA75C,KAAAqjB,IAAAwhB,EAAAl8C,KAAAitC,OACAiB,EAAA59B,EAAAtQ,KAAA0uC,GAAA1uC,KAAAo7C,IAAA8V,EAAA75C,KAAAmjB,IAAA0hB,EAAAl8C,KAAAitC,OAEAiB,IAEA72B,KAAA63B,IAAAlvC,KAAAywD,SAAAje,GAGAqU,EAAA,EAAA7mD,KAAAgvB,EAAAhvB,KAAAwtC,IAAA,EAAAyjB,EAAA55C,KAAAmjB,IAAA62B,IACAnjB,EAAA59B,EAAAu2C,EAAAmK,IAKAnK,EAAA,EAAA7mD,KAAAgvB,EAAAhvB,KAAAwtC,GAAAxtC,KAAA2wD,KAAA3wD,KAAA8wD,OAAA,EAAA9wD,KAAA+wD,MAAAC,EAAAhxD,KAAA8wD,MAAAG,EAAA55C,KAAAmjB,IAAA62B,KACAnjB,EAAA59B,EAAAu2C,GAAA7mD,KAAA8wD,MAAAE,EAAAhxD,KAAA+wD,MAAAE,EAAA55C,KAAAmjB,IAAA62B,IAAArxD,KAAA0uC,IAEAR,EAAA79B,EAAAw2C,EAAAoK,EAAA55C,KAAAqjB,IAAA22B,GAAArxD,KAAA2uC,GAGAT,KA2EArB,QAvEA,SAAAqB,GAGA,IAAAgO,EAAAC,EAAAR,EAAA4V,EAAAC,EAFAtjB,EAAA79B,GAAArQ,KAAA2uC,GACAT,EAAA59B,GAAAtQ,KAAA0uC,GAEA,IAAAwiB,EAAA75C,KAAA6iB,KAAAgU,EAAA79B,EAAA69B,EAAA79B,EAAA69B,EAAA59B,EAAA49B,EAAA59B,GACA,GAAAtQ,KAAA45C,OAAA,CACA,IAAA2S,EAAA,EAAAl1C,KAAAgjB,KAAA62B,GAAA,GAAAlxD,KAAAgvB,EAAAhvB,KAAAwtC,KAGA,OAFA0O,EAAAl8C,KAAAitC,MACAkP,EAAAn8C,KAAA+sC,KACAmkB,GAAA1e,GACAtE,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EACAjO,IAEAiO,EAAA9kC,KAAAs2B,KAAAt2B,KAAAmjB,IAAA+xB,GAAAvsD,KAAAywD,QAAAviB,EAAA59B,EAAA+G,KAAAqjB,IAAA6xB,GAAAvsD,KAAAwwD,QAAAU,GAGAhV,EAFA7kC,KAAA63B,IAAAlvC,KAAAwwD,SAAAhe,EACAxyC,KAAA+sC,KAAA,EACAuO,EAAAt7C,KAAAitC,MAAA51B,KAAAusC,MAAA1V,EAAA79B,GAAA,EAAA69B,EAAA59B,IAGAgrC,EAAAt7C,KAAAitC,MAAA51B,KAAAusC,MAAA1V,EAAA79B,EAAA69B,EAAA59B,IAIAgrC,EAAAt7C,KAAAitC,MAAA51B,KAAAusC,MAAA1V,EAAA79B,EAAAgH,KAAAqjB,IAAA6xB,GAAA2E,EAAAlxD,KAAAwwD,QAAAn5C,KAAAmjB,IAAA+xB,GAAAre,EAAA59B,EAAAtQ,KAAAywD,QAAAp5C,KAAAqjB,IAAA6xB,KAEAre,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EACAjO,GAGA,GAAA72B,KAAA63B,IAAAlvC,KAAAwwD,UAAAhe,EAAA,CACA,GAAA0e,GAAA1e,EAMA,OALA2J,EAAAn8C,KAAA+sC,KACAmP,EAAAl8C,KAAAitC,MACAiB,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EAEAjO,EAEAA,EAAA79B,GAAArQ,KAAAo7C,IACAlN,EAAA59B,GAAAtQ,KAAAo7C,IACAO,EAAAuV,EAAAlxD,KAAA0wD,MAAA,EAAA1wD,KAAAgvB,EAAAhvB,KAAAwtC,IACA2O,EAAAn8C,KAAAo7C,IAAAM,EAAA17C,KAAAunB,EAAAo0B,GACAO,EAAAl8C,KAAAo7C,IAAAE,EAAAt7C,KAAAo7C,IAAAp7C,KAAAitC,MAAA51B,KAAAusC,MAAA1V,EAAA79B,GAAA,EAAA69B,EAAA59B,SAGAihD,EAAA,EAAAl6C,KAAAgjB,KAAA62B,EAAAlxD,KAAA8wD,OAAA,EAAA9wD,KAAAgvB,EAAAhvB,KAAAwtC,GAAAxtC,KAAA2wD,MACAzU,EAAAl8C,KAAAitC,MACAikB,GAAA1e,EACAgf,EAAAxxD,KAAA4wD,IAGAY,EAAAn6C,KAAAs2B,KAAAt2B,KAAAmjB,IAAA+2B,GAAAvxD,KAAA+wD,MAAA7iB,EAAA59B,EAAA+G,KAAAqjB,IAAA62B,GAAAvxD,KAAA8wD,MAAAI,GACAhV,EAAAZ,EAAAt7C,KAAAitC,MAAA51B,KAAAusC,MAAA1V,EAAA79B,EAAAgH,KAAAqjB,IAAA62B,GAAAL,EAAAlxD,KAAA8wD,MAAAz5C,KAAAmjB,IAAA+2B,GAAArjB,EAAA59B,EAAAtQ,KAAA+wD,MAAA15C,KAAAqjB,IAAA62B,MAEApV,GAAA,EAAAT,EAAA17C,KAAAunB,EAAAlQ,KAAAy2B,IAAA,IAAAsE,EAAAof,KAOA,OAJAtjB,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EAGAjO,GASA7tB,OALA,sEAMAwwC,MApKA,SAAAY,EAAAvW,EAAAwW,GAEA,OADAxW,GAAAwW,EACAr6C,KAAAy2B,IAAA,IAAAsE,EAAAqf,IAAAp6C,KAAA8iB,KAAA,EAAA+gB,IAAA,EAAAA,GAAA,GAAAwW,cC0JA,IACAC,IACAjrC,KA/JA,WACA1mB,KAAA4xD,OAAA5xD,KAAA4xD,SAAA,EACA5xD,KAAA6xD,OAAA7xD,KAAA6xD,SAAA,EAEAthD,MAAAvQ,KAAAwtC,MACAxtC,KAAAwtC,GAAA,GAEA,IAAA2jB,EAAA95C,KAAAqjB,IAAA16B,KAAA+sC,MACAqkB,EAAA/5C,KAAAmjB,IAAAx6B,KAAA+sC,MACAqO,EAAAp7C,KAAAunB,EAAA4pC,EAEAnxD,KAAA8xD,GAAAz6C,KAAA6iB,KAAA,EAAAl6B,KAAAi8C,IAAA,EAAAj8C,KAAAi8C,IAAA5kC,KAAA8iB,IAAAi3B,EAAA,IACApxD,KAAAqsD,GAAArsD,KAAAgvB,EAAAhvB,KAAA8xD,GAAA9xD,KAAAwtC,GAAAn2B,KAAA6iB,KAAA,EAAAl6B,KAAAi8C,KAAA,EAAAb,KACA,IAKA2W,EACAC,EANAC,EAAA1W,EAAAv7C,KAAAunB,EAAAvnB,KAAA+sC,KAAAokB,GACAe,EAAAlyD,KAAA8xD,GAAAV,EAAA/5C,KAAA6iB,MAAA,EAAAl6B,KAAAi8C,KAAA,EAAAb,MAMA,GALA8W,IAAA,IACAA,EAAA,GAIA3hD,MAAAvQ,KAAAy1C,OAeA,CAEA,IAAA0c,EAAA5W,EAAAv7C,KAAAunB,EAAAvnB,KAAA+0C,KAAA19B,KAAAqjB,IAAA16B,KAAA+0C,OACAqd,EAAA7W,EAAAv7C,KAAAunB,EAAAvnB,KAAAi1C,KAAA59B,KAAAqjB,IAAA16B,KAAAi1C,OACAj1C,KAAA+sC,MAAA,EACA/sC,KAAAqyD,IAAAH,EAAA76C,KAAA6iB,KAAAg4B,IAAA,IAAA76C,KAAA8iB,IAAA83B,EAAAjyD,KAAA8xD,IAGA9xD,KAAAqyD,IAAAH,EAAA76C,KAAA6iB,KAAAg4B,IAAA,IAAA76C,KAAA8iB,IAAA83B,EAAAjyD,KAAA8xD,IAEA,IAAAQ,EAAAj7C,KAAA8iB,IAAAg4B,EAAAnyD,KAAA8xD,IACAxL,EAAAjvC,KAAA8iB,IAAAi4B,EAAApyD,KAAA8xD,IAEAE,EAAA,KADAD,EAAA/xD,KAAAqyD,GAAAC,GACA,EAAAP,GACA,IAAAQ,GAAAvyD,KAAAqyD,GAAAryD,KAAAqyD,GAAA/L,EAAAgM,IAAAtyD,KAAAqyD,GAAAryD,KAAAqyD,GAAA/L,EAAAgM,GACAE,GAAAlM,EAAAgM,IAAAhM,EAAAgM,GACAG,EAAAnX,EAAAt7C,KAAAq1C,MAAAr1C,KAAAu1C,OACAv1C,KAAAitC,MAAA,IAAAjtC,KAAAq1C,MAAAr1C,KAAAu1C,OAAAl+B,KAAAgjB,KAAAk4B,EAAAl7C,KAAAy2B,IAAA,GAAA9tC,KAAA8xD,GAAA,GAAAU,GAAAxyD,KAAA8xD,GACA9xD,KAAAitC,MAAAqO,EAAAt7C,KAAAitC,OACA,IAAAylB,EAAApX,EAAAt7C,KAAAq1C,MAAAr1C,KAAAitC,OACAjtC,KAAA2yD,OAAAt7C,KAAAgjB,KAAAhjB,KAAAqjB,IAAA16B,KAAA8xD,GAAA,GAAAE,GACAhyD,KAAAytC,MAAAp2B,KAAAs2B,KAAAukB,EAAA76C,KAAAqjB,IAAA16B,KAAA2yD,cAhCAZ,EADA/xD,KAAA+sC,MAAA,EACAmlB,EAAA76C,KAAA6iB,KAAAg4B,IAAA,GAGAA,EAAA76C,KAAA6iB,KAAAg4B,IAAA,GAEAlyD,KAAAqyD,GAAAN,EAAA16C,KAAA8iB,IAAA83B,EAAAjyD,KAAA8xD,IACAE,EAAA,IAAAD,EAAA,EAAAA,GACA/xD,KAAA2yD,OAAAt7C,KAAAs2B,KAAAt2B,KAAAqjB,IAAA16B,KAAAytC,OAAAykB,GACAlyD,KAAAitC,MAAAjtC,KAAAy1C,MAAAp+B,KAAAs2B,KAAAqkB,EAAA36C,KAAAy2B,IAAA9tC,KAAA2yD,SAAA3yD,KAAA8xD,GA2BA9xD,KAAA4xD,OACA5xD,KAAA4yD,GAAA,EAGA5yD,KAAA+sC,MAAA,EACA/sC,KAAA4yD,GAAA5yD,KAAAqsD,GAAArsD,KAAA8xD,GAAAz6C,KAAAusC,MAAAvsC,KAAA6iB,KAAAg4B,IAAA,GAAA76C,KAAAmjB,IAAAx6B,KAAAytC,QAGAztC,KAAA4yD,IAAA,EAAA5yD,KAAAqsD,GAAArsD,KAAA8xD,GAAAz6C,KAAAusC,MAAAvsC,KAAA6iB,KAAAg4B,IAAA,GAAA76C,KAAAmjB,IAAAx6B,KAAAytC,SA6FAb,QArFA,SAAAsB,GACA,IAGA2kB,EAAAC,EACA1X,EAJAc,EAAAhO,EAAA79B,EACA8rC,EAAAjO,EAAA59B,EACA+gD,EAAA/V,EAAAY,EAAAl8C,KAAAitC,OAGA,GAAA51B,KAAA63B,IAAA73B,KAAA63B,IAAAiN,GAAA/J,IAAAI,EAEA4I,EADAe,EAAA,GACA,EAGA,EAEA2W,EAAA9yD,KAAAqsD,GAAArsD,KAAA8xD,GAAAz6C,KAAAw2B,IAAAx2B,KAAAy2B,IAAA6E,EAAAyI,EAAAp7C,KAAA2yD,OAAA,KACAE,GAAA,EAAAzX,EAAAhJ,EAAApyC,KAAAqsD,GAAArsD,KAAA8xD,OAEA,CACA,IAAA9N,EAAAzI,EAAAv7C,KAAAunB,EAAA40B,EAAA9kC,KAAAqjB,IAAAyhB,IACA4W,EAAA/yD,KAAAqyD,GAAAh7C,KAAA8iB,IAAA6pB,EAAAhkD,KAAA8xD,IACAkB,EAAA,IAAAD,EAAA,EAAAA,GACAE,EAAA,IAAAF,EAAA,EAAAA,GACAG,EAAA77C,KAAAqjB,IAAA16B,KAAA8xD,GAAA,GACAqB,GAAAH,EAAA37C,KAAAqjB,IAAA16B,KAAA2yD,QAAAO,EAAA77C,KAAAmjB,IAAAx6B,KAAA2yD,SAAAM,EAEAH,EADAz7C,KAAA63B,IAAA73B,KAAA63B,IAAAikB,GAAA,IAAA3gB,EACA3R,OAAAuyB,kBAGA,GAAApzD,KAAAqsD,GAAAh1C,KAAAw2B,KAAA,EAAAslB,IAAA,EAAAA,IAAAnzD,KAAA8xD,GAGAe,EADAx7C,KAAA63B,IAAA73B,KAAAmjB,IAAAx6B,KAAA8xD,GAAA,KAAAtf,EACAxyC,KAAAqsD,GAAArsD,KAAA8xD,GAAA,EAGA9xD,KAAAqsD,GAAAh1C,KAAAusC,MAAAoP,EAAA37C,KAAAmjB,IAAAx6B,KAAA2yD,QAAAO,EAAA77C,KAAAqjB,IAAA16B,KAAA2yD,QAAAt7C,KAAAmjB,IAAAx6B,KAAA8xD,GAAAT,IAAArxD,KAAA8xD,GAcA,OAVA9xD,KAAA6xD,QACA3jB,EAAA79B,EAAArQ,KAAA2uC,GAAAkkB,EACA3kB,EAAA59B,EAAAtQ,KAAA0uC,GAAAokB,IAIAD,GAAA7yD,KAAA4yD,GACA1kB,EAAA79B,EAAArQ,KAAA2uC,GAAAmkB,EAAAz7C,KAAAmjB,IAAAx6B,KAAAytC,OAAAolB,EAAAx7C,KAAAqjB,IAAA16B,KAAAytC,OACAS,EAAA59B,EAAAtQ,KAAA0uC,GAAAmkB,EAAAx7C,KAAAmjB,IAAAx6B,KAAAytC,OAAAqlB,EAAAz7C,KAAAqjB,IAAA16B,KAAAytC,QAEAS,GAuCArB,QApCA,SAAAqB,GACA,IAAA2kB,EAAAC,EACA9yD,KAAA6xD,QACAiB,EAAA5kB,EAAA59B,EAAAtQ,KAAA0uC,GACAmkB,EAAA3kB,EAAA79B,EAAArQ,KAAA2uC,KAGAmkB,GAAA5kB,EAAA79B,EAAArQ,KAAA2uC,IAAAt3B,KAAAmjB,IAAAx6B,KAAAytC,QAAAS,EAAA59B,EAAAtQ,KAAA0uC,IAAAr3B,KAAAqjB,IAAA16B,KAAAytC,OACAolB,GAAA3kB,EAAA59B,EAAAtQ,KAAA0uC,IAAAr3B,KAAAmjB,IAAAx6B,KAAAytC,QAAAS,EAAA79B,EAAArQ,KAAA2uC,IAAAt3B,KAAAqjB,IAAA16B,KAAAytC,OACAolB,GAAA7yD,KAAA4yD,IAEA,IAAAS,EAAAh8C,KAAAi3B,KAAA,EAAAtuC,KAAA8xD,GAAAgB,EAAA9yD,KAAAqsD,IACAiH,EAAA,IAAAD,EAAA,EAAAA,GACAE,EAAA,IAAAF,EAAA,EAAAA,GACAG,EAAAn8C,KAAAqjB,IAAA16B,KAAA8xD,GAAAe,EAAA7yD,KAAAqsD,IACAoH,GAAAD,EAAAn8C,KAAAmjB,IAAAx6B,KAAA2yD,QAAAW,EAAAj8C,KAAAqjB,IAAA16B,KAAA2yD,SAAAY,EACA5X,EAAAtkC,KAAA8iB,IAAAn6B,KAAAqyD,GAAAh7C,KAAA6iB,MAAA,EAAAu5B,IAAA,EAAAA,IAAA,EAAAzzD,KAAA8xD,IAaA,OAZAz6C,KAAA63B,IAAAukB,EAAA,GAAAjhB,GACAtE,EAAA79B,EAAArQ,KAAAitC,MACAiB,EAAA59B,EAAA8hC,GAEA/6B,KAAA63B,IAAAukB,EAAA,GAAAjhB,GACAtE,EAAA79B,EAAArQ,KAAAitC,MACAiB,EAAA59B,GAAA,EAAA8hC,IAGAlE,EAAA59B,EAAAorC,EAAA17C,KAAAunB,EAAAo0B,GACAzN,EAAA79B,EAAAirC,EAAAt7C,KAAAitC,MAAA51B,KAAAusC,MAAA0P,EAAAj8C,KAAAmjB,IAAAx6B,KAAA2yD,QAAAa,EAAAn8C,KAAAqjB,IAAA16B,KAAA2yD,QAAAt7C,KAAAmjB,IAAAx6B,KAAA8xD,GAAAe,EAAA7yD,KAAAqsD,KAAArsD,KAAA8xD,KAEA5jB,GAQA7tB,OALA,wJChCA,IACAqzC,IACAhtC,KAhIA,WAqBA,GATA1mB,KAAAi1C,OACAj1C,KAAAi1C,KAAAj1C,KAAA+0C,MAEA/0C,KAAAwtC,KACAxtC,KAAAwtC,GAAA,GAEAxtC,KAAA2uC,GAAA3uC,KAAA2uC,IAAA,EACA3uC,KAAA0uC,GAAA1uC,KAAA0uC,IAAA,IAEAr3B,KAAA63B,IAAAlvC,KAAA+0C,KAAA/0C,KAAAi1C,MAAAzC,GAAA,CAIA,IAAAua,EAAA/sD,KAAA4B,EAAA5B,KAAAgvB,EACAhvB,KAAAunB,EAAAlQ,KAAA6iB,KAAA,EAAA6yB,KAEA,IAAA4G,EAAAt8C,KAAAqjB,IAAA16B,KAAA+0C,MACA6e,EAAAv8C,KAAAmjB,IAAAx6B,KAAA+0C,MACA4b,EAAA3V,EAAAh7C,KAAAunB,EAAAosC,EAAAC,GACAC,EAAAtY,EAAAv7C,KAAAunB,EAAAvnB,KAAA+0C,KAAA4e,GAEAG,EAAAz8C,KAAAqjB,IAAA16B,KAAAi1C,MACA8e,EAAA18C,KAAAmjB,IAAAx6B,KAAAi1C,MACA+e,EAAAhZ,EAAAh7C,KAAAunB,EAAAusC,EAAAC,GACAE,EAAA1Y,EAAAv7C,KAAAunB,EAAAvnB,KAAAi1C,KAAA6e,GAEAI,EAAA3Y,EAAAv7C,KAAAunB,EAAAvnB,KAAA+sC,KAAA11B,KAAAqjB,IAAA16B,KAAA+sC,OAEA11B,KAAA63B,IAAAlvC,KAAA+0C,KAAA/0C,KAAAi1C,MAAAzC,EACAxyC,KAAAm0D,GAAA98C,KAAAw2B,IAAA8iB,EAAAqD,GAAA38C,KAAAw2B,IAAAgmB,EAAAI,GAGAj0D,KAAAm0D,GAAAR,EAEApjD,MAAAvQ,KAAAm0D,MACAn0D,KAAAm0D,GAAAR,GAEA3zD,KAAAo0D,GAAAzD,GAAA3wD,KAAAm0D,GAAA98C,KAAA8iB,IAAA05B,EAAA7zD,KAAAm0D,KACAn0D,KAAAkxD,GAAAlxD,KAAAgvB,EAAAhvB,KAAAo0D,GAAA/8C,KAAA8iB,IAAA+5B,EAAAl0D,KAAAm0D,IACAn0D,KAAAiqB,QACAjqB,KAAAiqB,MAAA,6BA6EA2iB,QAvEA,SAAAsB,GAEA,IAAAgO,EAAAhO,EAAA79B,EACA8rC,EAAAjO,EAAA59B,EAGA+G,KAAA63B,IAAA,EAAA73B,KAAA63B,IAAAiN,GAAA9kC,KAAA8f,KAAAqb,IACA2J,EAAAd,EAAAc,IAAA/J,EAAA,EAAAI,IAGA,IACAmJ,EAAA0Y,EADAjZ,EAAA/jC,KAAA63B,IAAA73B,KAAA63B,IAAAiN,GAAA/J,GAEA,GAAAgJ,EAAA5I,EACAmJ,EAAAJ,EAAAv7C,KAAAunB,EAAA40B,EAAA9kC,KAAAqjB,IAAAyhB,IACAkY,EAAAr0D,KAAAgvB,EAAAhvB,KAAAo0D,GAAA/8C,KAAA8iB,IAAAwhB,EAAA37C,KAAAm0D,QAEA,CAEA,IADA/Y,EAAAe,EAAAn8C,KAAAm0D,KACA,EACA,YAEAE,EAAA,EAEA,IAAAC,EAAAt0D,KAAAm0D,GAAA7Y,EAAAY,EAAAl8C,KAAAitC,OAIA,OAHAiB,EAAA79B,EAAArQ,KAAAwtC,IAAA6mB,EAAAh9C,KAAAqjB,IAAA45B,IAAAt0D,KAAA2uC,GACAT,EAAA59B,EAAAtQ,KAAAwtC,IAAAxtC,KAAAkxD,GAAAmD,EAAAh9C,KAAAmjB,IAAA85B,IAAAt0D,KAAA0uC,GAEAR,GA6CArB,QAxCA,SAAAqB,GAEA,IAAAmmB,EAAAjZ,EAAAO,EACAQ,EAAAD,EACA7rC,GAAA69B,EAAA79B,EAAArQ,KAAA2uC,IAAA3uC,KAAAwtC,GACAl9B,EAAAtQ,KAAAkxD,IAAAhjB,EAAA59B,EAAAtQ,KAAA0uC,IAAA1uC,KAAAwtC,GACAxtC,KAAAm0D,GAAA,GACAE,EAAAh9C,KAAA6iB,KAAA7pB,IAAAC,KACA8qC,EAAA,IAGAiZ,GAAAh9C,KAAA6iB,KAAA7pB,IAAAC,KACA8qC,GAAA,GAEA,IAAAkZ,EAAA,EAIA,GAHA,IAAAD,IACAC,EAAAj9C,KAAAusC,MAAAxI,EAAA/qC,EAAA+qC,EAAA9qC,IAEA,IAAA+jD,GAAAr0D,KAAAm0D,GAAA,GAIA,GAHA/Y,EAAA,EAAAp7C,KAAAm0D,GACAxY,EAAAtkC,KAAA8iB,IAAAk6B,GAAAr0D,KAAAgvB,EAAAhvB,KAAAo0D,IAAAhZ,IAEA,QADAe,EAAAT,EAAA17C,KAAAunB,EAAAo0B,IAEA,iBAIAQ,GAAA/J,EAMA,OAJA8J,EAAAZ,EAAAgZ,EAAAt0D,KAAAm0D,GAAAn0D,KAAAitC,OAEAiB,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EACAjO,GAQA7tB,OALA,gHCjCA,IACAk0C,IACA7tC,KAnGA,WACA1mB,KAAAgvB,EAAA,YACAhvB,KAAAi8C,GAAA,iBACAj8C,KAAAunB,EAAAlQ,KAAA6iB,KAAAl6B,KAAAi8C,IACAj8C,KAAA+sC,OACA/sC,KAAA+sC,KAAA,kBAEA/sC,KAAAitC,QACAjtC,KAAAitC,MAAA,mBAGAjtC,KAAAwtC,KACAxtC,KAAAwtC,GAAA,OAEAxtC,KAAAw0D,IAAA,iBACAx0D,KAAAy0D,IAAA,EAAAz0D,KAAAw0D,IACAx0D,KAAA00D,IAAA10D,KAAA+sC,KACA/sC,KAAAstC,GAAAttC,KAAAi8C,GACAj8C,KAAAunB,EAAAlQ,KAAA6iB,KAAAl6B,KAAAstC,IACAttC,KAAA20D,KAAAt9C,KAAA6iB,KAAA,EAAAl6B,KAAAstC,GAAAj2B,KAAA8iB,IAAA9iB,KAAAmjB,IAAAx6B,KAAA00D,KAAA,MAAA10D,KAAAstC,KACAttC,KAAA40D,GAAA,iBACA50D,KAAA60D,GAAAx9C,KAAAs2B,KAAAt2B,KAAAqjB,IAAA16B,KAAA00D,KAAA10D,KAAA20D,MACA30D,KAAA2B,EAAA0V,KAAA8iB,KAAA,EAAAn6B,KAAAunB,EAAAlQ,KAAAqjB,IAAA16B,KAAA00D,OAAA,EAAA10D,KAAAunB,EAAAlQ,KAAAqjB,IAAA16B,KAAA00D,MAAA10D,KAAA20D,KAAA30D,KAAAunB,EAAA,GACAvnB,KAAA61C,EAAAx+B,KAAAy2B,IAAA9tC,KAAA60D,GAAA,EAAA70D,KAAAw0D,KAAAn9C,KAAA8iB,IAAA9iB,KAAAy2B,IAAA9tC,KAAA00D,IAAA,EAAA10D,KAAAw0D,KAAAx0D,KAAA20D,MAAA30D,KAAA2B,EACA3B,KAAA4tC,GAAA5tC,KAAAwtC,GACAxtC,KAAA80D,GAAA90D,KAAAgvB,EAAA3X,KAAA6iB,KAAA,EAAAl6B,KAAAstC,KAAA,EAAAttC,KAAAstC,GAAAj2B,KAAA8iB,IAAA9iB,KAAAqjB,IAAA16B,KAAA00D,KAAA,IACA10D,KAAA+0D,GAAA,iBACA/0D,KAAAuJ,EAAA8N,KAAAqjB,IAAA16B,KAAA+0D,IACA/0D,KAAAg1D,IAAAh1D,KAAA4tC,GAAA5tC,KAAA80D,GAAAz9C,KAAAy2B,IAAA9tC,KAAA+0D,IACA/0D,KAAAi1D,GAAAj1D,KAAAy0D,IAAAz0D,KAAA40D,IAuEAhoB,QAjEA,SAAAsB,GACA,IAAAgnB,EAAAC,EAAAC,EAAA/lB,EAAA7uC,EAAA60D,EAAAC,EACApZ,EAAAhO,EAAA79B,EACA8rC,EAAAjO,EAAA59B,EACA47C,EAAA5Q,EAAAY,EAAAl8C,KAAAitC,OAgBA,OAdAioB,EAAA79C,KAAA8iB,KAAA,EAAAn6B,KAAAunB,EAAAlQ,KAAAqjB,IAAAyhB,KAAA,EAAAn8C,KAAAunB,EAAAlQ,KAAAqjB,IAAAyhB,IAAAn8C,KAAA20D,KAAA30D,KAAAunB,EAAA,GACA4tC,EAAA,GAAA99C,KAAAgjB,KAAAr6B,KAAA61C,EAAAx+B,KAAA8iB,IAAA9iB,KAAAy2B,IAAAqO,EAAA,EAAAn8C,KAAAw0D,KAAAx0D,KAAA20D,MAAAO,GAAAl1D,KAAAw0D,KACAY,GAAAlJ,EAAAlsD,KAAA20D,KACAtlB,EAAAh4B,KAAAs2B,KAAAt2B,KAAAmjB,IAAAx6B,KAAAi1D,IAAA59C,KAAAqjB,IAAAy6B,GAAA99C,KAAAqjB,IAAA16B,KAAAi1D,IAAA59C,KAAAmjB,IAAA26B,GAAA99C,KAAAmjB,IAAA46B,IACA50D,EAAA6W,KAAAs2B,KAAAt2B,KAAAmjB,IAAA26B,GAAA99C,KAAAqjB,IAAA06B,GAAA/9C,KAAAmjB,IAAA6U,IACAgmB,EAAAr1D,KAAAuJ,EAAA/I,EACA80D,EAAAt1D,KAAAg1D,IAAA39C,KAAA8iB,IAAA9iB,KAAAy2B,IAAA9tC,KAAA+0D,GAAA,EAAA/0D,KAAAw0D,KAAAx0D,KAAAuJ,GAAA8N,KAAA8iB,IAAA9iB,KAAAy2B,IAAAuB,EAAA,EAAArvC,KAAAw0D,KAAAx0D,KAAAuJ,GACA2kC,EAAA59B,EAAAglD,EAAAj+C,KAAAmjB,IAAA66B,GAAA,EACAnnB,EAAA79B,EAAAilD,EAAAj+C,KAAAqjB,IAAA26B,GAAA,EAEAr1D,KAAAu1D,QACArnB,EAAA59B,IAAA,EACA49B,EAAA79B,IAAA,GAEA,GA8CAw8B,QA1CA,SAAAqB,GACA,IAAAinB,EAAAC,EAAA/lB,EAAA7uC,EAAA80D,EAAAE,EACAC,EAIA9xC,EAAAuqB,EAAA79B,EACA69B,EAAA79B,EAAA69B,EAAA59B,EACA49B,EAAA59B,EAAAqT,EACA3jB,KAAAu1D,QACArnB,EAAA59B,IAAA,EACA49B,EAAA79B,IAAA,GAEAilD,EAAAj+C,KAAA6iB,KAAAgU,EAAA79B,EAAA69B,EAAA79B,EAAA69B,EAAA59B,EAAA49B,EAAA59B,GAEA9P,EADA6W,KAAAusC,MAAA1V,EAAA59B,EAAA49B,EAAA79B,GACAgH,KAAAqjB,IAAA16B,KAAA+0D,IACA1lB,EAAA,GAAAh4B,KAAAgjB,KAAAhjB,KAAA8iB,IAAAn6B,KAAAg1D,IAAAM,EAAA,EAAAt1D,KAAAuJ,GAAA8N,KAAAy2B,IAAA9tC,KAAA+0D,GAAA,EAAA/0D,KAAAw0D,MAAAx0D,KAAAw0D,KACAW,EAAA99C,KAAAs2B,KAAAt2B,KAAAmjB,IAAAx6B,KAAAi1D,IAAA59C,KAAAqjB,IAAA2U,GAAAh4B,KAAAqjB,IAAA16B,KAAAi1D,IAAA59C,KAAAmjB,IAAA6U,GAAAh4B,KAAAmjB,IAAAh6B,IACA40D,EAAA/9C,KAAAs2B,KAAAt2B,KAAAmjB,IAAA6U,GAAAh4B,KAAAqjB,IAAAl6B,GAAA6W,KAAAmjB,IAAA26B,IACAjnB,EAAA79B,EAAArQ,KAAAitC,MAAAmoB,EAAAp1D,KAAA20D,KACAa,EAAAL,EACAM,EAAA,EACA,IAAAhS,EAAA,EACA,GACAvV,EAAA59B,EAAA,GAAA+G,KAAAgjB,KAAAhjB,KAAA8iB,IAAAn6B,KAAA61C,GAAA,EAAA71C,KAAA20D,MAAAt9C,KAAA8iB,IAAA9iB,KAAAy2B,IAAAqnB,EAAA,EAAAn1D,KAAAw0D,KAAA,EAAAx0D,KAAA20D,MAAAt9C,KAAA8iB,KAAA,EAAAn6B,KAAAunB,EAAAlQ,KAAAqjB,IAAA86B,KAAA,EAAAx1D,KAAAunB,EAAAlQ,KAAAqjB,IAAA86B,IAAAx1D,KAAAunB,EAAA,IAAAvnB,KAAAw0D,KACAn9C,KAAA63B,IAAAsmB,EAAAtnB,EAAA59B,GAAA,QACAmlD,EAAA,GAEAD,EAAAtnB,EAAA59B,EACAmzC,GAAA,QACG,IAAAgS,GAAAhS,EAAA,IACH,OAAAA,GAAA,GACA,KAGA,GAQApjC,OALA,oBCnGAq1C,GAAA,SAAAC,EAAAhM,EAAArc,EAAAsoB,EAAApa,GACA,OAAAma,EAAAna,EAAAmO,EAAAtyC,KAAAqjB,IAAA,EAAA8gB,GAAAlO,EAAAj2B,KAAAqjB,IAAA,EAAA8gB,GAAAoa,EAAAv+C,KAAAqjB,IAAA,EAAA8gB,ICDAqa,GAAA,SAAAxlD,GACA,aAAAA,GAAA,EAAAA,EAAA,WAAAA,KCDAylD,GAAA,SAAAzlD,GACA,WAAAA,GAAA,MAAAA,GAAA,SAAAA,KCDA0lD,GAAA,SAAA1lD,GACA,gBAAAA,KAAA,MAAAA,ICDA2lD,GAAA,SAAA3lD,GACA,OAAAA,OAAA,UCDA4lD,GAAA,SAAAjnC,EAAAzH,EAAA2zB,GACA,IAAA6R,EAAAxlC,EAAA2zB,EACA,OAAAlsB,EAAA3X,KAAA6iB,KAAA,EAAA6yB,MCCAmJ,GAAA,SAAA7lD,GACA,OAAAgH,KAAA63B,IAAA7+B,GAAA+hC,EAAA/hC,IAAAgrC,EAAAhrC,GAAAgH,KAAA8f,ICJAg/B,GAAA,SAAAzJ,EAAAiJ,EAAAhM,EAAArc,EAAAsoB,GACA,IAAApa,EACAI,EAEAJ,EAAAkR,EAAAiJ,EACA,QAAAltD,EAAA,EAAiBA,EAAA,GAAQA,IAGzB,GADA+yC,GADAI,GAAA8Q,GAAAiJ,EAAAna,EAAAmO,EAAAtyC,KAAAqjB,IAAA,EAAA8gB,GAAAlO,EAAAj2B,KAAAqjB,IAAA,EAAA8gB,GAAAoa,EAAAv+C,KAAAqjB,IAAA,EAAA8gB,MAAAma,EAAA,EAAAhM,EAAAtyC,KAAAmjB,IAAA,EAAAghB,GAAA,EAAAlO,EAAAj2B,KAAAmjB,IAAA,EAAAghB,GAAA,EAAAoa,EAAAv+C,KAAAmjB,IAAA,EAAAghB,IAEAnkC,KAAA63B,IAAA0M,IAAA,MACA,OAAAJ,EAKA,OAAA8V,KCuFA,IACA8E,IACA1vC,KA5FA,WACA1mB,KAAA45C,SACA55C,KAAA21D,GAAAE,GAAA71D,KAAAi8C,IACAj8C,KAAA2pD,GAAAmM,GAAA91D,KAAAi8C,IACAj8C,KAAAstC,GAAAyoB,GAAA/1D,KAAAi8C,IACAj8C,KAAA41D,GAAAI,GAAAh2D,KAAAi8C,IACAj8C,KAAAisD,IAAAjsD,KAAAgvB,EAAA0mC,GAAA11D,KAAA21D,GAAA31D,KAAA2pD,GAAA3pD,KAAAstC,GAAAttC,KAAA41D,GAAA51D,KAAA+sC,QAuFAH,QAjFA,SAAAsB,GAIA,IAAA79B,EAAAC,EACA+lD,EAAAnoB,EAAA79B,EACAmrC,EAAAtN,EAAA59B,EAGA,GAFA+lD,EAAA/a,EAAA+a,EAAAr2D,KAAAitC,OAEAjtC,KAAA45C,OACAvpC,EAAArQ,KAAAgvB,EAAA3X,KAAAs2B,KAAAt2B,KAAAmjB,IAAAghB,GAAAnkC,KAAAqjB,IAAA27B,IACA/lD,EAAAtQ,KAAAgvB,GAAA3X,KAAAusC,MAAAvsC,KAAAy2B,IAAA0N,GAAAnkC,KAAAmjB,IAAA67B,IAAAr2D,KAAA+sC,UAEA,CAEA,IAAAmO,EAAA7jC,KAAAqjB,IAAA8gB,GACAL,EAAA9jC,KAAAmjB,IAAAghB,GACA8a,EAAAL,GAAAj2D,KAAAgvB,EAAAhvB,KAAAunB,EAAA2zB,GACA+X,EAAA57C,KAAAy2B,IAAA0N,GAAAnkC,KAAAy2B,IAAA0N,GACA6Q,EAAAgK,EAAAh/C,KAAAmjB,IAAAghB,GACA+a,EAAAlK,IACAmK,EAAAx2D,KAAAi8C,GAAAd,KAAA,EAAAn7C,KAAAi8C,IAGA5rC,EAAAimD,EAAAjK,GAAA,EAAAkK,EAAAtD,GAAA,OAAAA,EAAA,EAAAuD,GAAAD,EAAA,MACAjmD,EAHAtQ,KAAAgvB,EAAA0mC,GAAA11D,KAAA21D,GAAA31D,KAAA2pD,GAAA3pD,KAAAstC,GAAAttC,KAAA41D,GAAApa,GAGAx7C,KAAAisD,IAAAqK,EAAApb,EAAAC,EAAAob,GAAA,MAAAtD,EAAA,EAAAuD,GAAAD,EAAA,IAOA,OAFAroB,EAAA79B,IAAArQ,KAAA2uC,GACAT,EAAA59B,IAAAtQ,KAAA0uC,GACAR,GAkDArB,QA7CA,SAAAqB,GACAA,EAAA79B,GAAArQ,KAAA2uC,GACAT,EAAA59B,GAAAtQ,KAAA0uC,GACA,IAEA8M,EAAA6a,EAFAhmD,EAAA69B,EAAA79B,EAAArQ,KAAAgvB,EACA1e,EAAA49B,EAAA59B,EAAAtQ,KAAAgvB,EAGA,GAAAhvB,KAAA45C,OAAA,CACA,IAAA6c,EAAAnmD,EAAAtQ,KAAA+sC,KACAyO,EAAAnkC,KAAAs2B,KAAAt2B,KAAAqjB,IAAA+7B,GAAAp/C,KAAAmjB,IAAAnqB,IACAgmD,EAAAh/C,KAAAusC,MAAAvsC,KAAAy2B,IAAAz9B,GAAAgH,KAAAmjB,IAAAi8B,QAEA,CAEA,IAAAC,EAAA12D,KAAAisD,IAAAjsD,KAAAgvB,EAAA1e,EACAqmD,EAAAR,GAAAO,EAAA12D,KAAA21D,GAAA31D,KAAA2pD,GAAA3pD,KAAAstC,GAAAttC,KAAA41D,IACA,GAAAv+C,KAAA63B,IAAA73B,KAAA63B,IAAAynB,GAAAvkB,IAAAI,EAMA,OALAtE,EAAA79B,EAAArQ,KAAAitC,MACAiB,EAAA59B,EAAA8hC,EACA9hC,EAAA,IACA49B,EAAA59B,IAAA,GAEA49B,EAEA,IAAA0oB,EAAAX,GAAAj2D,KAAAgvB,EAAAhvB,KAAAunB,EAAAlQ,KAAAqjB,IAAAi8B,IAEAE,EAAAD,MAAA52D,KAAAgvB,EAAAhvB,KAAAgvB,GAAA,EAAAhvB,KAAAi8C,IACA6a,EAAAz/C,KAAA8iB,IAAA9iB,KAAAy2B,IAAA6oB,GAAA,GACAzE,EAAA7hD,EAAArQ,KAAAgvB,EAAA4nC,EACAG,EAAA7E,IACA1W,EAAAmb,EAAAC,EAAAv/C,KAAAy2B,IAAA6oB,GAAAE,EAAA3E,KAAA,QAAA4E,GAAA5E,IAAA,IACAmE,EAAAnE,GAAA,EAAA6E,GAAAD,EAAA,OAAAA,KAAAC,EAAA,KAAA1/C,KAAAmjB,IAAAm8B,GAMA,OAFAzoB,EAAA79B,EAAAirC,EAAA+a,EAAAr2D,KAAAitC,OACAiB,EAAA59B,EAAA4lD,GAAA1a,GACAtN,GASA7tB,OALA,qCCrGA22C,GAAA,SAAA/b,EAAAC,GACA,IAAAE,EACA,OAAAH,EAAA,MAEA,EAAAA,MAAAC,GAAA,GADAE,EAAAH,EAAAC,GACAE,GAAA,GAAAH,EAAA5jC,KAAAw2B,KAAA,EAAAuN,IAAA,EAAAA,KAGA,EAAAF,GC6PA,IAAA+b,GAAA,kBAEAC,GAAA,mBACAC,GAAA,mBACAC,GAAA,mBACAC,GAAA,kBACAC,GAAA,oBAqBA,IACAC,IACA7wC,KA7QA,WACA,IAWAw0B,EA4OAe,EACA+H,EACAwT,EAzPAxT,EAAA3sC,KAAA63B,IAAAlvC,KAAA+sC,MAUA,GATA11B,KAAA63B,IAAA8U,EAAA5R,GAAAI,EACAxyC,KAAAy3D,KAAAz3D,KAAA+sC,KAAA,EAAA/sC,KAAA03D,OAAA13D,KAAA23D,OAEAtgD,KAAA63B,IAAA8U,GAAAxR,EACAxyC,KAAAy3D,KAAAz3D,KAAA43D,MAGA53D,KAAAy3D,KAAAz3D,KAAA63D,MAEA73D,KAAAi8C,GAAA,EAMA,OAHAj8C,KAAAqzD,GAAA2D,GAAAh3D,KAAAunB,EAAA,GACAvnB,KAAA83D,IAAA,MAAA93D,KAAAi8C,IACAj8C,KAAA+3D,KAwOA9b,EAxOAj8C,KAAAi8C,IA0OAub,MACA,GAAAvb,EAAAgb,GACAjT,EAAA/H,IACAub,EAAA,IAAAxT,EAAAkT,GACAM,EAAA,GAAAxT,EAAAoT,GACApT,GAAA/H,EACAub,EAAA,IAAAxT,EAAAmT,GACAK,EAAA,IAAAxT,EAAAqT,GACAG,EAAA,GAAAxT,EAAAsT,GACAE,GAlPAx3D,KAAAy3D,MACA,KAAAz3D,KAAA23D,OAGA,KAAA33D,KAAA03D,OACA13D,KAAAy2D,GAAA,EACA,MACA,KAAAz2D,KAAA43D,MACA53D,KAAAg4D,GAAA3gD,KAAA6iB,KAAA,GAAAl6B,KAAAqzD,IACArzD,KAAAy2D,GAAA,EAAAz2D,KAAAg4D,GACAh4D,KAAAi4D,IAAA,EACAj4D,KAAAk4D,IAAA,GAAAl4D,KAAAqzD,GACA,MACA,KAAArzD,KAAA63D,MACA73D,KAAAg4D,GAAA3gD,KAAA6iB,KAAA,GAAAl6B,KAAAqzD,IACAnY,EAAA7jC,KAAAqjB,IAAA16B,KAAA+sC,MACA/sC,KAAAm4D,MAAAnB,GAAAh3D,KAAAunB,EAAA2zB,GAAAl7C,KAAAqzD,GACArzD,KAAAo4D,MAAA/gD,KAAA6iB,KAAA,EAAAl6B,KAAAm4D,MAAAn4D,KAAAm4D,OACAn4D,KAAAy2D,GAAAp/C,KAAAmjB,IAAAx6B,KAAA+sC,OAAA11B,KAAA6iB,KAAA,EAAAl6B,KAAAi8C,GAAAf,KAAAl7C,KAAAg4D,GAAAh4D,KAAAo4D,OACAp4D,KAAAk4D,KAAAl4D,KAAAi4D,IAAAj4D,KAAAg4D,IAAAh4D,KAAAy2D,GACAz2D,KAAAi4D,KAAAj4D,KAAAy2D,QAKAz2D,KAAAy3D,OAAAz3D,KAAA63D,QACA73D,KAAAq4D,OAAAhhD,KAAAqjB,IAAA16B,KAAA+sC,MACA/sC,KAAAs4D,OAAAjhD,KAAAmjB,IAAAx6B,KAAA+sC,QAkOAH,QA3NA,SAAAsB,GAIA,IAAA79B,EAAAC,EAAAioD,EAAAC,EAAAtd,EAAAud,EAAAC,EAAAC,EAAA/2D,EAAAu5C,EACAkb,EAAAnoB,EAAA79B,EACAmrC,EAAAtN,EAAA59B,EAGA,GADA+lD,EAAA/a,EAAA+a,EAAAr2D,KAAAitC,OACAjtC,KAAA45C,QAIA,GAHAsB,EAAA7jC,KAAAqjB,IAAA8gB,GACAL,EAAA9jC,KAAAmjB,IAAAghB,GACA+c,EAAAlhD,KAAAmjB,IAAA67B,GACAr2D,KAAAy3D,OAAAz3D,KAAA63D,OAAA73D,KAAAy3D,OAAAz3D,KAAA43D,MAAA,CAEA,IADAtnD,EAAAtQ,KAAAy3D,OAAAz3D,KAAA43D,MAAA,EAAAzc,EAAAod,EAAA,EAAAv4D,KAAAq4D,OAAAnd,EAAAl7C,KAAAs4D,OAAAnd,EAAAod,IACA/lB,EACA,YAGAniC,GADAC,EAAA+G,KAAA6iB,KAAA,EAAA5pB,IACA6qC,EAAA9jC,KAAAqjB,IAAA27B,GACA/lD,GAAAtQ,KAAAy3D,OAAAz3D,KAAA43D,MAAA1c,EAAAl7C,KAAAs4D,OAAApd,EAAAl7C,KAAAq4D,OAAAld,EAAAod,OAEA,GAAAv4D,KAAAy3D,OAAAz3D,KAAA23D,QAAA33D,KAAAy3D,OAAAz3D,KAAA03D,OAAA,CAIA,GAHA13D,KAAAy3D,OAAAz3D,KAAA23D,SACAY,MAEAlhD,KAAA63B,IAAAsM,EAAAx7C,KAAA44D,MAAApmB,EACA,YAEAliC,EAAAqiC,EAAA,GAAA6I,EAEAnrC,GADAC,EAAA,GAAAtQ,KAAAy3D,OAAAz3D,KAAA03D,OAAArgD,KAAAmjB,IAAAlqB,GAAA+G,KAAAqjB,IAAApqB,KACA+G,KAAAqjB,IAAA27B,GACA/lD,GAAAioD,OAGA,CAYA,OAXAG,EAAA,EACAC,EAAA,EACA/2D,EAAA,EACA22D,EAAAlhD,KAAAmjB,IAAA67B,GACAmC,EAAAnhD,KAAAqjB,IAAA27B,GACAnb,EAAA7jC,KAAAqjB,IAAA8gB,GACAid,EAAAzB,GAAAh3D,KAAAunB,EAAA2zB,GACAl7C,KAAAy3D,OAAAz3D,KAAA63D,OAAA73D,KAAAy3D,OAAAz3D,KAAA43D,QACAc,EAAAD,EAAAz4D,KAAAqzD,GACAsF,EAAAthD,KAAA6iB,KAAA,EAAAw+B,MAEA14D,KAAAy3D,MACA,KAAAz3D,KAAA63D,MACAj2D,EAAA,EAAA5B,KAAAm4D,MAAAO,EAAA14D,KAAAo4D,MAAAO,EAAAJ,EACA,MACA,KAAAv4D,KAAA43D,MACAh2D,EAAA,EAAA+2D,EAAAJ,EACA,MACA,KAAAv4D,KAAA23D,OACA/1D,EAAAwwC,EAAAoJ,EACAid,EAAAz4D,KAAAqzD,GAAAoF,EACA,MACA,KAAAz4D,KAAA03D,OACA91D,EAAA45C,EAAApJ,EACAqmB,EAAAz4D,KAAAqzD,GAAAoF,EAGA,GAAAphD,KAAA63B,IAAAttC,GAAA4wC,EACA,YAEA,OAAAxyC,KAAAy3D,MACA,KAAAz3D,KAAA63D,MACA,KAAA73D,KAAA43D,MACAh2D,EAAAyV,KAAA6iB,KAAA,EAAAt4B,GAEA0O,EADAtQ,KAAAy3D,OAAAz3D,KAAA63D,MACA73D,KAAAk4D,IAAAt2D,GAAA5B,KAAAo4D,MAAAM,EAAA14D,KAAAm4D,MAAAQ,EAAAJ,IAGA32D,EAAAyV,KAAA6iB,KAAA,KAAAy+B,EAAAJ,KAAAG,EAAA14D,KAAAk4D,IAEA7nD,EAAArQ,KAAAi4D,IAAAr2D,EAAA+2D,EAAAH,EACA,MACA,KAAAx4D,KAAA23D,OACA,KAAA33D,KAAA03D,OACAe,GAAA,GACApoD,GAAAzO,EAAAyV,KAAA6iB,KAAAu+B,IAAAD,EACAloD,EAAAioD,GAAAv4D,KAAAy3D,OAAAz3D,KAAA03D,OAAA91D,OAGAyO,EAAAC,EAAA,GAQA,OAFA49B,EAAA79B,EAAArQ,KAAAgvB,EAAA3e,EAAArQ,KAAA2uC,GACAT,EAAA59B,EAAAtQ,KAAAgvB,EAAA1e,EAAAtQ,KAAA0uC,GACAR,GA+HArB,QA1HA,SAAAqB,GACAA,EAAA79B,GAAArQ,KAAA2uC,GACAT,EAAA59B,GAAAtQ,KAAA0uC,GACA,IAEA2nB,EAAA7a,EAAAqd,EAAAC,EAAAL,EAAAnI,EAAAyI,EA4GAC,EAAAxB,EACAxT,EA/GA3zC,EAAA69B,EAAA79B,EAAArQ,KAAAgvB,EACA1e,EAAA49B,EAAA59B,EAAAtQ,KAAAgvB,EAEA,GAAAhvB,KAAA45C,OAAA,CACA,IACAsX,EADA+H,EAAA,EACAC,EAAA,EAIA,IADA1d,EAAA,IADA0V,EAAA75C,KAAA6iB,KAAA7pB,IAAAC,OAEA,EACA,YAOA,OALAkrC,EAAA,EAAAnkC,KAAAs2B,KAAA6N,GACAx7C,KAAAy3D,OAAAz3D,KAAA63D,OAAA73D,KAAAy3D,OAAAz3D,KAAA43D,QACAsB,EAAA7hD,KAAAqjB,IAAA8gB,GACAyd,EAAA5hD,KAAAmjB,IAAAghB,IAEAx7C,KAAAy3D,MACA,KAAAz3D,KAAA43D,MACApc,EAAAnkC,KAAA63B,IAAAgiB,IAAA1e,EAAA,EAAAn7B,KAAAs2B,KAAAr9B,EAAA4oD,EAAAhI,GACA7gD,GAAA6oD,EACA5oD,EAAA2oD,EAAA/H,EACA,MACA,KAAAlxD,KAAA63D,MACArc,EAAAnkC,KAAA63B,IAAAgiB,IAAA1e,EAAAxyC,KAAA44D,KAAAvhD,KAAAs2B,KAAAsrB,EAAAj5D,KAAAq4D,OAAA/nD,EAAA4oD,EAAAl5D,KAAAs4D,OAAApH,GACA7gD,GAAA6oD,EAAAl5D,KAAAs4D,OACAhoD,GAAA2oD,EAAA5hD,KAAAqjB,IAAA8gB,GAAAx7C,KAAAq4D,QAAAnH,EACA,MACA,KAAAlxD,KAAA23D,OACArnD,KACAkrC,EAAApJ,EAAAoJ,EACA,MACA,KAAAx7C,KAAA03D,OACAlc,GAAApJ,EAGAikB,EAAA,IAAA/lD,GAAAtQ,KAAAy3D,OAAAz3D,KAAA43D,OAAA53D,KAAAy3D,OAAAz3D,KAAA63D,MAAAxgD,KAAAusC,MAAAvzC,EAAAC,GAAA,MAEA,CAEA,GADAyoD,EAAA,EACA/4D,KAAAy3D,OAAAz3D,KAAA63D,OAAA73D,KAAAy3D,OAAAz3D,KAAA43D,MAAA,CAIA,GAHAvnD,GAAArQ,KAAAy2D,GACAnmD,GAAAtQ,KAAAy2D,IACAnG,EAAAj5C,KAAA6iB,KAAA7pB,IAAAC,MACAkiC,EAGA,OAFAtE,EAAA79B,EAAA,EACA69B,EAAA59B,EAAAtQ,KAAA44D,KACA1qB,EAEA4qB,EAAA,EAAAzhD,KAAAs2B,KAAA,GAAA2iB,EAAAtwD,KAAAg4D,IACAa,EAAAxhD,KAAAmjB,IAAAs+B,GACAzoD,GAAAyoD,EAAAzhD,KAAAqjB,IAAAo+B,GACA94D,KAAAy3D,OAAAz3D,KAAA63D,OACAkB,EAAAF,EAAA74D,KAAAm4D,MAAA7nD,EAAAwoD,EAAA94D,KAAAo4D,MAAA9H,EACAmI,EAAAz4D,KAAAqzD,GAAA0F,EACAzoD,EAAAggD,EAAAtwD,KAAAo4D,MAAAS,EAAAvoD,EAAAtQ,KAAAm4D,MAAAW,IAGAC,EAAAzoD,EAAAwoD,EAAAxI,EACAmI,EAAAz4D,KAAAqzD,GAAA0F,EACAzoD,EAAAggD,EAAAuI,QAGA,GAAA74D,KAAAy3D,OAAAz3D,KAAA23D,QAAA33D,KAAAy3D,OAAAz3D,KAAA03D,OAAA,CAKA,GAJA13D,KAAAy3D,OAAAz3D,KAAA23D,SACArnD,QAEAmoD,EAAApoD,IAAAC,KAIA,OAFA49B,EAAA79B,EAAA,EACA69B,EAAA59B,EAAAtQ,KAAA44D,KACA1qB,EAEA6qB,EAAA,EAAAN,EAAAz4D,KAAAqzD,GACArzD,KAAAy3D,OAAAz3D,KAAA03D,SACAqB,MAGA1C,EAAAh/C,KAAAusC,MAAAvzC,EAAAC,GAgCA0oD,EA/BA3hD,KAAAs2B,KAAAorB,GA+BAvB,EA/BAx3D,KAAA+3D,IAgCA/T,EAAAgV,IAhCAxd,EAiCAwd,EAAAxB,EAAA,GAAAngD,KAAAqjB,IAAAspB,GAAAwT,EAAA,GAAAngD,KAAAqjB,IAAAspB,KAAAwT,EAAA,GAAAngD,KAAAqjB,IAAAspB,OA5BA,OAFA9V,EAAA79B,EAAAirC,EAAAt7C,KAAAitC,MAAAopB,GACAnoB,EAAA59B,EAAAkrC,EACAtN,GAoCA7tB,OALA,sEAMAq3C,OAzRA,EA0RAC,OAxRA,EAyRAC,MAxRA,EAyRAC,MAxRA,GChBAsB,GAAA,SAAA9oD,GAIA,OAHAgH,KAAA63B,IAAA7+B,GAAA,IACAA,IAAA,QAEAgH,KAAAs2B,KAAAt9B,ICqHA,IACA+oD,IACA1yC,KArHA,WAEArP,KAAA63B,IAAAlvC,KAAA+0C,KAAA/0C,KAAAi1C,MAAAzC,IAGAxyC,KAAA+sD,KAAA/sD,KAAA4B,EAAA5B,KAAAgvB,EACAhvB,KAAAi8C,GAAA,EAAA5kC,KAAA8iB,IAAAn6B,KAAA+sD,KAAA,GACA/sD,KAAA41D,GAAAv+C,KAAA6iB,KAAAl6B,KAAAi8C,IAEAj8C,KAAAq5D,OAAAhiD,KAAAqjB,IAAA16B,KAAA+0C,MACA/0C,KAAAs5D,OAAAjiD,KAAAmjB,IAAAx6B,KAAA+0C,MACA/0C,KAAAmyD,GAAAnyD,KAAAq5D,OACAr5D,KAAAo7C,IAAAp7C,KAAAq5D,OACAr5D,KAAA2wD,IAAA3V,EAAAh7C,KAAA41D,GAAA51D,KAAAq5D,OAAAr5D,KAAAs5D,QACAt5D,KAAAu5D,IAAAvC,GAAAh3D,KAAA41D,GAAA51D,KAAAq5D,OAAAr5D,KAAAs5D,QAEAt5D,KAAAq5D,OAAAhiD,KAAAqjB,IAAA16B,KAAAi1C,MACAj1C,KAAAs5D,OAAAjiD,KAAAmjB,IAAAx6B,KAAAi1C,MACAj1C,KAAAoyD,GAAApyD,KAAAq5D,OACAr5D,KAAAg0D,IAAAhZ,EAAAh7C,KAAA41D,GAAA51D,KAAAq5D,OAAAr5D,KAAAs5D,QACAt5D,KAAAw5D,IAAAxC,GAAAh3D,KAAA41D,GAAA51D,KAAAq5D,OAAAr5D,KAAAs5D,QAEAt5D,KAAAq5D,OAAAhiD,KAAAqjB,IAAA16B,KAAA+sC,MACA/sC,KAAAs5D,OAAAjiD,KAAAmjB,IAAAx6B,KAAA+sC,MACA/sC,KAAAy5D,GAAAz5D,KAAAq5D,OACAr5D,KAAA05D,IAAA1C,GAAAh3D,KAAA41D,GAAA51D,KAAAq5D,OAAAr5D,KAAAs5D,QAEAjiD,KAAA63B,IAAAlvC,KAAA+0C,KAAA/0C,KAAAi1C,MAAAzC,EACAxyC,KAAA25D,KAAA35D,KAAA2wD,IAAA3wD,KAAA2wD,IAAA3wD,KAAAg0D,IAAAh0D,KAAAg0D,MAAAh0D,KAAAw5D,IAAAx5D,KAAAu5D,KAGAv5D,KAAA25D,IAAA35D,KAAAo7C,IAEAp7C,KAAAusD,EAAAvsD,KAAA2wD,IAAA3wD,KAAA2wD,IAAA3wD,KAAA25D,IAAA35D,KAAAu5D,IACAv5D,KAAAkxD,GAAAlxD,KAAAgvB,EAAA3X,KAAA6iB,KAAAl6B,KAAAusD,EAAAvsD,KAAA25D,IAAA35D,KAAA05D,KAAA15D,KAAA25D,MAoFA/sB,QA/EA,SAAAsB,GAEA,IAAAgO,EAAAhO,EAAA79B,EACA8rC,EAAAjO,EAAA59B,EAEAtQ,KAAAmsD,QAAA90C,KAAAqjB,IAAAyhB,GACAn8C,KAAAosD,QAAA/0C,KAAAmjB,IAAA2hB,GAEA,IAAAyd,EAAA5C,GAAAh3D,KAAA41D,GAAA51D,KAAAmsD,QAAAnsD,KAAAosD,SACAiI,EAAAr0D,KAAAgvB,EAAA3X,KAAA6iB,KAAAl6B,KAAAusD,EAAAvsD,KAAA25D,IAAAC,GAAA55D,KAAA25D,IACArF,EAAAt0D,KAAA25D,IAAAre,EAAAY,EAAAl8C,KAAAitC,OACA58B,EAAAgkD,EAAAh9C,KAAAqjB,IAAA45B,GAAAt0D,KAAA2uC,GACAr+B,EAAAtQ,KAAAkxD,GAAAmD,EAAAh9C,KAAAmjB,IAAA85B,GAAAt0D,KAAA0uC,GAIA,OAFAR,EAAA79B,IACA69B,EAAA59B,IACA49B,GAgEArB,QA7DA,SAAAqB,GACA,IAAAmmB,EAAAuF,EAAAxe,EAAAkZ,EAAApY,EAAAC,EA4BA,OA1BAjO,EAAA79B,GAAArQ,KAAA2uC,GACAT,EAAA59B,EAAAtQ,KAAAkxD,GAAAhjB,EAAA59B,EAAAtQ,KAAA0uC,GACA1uC,KAAA25D,KAAA,GACAtF,EAAAh9C,KAAA6iB,KAAAgU,EAAA79B,EAAA69B,EAAA79B,EAAA69B,EAAA59B,EAAA49B,EAAA59B,GACA8qC,EAAA,IAGAiZ,GAAAh9C,KAAA6iB,KAAAgU,EAAA79B,EAAA69B,EAAA79B,EAAA69B,EAAA59B,EAAA49B,EAAA59B,GACA8qC,GAAA,GAEAkZ,EAAA,EACA,IAAAD,IACAC,EAAAj9C,KAAAusC,MAAAxI,EAAAlN,EAAA79B,EAAA+qC,EAAAlN,EAAA59B,IAEA8qC,EAAAiZ,EAAAr0D,KAAA25D,IAAA35D,KAAAgvB,EACAhvB,KAAA45C,OACAuC,EAAA9kC,KAAAs2B,MAAA3tC,KAAAusD,EAAAnR,MAAA,EAAAp7C,KAAA25D,OAGAC,GAAA55D,KAAAusD,EAAAnR,KAAAp7C,KAAA25D,IACAxd,EAAAn8C,KAAA65D,MAAA75D,KAAA41D,GAAAgE,IAGA1d,EAAAZ,EAAAgZ,EAAAt0D,KAAA25D,IAAA35D,KAAAitC,OACAiB,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EACAjO,GAiCA7tB,OALA,0CAMAw5C,MA5BA,SAAA5e,EAAA2e,GACA,IAAA1e,EAAAC,EAAAC,EAAAK,EAAAG,EACAJ,EAAA2d,GAAA,GAAAS,GACA,GAAA3e,EAAAzI,EACA,OAAAgJ,EAIA,IADA,IAAAse,EAAA7e,IACAxyC,EAAA,EAAiBA,GAAA,GAASA,IAO1B,GANAyyC,EAAA7jC,KAAAqjB,IAAA8gB,GACAL,EAAA9jC,KAAAmjB,IAAAghB,GAIAA,GADAI,EAAA,IADAH,EAAA,GADAL,EAAAH,EAAAC,GACAE,GACAK,EAAAN,GAAAye,GAAA,EAAAE,GAAA5e,EAAAO,EAAA,GAAAR,EAAA5jC,KAAAw2B,KAAA,EAAAuN,IAAA,EAAAA,KAEA/jC,KAAA63B,IAAA0M,IAAA,KACA,OAAAJ,EAGA,cCrBA,IACAue,IACArzC,KAzFA,WAIA1mB,KAAAg6D,QAAA3iD,KAAAqjB,IAAA16B,KAAA+sC,MACA/sC,KAAAi6D,QAAA5iD,KAAAmjB,IAAAx6B,KAAA+sC,MAEA/sC,KAAAk6D,cAAA,IAAAl6D,KAAAgvB,EACAhvB,KAAA4vD,GAAA,GAkFAhjB,QA7EA,SAAAsB,GACA,IAAAgN,EAAAC,EACAkW,EACA8I,EAEAx4D,EACA0O,EAAAC,EACA4rC,EAAAhO,EAAA79B,EACA8rC,EAAAjO,EAAA59B,EA8BA,OA3BA+gD,EAAA/V,EAAAY,EAAAl8C,KAAAitC,OAEAiO,EAAA7jC,KAAAqjB,IAAAyhB,GACAhB,EAAA9jC,KAAAmjB,IAAA2hB,GAEAge,EAAA9iD,KAAAmjB,IAAA62B,IACA1vD,EAAA3B,KAAAg6D,QAAA9e,EAAAl7C,KAAAi6D,QAAA9e,EAAAgf,GAEA,GAAA9iD,KAAA63B,IAAAvtC,IAAA6wC,GACAniC,EAAArQ,KAAA2uC,GAFA,EAEA3uC,KAAAgvB,EAAAmsB,EAAA9jC,KAAAqjB,IAAA22B,GAAA1vD,EACA2O,EAAAtQ,KAAA0uC,GAHA,EAGA1uC,KAAAgvB,GAAAhvB,KAAAi6D,QAAA/e,EAAAl7C,KAAAg6D,QAAA7e,EAAAgf,GAAAx4D,IAWA0O,EAAArQ,KAAA2uC,GAAA3uC,KAAAk6D,cAAA/e,EAAA9jC,KAAAqjB,IAAA22B,GACA/gD,EAAAtQ,KAAA0uC,GAAA1uC,KAAAk6D,eAAAl6D,KAAAi6D,QAAA/e,EAAAl7C,KAAAg6D,QAAA7e,EAAAgf,IAGAjsB,EAAA79B,IACA69B,EAAA59B,IACA49B,GAwCArB,QArCA,SAAAqB,GACA,IAAAgjB,EACAf,EAAAC,EACA7D,EACArQ,EAAAC,EA0BA,OAtBAjO,EAAA79B,GAAA69B,EAAA79B,EAAArQ,KAAA2uC,IAAA3uC,KAAAgvB,EACAkf,EAAA59B,GAAA49B,EAAA59B,EAAAtQ,KAAA0uC,IAAA1uC,KAAAgvB,EAEAkf,EAAA79B,GAAArQ,KAAAwtC,GACAU,EAAA59B,GAAAtQ,KAAAwtC,IAEA0jB,EAAA75C,KAAA6iB,KAAAgU,EAAA79B,EAAA69B,EAAA79B,EAAA69B,EAAA59B,EAAA49B,EAAA59B,KACAi8C,EAAAl1C,KAAAusC,MAAAsN,EAAAlxD,KAAA4vD,IACAO,EAAA94C,KAAAqjB,IAAA6xB,GACA6D,EAAA/4C,KAAAmjB,IAAA+xB,GAEApQ,EAAAgd,GAAA/I,EAAApwD,KAAAg6D,QAAA9rB,EAAA59B,EAAA6/C,EAAAnwD,KAAAi6D,QAAA/I,GACAhV,EAAA7kC,KAAAusC,MAAA1V,EAAA79B,EAAA8/C,EAAAe,EAAAlxD,KAAAi6D,QAAA7J,EAAAliB,EAAA59B,EAAAtQ,KAAAg6D,QAAA7J,GACAjU,EAAAZ,EAAAt7C,KAAAitC,MAAAiP,KAGAC,EAAAn8C,KAAA6vD,MACA3T,EAAA,GAGAhO,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EACAjO,GAQA7tB,OALA,SC/FA+5C,GAAA,SAAAnf,EAAAwd,GACA,IAAA1L,EAAA,KAAA9R,MAAA,EAAAA,GAAA5jC,KAAAw2B,KAAA,EAAAoN,IAAA,EAAAA,IACA,GAAA5jC,KAAA63B,IAAA73B,KAAA63B,IAAAupB,GAAA1L,GAAA,KACA,OAAA0L,EAAA,GACA,EAAArmB,EAGAA,EASA,IALA,IACAwJ,EACAuQ,EACAC,EACAhR,EAJAI,EAAAnkC,KAAAs2B,KAAA,GAAA8qB,GAKAhwD,EAAA,EAAiBA,EAAA,GAAQA,IAMzB,GALA0jD,EAAA90C,KAAAqjB,IAAA8gB,GACA4Q,EAAA/0C,KAAAmjB,IAAAghB,GACAJ,EAAAH,EAAAkR,EAEA3Q,GADAI,EAAAvkC,KAAA8iB,IAAA,EAAAihB,IAAA,MAAAgR,IAAAqM,GAAA,EAAAxd,KAAAkR,GAAA,EAAA/Q,KAAA,GAAAH,EAAA5jC,KAAAw2B,KAAA,EAAAuN,IAAA,EAAAA,KAEA/jC,KAAA63B,IAAA0M,IAAA,MACA,OAAAJ,EAKA,OAAA8V,KCiCA,IACA+I,IACA3zC,KAtDA,WAEA1mB,KAAA45C,SACA55C,KAAAwtC,GAAAwN,EAAAh7C,KAAAunB,EAAAlQ,KAAAqjB,IAAA16B,KAAAk1C,QAAA79B,KAAAmjB,IAAAx6B,KAAAk1C,WAoDAtI,QA9CA,SAAAsB,GACA,IAEA79B,EAAAC,EAFA4rC,EAAAhO,EAAA79B,EACA8rC,EAAAjO,EAAA59B,EAIA+gD,EAAA/V,EAAAY,EAAAl8C,KAAAitC,OACA,GAAAjtC,KAAA45C,OACAvpC,EAAArQ,KAAA2uC,GAAA3uC,KAAAgvB,EAAAqiC,EAAAh6C,KAAAmjB,IAAAx6B,KAAAk1C,QACA5kC,EAAAtQ,KAAA0uC,GAAA1uC,KAAAgvB,EAAA3X,KAAAqjB,IAAAyhB,GAAA9kC,KAAAmjB,IAAAx6B,KAAAk1C,YAEA,CACA,IAAA0kB,EAAA5C,GAAAh3D,KAAAunB,EAAAlQ,KAAAqjB,IAAAyhB,IACA9rC,EAAArQ,KAAA2uC,GAAA3uC,KAAAgvB,EAAAhvB,KAAAwtC,GAAA6jB,EACA/gD,EAAAtQ,KAAA0uC,GAAA1uC,KAAAgvB,EAAA4qC,EAAA,GAAA55D,KAAAwtC,GAKA,OAFAU,EAAA79B,IACA69B,EAAA59B,IACA49B,GA4BArB,QAvBA,SAAAqB,GAGA,IAAAgO,EAAAC,EAaA,OAfAjO,EAAA79B,GAAArQ,KAAA2uC,GACAT,EAAA59B,GAAAtQ,KAAA0uC,GAGA1uC,KAAA45C,QACAsC,EAAAZ,EAAAt7C,KAAAitC,MAAAiB,EAAA79B,EAAArQ,KAAAgvB,EAAA3X,KAAAmjB,IAAAx6B,KAAAk1C,SACAiH,EAAA9kC,KAAAs2B,KAAAO,EAAA59B,EAAAtQ,KAAAgvB,EAAA3X,KAAAmjB,IAAAx6B,KAAAk1C,WAGAiH,EAAAie,GAAAp6D,KAAAunB,EAAA,EAAA2mB,EAAA59B,EAAAtQ,KAAAwtC,GAAAxtC,KAAAgvB,GACAktB,EAAAZ,EAAAt7C,KAAAitC,MAAAiB,EAAA79B,GAAArQ,KAAAgvB,EAAAhvB,KAAAwtC,MAGAU,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EACAjO,GAQA7tB,OALA,QCtBA,IACAi6C,IACA5zC,KAxCA,WAEA1mB,KAAA2uC,GAAA3uC,KAAA2uC,IAAA,EACA3uC,KAAA0uC,GAAA1uC,KAAA0uC,IAAA,EACA1uC,KAAA+sC,KAAA/sC,KAAA+sC,MAAA,EACA/sC,KAAAitC,MAAAjtC,KAAAitC,OAAA,EACAjtC,KAAAk1C,OAAAl1C,KAAAk1C,QAAA,EACAl1C,KAAAiqB,MAAAjqB,KAAAiqB,OAAA,wCAEAjqB,KAAA4vD,GAAAv4C,KAAAmjB,IAAAx6B,KAAAk1C,SAgCAtI,QA3BA,SAAAsB,GAEA,IAAAgO,EAAAhO,EAAA79B,EACA8rC,EAAAjO,EAAA59B,EAEA+gD,EAAA/V,EAAAY,EAAAl8C,KAAAitC,OACAstB,EAAArE,GAAA/Z,EAAAn8C,KAAA+sC,MAGA,OAFAmB,EAAA79B,EAAArQ,KAAA2uC,GAAA3uC,KAAAgvB,EAAAqiC,EAAArxD,KAAA4vD,GACA1hB,EAAA59B,EAAAtQ,KAAA0uC,GAAA1uC,KAAAgvB,EAAAurC,EACArsB,GAmBArB,QAdA,SAAAqB,GAEA,IAAA79B,EAAA69B,EAAA79B,EACAC,EAAA49B,EAAA59B,EAIA,OAFA49B,EAAA79B,EAAAirC,EAAAt7C,KAAAitC,OAAA58B,EAAArQ,KAAA2uC,KAAA3uC,KAAAgvB,EAAAhvB,KAAA4vD,KACA1hB,EAAA59B,EAAA4lD,GAAAl2D,KAAA+sC,MAAAz8B,EAAAtQ,KAAA0uC,IAAA1uC,KAAA,GACAkuC,GAQA7tB,OALA,oDC/BAm6C,GAAA,GAsHA,IACAC,IACA/zC,KAtHA,WAGA1mB,KAAA+sD,KAAA/sD,KAAA4B,EAAA5B,KAAAgvB,EACAhvB,KAAAi8C,GAAA,EAAA5kC,KAAA8iB,IAAAn6B,KAAA+sD,KAAA,GACA/sD,KAAAunB,EAAAlQ,KAAA6iB,KAAAl6B,KAAAi8C,IACAj8C,KAAA21D,GAAAE,GAAA71D,KAAAi8C,IACAj8C,KAAA2pD,GAAAmM,GAAA91D,KAAAi8C,IACAj8C,KAAAstC,GAAAyoB,GAAA/1D,KAAAi8C,IACAj8C,KAAA41D,GAAAI,GAAAh2D,KAAAi8C,IACAj8C,KAAAisD,IAAAjsD,KAAAgvB,EAAA0mC,GAAA11D,KAAA21D,GAAA31D,KAAA2pD,GAAA3pD,KAAAstC,GAAAttC,KAAA41D,GAAA51D,KAAA+sC,OA6GAH,QAxGA,SAAAsB,GACA,IAEA79B,EAAAC,EAAA+hD,EAFAnW,EAAAhO,EAAA79B,EACA8rC,EAAAjO,EAAA59B,EAEA+gD,EAAA/V,EAAAY,EAAAl8C,KAAAitC,OAEA,GADAolB,EAAAhB,EAAAh6C,KAAAqjB,IAAAyhB,GACAn8C,KAAA45C,OACAviC,KAAA63B,IAAAiN,IAAA3J,GACAniC,EAAArQ,KAAAgvB,EAAAqiC,EACA/gD,GAAA,EAAAtQ,KAAAgvB,EAAAhvB,KAAA+sC,OAGA18B,EAAArQ,KAAAgvB,EAAA3X,KAAAqjB,IAAA23B,GAAAh7C,KAAAy2B,IAAAqO,GACA7rC,EAAAtQ,KAAAgvB,GAAAknC,GAAA/Z,EAAAn8C,KAAA+sC,OAAA,EAAA11B,KAAAmjB,IAAA63B,IAAAh7C,KAAAy2B,IAAAqO,UAIA,GAAA9kC,KAAA63B,IAAAiN,IAAA3J,EACAniC,EAAArQ,KAAAgvB,EAAAqiC,EACA/gD,GAAA,EAAAtQ,KAAAisD,QAEA,CACA,IAAAqK,EAAAL,GAAAj2D,KAAAgvB,EAAAhvB,KAAAunB,EAAAlQ,KAAAqjB,IAAAyhB,IAAA9kC,KAAAy2B,IAAAqO,GACA9rC,EAAAimD,EAAAj/C,KAAAqjB,IAAA23B,GACA/hD,EAAAtQ,KAAAgvB,EAAA0mC,GAAA11D,KAAA21D,GAAA31D,KAAA2pD,GAAA3pD,KAAAstC,GAAAttC,KAAA41D,GAAAzZ,GAAAn8C,KAAAisD,IAAAqK,GAAA,EAAAj/C,KAAAmjB,IAAA63B,IAMA,OAFAnkB,EAAA79B,IAAArQ,KAAA2uC,GACAT,EAAA59B,IAAAtQ,KAAA0uC,GACAR,GA2EArB,QAtEA,SAAAqB,GACA,IAAAgO,EAAAC,EAAA9rC,EAAAC,EAAA7H,EACA4jD,EAAAyF,EACAtW,EAAAI,EAIA,GAHAvrC,EAAA69B,EAAA79B,EAAArQ,KAAA2uC,GACAr+B,EAAA49B,EAAA59B,EAAAtQ,KAAA0uC,GAEA1uC,KAAA45C,OACA,GAAAviC,KAAA63B,IAAA5+B,EAAAtQ,KAAAgvB,EAAAhvB,KAAA+sC,OAAAyF,EACA0J,EAAAZ,EAAAjrC,EAAArQ,KAAAgvB,EAAAhvB,KAAAitC,OACAkP,EAAA,MAEA,CAIA,IAAAue,EACA,IAJArO,EAAArsD,KAAA+sC,KAAAz8B,EAAAtQ,KAAAgvB,EACA8iC,EAAAzhD,IAAArQ,KAAAgvB,EAAAhvB,KAAAgvB,EAAAq9B,IACA7Q,EAAA6Q,EAEA5jD,EAAA+xD,GAAwB/xD,IAAGA,EAI3B,GADA+yC,GADAI,GAAA,GAAAyQ,GAAA7Q,GADAkf,EAAArjD,KAAAy2B,IAAA0N,IACA,GAAAA,EAAA,IAAAA,IAAAsW,GAAA4I,KAAAlf,EAAA6Q,GAAAqO,EAAA,GAEArjD,KAAA63B,IAAA0M,IAAApJ,EAAA,CACA2J,EAAAX,EACA,MAGAU,EAAAZ,EAAAt7C,KAAAitC,MAAA51B,KAAAs2B,KAAAt9B,EAAAgH,KAAAy2B,IAAA0N,GAAAx7C,KAAAgvB,GAAA3X,KAAAqjB,IAAAyhB,SAIA,GAAA9kC,KAAA63B,IAAA5+B,EAAAtQ,KAAAisD,MAAAzZ,EACA2J,EAAA,EACAD,EAAAZ,EAAAt7C,KAAAitC,MAAA58B,EAAArQ,KAAAgvB,OAEA,CAKA,IAAAwnC,EAAAmE,EAAAC,EAAAC,EACAzf,EACA,IALAiR,GAAArsD,KAAAisD,IAAA37C,GAAAtQ,KAAAgvB,EACA8iC,EAAAzhD,IAAArQ,KAAAgvB,EAAAhvB,KAAAgvB,EAAAq9B,IACA7Q,EAAA6Q,EAGA5jD,EAAA+xD,GAAwB/xD,IAAGA,EAQ3B,GAPA2yC,EAAAp7C,KAAAunB,EAAAlQ,KAAAqjB,IAAA8gB,GACAgb,EAAAn/C,KAAA6iB,KAAA,EAAAkhB,KAAA/jC,KAAAy2B,IAAA0N,GACAmf,EAAA36D,KAAAgvB,EAAA0mC,GAAA11D,KAAA21D,GAAA31D,KAAA2pD,GAAA3pD,KAAAstC,GAAAttC,KAAA41D,GAAApa,GACAof,EAAA56D,KAAA21D,GAAA,EAAA31D,KAAA2pD,GAAAtyC,KAAAmjB,IAAA,EAAAghB,GAAA,EAAAx7C,KAAAstC,GAAAj2B,KAAAmjB,IAAA,EAAAghB,GAAA,EAAAx7C,KAAA41D,GAAAv+C,KAAAmjB,IAAA,EAAAghB,GAGAA,GADAI,GAAAyQ,GAAAmK,GADAqE,EAAAF,EAAA36D,KAAAgvB,GACA,GAAA6rC,EAAA,GAAArE,GAAAqE,IAAA/I,KAAA9xD,KAAAi8C,GAAA5kC,KAAAqjB,IAAA,EAAA8gB,IAAAqf,IAAA/I,EAAA,EAAAzF,EAAAwO,IAAA,EAAArE,IAAAnK,EAAAwO,IAAArE,EAAAoE,EAAA,EAAAvjD,KAAAqjB,IAAA,EAAA8gB,IAAAof,GAEAvjD,KAAA63B,IAAA0M,IAAApJ,EAAA,CACA2J,EAAAX,EACA,MAKAgb,EAAAn/C,KAAA6iB,KAAA,EAAAl6B,KAAAi8C,GAAA5kC,KAAA8iB,IAAA9iB,KAAAqjB,IAAAyhB,GAAA,IAAA9kC,KAAAy2B,IAAAqO,GACAD,EAAAZ,EAAAt7C,KAAAitC,MAAA51B,KAAAs2B,KAAAt9B,EAAAmmD,EAAAx2D,KAAAgvB,GAAA3X,KAAAqjB,IAAAyhB,IAMA,OAFAjO,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EACAjO,GAQA7tB,OALA,qBC2FA,IACAy6C,IACAp0C,KA3MA,WACA1mB,KAAA6mD,KACA7mD,KAAA6mD,EAAA,eACA7mD,KAAA6mD,EAAA,gBACA7mD,KAAA6mD,EAAA,cACA7mD,KAAA6mD,EAAA,cACA7mD,KAAA6mD,EAAA,YACA7mD,KAAA6mD,EAAA,aACA7mD,KAAA6mD,EAAA,YACA7mD,KAAA6mD,EAAA,YACA7mD,KAAA6mD,EAAA,SACA7mD,KAAA6mD,EAAA,WAEA7mD,KAAA+6D,QACA/6D,KAAAg7D,QACAh7D,KAAA+6D,KAAA,eACA/6D,KAAAg7D,KAAA,KACAh7D,KAAA+6D,KAAA,cACA/6D,KAAAg7D,KAAA,cACAh7D,KAAA+6D,KAAA,eACA/6D,KAAAg7D,KAAA,aACAh7D,KAAA+6D,KAAA,cACA/6D,KAAAg7D,KAAA,aACAh7D,KAAA+6D,KAAA,cACA/6D,KAAAg7D,KAAA,cACAh7D,KAAA+6D,KAAA,aACA/6D,KAAAg7D,KAAA,cAEAh7D,KAAAi7D,QACAj7D,KAAAk7D,QACAl7D,KAAAi7D,KAAA,gBACAj7D,KAAAk7D,KAAA,KACAl7D,KAAAi7D,KAAA,eACAj7D,KAAAk7D,KAAA,eACAl7D,KAAAi7D,KAAA,cACAj7D,KAAAk7D,KAAA,eACAl7D,KAAAi7D,KAAA,cACAj7D,KAAAk7D,KAAA,aACAl7D,KAAAi7D,KAAA,cACAj7D,KAAAk7D,KAAA,cACAl7D,KAAAi7D,KAAA,aACAj7D,KAAAk7D,KAAA,aAEAl7D,KAAAupD,KACAvpD,KAAAupD,EAAA,gBACAvpD,KAAAupD,EAAA,eACAvpD,KAAAupD,EAAA,cACAvpD,KAAAupD,EAAA,aACAvpD,KAAAupD,EAAA,aACAvpD,KAAAupD,EAAA,WACAvpD,KAAAupD,EAAA,SACAvpD,KAAAupD,EAAA,UACAvpD,KAAAupD,EAAA,WAwJA3c,QAjJA,SAAAsB,GACA,IAAA3kC,EACA2yC,EAAAhO,EAAA79B,EAGA8qD,EAFAjtB,EAAA59B,EAEAtQ,KAAA+sC,KACAmf,EAAAhQ,EAAAl8C,KAAAitC,MAIAmuB,EAAAD,EAAAhpB,EAAA,KACAkpB,EAAAnP,EACAoP,EAAA,EAEAC,EAAA,EACA,IAAAhyD,EAAA,EAAaA,GAAA,GAASA,IACtB+xD,GAAAF,EACAG,GAAAv7D,KAAA6mD,EAAAt9C,GAAA+xD,EAIA,IAOAE,EAPAC,EAAAF,EACAG,EAAAL,EAGAM,EAAA,EACAC,EAAA,EAIAC,EAAA,EACAC,EAAA,EACA,IAAAvyD,EAAA,EAAaA,GAAA,EAAQA,IAErBiyD,EAAAI,EAAAH,EAAAE,EAAAD,EACAC,EAFAA,EAAAF,EAAAG,EAAAF,EAGAE,EAAAJ,EACAK,IAAA77D,KAAA+6D,KAAAxxD,GAAAoyD,EAAA37D,KAAAg7D,KAAAzxD,GAAAqyD,EACAE,IAAA97D,KAAAg7D,KAAAzxD,GAAAoyD,EAAA37D,KAAA+6D,KAAAxxD,GAAAqyD,EAOA,OAHA1tB,EAAA79B,EAAAyrD,EAAA97D,KAAAgvB,EAAAhvB,KAAA2uC,GACAT,EAAA59B,EAAAurD,EAAA77D,KAAAgvB,EAAAhvB,KAAA0uC,GAEAR,GAqGArB,QA/FA,SAAAqB,GACA,IAAA3kC,EAeAwyD,EAdA1rD,EAAA69B,EAAA79B,EACAC,EAAA49B,EAAA59B,EAEA0rD,EAAA3rD,EAAArQ,KAAA2uC,GAIAktB,GAHAvrD,EAAAtQ,KAAA0uC,IAGA1uC,KAAAgvB,EACA8sC,EAAAE,EAAAh8D,KAAAgvB,EAGAitC,EAAA,EACAC,EAAA,EAIAT,EAAA,EACAC,EAAA,EACA,IAAAnyD,EAAA,EAAaA,GAAA,EAAQA,IAErBwyD,EAAAG,EAAAL,EAAAI,EAAAH,EACAG,EAFAA,EAAAJ,EAAAK,EAAAJ,EAGAI,EAAAH,EACAN,IAAAz7D,KAAAi7D,KAAA1xD,GAAA0yD,EAAAj8D,KAAAk7D,KAAA3xD,GAAA2yD,EACAR,IAAA17D,KAAAk7D,KAAA3xD,GAAA0yD,EAAAj8D,KAAAi7D,KAAA1xD,GAAA2yD,EAOA,QAAAzzD,EAAA,EAAiBA,EAAAzI,KAAAm8D,WAAqB1zD,IAAA,CACtC,IAGA+yD,EAHAG,EAAAF,EACAG,EAAAF,EAIAU,EAAAP,EACAQ,EAAAP,EACA,IAAAvyD,EAAA,EAAeA,GAAA,EAAQA,IAEvBiyD,EAAAI,EAAAH,EAAAE,EAAAD,EACAC,EAFAA,EAAAF,EAAAG,EAAAF,EAGAE,EAAAJ,EACAY,IAAA7yD,EAAA,IAAAvJ,KAAA+6D,KAAAxxD,GAAAoyD,EAAA37D,KAAAg7D,KAAAzxD,GAAAqyD,GACAS,IAAA9yD,EAAA,IAAAvJ,KAAAg7D,KAAAzxD,GAAAoyD,EAAA37D,KAAA+6D,KAAAxxD,GAAAqyD,GAGAD,EAAA,EACAC,EAAA,EACA,IAAAU,EAAAt8D,KAAA+6D,KAAA,GACAwB,EAAAv8D,KAAAg7D,KAAA,GACA,IAAAzxD,EAAA,EAAeA,GAAA,EAAQA,IAEvBiyD,EAAAI,EAAAH,EAAAE,EAAAD,EACAC,EAFAA,EAAAF,EAAAG,EAAAF,EAGAE,EAAAJ,EACAc,GAAA/yD,GAAAvJ,KAAA+6D,KAAAxxD,GAAAoyD,EAAA37D,KAAAg7D,KAAAzxD,GAAAqyD,GACAW,GAAAhzD,GAAAvJ,KAAAg7D,KAAAzxD,GAAAoyD,EAAA37D,KAAA+6D,KAAAxxD,GAAAqyD,GAIA,IAAAY,EAAAF,IAAAC,IACAd,GAAAW,EAAAE,EAAAD,EAAAE,GAAAC,EACAd,GAAAW,EAAAC,EAAAF,EAAAG,GAAAC,EAIA,IAAAjB,EAAAE,EACAJ,EAAAK,EACAe,EAAA,EAEArB,EAAA,EACA,IAAA7xD,EAAA,EAAaA,GAAA,EAAQA,IACrBkzD,GAAAlB,EACAH,GAAAp7D,KAAAupD,EAAAhgD,GAAAkzD,EAKA,IAAAtgB,EAAAn8C,KAAA+sC,KAAAquB,EAAAjpB,EAAA,IACA+J,EAAAl8C,KAAAitC,MAAAouB,EAKA,OAHAntB,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EAEAjO,GAQA7tB,OALA,gCC9KA,IACAq8C,IACAh2C,KApCA,aAqCAkmB,QA/BA,SAAAsB,GACA,IAAAgO,EAAAhO,EAAA79B,EACA8rC,EAAAjO,EAAA59B,EAGA+gD,EAAA/V,EAAAY,EAAAl8C,KAAAitC,OACA58B,EAAArQ,KAAA2uC,GAAA3uC,KAAAgvB,EAAAqiC,EACA/gD,EAAAtQ,KAAA0uC,GAAA1uC,KAAAgvB,EAAA3X,KAAAw2B,IAAAx2B,KAAAy2B,IAAAz2B,KAAA8f,GAAA,EAAAglB,EAAA,WAIA,OAFAjO,EAAA79B,IACA69B,EAAA59B,IACA49B,GAqBArB,QAhBA,SAAAqB,GACAA,EAAA79B,GAAArQ,KAAA2uC,GACAT,EAAA59B,GAAAtQ,KAAA0uC,GAEA,IAAAwN,EAAAZ,EAAAt7C,KAAAitC,MAAAiB,EAAA79B,EAAArQ,KAAAgvB,GACAmtB,EAAA,KAAA9kC,KAAAgjB,KAAAhjB,KAAAi3B,IAAA,GAAAJ,EAAA59B,EAAAtQ,KAAAgvB,IAAA3X,KAAA8f,GAAA,GAIA,OAFA+W,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EACAjO,GAQA7tB,OALA,8BC1CAs8C,GAAA,GAyGA,IACAC,IACAl2C,KAnGA,WAKA1mB,KAAA45C,QAIA55C,KAAAuJ,EAAA,EACAvJ,KAAAokC,EAAA,EACApkC,KAAAi8C,GAAA,EACAj8C,KAAA68D,IAAAxlD,KAAA6iB,MAAAl6B,KAAAokC,EAAA,GAAApkC,KAAAuJ,GACAvJ,KAAA88D,IAAA98D,KAAA68D,KAAA78D,KAAAokC,EAAA,IAPApkC,KAAA0rD,GAAAD,GAAAzrD,KAAAi8C,KA8FArP,QAhFA,SAAAsB,GACA,IAAA79B,EAAAC,EACA4rC,EAAAhO,EAAA79B,EACA8rC,EAAAjO,EAAA59B,EAKA,GAFA4rC,EAAAZ,EAAAY,EAAAl8C,KAAAitC,OAEAjtC,KAAA45C,OAAA,CACA,GAAA55C,KAAAokC,EAKA,IADA,IAAAyR,EAAA71C,KAAAuJ,EAAA8N,KAAAqjB,IAAAyhB,GACA1zC,EAAAk0D,GAA4Bl0D,IAAGA,EAAA,CAC/B,IAAAs0D,GAAA/8D,KAAAokC,EAAA+X,EAAA9kC,KAAAqjB,IAAAyhB,GAAAtG,IAAA71C,KAAAokC,EAAA/sB,KAAAmjB,IAAA2hB,IAEA,GADAA,GAAA4gB,EACA1lD,KAAA63B,IAAA6tB,GAAAvqB,EACA,WARA2J,EAAA,IAAAn8C,KAAAuJ,EAAA8N,KAAAs2B,KAAA3tC,KAAAuJ,EAAA8N,KAAAqjB,IAAAyhB,MAYA9rC,EAAArQ,KAAAgvB,EAAAhvB,KAAA88D,IAAA5gB,GAAAl8C,KAAAokC,EAAA/sB,KAAAmjB,IAAA2hB,IACA7rC,EAAAtQ,KAAAgvB,EAAAhvB,KAAA68D,IAAA1gB,MAGA,CAEA,IAAA9M,EAAAh4B,KAAAqjB,IAAAyhB,GACAoQ,EAAAl1C,KAAAmjB,IAAA2hB,GACA7rC,EAAAtQ,KAAAgvB,EAAA28B,GAAAxP,EAAA9M,EAAAkd,EAAAvsD,KAAA0rD,IACAr7C,EAAArQ,KAAAgvB,EAAAktB,EAAAqQ,EAAAl1C,KAAA6iB,KAAA,EAAAl6B,KAAAi8C,GAAA5M,KAKA,OAFAnB,EAAA79B,IACA69B,EAAA59B,IACA49B,GA6CArB,QA1CA,SAAAqB,GACA,IAAAiO,EAAA4Q,EAAA7Q,EAAA7M,EAkCA,OAhCAnB,EAAA79B,GAAArQ,KAAA2uC,GACAuN,EAAAhO,EAAA79B,EAAArQ,KAAAgvB,EACAkf,EAAA59B,GAAAtQ,KAAA0uC,GACAyN,EAAAjO,EAAA59B,EAAAtQ,KAAAgvB,EAEAhvB,KAAA45C,QACAuC,GAAAn8C,KAAA68D,IACA3gB,GAAAl8C,KAAA88D,KAAA98D,KAAAokC,EAAA/sB,KAAAmjB,IAAA2hB,IACAn8C,KAAAokC,EACA+X,EAAAgd,IAAAn5D,KAAAokC,EAAA+X,EAAA9kC,KAAAqjB,IAAAyhB,IAAAn8C,KAAAuJ,GAEA,IAAAvJ,KAAAuJ,IACA4yC,EAAAgd,GAAA9hD,KAAAqjB,IAAAyhB,GAAAn8C,KAAAuJ,IAEA2yC,EAAAZ,EAAAY,EAAAl8C,KAAAitC,OACAkP,EAAA+Z,GAAA/Z,KAGAA,EAAA2P,GAAA5d,EAAA59B,EAAAtQ,KAAAgvB,EAAAhvB,KAAAi8C,GAAAj8C,KAAA0rD,KACArc,EAAAh4B,KAAA63B,IAAAiN,IACA/J,GACA/C,EAAAh4B,KAAAqjB,IAAAyhB,GACA4Q,EAAA/sD,KAAAitC,MAAAiB,EAAA79B,EAAAgH,KAAA6iB,KAAA,EAAAl6B,KAAAi8C,GAAA5M,MAAArvC,KAAAgvB,EAAA3X,KAAAmjB,IAAA2hB,IAEAD,EAAAZ,EAAAyR,IAEA1d,EAAAmD,EAAAJ,IACA8J,EAAAl8C,KAAAitC,QAGAiB,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EACAjO,GAQA7tB,OALA,sBChCA,IACA28C,IACAt2C,KA7EA,aA8EAkmB,QA1EA,SAAAsB,GAaA,IATA,IAAAgO,EAAAhO,EAAA79B,EACA8rC,EAAAjO,EAAA59B,EAEA47C,EAAA5Q,EAAAY,EAAAl8C,KAAAitC,OACAqnB,EAAAnY,EACAf,EAAA/jC,KAAA8f,GAAA9f,KAAAqjB,IAAAyhB,KAIA,CACA,IAAA8gB,IAAA3I,EAAAj9C,KAAAqjB,IAAA45B,GAAAlZ,IAAA,EAAA/jC,KAAAmjB,IAAA85B,IAEA,GADAA,GAAA2I,EACA5lD,KAAA63B,IAAA+tB,GAAAzqB,EACA,MAGA8hB,GAAA,EAKAj9C,KAAA8f,GAAA,EAAA9f,KAAA63B,IAAAiN,GAAA3J,IACA0Z,EAAA,GAEA,IAAA77C,EAAA,cAAArQ,KAAAgvB,EAAAk9B,EAAA70C,KAAAmjB,IAAA85B,GAAAt0D,KAAA2uC,GACAr+B,EAAA,gBAAAtQ,KAAAgvB,EAAA3X,KAAAqjB,IAAA45B,GAAAt0D,KAAA0uC,GAIA,OAFAR,EAAA79B,IACA69B,EAAA59B,IACA49B,GA0CArB,QAvCA,SAAAqB,GACA,IAAAomB,EACAvI,EAIA7d,EAAA79B,GAAArQ,KAAA2uC,GACAT,EAAA59B,GAAAtQ,KAAA0uC,GACAqd,EAAA7d,EAAA59B,GAAA,gBAAAtQ,KAAAgvB,GAKA3X,KAAA63B,IAAA6c,GAAA,gBACAA,EAAA,eAEAuI,EAAAj9C,KAAAs2B,KAAAoe,GACA,IAAA7P,EAAAZ,EAAAt7C,KAAAitC,MAAAiB,EAAA79B,GAAA,cAAArQ,KAAAgvB,EAAA3X,KAAAmjB,IAAA85B,KACApY,GAAA7kC,KAAA8f,KACA+kB,GAAA7kC,KAAA8f,IAEA+kB,EAAA7kC,KAAA8f,KACA+kB,EAAA7kC,KAAA8f,IAEA40B,GAAA,EAAAuI,EAAAj9C,KAAAqjB,IAAA,EAAA45B,IAAAj9C,KAAA8f,GACA9f,KAAA63B,IAAA6c,GAAA,IACAA,EAAA,GAEA,IAAA5P,EAAA9kC,KAAAs2B,KAAAoe,GAIA,OAFA7d,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EACAjO,GAQA7tB,OALA,qBCkCA,IACA68C,IACAx2C,KArGA,WAKArP,KAAA63B,IAAAlvC,KAAA+0C,KAAA/0C,KAAAi1C,MAAAzC,IAGAxyC,KAAAi1C,KAAAj1C,KAAAi1C,MAAAj1C,KAAA+0C,KACA/0C,KAAA+sD,KAAA/sD,KAAA4B,EAAA5B,KAAAgvB,EACAhvB,KAAAi8C,GAAA,EAAA5kC,KAAA8iB,IAAAn6B,KAAA+sD,KAAA,GACA/sD,KAAAunB,EAAAlQ,KAAA6iB,KAAAl6B,KAAAi8C,IACAj8C,KAAA21D,GAAAE,GAAA71D,KAAAi8C,IACAj8C,KAAA2pD,GAAAmM,GAAA91D,KAAAi8C,IACAj8C,KAAAstC,GAAAyoB,GAAA/1D,KAAAi8C,IACAj8C,KAAA41D,GAAAI,GAAAh2D,KAAAi8C,IAEAj8C,KAAAk7C,OAAA7jC,KAAAqjB,IAAA16B,KAAA+0C,MACA/0C,KAAAm7C,OAAA9jC,KAAAmjB,IAAAx6B,KAAA+0C,MAEA/0C,KAAA2wD,IAAA3V,EAAAh7C,KAAAunB,EAAAvnB,KAAAk7C,OAAAl7C,KAAAm7C,QACAn7C,KAAA02D,IAAAhB,GAAA11D,KAAA21D,GAAA31D,KAAA2pD,GAAA3pD,KAAAstC,GAAAttC,KAAA41D,GAAA51D,KAAA+0C,MAEA19B,KAAA63B,IAAAlvC,KAAA+0C,KAAA/0C,KAAAi1C,MAAAzC,EACAxyC,KAAAm0D,GAAAn0D,KAAAk7C,QAGAl7C,KAAAk7C,OAAA7jC,KAAAqjB,IAAA16B,KAAAi1C,MACAj1C,KAAAm7C,OAAA9jC,KAAAmjB,IAAAx6B,KAAAi1C,MACAj1C,KAAAg0D,IAAAhZ,EAAAh7C,KAAAunB,EAAAvnB,KAAAk7C,OAAAl7C,KAAAm7C,QACAn7C,KAAAm9D,IAAAzH,GAAA11D,KAAA21D,GAAA31D,KAAA2pD,GAAA3pD,KAAAstC,GAAAttC,KAAA41D,GAAA51D,KAAAi1C,MACAj1C,KAAAm0D,IAAAn0D,KAAA2wD,IAAA3wD,KAAAg0D,MAAAh0D,KAAAm9D,IAAAn9D,KAAA02D,MAEA12D,KAAA2B,EAAA3B,KAAA02D,IAAA12D,KAAA2wD,IAAA3wD,KAAAm0D,GACAn0D,KAAAisD,IAAAyJ,GAAA11D,KAAA21D,GAAA31D,KAAA2pD,GAAA3pD,KAAAstC,GAAAttC,KAAA41D,GAAA51D,KAAA+sC,MACA/sC,KAAAkxD,GAAAlxD,KAAAgvB,GAAAhvB,KAAA2B,EAAA3B,KAAAisD,OAmEArf,QA9DA,SAAAsB,GACA,IAEAmmB,EAFAnY,EAAAhO,EAAA79B,EACA8rC,EAAAjO,EAAA59B,EAKA,GAAAtQ,KAAA45C,OACAya,EAAAr0D,KAAAgvB,GAAAhvB,KAAA2B,EAAAw6C,OAEA,CACA,IAAAuQ,EAAAgJ,GAAA11D,KAAA21D,GAAA31D,KAAA2pD,GAAA3pD,KAAAstC,GAAAttC,KAAA41D,GAAAzZ,GACAkY,EAAAr0D,KAAAgvB,GAAAhvB,KAAA2B,EAAA+qD,GAEA,IAAA4H,EAAAt0D,KAAAm0D,GAAA7Y,EAAAY,EAAAl8C,KAAAitC,OACA58B,EAAArQ,KAAA2uC,GAAA0lB,EAAAh9C,KAAAqjB,IAAA45B,GACAhkD,EAAAtQ,KAAA0uC,GAAA1uC,KAAAkxD,GAAAmD,EAAAh9C,KAAAmjB,IAAA85B,GAGA,OAFApmB,EAAA79B,IACA69B,EAAA59B,IACA49B,GA4CArB,QAvCA,SAAAqB,GAGA,IAAAkN,EAAAiZ,EAAAlY,EAAAD,EAFAhO,EAAA79B,GAAArQ,KAAA2uC,GACAT,EAAA59B,EAAAtQ,KAAAkxD,GAAAhjB,EAAA59B,EAAAtQ,KAAA0uC,GAEA1uC,KAAAm0D,IAAA,GACAE,EAAAh9C,KAAA6iB,KAAAgU,EAAA79B,EAAA69B,EAAA79B,EAAA69B,EAAA59B,EAAA49B,EAAA59B,GACA8qC,EAAA,IAGAiZ,GAAAh9C,KAAA6iB,KAAAgU,EAAA79B,EAAA69B,EAAA79B,EAAA69B,EAAA59B,EAAA49B,EAAA59B,GACA8qC,GAAA,GAEA,IAAAkZ,EAAA,EAKA,GAJA,IAAAD,IACAC,EAAAj9C,KAAAusC,MAAAxI,EAAAlN,EAAA79B,EAAA+qC,EAAAlN,EAAA59B,IAGAtQ,KAAA45C,OAKA,OAJAsC,EAAAZ,EAAAt7C,KAAAitC,MAAAqnB,EAAAt0D,KAAAm0D,IACAhY,EAAA+Z,GAAAl2D,KAAA2B,EAAA0yD,EAAAr0D,KAAAgvB,GACAkf,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EACAjO,EAGA,IAAAwe,EAAA1sD,KAAA2B,EAAA0yD,EAAAr0D,KAAAgvB,EAKA,OAJAmtB,EAAAga,GAAAzJ,EAAA1sD,KAAA21D,GAAA31D,KAAA2pD,GAAA3pD,KAAAstC,GAAAttC,KAAA41D,IACA1Z,EAAAZ,EAAAt7C,KAAAitC,MAAAqnB,EAAAt0D,KAAAm0D,IACAjmB,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EACAjO,GAUA7tB,OALA,6BCYA,IACA+8C,IACA12C,KApHA,WAEA1mB,KAAAutC,EAAAvtC,KAAAgvB,GAmHA4d,QAhHA,SAAAsB,GAEA,IAMA79B,EAAAC,EANA4rC,EAAAhO,EAAA79B,EACA8rC,EAAAjO,EAAA59B,EAIA+gD,EAAA/V,EAAAY,EAAAl8C,KAAAitC,OAGA51B,KAAA63B,IAAAiN,IAAA3J,IACAniC,EAAArQ,KAAA2uC,GAAA3uC,KAAAutC,EAAA8jB,EACA/gD,EAAAtQ,KAAA0uC,IAEA,IAAA4lB,EAAA6E,GAAA,EAAA9hD,KAAA63B,IAAAiN,EAAA9kC,KAAA8f,MACA9f,KAAA63B,IAAAmiB,IAAA7e,GAAAn7B,KAAA63B,IAAA73B,KAAA63B,IAAAiN,GAAA/J,IAAAI,KACAniC,EAAArQ,KAAA2uC,GAEAr+B,EADA6rC,GAAA,EACAn8C,KAAA0uC,GAAAr3B,KAAA8f,GAAAn3B,KAAAutC,EAAAl2B,KAAAy2B,IAAA,GAAAwmB,GAGAt0D,KAAA0uC,GAAAr3B,KAAA8f,GAAAn3B,KAAAutC,GAAAl2B,KAAAy2B,IAAA,GAAAwmB,IAIA,IAAAjI,EAAA,GAAAh1C,KAAA63B,IAAA73B,KAAA8f,GAAAk6B,IAAAh6C,KAAA8f,IACAo/B,EAAAlK,IACAgR,EAAAhmD,KAAAqjB,IAAA45B,GACAgJ,EAAAjmD,KAAAmjB,IAAA85B,GAEA3yD,EAAA27D,GAAAD,EAAAC,EAAA,GACAC,EAAA57D,IACAyiC,EAAAziC,GAAA,EAAA07D,EAAA,GACAG,EAAAp5B,IACAgX,EAAA/jC,KAAA8f,GAAAn3B,KAAAutC,GAAA8e,GAAA1qD,EAAA67D,GAAAnmD,KAAA6iB,KAAAq8B,GAAA50D,EAAA67D,IAAA77D,EAAA67D,MAAAjH,IAAAgH,EAAAC,QAAAjH,GACAlF,EAAA,IACAjW,MAEA/qC,EAAArQ,KAAA2uC,GAAAyM,EAEA,IAAAqd,EAAAlC,EAAA50D,EAYA,OAXAy5C,EAAA/jC,KAAA8f,GAAAn3B,KAAAutC,GAAAnJ,EAAAq0B,EAAApM,EAAAh1C,KAAA6iB,MAAAsjC,EAAAjH,MAAA,GAAAkC,OAAA+E,EAAAjH,GAGAjmD,EAFA6rC,GAAA,EAEAn8C,KAAA0uC,GAAA0M,EAIAp7C,KAAA0uC,GAAA0M,EAEAlN,EAAA79B,IACA69B,EAAA59B,IACA49B,GA6DArB,QAxDA,SAAAqB,GACA,IAAAgO,EAAAC,EACAshB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EACAC,EACA5iB,EACA6iB,EA2CA,OAtCA/vB,EAAA79B,GAAArQ,KAAA2uC,GACAT,EAAA59B,GAAAtQ,KAAA0uC,GACA0M,EAAA/jC,KAAA8f,GAAAn3B,KAAAutC,EAGAowB,GAFAF,EAAAvvB,EAAA79B,EAAA+qC,GAEAqiB,GADAC,EAAAxvB,EAAA59B,EAAA8qC,GACAsiB,EAOAtiB,EAAA,GAHAsiB,KADAI,GAAA,GAFAF,GAAAvmD,KAAA63B,IAAAwuB,IAAA,EAAAC,IAEA,IAAAD,IAAAC,MACA,GAFAE,EAAAD,EAAA,EAAAF,IAAAD,KAEAI,IAAAC,MAAA,EAAAF,EAAAC,EAAAC,KAAA,KACAC,GAAAH,EAAAC,IAAA,EAAAC,OACAE,EAAA,EAAA3mD,KAAA6iB,MAAA6jC,EAAA,IAEA1mD,KAAA63B,IAAAkM,GAAA,IAEAA,EADAA,GAAA,EACA,GAGA,GAGA6iB,EAAA5mD,KAAAs1C,KAAAvR,GAAA,EAEAe,EADAjO,EAAA59B,GAAA,IACA0tD,EAAA3mD,KAAAmjB,IAAAyjC,EAAA5mD,KAAA8f,GAAA,GAAA0mC,EAAA,EAAAC,GAAAzmD,KAAA8f,MAGA6mC,EAAA3mD,KAAAmjB,IAAAyjC,EAAA5mD,KAAA8f,GAAA,GAAA0mC,EAAA,EAAAC,GAAAzmD,KAAA8f,GAIA+kB,EADA7kC,KAAA63B,IAAAuuB,GAAAjrB,EACAxyC,KAAAitC,MAGAqO,EAAAt7C,KAAAitC,MAAA51B,KAAA8f,IAAAwmC,EAAA,EAAAtmD,KAAA6iB,KAAA,KAAAujC,IAAAC,KAAAC,MAAA,EAAAF,GAGAvvB,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EACAjO,GAQA7tB,OALA,8CC8EA,IACA69C,IACAx3C,KA5LA,WACA1mB,KAAAm+D,QAAA9mD,KAAAqjB,IAAA16B,KAAA+sC,MACA/sC,KAAAo+D,QAAA/mD,KAAAmjB,IAAAx6B,KAAA+sC,OA2LAH,QAxLA,SAAAsB,GACA,IAKAynB,EAAAhM,EAAArc,EAAAsoB,EAAAyI,EAAAC,EAAA5D,EAAA6D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvS,EAAAwS,EAAAC,EAAA3vB,EAAA4vB,EAAAC,EAAAC,EALAjjB,EAAAhO,EAAA79B,EACA8rC,EAAAjO,EAAA59B,EACA4qC,EAAA7jC,KAAAqjB,IAAAwT,EAAA59B,GACA6qC,EAAA9jC,KAAAmjB,IAAA0T,EAAA59B,GACA+gD,EAAA/V,EAAAY,EAAAl8C,KAAAitC,OAEA,OAAAjtC,KAAA45C,OACAviC,KAAA63B,IAAAlvC,KAAAm+D,QAAA,IAAA3rB,GAEAtE,EAAA79B,EAAArQ,KAAA2uC,GAAA3uC,KAAAgvB,GAAAojB,EAAA+J,GAAA9kC,KAAAqjB,IAAA22B,GACAnjB,EAAA59B,EAAAtQ,KAAA0uC,GAAA1uC,KAAAgvB,GAAAojB,EAAA+J,GAAA9kC,KAAAmjB,IAAA62B,GACAnjB,GAEA72B,KAAA63B,IAAAlvC,KAAAm+D,QAAA,IAAA3rB,GAEAtE,EAAA79B,EAAArQ,KAAA2uC,GAAA3uC,KAAAgvB,GAAAojB,EAAA+J,GAAA9kC,KAAAqjB,IAAA22B,GACAnjB,EAAA59B,EAAAtQ,KAAA0uC,GAAA1uC,KAAAgvB,GAAAojB,EAAA+J,GAAA9kC,KAAAmjB,IAAA62B,GACAnjB,IAIA8wB,EAAAh/D,KAAAm+D,QAAAjjB,EAAAl7C,KAAAo+D,QAAAjjB,EAAA9jC,KAAAmjB,IAAA62B,GAEA0N,GADAxS,EAAAl1C,KAAAs1C,KAAAqS,IACA3nD,KAAAqjB,IAAA6xB,GACAre,EAAA79B,EAAArQ,KAAA2uC,GAAA3uC,KAAAgvB,EAAA+vC,EAAA5jB,EAAA9jC,KAAAqjB,IAAA22B,GACAnjB,EAAA59B,EAAAtQ,KAAA0uC,GAAA1uC,KAAAgvB,EAAA+vC,GAAA/+D,KAAAo+D,QAAAljB,EAAAl7C,KAAAm+D,QAAAhjB,EAAA9jC,KAAAmjB,IAAA62B,IACAnjB,IAIAynB,EAAAE,GAAA71D,KAAAi8C,IACA0N,EAAAmM,GAAA91D,KAAAi8C,IACA3O,EAAAyoB,GAAA/1D,KAAAi8C,IACA2Z,EAAAI,GAAAh2D,KAAAi8C,IACA5kC,KAAA63B,IAAAlvC,KAAAm+D,QAAA,IAAA3rB,GAEA6rB,EAAAr+D,KAAAgvB,EAAA0mC,GAAAC,EAAAhM,EAAArc,EAAAsoB,EAAAxjB,GACAksB,EAAAt+D,KAAAgvB,EAAA0mC,GAAAC,EAAAhM,EAAArc,EAAAsoB,EAAAzZ,GACAjO,EAAA79B,EAAArQ,KAAA2uC,IAAA0vB,EAAAC,GAAAjnD,KAAAqjB,IAAA22B,GACAnjB,EAAA59B,EAAAtQ,KAAA0uC,IAAA2vB,EAAAC,GAAAjnD,KAAAmjB,IAAA62B,GACAnjB,GAEA72B,KAAA63B,IAAAlvC,KAAAm+D,QAAA,IAAA3rB,GAEA6rB,EAAAr+D,KAAAgvB,EAAA0mC,GAAAC,EAAAhM,EAAArc,EAAAsoB,EAAAxjB,GACAksB,EAAAt+D,KAAAgvB,EAAA0mC,GAAAC,EAAAhM,EAAArc,EAAAsoB,EAAAzZ,GACAjO,EAAA79B,EAAArQ,KAAA2uC,IAAA0vB,EAAAC,GAAAjnD,KAAAqjB,IAAA22B,GACAnjB,EAAA59B,EAAAtQ,KAAA0uC,IAAA2vB,EAAAC,GAAAjnD,KAAAmjB,IAAA62B,GACAnjB,IAIAwsB,EAAAxf,EAAAC,EACAojB,EAAAtI,GAAAj2D,KAAAgvB,EAAAhvB,KAAAunB,EAAAvnB,KAAAm+D,SACAK,EAAAvI,GAAAj2D,KAAAgvB,EAAAhvB,KAAAunB,EAAA2zB,GACAujB,EAAApnD,KAAAgjB,MAAA,EAAAr6B,KAAAi8C,IAAAye,EAAA16D,KAAAi8C,GAAAsiB,EAAAv+D,KAAAm+D,SAAAK,EAAArjB,IAGA9L,EADA,KADAqvB,EAAArnD,KAAAusC,MAAAvsC,KAAAqjB,IAAA22B,GAAArxD,KAAAo+D,QAAA/mD,KAAAy2B,IAAA2wB,GAAAz+D,KAAAm+D,QAAA9mD,KAAAmjB,IAAA62B,KAEAh6C,KAAAs2B,KAAA3tC,KAAAo+D,QAAA/mD,KAAAqjB,IAAA+jC,GAAAz+D,KAAAm+D,QAAA9mD,KAAAmjB,IAAAikC,IAEApnD,KAAA63B,IAAA73B,KAAA63B,IAAAwvB,GAAArnD,KAAA8f,KAAAqb,GACAn7B,KAAAs2B,KAAA3tC,KAAAo+D,QAAA/mD,KAAAqjB,IAAA+jC,GAAAz+D,KAAAm+D,QAAA9mD,KAAAmjB,IAAAikC,IAGApnD,KAAAs2B,KAAAt2B,KAAAqjB,IAAA22B,GAAAh6C,KAAAmjB,IAAAikC,GAAApnD,KAAAqjB,IAAAgkC,IAEAC,EAAA3+D,KAAAunB,EAAAvnB,KAAAm+D,QAAA9mD,KAAA6iB,KAAA,EAAAl6B,KAAAi8C,IAQAsQ,EAAAgS,EAAAlvB,GAAA,GAJA4vB,EAAA5vB,MADAyvB,GAFAF,EAAA5+D,KAAAunB,EAAAvnB,KAAAo+D,QAAA/mD,KAAAmjB,IAAAkkC,GAAArnD,KAAA6iB,KAAA,EAAAl6B,KAAAi8C,KAEA2iB,IAKA,EAAAE,GAAA,GAHAI,EAAAD,EAAA5vB,GAGA,GANAwvB,EAAAF,EAAAC,IAMA,IAAAE,IAFAK,EAAAD,EAAA7vB,GAEA,KAAAyvB,GAAA,IAAAA,GAAA,EAAAH,KAAA,IAAAG,IADAK,EAAA9vB,EACA,GAAAwvB,GACA3wB,EAAA79B,EAAArQ,KAAA2uC,GAAA4d,EAAAl1C,KAAAqjB,IAAAgkC,GACAxwB,EAAA59B,EAAAtQ,KAAA0uC,GAAA6d,EAAAl1C,KAAAmjB,IAAAkkC,GACAxwB,KA2GArB,QApGA,SAAAqB,GAGA,IAAAgjB,EAAAnP,EAAAmX,EAAAD,EAAA/c,EAAAC,EAAAf,EAAAua,EAAAhM,EAAArc,EAAAsoB,EAAAyI,EAAAlV,EAAAsV,EAAAC,EAAAU,EAAAz7C,EAAAkjC,EAAAyG,EAAA/D,EAAA8V,EAAAC,EACA,GAHApxB,EAAA79B,GAAArQ,KAAA2uC,GACAT,EAAA59B,GAAAtQ,KAAA0uC,GAEA1uC,KAAA45C,OAAA,CAEA,IADAsX,EAAA75C,KAAA6iB,KAAAgU,EAAA79B,EAAA69B,EAAA79B,EAAA69B,EAAA59B,EAAA49B,EAAA59B,IACA,EAAA8hC,EAAApyC,KAAAgvB,EACA,OAoCA,OAlCA+yB,EAAAmP,EAAAlxD,KAAAgvB,EAEAkqC,EAAA7hD,KAAAqjB,IAAAqnB,GACAkX,EAAA5hD,KAAAmjB,IAAAunB,GAEA7F,EAAAl8C,KAAAitC,MACA51B,KAAA63B,IAAAgiB,IAAA1e,EACA2J,EAAAn8C,KAAA+sC,MAGAoP,EAAAgd,GAAAF,EAAAj5D,KAAAm+D,QAAAjwB,EAAA59B,EAAA4oD,EAAAl5D,KAAAo+D,QAAAlN,GACA9V,EAAA/jC,KAAA63B,IAAAlvC,KAAA+sC,MAAAqF,EAGA8J,EAFA7kC,KAAA63B,IAAAkM,IAAA5I,EACAxyC,KAAA+sC,MAAA,EACAuO,EAAAt7C,KAAAitC,MAAA51B,KAAAusC,MAAA1V,EAAA79B,GAAA69B,EAAA59B,IAGAgrC,EAAAt7C,KAAAitC,MAAA51B,KAAAusC,OAAA1V,EAAA79B,EAAA69B,EAAA59B,IAWAgrC,EAAAt7C,KAAAitC,MAAA51B,KAAAusC,MAAA1V,EAAA79B,EAAA6oD,EAAAhI,EAAAlxD,KAAAo+D,QAAAnF,EAAA/qB,EAAA59B,EAAAtQ,KAAAm+D,QAAAjF,KAIAhrB,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EACAjO,EAOA,OAJAynB,EAAAE,GAAA71D,KAAAi8C,IACA0N,EAAAmM,GAAA91D,KAAAi8C,IACA3O,EAAAyoB,GAAA/1D,KAAAi8C,IACA2Z,EAAAI,GAAAh2D,KAAAi8C,IACA5kC,KAAA63B,IAAAlvC,KAAAm+D,QAAA,IAAA3rB,GAEA6rB,EAAAr+D,KAAAgvB,EAAA0mC,GAAAC,EAAAhM,EAAArc,EAAAsoB,EAAAxjB,GACA8e,EAAA75C,KAAA6iB,KAAAgU,EAAA79B,EAAA69B,EAAA79B,EAAA69B,EAAA59B,EAAA49B,EAAA59B,GAEA6rC,EAAAga,IADAkI,EAAAnN,GACAlxD,KAAAgvB,EAAA2mC,EAAAhM,EAAArc,EAAAsoB,GACA1Z,EAAAZ,EAAAt7C,KAAAitC,MAAA51B,KAAAusC,MAAA1V,EAAA79B,GAAA,EAAA69B,EAAA59B,IACA49B,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EACAjO,GAEA72B,KAAA63B,IAAAlvC,KAAAm+D,QAAA,IAAA3rB,GAEA6rB,EAAAr+D,KAAAgvB,EAAA0mC,GAAAC,EAAAhM,EAAArc,EAAAsoB,EAAAxjB,GACA8e,EAAA75C,KAAA6iB,KAAAgU,EAAA79B,EAAA69B,EAAA79B,EAAA69B,EAAA59B,EAAA49B,EAAA59B,GAGA6rC,EAAAga,IAFAjF,EAAAmN,GAEAr+D,KAAAgvB,EAAA2mC,EAAAhM,EAAArc,EAAAsoB,GACA1Z,EAAAZ,EAAAt7C,KAAAitC,MAAA51B,KAAAusC,MAAA1V,EAAA79B,EAAA69B,EAAA59B,IACA49B,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EACAjO,IAIAgjB,EAAA75C,KAAA6iB,KAAAgU,EAAA79B,EAAA69B,EAAA79B,EAAA69B,EAAA59B,EAAA49B,EAAA59B,GACAouD,EAAArnD,KAAAusC,MAAA1V,EAAA79B,EAAA69B,EAAA59B,GACA64C,EAAA8M,GAAAj2D,KAAAgvB,EAAAhvB,KAAAunB,EAAAvnB,KAAAm+D,SACAiB,EAAA/nD,KAAAmjB,IAAAkkC,GAEA7X,IADAljC,EAAA3jB,KAAAunB,EAAAvnB,KAAAo+D,QAAAgB,GACAz7C,GAAA,EAAA3jB,KAAAi8C,IACAqR,EAAA,EAAAttD,KAAAi8C,IAAA,EAAA4K,GAAA7mD,KAAAm+D,QAAAn+D,KAAAo+D,QAAAgB,GAAA,EAAAp/D,KAAAi8C,IAGAqjB,EAAA,EAAAzY,GADAwY,GADA9V,EAAA2H,EAAA/H,GACAtC,GAAA,EAAAA,GAAAxvC,KAAA8iB,IAAAovB,EAAA,KAAA+D,GAAA,IAAAzG,GAAAxvC,KAAA8iB,IAAAovB,EAAA,OACA8V,EAAA,EAAA9V,EAAA8V,MAAA,EACAZ,EAAApnD,KAAAs2B,KAAA3tC,KAAAm+D,QAAA9mD,KAAAmjB,IAAA6kC,GAAAr/D,KAAAo+D,QAAA/mD,KAAAqjB,IAAA2kC,GAAAD,GACAljB,EAAAZ,EAAAt7C,KAAAitC,MAAA51B,KAAAs2B,KAAAt2B,KAAAqjB,IAAAgkC,GAAArnD,KAAAqjB,IAAA2kC,GAAAhoD,KAAAmjB,IAAAikC,KACAtiB,EAAA9kC,KAAAgjB,MAAA,EAAAr6B,KAAAi8C,GAAAqjB,EAAAt/D,KAAAm+D,QAAA9mD,KAAAqjB,IAAA+jC,IAAApnD,KAAAy2B,IAAA2wB,IAAA,EAAAz+D,KAAAi8C,KACA/N,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EACAjO,IAWA7tB,OALA,iCCpHA,IACAk/C,IACA74C,KAlFA,WAKA1mB,KAAAg6D,QAAA3iD,KAAAqjB,IAAA16B,KAAA+sC,MACA/sC,KAAAi6D,QAAA5iD,KAAAmjB,IAAAx6B,KAAA+sC,OA6EAH,QAxEA,SAAAsB,GACA,IAAAgN,EAAAC,EACAkW,EACA8I,EAEAx4D,EAAA0O,EAAAC,EACA4rC,EAAAhO,EAAA79B,EACA8rC,EAAAjO,EAAA59B,EAiBA,OAdA+gD,EAAA/V,EAAAY,EAAAl8C,KAAAitC,OAEAiO,EAAA7jC,KAAAqjB,IAAAyhB,GACAhB,EAAA9jC,KAAAmjB,IAAA2hB,GAEAge,EAAA9iD,KAAAmjB,IAAA62B,KACA1vD,EAAA3B,KAAAg6D,QAAA9e,EAAAl7C,KAAAi6D,QAAA9e,EAAAgf,GAEA,GAAA9iD,KAAA63B,IAAAvtC,IAAA6wC,KACAniC,EAFA,EAEArQ,KAAAgvB,EAAAmsB,EAAA9jC,KAAAqjB,IAAA22B,GACA/gD,EAAAtQ,KAAA0uC,GAHA,EAGA1uC,KAAAgvB,GAAAhvB,KAAAi6D,QAAA/e,EAAAl7C,KAAAg6D,QAAA7e,EAAAgf,IAEAjsB,EAAA79B,IACA69B,EAAA59B,IACA49B,GAiDArB,QA9CA,SAAAqB,GACA,IAAAgjB,EACAnP,EACAmX,EAAAD,EACA7d,EACAc,EAAAC,EAYA,OATAjO,EAAA79B,GAAArQ,KAAA2uC,GACAT,EAAA59B,GAAAtQ,KAAA0uC,GACAwiB,EAAA75C,KAAA6iB,KAAAgU,EAAA79B,EAAA69B,EAAA79B,EAAA69B,EAAA59B,EAAA49B,EAAA59B,GACAyxC,EAAAoX,GAAAjI,EAAAlxD,KAAAgvB,GAEAkqC,EAAA7hD,KAAAqjB,IAAAqnB,GACAkX,EAAA5hD,KAAAmjB,IAAAunB,GAEA7F,EAAAl8C,KAAAitC,MACA51B,KAAA63B,IAAAgiB,IAAA1e,GACA2J,EAAAn8C,KAAA+sC,KACAmB,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EACAjO,IAEAiO,EAAAgd,GAAAF,EAAAj5D,KAAAg6D,QAAA9rB,EAAA59B,EAAA4oD,EAAAl5D,KAAAi6D,QAAA/I,GACA9V,EAAA/jC,KAAA63B,IAAAlvC,KAAA+sC,MAAAqF,EACA/6B,KAAA63B,IAAAkM,IAAA5I,GAEA0J,EADAl8C,KAAA+sC,MAAA,EACAuO,EAAAt7C,KAAAitC,MAAA51B,KAAAusC,MAAA1V,EAAA79B,GAAA69B,EAAA59B,IAGAgrC,EAAAt7C,KAAAitC,MAAA51B,KAAAusC,OAAA1V,EAAA79B,EAAA69B,EAAA59B,IAEA49B,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EACAjO,IAEAgO,EAAAZ,EAAAt7C,KAAAitC,MAAA51B,KAAAusC,MAAA1V,EAAA79B,EAAA6oD,EAAAhI,EAAAlxD,KAAAi6D,QAAAhB,EAAA/qB,EAAA59B,EAAAtQ,KAAAg6D,QAAAd,IACAhrB,EAAA79B,EAAA6rC,EACAhO,EAAA59B,EAAA6rC,EACAjO,KAQA7tB,OALA,UC9EAm/C,IACAC,MAAA,EACAC,MAAA,EACAC,KAAA,EACAC,KAAA,EACAC,IAAA,EACAC,OAAA,GAGAC,IACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,GAmTA,SAAAC,GAAA5kB,EAAAlrC,EAAAD,EAAAgwD,GACA,IAAA/L,EAmBA,OAlBA9Y,EAAAhJ,GACA6tB,EAAAr9D,MAAA+8D,GAAAC,OACA1L,EAAA,IAEAA,EAAAj9C,KAAAusC,MAAAtzC,EAAAD,GACAgH,KAAA63B,IAAAolB,IAAA3hB,EACA0tB,EAAAr9D,MAAA+8D,GAAAC,OACK1L,EAAA3hB,GAAA2hB,GAAAliB,EAAAO,GACL0tB,EAAAr9D,MAAA+8D,GAAAE,OACA3L,GAAAliB,GACKkiB,EAAAliB,EAAAO,GAAA2hB,KAAAliB,EAAAO,IACL0tB,EAAAr9D,MAAA+8D,GAAAG,OACA5L,KAAA,EAAAA,EAAAzhB,EAAAyhB,EAAAzhB,IAEAwtB,EAAAr9D,MAAA+8D,GAAAI,OACA7L,GAAAliB,IAGAkiB,EAIA,SAAAgM,GAAApkB,EAAA7W,GACA,IAAAk7B,EAAArkB,EAAA7W,EAMA,OALAk7B,GAAA1tB,EACA0tB,GAAA3tB,EACG2tB,GAAA1tB,IACH0tB,GAAA3tB,GAEA2tB,EAGA,IC/UA30B,GDgVA40B,IACA95C,KApVA,WAEA1mB,KAAA2uC,GAAA3uC,KAAA2uC,IAAA,EACA3uC,KAAA0uC,GAAA1uC,KAAA0uC,IAAA,EACA1uC,KAAA+sC,KAAA/sC,KAAA+sC,MAAA,EACA/sC,KAAAitC,MAAAjtC,KAAAitC,OAAA,EACAjtC,KAAAk1C,OAAAl1C,KAAAk1C,QAAA,EACAl1C,KAAAiqB,MAAAjqB,KAAAiqB,OAAA,mCAGAjqB,KAAA+sC,MAAAqF,EAAAO,EAAA,EACA3yC,KAAAygE,KAAAjB,GAAAK,IACG7/D,KAAA+sC,QAAAqF,EAAAO,EAAA,GACH3yC,KAAAygE,KAAAjB,GAAAM,OACGzoD,KAAA63B,IAAAlvC,KAAAitC,QAAA0F,EACH3yC,KAAAygE,KAAAjB,GAAAC,MACGpoD,KAAA63B,IAAAlvC,KAAAitC,QAAAmF,EAAAO,EACH3yC,KAAAygE,KAAAzgE,KAAAitC,MAAA,EAAAuyB,GAAAE,MAAAF,GAAAI,KAEA5/D,KAAAygE,KAAAjB,GAAAG,KAKA,IAAA3/D,KAAAi8C,KACAj8C,KAAA0gE,YAAA,GAAA1gE,KAAAgvB,EAAAhvB,KAAA4B,GAAA5B,KAAAgvB,EACAhvB,KAAA2gE,oBAAA3gE,KAAA0gE,YAAA1gE,KAAA0gE,cA2TA9zB,QArTA,SAAAsB,GACA,IACAiO,EAAAD,EACAoY,EAAA9Y,EACAwI,EAAAyF,EAHAmX,GAAYvwD,EAAA,EAAAC,EAAA,GAKZ+vD,GAAcr9D,MAAA,GAoBd,GAjBAkrC,EAAA79B,GAAArQ,KAAAitC,MAMAkP,EADA,IAAAn8C,KAAAi8C,GACA5kC,KAAAgjB,KAAAr6B,KAAA2gE,oBAAAtpD,KAAAy2B,IAAAI,EAAA59B,IAEA49B,EAAA59B,EAQA4rC,EAAAhO,EAAA79B,EACArQ,KAAAygE,OAAAjB,GAAAK,IACArkB,EAAApJ,EAAA+J,EACAD,GAAAvJ,GAAAuJ,GAAA9J,EAAAO,GACA0tB,EAAAr9D,MAAA+8D,GAAAC,OACA1L,EAAApY,EAAA9J,GACK8J,EAAA9J,EAAAO,GAAAuJ,KAAA9J,EAAAO,IACL0tB,EAAAr9D,MAAA+8D,GAAAE,OACA3L,EAAApY,EAAA,EAAAA,EAAArJ,EAAAqJ,EAAArJ,GACKqJ,IAAA9J,EAAAO,IAAAuJ,IAAAvJ,GACL0tB,EAAAr9D,MAAA+8D,GAAAG,OACA5L,EAAApY,EAAA9J,IAEAiuB,EAAAr9D,MAAA+8D,GAAAI,OACA7L,EAAApY,QAEG,GAAAl8C,KAAAygE,OAAAjB,GAAAM,OACHtkB,EAAApJ,EAAA+J,EACAD,GAAAvJ,GAAAuJ,GAAA9J,EAAAO,GACA0tB,EAAAr9D,MAAA+8D,GAAAC,OACA1L,GAAApY,EAAA9J,GACK8J,EAAAvJ,GAAAuJ,IAAAvJ,GACL0tB,EAAAr9D,MAAA+8D,GAAAE,OACA3L,GAAApY,GACKA,GAAAvJ,GAAAuJ,KAAA9J,EAAAO,IACL0tB,EAAAr9D,MAAA+8D,GAAAG,OACA5L,GAAApY,EAAA9J,IAEAiuB,EAAAr9D,MAAA+8D,GAAAI,OACA7L,EAAApY,EAAA,GAAAA,EAAArJ,GAAAqJ,EAAArJ,OAEG,CACH,IAAA4lB,EAAA/2D,EAAA2tC,EACA8hB,EAAAC,EACAyP,EAEA7gE,KAAAygE,OAAAjB,GAAAE,MACAxjB,EAAAokB,GAAApkB,GAAA9J,GACKpyC,KAAAygE,OAAAjB,GAAAG,KACLzjB,EAAAokB,GAAApkB,GAAArJ,GACK7yC,KAAAygE,OAAAjB,GAAAI,OACL1jB,EAAAokB,GAAApkB,GAAA9J,IAEA+e,EAAA95C,KAAAqjB,IAAAyhB,GACAiV,EAAA/5C,KAAAmjB,IAAA2hB,GACA0kB,EAAAxpD,KAAAqjB,IAAAwhB,GAEAuc,EAAArH,EADA/5C,KAAAmjB,IAAA0hB,GAEAx6C,EAAA0vD,EAAAyP,EACAxxB,EAAA8hB,EAEAnxD,KAAAygE,OAAAjB,GAAAC,MAEAnL,EAAA8L,GADA5kB,EAAAnkC,KAAAs1C,KAAA8L,GACAppB,EAAA3tC,EAAA2+D,GACKrgE,KAAAygE,OAAAjB,GAAAE,MAELpL,EAAA8L,GADA5kB,EAAAnkC,KAAAs1C,KAAAjrD,GACA2tC,GAAAopB,EAAA4H,GACKrgE,KAAAygE,OAAAjB,GAAAG,KAELrL,EAAA8L,GADA5kB,EAAAnkC,KAAAs1C,MAAA8L,GACAppB,GAAA3tC,EAAA2+D,GACKrgE,KAAAygE,OAAAjB,GAAAI,KAELtL,EAAA8L,GADA5kB,EAAAnkC,KAAAs1C,MAAAjrD,GACA2tC,EAAAopB,EAAA4H,IAGA7kB,EAAA8Y,EAAA,EACA+L,EAAAr9D,MAAA+8D,GAAAC,QA2BA,OApBAvW,EAAApyC,KAAAgjB,KAAA,GAAAwY,GAAAyhB,EAAAj9C,KAAAs1C,KAAAt1C,KAAAqjB,IAAA45B,GAAAj9C,KAAAmjB,IAAAmY,IAAAP,IACA4R,EAAA3sC,KAAA6iB,MAAA,EAAA7iB,KAAAmjB,IAAAghB,KAAAnkC,KAAAmjB,IAAAivB,GAAApyC,KAAAmjB,IAAAivB,KAAA,EAAApyC,KAAAmjB,IAAAnjB,KAAAgjB,KAAA,EAAAhjB,KAAAmjB,IAAA85B,OAGA+L,EAAAr9D,QAAA+8D,GAAAE,OACAxW,GAAArX,EACGiuB,EAAAr9D,QAAA+8D,GAAAG,OACHzW,GAAA5W,EACGwtB,EAAAr9D,QAAA+8D,GAAAI,SACH1W,GAAA,IAAA5W,GAIA+tB,EAAAvwD,EAAA2zC,EAAA3sC,KAAAmjB,IAAAivB,GACAmX,EAAAtwD,EAAA0zC,EAAA3sC,KAAAqjB,IAAA+uB,GACAmX,EAAAvwD,EAAAuwD,EAAAvwD,EAAArQ,KAAAgvB,EAAAhvB,KAAA2uC,GACAiyB,EAAAtwD,EAAAswD,EAAAtwD,EAAAtQ,KAAAgvB,EAAAhvB,KAAA0uC,GAEAR,EAAA79B,EAAAuwD,EAAAvwD,EACA69B,EAAA59B,EAAAswD,EAAAtwD,EACA49B,GAgMArB,QA3LA,SAAAqB,GACA,IACAub,EAAAqX,EAAAC,EAAAC,EACAC,EAAA3M,EAAAnZ,EAAAK,EACAwI,EA8HAkd,EACAxG,EAAAyG,EAlIAC,GAAY/K,IAAA,EAAA7a,IAAA,GAIZ6kB,GAAcr9D,MAAA,GA4Cd,GAzCAkrC,EAAA79B,GAAA69B,EAAA79B,EAAArQ,KAAA2uC,IAAA3uC,KAAAgvB,EACAkf,EAAA59B,GAAA49B,EAAA59B,EAAAtQ,KAAA0uC,IAAA1uC,KAAAgvB,EAIA8xC,EAAAzpD,KAAAgjB,KAAAhjB,KAAA6iB,KAAAgU,EAAA79B,EAAA69B,EAAA79B,EAAA69B,EAAA59B,EAAA49B,EAAA59B,IACAm5C,EAAApyC,KAAAusC,MAAA1V,EAAA59B,EAAA49B,EAAA79B,GACA69B,EAAA79B,GAAA,GAAA69B,EAAA79B,GAAAgH,KAAA63B,IAAAhB,EAAA59B,GACA+vD,EAAAr9D,MAAA+8D,GAAAC,OACG9xB,EAAA59B,GAAA,GAAA49B,EAAA59B,GAAA+G,KAAA63B,IAAAhB,EAAA79B,IACHgwD,EAAAr9D,MAAA+8D,GAAAE,OACAxW,GAAArX,GACGlE,EAAA79B,EAAA,IAAA69B,EAAA79B,GAAAgH,KAAA63B,IAAAhB,EAAA59B,IACH+vD,EAAAr9D,MAAA+8D,GAAAG,OACAzW,IAAA,EAAAA,EAAA5W,EAAA4W,EAAA5W,IAEAwtB,EAAAr9D,MAAA+8D,GAAAI,OACA1W,GAAArX,GAQA4R,EAAAnR,EAAA,GAAAx7B,KAAAy2B,IAAA2b,GACAwX,EAAA5pD,KAAAqjB,IAAAspB,IAAA3sC,KAAAmjB,IAAAwpB,GAAA,EAAA3sC,KAAA6iB,KAAA,IACAo6B,EAAAj9C,KAAAgjB,KAAA4mC,IAGA9lB,EAAA,GAFA4lB,EAAA1pD,KAAAmjB,IAAAivB,IAEAsX,GADAC,EAAA3pD,KAAAy2B,IAAAgzB,IACAE,GAAA,EAAA3pD,KAAAmjB,IAAAnjB,KAAAgjB,KAAA,EAAAhjB,KAAAmjB,IAAA85B,QACA,EACAnZ,GAAA,EACGA,EAAA,IACHA,EAAA,GAOAn7C,KAAAygE,OAAAjB,GAAAK,IACArkB,EAAAnkC,KAAAs1C,KAAAxR,GACAimB,EAAA5lB,IAAApJ,EAAAoJ,EACA6kB,EAAAr9D,QAAA+8D,GAAAC,OACAoB,EAAA/K,IAAA/B,EAAAliB,EACKiuB,EAAAr9D,QAAA+8D,GAAAE,OACLmB,EAAA/K,IAAA/B,EAAA,EAAAA,EAAAzhB,EAAAyhB,EAAAzhB,EACKwtB,EAAAr9D,QAAA+8D,GAAAG,OACLkB,EAAA/K,IAAA/B,EAAAliB,EAEAgvB,EAAA/K,IAAA/B,OAEG,GAAAt0D,KAAAygE,OAAAjB,GAAAM,OACHtkB,EAAAnkC,KAAAs1C,KAAAxR,GACAimB,EAAA5lB,MAAApJ,EACAiuB,EAAAr9D,QAAA+8D,GAAAC,OACAoB,EAAA/K,KAAA/B,EAAAliB,EACKiuB,EAAAr9D,QAAA+8D,GAAAE,OACLmB,EAAA/K,KAAA/B,EACK+L,EAAAr9D,QAAA+8D,GAAAG,OACLkB,EAAA/K,KAAA/B,EAAAliB,EAEAgvB,EAAA/K,IAAA/B,EAAA,GAAAA,EAAAzhB,GAAAyhB,EAAAzhB,MAEG,CAEH,IAAA4lB,EAAA/2D,EAAA2tC,EAEA2U,GADAyU,EAAAtd,GACAsd,EAQA/2D,GAFAsiD,IAJA3U,EADA2U,GAAA,EACA,EAEA3sC,KAAA6iB,KAAA,EAAA8pB,GAAA3sC,KAAAqjB,IAAA45B,IAEAjlB,IACA,EACA,EAEAh4B,KAAA6iB,KAAA,EAAA8pB,GAGAqc,EAAAr9D,QAAA+8D,GAAAE,QACAjc,EAAAtiD,EACAA,GAAA2tC,EACAA,EAAA2U,GACKqc,EAAAr9D,QAAA+8D,GAAAG,QACLx+D,KACA2tC,MACKgxB,EAAAr9D,QAAA+8D,GAAAI,SACLnc,EAAAtiD,EACAA,EAAA2tC,EACAA,GAAA2U,GAGAhkD,KAAAygE,OAAAjB,GAAAE,OACA1b,EAAAyU,EACAA,GAAA/2D,EACAA,EAAAsiD,GACKhkD,KAAAygE,OAAAjB,GAAAG,MACLlH,KACA/2D,MACK1B,KAAAygE,OAAAjB,GAAAI,OACL5b,EAAAyU,EACAA,EAAA/2D,EACAA,GAAAsiD,GAGAod,EAAA5lB,IAAAnkC,KAAAs1C,MAAAtd,GAAA+C,EACAgvB,EAAA/K,IAAAh/C,KAAAusC,MAAAliD,EAAA+2D,GACAz4D,KAAAygE,OAAAjB,GAAAE,MACA0B,EAAA/K,IAAAiK,GAAAc,EAAA/K,KAAAjkB,GACKpyC,KAAAygE,OAAAjB,GAAAG,KACLyB,EAAA/K,IAAAiK,GAAAc,EAAA/K,KAAAxjB,GACK7yC,KAAAygE,OAAAjB,GAAAI,OACLwB,EAAA/K,IAAAiK,GAAAc,EAAA/K,KAAAjkB,IAqBA,OAfA,IAAApyC,KAAAi8C,KAGAilB,EAAAE,EAAA5lB,IAAA,MACAkf,EAAArjD,KAAAy2B,IAAAszB,EAAA5lB,KACA2lB,EAAAnhE,KAAA4B,EAAAyV,KAAA6iB,KAAAwgC,IAAA16D,KAAA2gE,qBACAS,EAAA5lB,IAAAnkC,KAAAgjB,KAAAhjB,KAAA6iB,KAAAl6B,KAAAgvB,EAAAhvB,KAAAgvB,EAAAmyC,MAAAnhE,KAAA0gE,YAAAS,IACAD,IACAE,EAAA5lB,KAAA4lB,EAAA5lB,MAIA4lB,EAAA/K,KAAAr2D,KAAAitC,MACAiB,EAAA79B,EAAA+wD,EAAA/K,IACAnoB,EAAA59B,EAAA8wD,EAAA5lB,IACAtN,GA4CA7tB,OALA,8EE9VA4kC,GAAAoc,aAAA,QACApc,GAAAtT,QACAsT,GAAAzK,MAAA,IAAAyK,GAAAtT,KAAA,SACAsT,GAAAt+C,MAAA2kD,GACArG,GAAAb,WACAa,GAAAnZ,KAAA4O,EACAuK,GAAAtY,aACAsY,GAAAY,QACAZ,GAAAx2C,QAAA6yD,GAAA,SDOA11B,GCNAqZ,IDOAtT,KAAAC,YAAAC,IAAAma,IACApgB,GAAA+F,KAAAC,YAAAC,IAAA2c,IACA5iB,GAAA+F,KAAAC,YAAAC,IAAA2U,IACA5a,GAAA+F,KAAAC,YAAAC,IAAAke,IACAnkB,GAAA+F,KAAAC,YAAAC,IAAA0e,IACA3kB,GAAA+F,KAAAC,YAAAC,IAAA0vB,GAAA,SACA31B,GAAA+F,KAAAC,YAAAC,IAAA8f,IACA/lB,GAAA+F,KAAAC,YAAAC,IAAA6hB,IACA9nB,GAAA+F,KAAAC,YAAAC,IAAA0iB,IACA3oB,GAAA+F,KAAAC,YAAAC,IAAAukB,IACAxqB,GAAA+F,KAAAC,YAAAC,IAAA0lB,IACA3rB,GAAA+F,KAAAC,YAAAC,IAAAunB,IACAxtB,GAAA+F,KAAAC,YAAAC,IAAAkoB,IACAnuB,GAAA+F,KAAAC,YAAAC,IAAAwoB,IACAzuB,GAAA+F,KAAAC,YAAAC,IAAAyoB,IACA1uB,GAAA+F,KAAAC,YAAAC,IAAA4oB,IACA7uB,GAAA+F,KAAAC,YAAAC,IAAAipB,IACAlvB,GAAA+F,KAAAC,YAAAC,IAAA6qB,IACA9wB,GAAA+F,KAAAC,YAAAC,IAAA+qB,IACAhxB,GAAA+F,KAAAC,YAAAC,IAAAmrB,IACApxB,GAAA+F,KAAAC,YAAAC,IAAAqrB,IACAtxB,GAAA+F,KAAAC,YAAAC,IAAAurB,IACAxxB,GAAA+F,KAAAC,YAAAC,IAAAqsB,IACAtyB,GAAA+F,KAAAC,YAAAC,IAAA0tB,IACA3zB,GAAA+F,KAAAC,YAAAC,IAAA2uB,IC9BAjgE,EAAA,6BCpBAigB,EAAA9f,SAAkB8gE,MAAA,cAAAC,IAAA,cAAAC,WAAA,EAAAC,WAAA,kGAAAC,UAAA,SAAAC,oBAAqNC,YAAex6D,KAAA,UAAAy6D,UAAA,EAAAC,IAAA,cAAA9+D,KAAA,QAAA++D,YAAA,QAAAC,QAAA,QAAAC,SAAA,KAAAC,UAAA,SAAgJC,aAAA,UAAAC,UAAA,qDAAAC,QAAA,2CAAAC,MAAA,cAAAC,OAAA,qCAAAC,OAAA,GAAAC,MAAwOntD,IAAA,6CAAkDotD,oBAAA,EAAAC,eAA6C3/D,KAAA,aAAA4/D,MAAA,0BAAsD5/D,KAAA,oBAAA4/D,MAAA,0BAA6D5/D,KAAA,iBAAA4/D,MAAA,6BAA6D5/D,KAAA,kBAAAsS,IAAA,2BAA0DtS,KAAA,cAAqBA,KAAA,iBAAwBA,KAAA,cAAmB6/D,cAAkBld,KAAA,QAAAmd,aAAA,UAAqCC,YAAA,EAAAC,YAAA,yIAAAC,iBAA8LC,KAAA,SAAAC,KAAA,mCAAAC,MAAA,SAAAC,YAAA,UAAAC,wBAAA,SAAAC,uBAAA,SAAAC,uBAAA,UAAAC,wBAAA,SAAAC,eAAA,SAAAC,SAAA,SAAAC,MAAA,UAAAC,OAAA,UAAAC,qBAAA,SAAAC,6BAAA,SAAAC,IAAA,UAAwYC,aAAgB/rB,KAAA,OAAAh4C,IAAA,QAA2BgkE,SAAA,4CAAAC,QAAA,MAAAC,KAAA,oBAAA9jD,OAAA,eAAAtd,KAAA,QAAAqhE,YAAwJj9D,KAAA,MAAAkO,IAAA,wCAA0DgvD,SAAYC,MAAA,QAAAC,cAAA,oBAAAtsB,KAAA,sDAA8G3pC,QAAA","file":"mapfishprint.min.js","sourcesContent":["/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nvar XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 105\n// module chunks = 0 1 5 24","/**\n * @type {string} Default WMS version.\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.utils\n*/\nconst exports = {};\nimport olGeomLineString from 'ol/geom/LineString';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon';\nimport olGeomPoint from 'ol/geom/Point';\nimport olGeomPolygon from 'ol/geom/Polygon';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    if (value) {\n      queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n    } else {\n      queryItem.push(encodeURIComponent(key));\n    }\n  }\n  return queryItem.join('&');\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/format/XLink\n */\nvar XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nvar NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 123\n// module chunks = 0 1 5","/**\n * @module ol/format/JSONFeature\n */\nimport {inherits} from '../index.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nvar JSONFeature = function() {\n  FeatureFormat.call(this);\n};\n\ninherits(JSONFeature, FeatureFormat);\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    var object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.getType = function() {\n  return FormatType.JSON;\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeature = function(source, opt_options) {\n  return this.readFeatureFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeatures = function(source, opt_options) {\n  return this.readFeaturesFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.Feature} Feature.\n */\nJSONFeature.prototype.readFeatureFromObject = function(object, opt_options) {};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nJSONFeature.prototype.readFeaturesFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readGeometry = function(source, opt_options) {\n  return this.readGeometryFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nJSONFeature.prototype.readGeometryFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readProjection = function(source) {\n  return this.readProjectionFromObject(getObject(source));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nJSONFeature.prototype.readProjectionFromObject = function(object) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeature = function(feature, opt_options) {\n  return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeatureObject = function(feature, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeatures = function(features, opt_options) {\n  return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeaturesObject = function(features, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeGeometryObject = function(geometry, opt_options) {};\nexport default JSONFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/JSONFeature.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/GeoJSON\n */\n// TODO: serialize dataProjection as crs member when writing\n// see https://github.com/openlayers/openlayers/issues/2078\n\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @constructor\n * @extends {ol.format.JSONFeature}\n * @param {olx.format.GeoJSONOptions=} opt_options Options.\n * @api\n */\nvar GeoJSON = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  JSONFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection(\n      options.defaultDataProjection ?\n        options.defaultDataProjection : 'EPSG:4326');\n\n\n  if (options.featureProjection) {\n    this.defaultFeatureProjection = getProjection(options.featureProjection);\n  }\n\n  /**\n   * Name of the geometry attribute for features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * Look for the geometry name in the feature GeoJSON\n   * @type {boolean|undefined}\n   * @private\n   */\n  this.extractGeometryName_ = options.extractGeometryName;\n\n};\n\ninherits(GeoJSON, JSONFeature);\n\n\n/**\n * @const\n * @type {Object.<string, function(GeoJSONObject): ol.geom.Geometry>}\n */\nvar GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n  'GeometryCollection': readGeometryCollectionGeometry\n};\n\n\n/**\n * @const\n * @type {Object.<string, function(ol.geom.Geometry, olx.format.WriteOptions=): (GeoJSONGeometry|GeoJSONGeometryCollection)>}\n */\nvar GEOMETRY_WRITERS = {\n  'Point': writePointGeometry,\n  'LineString': writeLineStringGeometry,\n  'Polygon': writePolygonGeometry,\n  'MultiPoint': writeMultiPointGeometry,\n  'MultiLineString': writeMultiLineStringGeometry,\n  'MultiPolygon': writeMultiPolygonGeometry,\n  'GeometryCollection': writeGeometryCollectionGeometry,\n  'Circle': writeEmptyGeometryCollectionGeometry\n};\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  var geometryReader = GEOMETRY_READERS[object.type];\n  return (\n    /** @type {ol.geom.Geometry} */ transformWithOptions(\n        geometryReader(object), false, opt_options)\n  );\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  var geometries = object.geometries.map(\n      /**\n       * @param {GeoJSONGeometry} geometry Geometry.\n       * @return {ol.geom.Geometry} geometry Geometry.\n       */\n      function(geometry) {\n        return readGeometry(geometry, opt_options);\n      });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object.coordinates);\n}\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  var geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {ol.geom.Geometry} */ (\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {GeoJSONGeometryCollection} Empty GeoJSON geometry collection.\n */\nfunction writeEmptyGeometryCollectionGeometry(geometry) {\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: []\n  });\n}\n\n\n/**\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  var geometries = geometry.getGeometriesArray().map(function(geometry) {\n    var options = _ol_obj_.assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: geometries\n  });\n}\n\n\n/**\n * @param {ol.geom.LineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * @param {ol.geom.Point} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.Polygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * Read a feature from a GeoJSON Feature source.  Only works for Feature or\n * geometry types.  Use {@link ol.format.GeoJSON#readFeatures} to read\n * FeatureCollection source. If feature at source has an id, it will be used\n * as Feature id by calling {@link ol.Feature#setId} internally.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGeoJSON.prototype.readFeature;\n\n\n/**\n * Read all features from a GeoJSON source.  Works for all GeoJSON types.\n * If the source includes only geometries, features will be created with those\n * geometries.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGeoJSON.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeatureFromObject = function(object, opt_options) {\n  /**\n   * @type {GeoJSONFeature}\n   */\n  var geoJSONFeature = null;\n  if (object.type === 'Feature') {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n  } else {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ ({\n      type: 'Feature',\n      geometry: /** @type {GeoJSONGeometry|GeoJSONGeometryCollection} */ (object)\n    });\n  }\n\n  var geometry = readGeometry(geoJSONFeature.geometry, opt_options);\n  var feature = new Feature();\n  if (this.geometryName_) {\n    feature.setGeometryName(this.geometryName_);\n  } else if (this.extractGeometryName_ && geoJSONFeature.geometry_name !== undefined) {\n    feature.setGeometryName(geoJSONFeature.geometry_name);\n  }\n  feature.setGeometry(geometry);\n  if (geoJSONFeature.id !== undefined) {\n    feature.setId(geoJSONFeature.id);\n  }\n  if (geoJSONFeature.properties) {\n    feature.setProperties(geoJSONFeature.properties);\n  }\n  return feature;\n};\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeaturesFromObject = function(object, opt_options) {\n  var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  /** @type {Array.<ol.Feature>} */\n  var features = null;\n  if (geoJSONObject.type === 'FeatureCollection') {\n    var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */\n        (object);\n    features = [];\n    var geoJSONFeatures = geoJSONFeatureCollection.features;\n    var i, ii;\n    for (i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n      features.push(this.readFeatureFromObject(geoJSONFeatures[i],\n          opt_options));\n    }\n  } else {\n    features = [this.readFeatureFromObject(object, opt_options)];\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @api\n */\nGeoJSON.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readGeometryFromObject = function(object, opt_options) {\n  return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n};\n\n\n/**\n * Read the projection from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGeoJSON.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readProjectionFromObject = function(object) {\n  var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  var crs = geoJSONObject.crs;\n  var projection;\n  if (crs) {\n    if (crs.type == 'name') {\n      projection = getProjection(crs.properties.name);\n    } else {\n      assert(false, 36); // Unknown SRS type\n    }\n  } else {\n    projection = this.defaultDataProjection;\n  }\n  return /** @type {ol.proj.Projection} */ (projection);\n};\n\n\n/**\n * Encode a feature as a GeoJSON Feature string.\n *\n * @function\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeature;\n\n\n/**\n * Encode a feature as a GeoJSON Feature object.\n *\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeature} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeatureObject = function(feature, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n\n  var object = /** @type {GeoJSONFeature} */ ({\n    'type': 'Feature'\n  });\n  var id = feature.getId();\n  if (id !== undefined) {\n    object.id = id;\n  }\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    object.geometry = writeGeometry(geometry, opt_options);\n  } else {\n    object.geometry = null;\n  }\n  var properties = feature.getProperties();\n  delete properties[feature.getGeometryName()];\n  if (!_ol_obj_.isEmpty(properties)) {\n    object.properties = properties;\n  } else {\n    object.properties = null;\n  }\n  return object;\n};\n\n\n/**\n * Encode an array of features as GeoJSON.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features as a GeoJSON object.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeatureCollection} GeoJSON Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeaturesObject = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  var objects = [];\n  var i, ii;\n  for (i = 0, ii = features.length; i < ii; ++i) {\n    objects.push(this.writeFeatureObject(features[i], opt_options));\n  }\n  return /** @type {GeoJSONFeatureCollection} */ ({\n    type: 'FeatureCollection',\n    features: objects\n  });\n};\n\n\n/**\n * Encode a geometry as a GeoJSON string.\n *\n * @function\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeGeometry;\n\n\n/**\n * Encode a geometry as a GeoJSON object.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeGeometryObject = function(geometry, opt_options) {\n  return writeGeometry(geometry, this.adaptOptions(opt_options));\n};\nexport default GeoJSON;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GeoJSON.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nvar OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (var n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  var owsObject = _ol_xml_.pushParseAndPop({},\n      OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  var name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n      OWS.CONSTRAINT_PARSERS_, node,\n      objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  var href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n      OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n      node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  var name = node.getAttribute('name');\n  var value = _ol_xml_.pushParseAndPop({},\n      OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  var object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n    objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      OWS.OPERATIONS_METADATA_PARSERS_, node,\n      objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n    objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n      objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n      objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n      objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceIdentification_),\n      'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceProvider_),\n      'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n          OWS.readOperationsMetadata_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n          OWS.readAllowedValues_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n      'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n      'Post': undefined // TODO\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'Operation': OWS.readOperation_\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'Constraint': _ol_xml_.makeObjectPropertyPusher(\n          OWS.readConstraint_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n        OWS.NAMESPACE_URIS_, {\n          'IndividualName': _ol_xml_.makeObjectPropertySetter(\n              XSD.readString),\n          'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n          'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n              OWS.readContactInfo_)\n        });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n        OWS.NAMESPACE_URIS_, {\n          'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n          'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n          'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n          'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n          'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n              XSD.readString),\n          'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n        });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n        OWS.NAMESPACE_URIS_, {\n          'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n          'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n          'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n              OWS.readServiceContact_)\n        });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nvar _ol_format_WMTSCapabilities_ = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(_ol_format_WMTSCapabilities_, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\n_ol_format_WMTSCapabilities_.prototype.read;\n\n\n/**\n * @inheritDoc\n */\n_ol_format_WMTSCapabilities_.prototype.readFromDocument = function(doc) {\n  for (var n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_WMTSCapabilities_.prototype.readFromNode = function(node) {\n  var version = node.getAttribute('version').trim();\n  var WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n      _ol_format_WMTSCapabilities_.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\n_ol_format_WMTSCapabilities_.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\n_ol_format_WMTSCapabilities_.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\n_ol_format_WMTSCapabilities_.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\n_ol_format_WMTSCapabilities_.readStyle_ = function(node, objectStack) {\n  var style = _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  var isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\n_ol_format_WMTSCapabilities_.readTileMatrixSetLink_ = function(node,\n    objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\n_ol_format_WMTSCapabilities_.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\n_ol_format_WMTSCapabilities_.readResourceUrl_ = function(node, objectStack) {\n  var format = node.getAttribute('format');\n  var template = node.getAttribute('template');\n  var resourceType = node.getAttribute('resourceType');\n  var resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\n_ol_format_WMTSCapabilities_.readWgs84BoundingBox_ = function(node, objectStack) {\n  var coordinates = _ol_xml_.pushParseAndPop([],\n      _ol_format_WMTSCapabilities_.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\n_ol_format_WMTSCapabilities_.readLegendUrl_ = function(node, objectStack) {\n  var legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\n_ol_format_WMTSCapabilities_.readCoordinates_ = function(node, objectStack) {\n  var coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  var x = +coordinates[0];\n  var y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\n_ol_format_WMTSCapabilities_.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\n_ol_format_WMTSCapabilities_.readTileMatrixLimitsList_ = function(node,\n    objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n      _ol_format_WMTSCapabilities_.TMS_LIMITS_LIST_PARSERS_, node,\n      objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\n_ol_format_WMTSCapabilities_.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\n_ol_format_WMTSCapabilities_.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\n_ol_format_WMTSCapabilities_.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'Contents': _ol_xml_.makeObjectPropertySetter(\n          _ol_format_WMTSCapabilities_.readContents_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'Layer': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readLayer_),\n      'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readTileMatrixSet_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'Style': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readStyle_),\n      'Format': _ol_xml_.makeObjectPropertyPusher(\n          XSD.readString),\n      'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readTileMatrixSetLink_),\n      'Dimension': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readDimensions_),\n      'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readResourceUrl_)\n    }, _ol_xml_.makeStructureNS(_ol_format_WMTSCapabilities_.OWS_NAMESPACE_URIS_, {\n      'Title': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'Abstract': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n          _ol_format_WMTSCapabilities_.readWgs84BoundingBox_),\n      'Identifier': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readLegendUrl_)\n    }, _ol_xml_.makeStructureNS(_ol_format_WMTSCapabilities_.OWS_NAMESPACE_URIS_, {\n      'Title': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'Identifier': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n          _ol_format_WMTSCapabilities_.readTileMatrixLimitsList_)\n    });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n          _ol_format_WMTSCapabilities_.readTileMatrixLimits_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger),\n      'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger),\n      'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger),\n      'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'Default': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'Value': _ol_xml_.makeObjectPropertyPusher(\n          XSD.readString)\n    }, _ol_xml_.makeStructureNS(_ol_format_WMTSCapabilities_.OWS_NAMESPACE_URIS_, {\n      'Identifier': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.OWS_NAMESPACE_URIS_, {\n      'LowerCorner': _ol_xml_.makeArrayPusher(\n          _ol_format_WMTSCapabilities_.readCoordinates_),\n      'UpperCorner': _ol_xml_.makeArrayPusher(\n          _ol_format_WMTSCapabilities_.readCoordinates_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readTileMatrix_)\n    }, _ol_xml_.makeStructureNS(_ol_format_WMTSCapabilities_.OWS_NAMESPACE_URIS_, {\n      'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'Identifier': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n          _ol_format_WMTSCapabilities_.readCoordinates_),\n      'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n          XSD.readDecimal),\n      'TileWidth': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger),\n      'TileHeight': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger),\n      'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger),\n      'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger)\n    }, _ol_xml_.makeStructureNS(_ol_format_WMTSCapabilities_.OWS_NAMESPACE_URIS_, {\n      'Identifier': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString)\n    }));\nexport default _ol_format_WMTSCapabilities_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nvar _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nvar ImageWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var extent = getForViewAndSize(coordinate, resolution, 0,\n      ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n      extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var imageResolution = resolution / pixelRatio;\n\n  var center = getCenter(extent);\n  var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n  var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n  var image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  var params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return _ol_uri_.appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n    imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.map.LayerHelper\n*/\nimport ngeoBase from 'ngeo';\nimport googAsserts from 'goog/asserts';\nimport olArray from 'ol/array';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerImage from 'ol/layer/Image';\nimport olLayerTile from 'ol/layer/Tile';\nimport olObj from 'ol/obj';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\nimport olSourceTileWMS from 'ol/source/TileWMS';\nimport olSourceWMTS from 'ol/source/WMTS';\nimport olUri from 'ol/uri';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n *//* @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module ngeo.CustomEvent\n*/\nimport olBase from 'ol';\nimport olEventsEvent from 'ol/events/Event';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nvar TileWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var params = options.params || {};\n\n  var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, params) {\n\n  var urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    var tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  var url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    var index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return _ol_uri_.appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  var i = 0;\n  var res = [];\n  for (var key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo';\nimport olCollection from 'ol/Collection';\n\n\nngeoBase.module.value('ngeoDataSources', new olCollection());\n\n\n/**\n * @typedef {!ol.Collection.<!ngeo.datasource.DataSource>}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olLayerVector from 'ol/layer/Vector';\nimport olObj from 'ol/obj';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleStyle from 'ol/style/Style';\nimport googAsserts from 'goog/asserts';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {};\nexports.assertNumber = function(value, opt_message, var_args) {};\nexports.assertString = function(value, opt_message, var_args) {};\nexports.assertFunction = function(value, opt_message, var_args) {};\nexports.assertObject = function(value, opt_message, var_args) {};\nexports.assertArray = function(value, opt_message, var_args) {};\nexports.assertBoolean = function(value, opt_message, var_args) {};\nexports.assertElement = function(value, opt_message, var_args) {};\nexports.assertInstanceof = function(value, type, opt_message, var_args) {};\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.prod.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr';\nimport ngeoMapDirective from 'ngeo/map/directive';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr';\nimport ngeoMapRecenter from 'ngeo/map/recenter';\nimport ngeoMapResizemap from 'ngeo/map/resizemap';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module app.mapfishprint\n*/\nconst exports = {};\n\nimport 'examples/mapfishprint.css';\nimport './common_dependencies.js';\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781';\n\nimport ngeoPrintService from 'ngeo/print/Service';\nimport ngeoPrintUtils from 'ngeo/print/Utils';\nimport olMap from 'ol/Map';\nimport olView from 'ol/View';\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\nimport olLayerImage from 'ol/layer/Image';\nimport olLayerVector from 'ol/layer/Vector';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\nimport olSourceVector from 'ol/source/Vector';\nimport ngeoMapModule from 'ngeo/map/module';\n\n\n/** @type {!angular.Module} **/\nconst module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name\n]);\n\n\n/**\n * @const\n * @private\n */\napp.WMS_URL_ = 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/' +\n    'mapserv_proxy';\n\n\n/**\n * @const\n * @private\n */\napp.PRINT_URL_ = 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/' +\n    'printproxy';\n\n\n/**\n * @const\n * @private\n */\napp.PRINT_SCALES_ = [100, 250, 500, 2500, 5000, 10000, 25000, 50000,\n  100000, 500000];\n\n\n/**\n * @const\n * @private\n */\napp.PRINT_FORMAT_ = 'pdf';\n\n\n/**\n * @const\n * @private\n */\napp.PRINT_LAYOUT_ = 'A4 portrait';\n\n\n/**\n * @const\n * @private\n */\napp.PRINT_DPI_ = 72;\n\n\n/**\n * @const\n * @private\n */\napp.PRINT_PAPER_SIZE_ = [555, 675];\n\n\n/**\n * @constructor\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {ngeox.CreatePrint} ngeoCreatePrint The ngeo Create Print function.\n * @param {ngeo.print.Utils} ngeoPrintUtils The ngeo PrintUtils service.\n *//* @ngInject\n * @export\n */\napp.MainController = function($timeout, ngeoCreatePrint, ngeoPrintUtils) {\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerImage({\n        source: new olSourceImageWMS({\n          url: app.WMS_URL_,\n          params: {\n            'LAYERS': 'osm'\n          },\n          serverType: /** @type {ol.source.WMSServerType} */ ('mapserver')\n        })\n      }),\n      new olLayerVector({\n        source: new olSourceVector({\n          url: 'data/polygon-swizerland.json',\n          format: new olFormatGeoJSON({\n            defaultDataProjection: 'EPSG:21781'\n          })\n        })\n      })\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1],\n      center: [537635, 152640],\n      zoom: 3\n    })\n  });\n\n  /**\n   * Text to display a \"loading\" message while waiting for the report.\n   * @type {string}\n   * @export\n   */\n  this.printState = '';\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {ngeo.print.Service}\n   * @private\n   */\n  this.print_ = ngeoCreatePrint(app.PRINT_URL_);\n\n  /**\n   * @type {ngeo.print.Utils}\n   * @private\n   */\n  this.printUtils_ = ngeoPrintUtils;\n\n  /**\n   * @type {function(ol.render.Event)}\n   */\n  const postcomposeListener = ngeoPrintUtils.createPrintMaskPostcompose(\n    /**\n       * @return {ol.Size} Size in dots of the map to print.\n       */\n    () => app.PRINT_PAPER_SIZE_,\n    /**\n       * @param {olx.FrameState} frameState Frame state.\n       * @return {number} Scale of the map to print.\n       */\n    (frameState) => {\n      const mapSize = frameState.size;\n      const mapResolution = frameState.viewState.resolution;\n      // we test mapSize and mapResolution just to please the compiler\n      return mapSize !== undefined && mapResolution !== undefined ?\n        ngeoPrintUtils.getOptimalScale(mapSize, mapResolution,\n          app.PRINT_PAPER_SIZE_, app.PRINT_SCALES_) :\n        app.PRINT_SCALES_[0];\n    });\n\n  /**\n   * Draw the print window in a map postcompose listener.\n   */\n  this.map.on('postcompose', postcomposeListener);\n};\n\n\n/**\n * @export\n */\napp.MainController.prototype.print = function() {\n  const map = this.map;\n\n  const mapSize = map.getSize();\n  const viewResolution = map.getView().getResolution();\n\n  // we test mapSize and viewResolution just to please the compiler\n  const scale = mapSize !== undefined && viewResolution !== undefined ?\n    this.printUtils_.getOptimalScale(mapSize, viewResolution,\n      app.PRINT_PAPER_SIZE_, app.PRINT_SCALES_) :\n    app.PRINT_SCALES_[0];\n\n  const dpi = app.PRINT_DPI_;\n  const format = app.PRINT_FORMAT_;\n  const layout = app.PRINT_LAYOUT_;\n\n  this.printState = 'Printing...';\n\n  const spec = this.print_.createSpec(map, scale, dpi, layout, format, {\n    'datasource': [],\n    'debug': 0,\n    'comments': 'My comments',\n    'title': 'My print'\n  });\n\n  this.print_.createReport(spec).then(\n    this.handleCreateReportSuccess_.bind(this),\n    this.handleCreateReportError_.bind(this)\n  );\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\napp.MainController.prototype.handleCreateReportSuccess_ = function(resp) {\n  const mfResp = /** @type {MapFishPrintReportResponse} */ (resp.data);\n  this.getStatus_(mfResp.ref);\n};\n\n\n/**\n * @param {string} ref Ref.\n * @private\n */\napp.MainController.prototype.getStatus_ = function(ref) {\n  this.print_.getStatus(ref).then(\n    this.handleGetStatusSuccess_.bind(this, ref),\n    this.handleGetStatusError_.bind(this)\n  );\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\napp.MainController.prototype.handleCreateReportError_ = function(resp) {\n  this.printState = 'Print error';\n};\n\n\n/**\n * @param {string} ref Ref.\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\napp.MainController.prototype.handleGetStatusSuccess_ = function(ref, resp) {\n  const mfResp = /** @type {MapFishPrintStatusResponse} */ (resp.data);\n  const done = mfResp.done;\n  if (done) {\n    // The report is ready. Open it by changing the window location.\n    this.printState = '';\n    window.location.href = this.print_.getReportUrl(ref);\n  } else {\n    // The report is not ready yet. Check again in 1s.\n    const that = this;\n    this.$timeout_(() => {\n      that.getStatus_(ref);\n    }, 1000, false);\n  }\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\napp.MainController.prototype.handleGetStatusError_ = function(resp) {\n  this.printState = 'Print error';\n};\n\n\nmodule.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/mapfishprint.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport ngeoCustomEvent from 'ngeo/CustomEvent';\nimport olBase from 'ol';\nimport olObservable from 'ol/Observable';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerLayer from 'ol/layer/Layer';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\nimport olSourceTileWMS from 'ol/source/TileWMS';\nimport olSourceWMTS from 'ol/source/WMTS';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.print.Service\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoPrintVectorEncoder from 'ngeo/print/VectorEncoder';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper';\nimport olBase from 'ol';\nimport olLayerImage from 'ol/layer/Image';\nimport olLayerTile from 'ol/layer/Tile';\nimport olLayerVector from 'ol/layer/Vector';\nimport olMath from 'ol/math';\nimport olSize from 'ol/size';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\nimport olSourceTileWMS from 'ol/source/TileWMS';\nimport olSourceWMTS from 'ol/source/WMTS';\nimport olTilegridWMTS from 'ol/tilegrid/WMTS';\n\n/**\n * Provides a function to create ngeo.print.Service objects used to\n * interact with MapFish Print v3 services.\n *\n * ngeo.print.Service objects expose the following methods:\n *\n * - createSpec: create a report specification object\n * - createReport: send a create report request\n * - getStatus: get the status of a report\n * - getReportUrl: get the URL of a report\n * - getCapabilities: get the capabilities of the server\n *\n *\n *     let printBaseUrl = 'http://example.com/print';\n *     let print = new ngeo.print.Service(printBaseUrl);\n *\n *     let scale = 5000;\n *     let dpi = 72;\n *     let layout = 'A4 portrait';\n *     let format = 'pdf';\n *     let reportSpec = print.createSpec(map, scale, dpi, layout, format, {\n *       'title': 'A title for my report',\n *       'rotation': 45 // degree\n *     });\n *\n * See our live example: [../examples/mapfishprint.html](../examples/mapfishprint.html)\n *\n * TODO and limitations:\n *\n * - createSpec should also accept a bbox instead of a center and a scale.\n * - Add support for ol.style.RegularShape. MapFish Print supports symbols\n *   like crosses, stars and squares, so printing regular shapes should be\n *   possible.\n * - ol.style.Icon may use a sprite image, and offsets to define to rectangle\n *   to use within the sprite. This type of icons won't be printed correctly\n *   as MapFish Print does not support sprite icons.\n *\n * @constructor\n * @struct\n * @param {string} url URL to MapFish print web service.\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper service.\n */\nconst exports = function(url, $http, ngeoLayerHelper) {\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = url;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.print.VectorEncoder}\n   * @private\n   */\n  this.vectorEncoder_ = new ngeoPrintVectorEncoder();\n};\n\n\n/**\n * Cancel a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.cancel = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/cancel/${ref}`;\n  // \"delete\" is a reserved word, so use ['delete']\n  return this.$http_['delete'](url, httpConfig);\n};\n\n\n/**\n * Create a report specification.\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {number} dpi DPI.\n * @param {string} layout Layout.\n * @param {string} format Formats.\n * @param {Object.<string, *>} customAttributes Custom attributes.\n * @return {MapFishPrintSpec} The print spec.\n * @export\n */\nexports.prototype.createSpec = function(\n  map, scale, dpi, layout, format, customAttributes) {\n\n  const specMap = /** @type {MapFishPrintMap} */ ({\n    dpi: dpi,\n    rotation: /** number */ (customAttributes['rotation'])\n  });\n\n  this.encodeMap_(map, scale, specMap);\n\n  const attributes = /** @type {!MapFishPrintAttributes} */ ({\n    map: specMap\n  });\n  olBase.obj.assign(attributes, customAttributes);\n\n  const spec = /** @type {MapFishPrintSpec} */ ({\n    attributes,\n    format,\n    layout\n  });\n\n  return spec;\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {MapFishPrintMap} object Object.\n * @private\n */\nexports.prototype.encodeMap_ = function(map, scale, object) {\n  const view = map.getView();\n  const viewCenter = view.getCenter();\n  const viewProjection = view.getProjection();\n  const viewResolution = view.getResolution();\n  const viewRotation = object.rotation || olMath.toDegrees(view.getRotation());\n\n  goog.asserts.assert(viewCenter !== undefined);\n  goog.asserts.assert(viewProjection !== undefined);\n\n  object.center = viewCenter;\n  object.projection = viewProjection.getCode();\n  object.rotation = viewRotation;\n  object.scale = scale;\n  object.layers = [];\n\n  const mapLayerGroup = map.getLayerGroup();\n  goog.asserts.assert(mapLayerGroup !== null);\n  let layers = this.ngeoLayerHelper_.getFlatLayers(mapLayerGroup);\n  layers = layers.slice().reverse();\n\n  layers.forEach((layer) => {\n    if (layer.getVisible()) {\n      goog.asserts.assert(viewResolution !== undefined);\n      this.encodeLayer(object.layers, layer, viewResolution);\n    }\n  });\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Base} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeLayer = function(arr, layer, resolution) {\n  if (layer instanceof olLayerImage) {\n    this.encodeImageLayer_(arr, layer);\n  } else if (layer instanceof olLayerTile) {\n    this.encodeTileLayer_(arr, layer);\n  } else if (layer instanceof olLayerVector) {\n    this.vectorEncoder_.encodeVectorLayer(arr, layer, resolution);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageLayer_ = function(arr, layer) {\n  goog.asserts.assertInstanceof(layer, olLayerImage);\n  const source = layer.getSource();\n  if (source instanceof olSourceImageWMS) {\n    this.encodeImageWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  goog.asserts.assertInstanceof(layer, olLayerImage);\n  goog.asserts.assertInstanceof(source, olSourceImageWMS);\n\n  const url = source.getUrl();\n  if (url !== undefined) {\n    this.encodeWmsLayer_(\n      arr, layer.getOpacity(), url, source.getParams());\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {number} opacity Opacity of the layer.\n * @param {string} url Url of the WMS server.\n * @param {Object} params Url parameters\n * @private\n */\nexports.prototype.encodeWmsLayer_ = function(arr, opacity, url, params) {\n  if (url.startsWith('//')) {\n    url = window.location.protocol  + url;\n  }\n  const url_url = new URL(url);\n  const customParams = {'TRANSPARENT': true};\n  if (url_url.searchParams) {\n    for (const element of url_url.searchParams) {\n      customParams[element[0]] = element[1];\n    }\n  }\n  for (const key in params) {\n    const value = params[key];\n    // remove empty params\n    if (value !== null && value !== undefined) {\n      customParams[key] = value;\n    }\n  }\n  delete customParams['LAYERS'];\n  delete customParams['FORMAT'];\n  delete customParams['SERVERTYPE'];\n  delete customParams['VERSION'];\n\n  const object = /** @type {MapFishPrintWmsLayer} */ ({\n    baseURL: exports.getAbsoluteUrl_(url_url.origin + url_url.pathname),\n    imageFormat: 'FORMAT' in params ? params['FORMAT'] : 'image/png',\n    layers: params['LAYERS'].split(','),\n    customParams: customParams,\n    serverType: params['SERVERTYPE'],\n    type: 'wms',\n    opacity: opacity,\n    version: params['VERSION']\n  });\n  arr.push(object);\n};\n\n\n/**\n * @param {string} url URL.\n * @return {string} Absolute URL.\n * @private\n */\nexports.getAbsoluteUrl_ = function(url) {\n  const a = document.createElement('a');\n  a.href = encodeURI(url);\n  return decodeURI(a.href);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileLayer_ = function(arr, layer) {\n  goog.asserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  if (source instanceof olSourceWMTS) {\n    this.encodeTileWmtsLayer_(arr, layer);\n  } else if (source instanceof olSourceTileWMS) {\n    this.encodeTileWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmtsLayer_ = function(arr, layer) {\n  goog.asserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  goog.asserts.assertInstanceof(source, olSourceWMTS);\n\n  const projection = source.getProjection();\n  const tileGrid = source.getTileGrid();\n  goog.asserts.assertInstanceof(tileGrid, olTilegridWMTS);\n  const matrixIds = tileGrid.getMatrixIds();\n\n  /** @type {Array.<MapFishPrintWmtsMatrix>} */\n  const matrices = [];\n\n  for (let i = 0, ii = matrixIds.length; i < ii; ++i) {\n    const tileRange = tileGrid.getFullTileRange(i);\n    matrices.push(/** @type {MapFishPrintWmtsMatrix} */ ({\n      identifier: matrixIds[i],\n      scaleDenominator: tileGrid.getResolution(i) *\n          projection.getMetersPerUnit() / 0.28E-3,\n      tileSize: olSize.toSize(tileGrid.getTileSize(i)),\n      topLeftCorner: tileGrid.getOrigin(i),\n      matrixSize: [\n        tileRange.maxX - tileRange.minX,\n        tileRange.maxY - tileRange.minY\n      ]\n    }));\n  }\n\n  const dimensions = source.getDimensions();\n  const dimensionKeys = Object.keys(dimensions);\n\n  const object = /** @type {MapFishPrintWmtsLayer} */ ({\n    baseURL: this.getWmtsUrl_(source),\n    dimensions: dimensionKeys,\n    dimensionParams: dimensions,\n    imageFormat: source.getFormat(),\n    layer: source.getLayer(),\n    matrices: matrices,\n    matrixSet: source.getMatrixSet(),\n    opacity: layer.getOpacity(),\n    requestEncoding: source.getRequestEncoding(),\n    style: source.getStyle(),\n    type: 'WMTS',\n    version: source.getVersion()\n  });\n\n  arr.push(object);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  goog.asserts.assertInstanceof(layer, olLayerTile);\n  goog.asserts.assertInstanceof(source, olSourceTileWMS);\n\n  this.encodeWmsLayer_(\n    arr, layer.getOpacity(), source.getUrls()[0], source.getParams());\n};\n\n\n/**\n * Return the WMTS URL to use in the print spec.\n * @param {ol.source.WMTS} source The WMTS source.\n * @return {string} URL.\n * @private\n */\nexports.prototype.getWmtsUrl_ = function(source) {\n  const urls = source.getUrls();\n  goog.asserts.assert(urls.length > 0);\n  return exports.getAbsoluteUrl_(urls[0]);\n};\n\n\n/**\n * Send a create report request to the MapFish Print service.\n * @param {MapFishPrintSpec} printSpec Print specification.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.createReport = function(printSpec, opt_httpConfig) {\n  const format = printSpec.format || 'pdf';\n  const url = `${this.url_}/report.${format}`;\n  const httpConfig = /** @type {!angular.$http.Config} */ ({\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8'\n    }\n  });\n  olBase.obj.assign(httpConfig,\n    opt_httpConfig !== undefined ? opt_httpConfig : {});\n  return this.$http_.post(url, printSpec, httpConfig);\n};\n\n\n/**\n * Get the status of a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.getStatus = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/status/${ref}.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * Get the URL of a report.\n * @param {string} ref Print report reference.\n * @return {string} The report URL for this ref.\n * @export\n */\nexports.prototype.getReportUrl = function(ref) {\n  return `${this.url_}/report/${ref}`;\n};\n\n\n/**\n * Get the print capabilities from MapFish Print.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n */\nexports.prototype.getCapabilities = function(opt_httpConfig) {\n  const httpConfig =\n    opt_httpConfig !== undefined ? opt_httpConfig : /** @type {angular.$http.Config} */ ({\n      withCredentials: true\n    });\n  const url = `${this.url_}/capabilities.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @return {ngeox.CreatePrint} The function to create a print service.\n *//* @ngInject\n * @ngdoc service\n * @ngname ngeoCreatePrint\n */\nexports.createPrintServiceFactory = function($http, ngeoLayerHelper) {\n  return (\n    /**\n     * @param {string} url URL to MapFish print service.\n     */\n    function(url) {\n      return new exports(url, $http, ngeoLayerHelper);\n    }\n  );\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrint', [\n  ngeoMapLayerHelper.module.name\n]);\nexports.module.service('ngeoPrintService', exports);\nexports.module.factory('ngeoCreatePrint', exports.createPrintServiceFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/print/Service.js","/**\n * @module ngeo.print.VectorEncoder\n*/\nimport olBase from 'ol';\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleRegularShape from 'ol/style/RegularShape';\nimport olMath from 'ol/math';\nimport olStyleIcon from 'ol/style/Icon';\nimport olStyleCircle from 'ol/style/Circle';\nimport olColor from 'ol/color';\nimport googAsserts from 'goog/asserts';\nimport ngeoUtils from 'ngeo/utils';\n\n/**\n * @constructor\n */\nconst exports = function() {\n  /**\n   * @type {ol.format.GeoJSON}\n   */\n  this.geojsonFormat = new olFormatGeoJSON();\n};\n\n\n/**\n * @enum {string}\n */\nexports.PrintStyleType = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.print.VectorEncoder.PrintStyleType>}\n * @private\n */\nexports.PrintStyleTypes_ = {\n  'LineString': exports.PrintStyleType.LINE_STRING,\n  'Point': exports.PrintStyleType.POINT,\n  'Polygon': exports.PrintStyleType.POLYGON,\n  'MultiLineString': exports.PrintStyleType.LINE_STRING,\n  'MultiPoint': exports.PrintStyleType.POINT,\n  'MultiPolygon': exports.PrintStyleType.POLYGON\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Vector} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeVectorLayer = function(arr, layer, resolution) {\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceVector);\n\n  const features = source.getFeatures();\n\n  const /** @type {Array.<GeoJSONFeature>} */ geojsonFeatures = [];\n  const mapfishStyleObject = /** @type {MapFishPrintVectorStyle} */ ({\n    version: 2\n  });\n\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const originalFeature = features[i];\n\n    let styleData = null;\n    let styleFunction = originalFeature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      styleData = styleFunction.call(originalFeature, resolution);\n    } else {\n      styleFunction = layer.getStyleFunction();\n      if (styleFunction !== undefined) {\n        styleData = styleFunction.call(layer, originalFeature, resolution);\n      }\n    }\n    const origGeojsonFeature = this.geojsonFormat.writeFeatureObject(originalFeature);\n    /**\n     * @type {Array<ol.style.Style>}\n     */\n    const styles = (styleData !== null && !Array.isArray(styleData)) ? [styleData] : styleData;\n    googAsserts.assert(Array.isArray(styles));\n\n    if (styles !== null && styles.length > 0) {\n      let isOriginalFeatureAdded = false;\n      for (let j = 0, jj = styles.length; j < jj; ++j) {\n        const style = styles[j];\n        const styleId = olBase.getUid(style).toString();\n        let geometry = style.getGeometry();\n        let geojsonFeature;\n        if (!geometry) {\n          geojsonFeature = origGeojsonFeature;\n          geometry = originalFeature.getGeometry();\n          // no need to encode features with no geometry\n          if (!geometry) {\n            continue;\n          }\n          if (!isOriginalFeatureAdded) {\n            geojsonFeatures.push(geojsonFeature);\n            isOriginalFeatureAdded = true;\n          }\n        } else {\n          let styledFeature = originalFeature.clone();\n          styledFeature.setGeometry(geometry);\n          geojsonFeature = this.geojsonFormat.writeFeatureObject(styledFeature);\n          geometry = styledFeature.getGeometry();\n          styledFeature = null;\n          geojsonFeatures.push(geojsonFeature);\n        }\n\n        const geometryType = geometry.getType();\n        if (geojsonFeature.properties === null) {\n          geojsonFeature.properties = {};\n        }\n\n        const featureStyleProp = `_ngeo_style_${j}`;\n        this.encodeVectorStyle(mapfishStyleObject, geometryType, style, styleId, featureStyleProp);\n        geojsonFeature.properties[featureStyleProp] = styleId;\n      }\n    }\n  }\n\n  // MapFish Print fails if there are no style rules, even if there are no\n  // features either. To work around this we just ignore the layer if the\n  // array of GeoJSON features is empty.\n  // See https://github.com/mapfish/mapfish-print/issues/279\n\n  if (geojsonFeatures.length > 0) {\n    const geojsonFeatureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n      type: 'FeatureCollection',\n      features: geojsonFeatures\n    });\n    const object = /** @type {MapFishPrintVectorLayer} */ ({\n      geoJson: geojsonFeatureCollection,\n      opacity: layer.getOpacity(),\n      style: mapfishStyleObject,\n      type: 'geojson'\n    });\n    arr.push(object);\n  }\n};\n\n\n/**\n * @param {MapFishPrintVectorStyle} object MapFish style object.\n * @param {ol.geom.GeometryType} geometryType Type of the GeoJSON geometry\n * @param {ol.style.Style} style Style.\n * @param {string} styleId Style id.\n * @param {string} featureStyleProp Feature style property name.\n */\nexports.prototype.encodeVectorStyle = function(object, geometryType, style, styleId, featureStyleProp) {\n  if (!(geometryType in exports.PrintStyleTypes_)) {\n    // unsupported geometry type\n    return;\n  }\n  const styleType = exports.PrintStyleTypes_[geometryType];\n  const key = `[${featureStyleProp} = '${styleId}']`;\n  if (key in object) {\n    // do nothing if we already have a style object for this CQL rule\n    return;\n  }\n  const styleObject = /** @type {MapFishPrintSymbolizers} */ ({\n    symbolizers: []\n  });\n  object[key] = styleObject;\n  const fillStyle = style.getFill();\n  const imageStyle = style.getImage();\n  const strokeStyle = style.getStroke();\n  const textStyle = style.getText();\n  if (styleType === exports.PrintStyleType.POLYGON) {\n    if (fillStyle !== null) {\n      this.encodeVectorStylePolygon_(\n        styleObject.symbolizers, fillStyle, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.LINE_STRING) {\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleLine_(styleObject.symbolizers, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.POINT) {\n    if (imageStyle !== null) {\n      this.encodeVectorStylePoint_(styleObject.symbolizers, imageStyle);\n    }\n  }\n  if (textStyle !== null) {\n    this.encodeTextStyle_(styleObject.symbolizers, textStyle);\n  }\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerPolygon} symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @private\n */\nexports.prototype.encodeVectorStyleFill_ = function(symbolizer, fillStyle) {\n  let fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n    fillColor = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    symbolizer.fillColor = ngeoUtils.rgbArrayToHex(fillColor);\n    symbolizer.fillOpacity = fillColor[3];\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @private\n */\nexports.prototype.encodeVectorStyleLine_ = function(symbolizers, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerLine} */ ({\n    type: 'line'\n  });\n  this.encodeVectorStyleStroke_(symbolizer, strokeStyle);\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Image} imageStyle Image style.\n * @private\n */\nexports.prototype.encodeVectorStylePoint_ = function(symbolizers, imageStyle) {\n  let symbolizer;\n  if (imageStyle instanceof olStyleCircle) {\n    symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n      type: 'point'\n    });\n    symbolizer.pointRadius = imageStyle.getRadius();\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      this.encodeVectorStyleFill_(symbolizer, fillStyle);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleStroke_(symbolizer, strokeStyle);\n    }\n  } else if (imageStyle instanceof olStyleIcon) {\n    const src = imageStyle.getSrc();\n    if (src !== undefined) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point',\n        externalGraphic: src\n      });\n      const opacity = imageStyle.getOpacity();\n      if (opacity !== null) {\n        symbolizer.graphicOpacity = opacity;\n      }\n      const size = imageStyle.getSize();\n      if (size !== null) {\n        let scale = imageStyle.getScale();\n        if (isNaN(scale)) {\n          scale = 1;\n        }\n        symbolizer.graphicWidth = size[0] * scale;\n        symbolizer.graphicHeight = size[1] * scale;\n      }\n      let rotation = imageStyle.getRotation();\n      if (isNaN(rotation)) {\n        rotation = 0;\n      }\n      symbolizer.rotation = olMath.toDegrees(rotation);\n    }\n  } else if (imageStyle instanceof olStyleRegularShape) {\n    /**\n     * Mapfish Print does not support image defined with ol.style.RegularShape.\n     * As a workaround, I try to map the image on a well-known image name.\n     */\n    const points = /** @type {ol.style.RegularShape} */ (imageStyle).getPoints();\n    if (points !== null) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point'\n      });\n      if (points === 4) {\n        symbolizer.graphicName = 'square';\n      } else if (points === 3) {\n        symbolizer.graphicName = 'triangle';\n      } else if (points === 5) {\n        symbolizer.graphicName = 'star';\n      } else if (points === 8) {\n        symbolizer.graphicName = 'cross';\n      }\n      const sizeShape = imageStyle.getSize();\n      if (sizeShape !== null) {\n        symbolizer.graphicWidth = sizeShape[0];\n        symbolizer.graphicHeight = sizeShape[1];\n      }\n      const rotationShape = imageStyle.getRotation();\n      if (!isNaN(rotationShape) && rotationShape !== 0) {\n        symbolizer.rotation = olMath.toDegrees(rotationShape);\n      }\n      const opacityShape = imageStyle.getOpacity();\n      if (opacityShape !== null) {\n        symbolizer.graphicOpacity = opacityShape;\n      }\n      const strokeShape = imageStyle.getStroke();\n      if (strokeShape !== null) {\n        this.encodeVectorStyleStroke_(symbolizer, strokeShape);\n      }\n      const fillShape = imageStyle.getFill();\n      if (fillShape !== null) {\n        this.encodeVectorStyleFill_(symbolizer, fillShape);\n      }\n    }\n  }\n  if (symbolizer !== undefined) {\n    symbolizers.push(symbolizer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @private\n */\nexports.prototype.encodeVectorStylePolygon_ = function(symbolizers, fillStyle, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerPolygon} */ ({\n    type: 'polygon'\n  });\n  this.encodeVectorStyleFill_(symbolizer, fillStyle);\n  if (strokeStyle !== null) {\n    this.encodeVectorStyleStroke_(symbolizer, strokeStyle);\n  }\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerLine|MapFishPrintSymbolizerPolygon}\n *      symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @private\n */\nexports.prototype.encodeVectorStyleStroke_ = function(symbolizer, strokeStyle) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    symbolizer.strokeColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    symbolizer.strokeOpacity = strokeColorRgba[3];\n  }\n  const strokeDashstyle = strokeStyle.getLineDash();\n  if (strokeDashstyle !== null) {\n    symbolizer.strokeDashstyle = strokeDashstyle.join(' ');\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    symbolizer.strokeWidth = strokeWidth;\n  }\n  const strokeLineCap = strokeStyle.getLineCap();\n  if (strokeLineCap) {\n    symbolizer.strokeLinecap = strokeStyle.getLineCap();\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizerText>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Text} textStyle Text style.\n * @private\n */\nexports.prototype.encodeTextStyle_ = function(symbolizers, textStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerText} */ ({\n    type: 'Text'\n  });\n  const label = textStyle.getText();\n  if (label !== undefined) {\n    symbolizer.label = label;\n    let xAlign = 'c';\n    let yAlign = 'm';\n\n    const olTextAlign = textStyle.getTextAlign();\n    // 'left', 'right', 'center', 'end' or 'start'.\n    if (olTextAlign === 'left' || olTextAlign === 'start') {\n      xAlign = 'l';\n    } else if (olTextAlign === 'right' || olTextAlign === 'end') {\n      xAlign = 'r';\n    }\n\n    const olTextBaseline = textStyle.getTextBaseline();\n    // 'bottom', 'top', 'middle', 'alphabetic', 'hanging' or 'ideographic'\n    if (olTextBaseline === 'bottom') {\n      yAlign = 'l';\n    } else if (olTextBaseline === 'top') {\n      yAlign = 't';\n    }\n    symbolizer.labelAlign = `${xAlign}${yAlign}`;\n\n    const labelRotation = textStyle.getRotation();\n    if (labelRotation !== undefined) {\n      // Mapfish Print expects a string, not a number to rotate text\n      symbolizer.labelRotation = (labelRotation * 180 / Math.PI).toString();\n      // rotate around the vertical/horizontal center\n      symbolizer.labelAlign = 'cm';\n    }\n\n    const fontStyle = textStyle.getFont();\n    if (fontStyle !== undefined) {\n      const font = fontStyle.split(' ');\n      if (font.length >= 3) {\n        symbolizer.fontWeight = font[0];\n        symbolizer.fontSize = font[1];\n        symbolizer.fontFamily = font.splice(2).join(' ');\n      }\n    }\n\n    const strokeStyle = textStyle.getStroke();\n    if (strokeStyle !== null) {\n      const strokeColor = strokeStyle.getColor();\n      googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n      const strokeColorRgba = olColor.asArray(strokeColor);\n      googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n      symbolizer.haloColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n      symbolizer.haloOpacity = strokeColorRgba[3];\n      const width = strokeStyle.getWidth();\n      if (width !== undefined) {\n        // Width is a stroke, radius a radius, so divide by 2\n        symbolizer.haloRadius = width / 2;\n      }\n    }\n\n    const fillStyle = textStyle.getFill();\n    if (fillStyle !== null) {\n      const fillColor = fillStyle.getColor();\n      googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n      const fillColorRgba = olColor.asArray(fillColor);\n      googAsserts.assert(Array.isArray(fillColorRgba), 'only supporting fill colors');\n      symbolizer.fontColor = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    }\n\n    // Mapfish Print allows offset only if labelAlign is defined.\n    if (symbolizer.labelAlign !== undefined) {\n      symbolizer.labelXOffset = textStyle.getOffsetX();\n      // Mapfish uses the opposite direction of OpenLayers for y axis, so the\n      // minus sign is required for the y offset to be identical.\n      symbolizer.labelYOffset = -textStyle.getOffsetY();\n    }\n\n    symbolizers.push(symbolizer);\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/print/VectorEncoder.js","/**\n * @module ngeo.print.Utils\n*/\nimport ngeoBase from 'ngeo';\nimport olHas from 'ol/has';\nimport olMath from 'ol/math';\n\n/**\n * Provides a service with print utility functions.\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoPrintUtils\n */\nconst exports = function() {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfHorizontalDistance_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfVerticalDistance_;\n\n};\n\n\n/**\n * @const\n * @private\n */\nexports.INCHES_PER_METER_ = 39.37;\n\n\n/**\n * @const\n * @private\n */\nexports.DOTS_PER_INCH_ = 72;\n\n\n/**\n * Return a function to use as map postcompose listener for drawing a print\n * mask on the map.\n * @param {function():ol.Size} getSize User-defined function returning the\n *     size in dots of the map to print.\n * @param {function(olx.FrameState):number} getScale User-defined function\n *     returning the scale of the map to print.\n * @param {function():number=} opt_rotation User defined function returning the\n *     inclination of the canvas in degree (-180 to 180).\n * returning the scale of the map to print.\n * @return {function(ol.render.Event)} Function to use as a map postcompose\n * listener.\n * @export\n */\nexports.prototype.createPrintMaskPostcompose = function(getSize, getScale, opt_rotation) {\n  const self = this;\n\n  return (\n  /**\n        * @param {ol.render.Event} evt Postcompose event.\n        */\n    function(evt) {\n      const context = evt.context;\n      const frameState = evt.frameState;\n\n      const resolution = frameState.viewState.resolution;\n\n      const viewportWidth = frameState.size[0] * frameState.pixelRatio;\n      const viewportHeight = frameState.size[1] * frameState.pixelRatio;\n\n      const center = [viewportWidth / 2, viewportHeight / 2];\n\n      const size = getSize();\n      const height = size[1] * olHas.DEVICE_PIXEL_RATIO;\n      const width = size[0] * olHas.DEVICE_PIXEL_RATIO;\n      const scale = getScale(frameState);\n\n      const ppi = exports.DOTS_PER_INCH_;\n      const ipm = exports.INCHES_PER_METER_;\n\n      const extentHalfWidth =\n           (((width / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfHorizontalDistance_ =\n           (((size[0] / ppi) / ipm) * scale) / 2;\n\n      const extentHalfHeight =\n           (((height / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfVerticalDistance_ =\n           (((size[1] / ppi) / ipm) * scale) / 2;\n\n      // Draw a mask on the whole map.\n      context.beginPath();\n      context.moveTo(0, 0);\n      context.lineTo(viewportWidth, 0);\n      context.lineTo(viewportWidth, viewportHeight);\n      context.lineTo(0, viewportHeight);\n      context.lineTo(0, 0);\n      context.closePath();\n\n      // Draw the print zone\n      if (!opt_rotation) {\n        self.drawPrintZone_(context, center, extentHalfWidth,\n          extentHalfHeight);\n      } else {\n        const rotation = olMath.toRadians(opt_rotation());\n        self.drawPrintZoneWithRotation_(context, center, extentHalfWidth,\n          extentHalfHeight, rotation);\n      }\n\n      // Fill the mask\n      context.fillStyle = 'rgba(0, 5, 25, 0.5)';\n      context.fill();\n    }\n  );\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @private\n */\nexports.prototype.drawPrintZone_ = function(context, center,\n  extentHalfWidth, extentHalfHeight) {\n  const minx = center[0] - extentHalfWidth;\n  const miny = center[1] - extentHalfHeight;\n  const maxx = center[0] + extentHalfWidth;\n  const maxy = center[1] + extentHalfHeight;\n\n  context.moveTo(minx, miny);\n  context.lineTo(minx, maxy);\n  context.lineTo(maxx, maxy);\n  context.lineTo(maxx, miny);\n  context.lineTo(minx, miny);\n  context.closePath();\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @param {number} rotation Rotation value in radians.\n * @private\n */\nexports.prototype.drawPrintZoneWithRotation_ = function(context, center,\n  extentHalfWidth, extentHalfHeight, rotation) {\n  // diagonal = distance p1 to center.\n  const diagonal = Math.sqrt(Math.pow(extentHalfWidth, 2) +\n      Math.pow(extentHalfHeight, 2));\n  // gamma = angle between horizontal and diagonal (with rotation).\n  const gamma = Math.atan(extentHalfHeight / extentHalfWidth) - rotation;\n  // omega = angle between diagonal and vertical (with rotation).\n  const omega = Math.atan(extentHalfWidth / extentHalfHeight) - rotation;\n  // Calculation of each corner.\n  const x1 = center[0] - Math.cos(gamma) * diagonal;\n  const y1 = center[1] + Math.sin(gamma) * diagonal;\n  const x2 = center[0] + Math.sin(omega) * diagonal;\n  const y2 = center[1] + Math.cos(omega) * diagonal;\n  const x3 = center[0] + Math.cos(gamma) * diagonal;\n  const y3 = center[1] - Math.sin(gamma) * diagonal;\n  const x4 = center[0] - Math.sin(omega) * diagonal;\n  const y4 = center[1] - Math.cos(omega) * diagonal;\n\n  context.moveTo(x1, y1);\n  context.lineTo(x2, y2);\n  context.lineTo(x3, y3);\n  context.lineTo(x4, y4);\n  context.lineTo(x1, y1);\n  context.closePath();\n};\n\n\n/**\n * Get the optimal print scale for a map, the map being defined by its\n * size (in pixels) and resolution (in map units per pixel).\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {number} mapResolution Resolution of the map on the screen.\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {Array.<number>} printMapScales Supported map scales on the paper.\n * The scales are provided as scale denominators, sorted in ascending order.\n * E.g. `[500, 1000, 2000, 4000]`.\n * @return {number} The best scale. `-1` is returned if there is no optimal\n * scale, that is the optimal scale is lower than or equal to the first value\n * in `printMapScales`.\n * @export\n */\nexports.prototype.getOptimalScale = function(\n  mapSize, mapResolution, printMapSize, printMapScales) {\n\n  const mapWidth = mapSize[0] * mapResolution;\n  const mapHeight = mapSize[1] * mapResolution;\n\n  const scaleWidth = mapWidth * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[0];\n  const scaleHeight = mapHeight * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[1];\n\n  const scale = Math.min(scaleWidth, scaleHeight);\n\n  let optimal = -1;\n  for (let i = 0, ii = printMapScales.length; i < ii; ++i) {\n    if (scale > printMapScales[i]) {\n      optimal = printMapScales[i];\n    }\n  }\n\n  return optimal;\n};\n\n\n/**\n * Get the optimal map resolution for a print scale and a map size.\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {number} printMapScale Map scale on the paper.\n * @return {number} The optimal map resolution.\n * @export\n */\nexports.prototype.getOptimalResolution = function(\n  mapSize, printMapSize, printMapScale) {\n\n  const dotsPerMeter =\n      exports.DOTS_PER_INCH_ * exports.INCHES_PER_METER_;\n\n  const resolutionX = (printMapSize[0] * printMapScale) /\n      (dotsPerMeter * mapSize[0]);\n  const resolutionY = (printMapSize[1] * printMapScale) /\n      (dotsPerMeter * mapSize[1]);\n\n  const optimalResolution = Math.max(resolutionX, resolutionY);\n\n  return optimalResolution;\n};\n\n\n/**\n * Get the coordinates of the bottom left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the bottom left corner.\n */\nexports.prototype.getBottomLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the bottom rigth corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.ç\n * @return {ol.Coordinate} The coordinates of the bottom rigth corner.\n */\nexports.prototype.getBottomRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up left corner.\n */\nexports.prototype.getUpLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up right corner.\n */\nexports.prototype.getUpRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrintUtils', []);\nexports.module.service('ngeoPrintUtils', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/print/Utils.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap';\n\nimport olEvents from 'ol/events';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources';\n\nimport olEvents from 'ol/events';\nimport olObservable from 'ol/Observable';\nimport olView from 'ol/View';\nimport googAsserts from 'goog/asserts';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\nngeoBase.module.service(\n  'ngeoSyncDataSourcesMap', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olEvents from 'ol/events';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo';\nimport olArray from 'ol/array';\nimport olMap from 'ol/Map';\nimport olEvents from 'ol/events';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  var multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  var flatCoordinates = this.flatCoordinates;\n  var stride = this.stride;\n  var i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  var n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  var point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  var flatCoordinates = this.flatCoordinates;\n  var layout = this.layout;\n  var stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  var points = [];\n  var i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    var point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  var flatCoordinates = this.flatCoordinates;\n  var stride = this.stride;\n  var i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n        this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  var multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  var lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  var flatCoordinates = this.flatCoordinates;\n  var ends = this.ends_;\n  var layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  var lineStrings = [];\n  var offset = 0;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  var midpoints = [];\n  var flatCoordinates = this.flatCoordinates;\n  var offset = 0;\n  var ends = this.ends_;\n  var stride = this.stride;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var midpoint = _ol_geom_flat_interpolate_.lineString(\n        flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n  var simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n      GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = _ol_geom_flat_deflate_.coordinatess(\n        this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var ends = [];\n  var i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    var lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  var ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    var offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  var multiPolygon = new MultiPolygon(null);\n\n  var len = this.endss_.length;\n  var newEndss = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  var flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n      flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    var flatCenters = _ol_geom_flat_center_.linearRingss(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  var interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n      this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    var flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n  var simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n      GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  var offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    var prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  var ends = this.endss_[index].slice();\n  var end = ends[ends.length - 1];\n  if (offset !== 0) {\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  var polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  var layout = this.layout;\n  var flatCoordinates = this.flatCoordinates;\n  var endss = this.endss_;\n  var polygons = [];\n  var offset = 0;\n  var i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    var polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n        layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = _ol_geom_flat_deflate_.coordinatesss(\n        this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var endss = [];\n  var i, ii, ends;\n  for (i = 0, ii = polygons.length; i < ii; ++i) {\n    var polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    var offset = flatCoordinates.length;\n    ends = polygon.getEnds();\n    var j, jj;\n    for (j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nvar GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  var clonedGeometries = [];\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  var i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  var i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  var geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    _ol_obj_.clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  var key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    var simplifiedGeometries = [];\n    var geometries = this.geometries_;\n    var simplified = false;\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      var geometry = geometries[i];\n      var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      var simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  var anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n      GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 72\n// module chunks = 0 1 2 3 4 5 7 9 10","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  var projCodes = Object.keys(proj4.defs);\n  var len = projCodes.length;\n  var i, j;\n  for (i = 0; i < len; ++i) {\n    var code = projCodes[i];\n    if (!get(code)) {\n      var def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    var code1 = projCodes[i];\n    var proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      var code2 = projCodes[j];\n      var proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          var transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 73\n// module chunks = 0 1 3 4 5 12 13 17 18","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 74\n// module chunks = 0 1 3 4 5 12 13 17 18","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nvar XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  var dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  var m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  var date = new Date(dateTime * 1000);\n  var string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  var string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  var string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 79\n// module chunks = 0 1 2 5 10","/**\n * @module ngeo.proj.EPSG21781\n*/\nimport olProj from 'ol/proj';\nimport olProjProj4 from 'ol/proj/proj4';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc';\n\nif (typeof olProjProj4.get() == 'function') {\n  const epsg21781def = [\n    '+proj=somerc',\n    '+lat_0=46.95240555555556',\n    '+lon_0=7.439583333333333',\n    '+k_0=1',\n    '+x_0=600000',\n    '+y_0=200000',\n    '+ellps=bessel',\n    '+towgs84=674.374,15.056,405.346,0,0,0,0',\n    '+units=m',\n    '+no_defs'\n  ].join(' ');\n  const epsg21781extent = [420000, 30000, 900000, 350000];\n\n  olProjProj4.get().defs('EPSG:21781', epsg21781def);\n  olProj.get('EPSG:21781').setExtent(epsg21781extent);\n}\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n*/\nconst exports = {};\nimport olProj from 'ol/proj';\nimport olProjProj4 from 'ol/proj/proj4';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nif (typeof olProjProj4.get() !== 'function' && typeof proj4 === 'function') {\n  olProj.setProj4(proj4);\n}\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 93\n// module chunks = 0 1 3 4 5 12 13 17 18"],"sourceRoot":""}