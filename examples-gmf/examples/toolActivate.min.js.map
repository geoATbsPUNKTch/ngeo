{"version":3,"sources":["webpack:///./src/misc/ToolActivate.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/misc/decorate.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.prod.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./examples/toolActivate.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js"],"names":["_ngeo","__webpack_require__","toolContext","activePropertyName","this","getActive","setActive","newVal","d","__webpack_exports__","DEFAULT_WMS_VERSION","exports","angular","module","_ngeo2","default","requires","push","name","btnGroupComponent_","$parse","restrict","controller","link","scope","element","attrs","assign","$watch","buttons_","some","buttonModel","newValue","directive","BtnGroupController","$scope","scope_","prototype","activate","index","forEach","expressionFn","i","addButton","length","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","undefined","on","$apply","$setViewValue","$viewValue","$render","toggleClass","interaction","_asserts2","assertInstanceof","_Interaction2","Object","defineProperty","get","set","val","layer","_Base2","configurable","getVisible","setVisible","getOpacity","setOpacity","source","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","parent","decrementLoadCount_","decrement_","getLayers","olEvent","getSource","fail","$applyAsync","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","$rootScope","groups_","registerTool","groupName","tool","opt_defaultActivate","_this","entries","unlisten","oldVal","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","assert","unregisterTool","splice","unregisterGroup","activateTool","deactivateTool","hasActiveTool","service","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","call","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","ol","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","unlistenByKey","ol_Image","ImageWMS","opt_options","options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","x","Math","floor","y","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","listen","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","bbox","axisOrientation","getAxisOrientation","substr","join","uri","appendParams","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","type","detail","arguments","_Event2","_ol2","inherits","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","res","key","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","value","_Collection2","featureUidToGroupIndex_","source_","_Vector4","useSpatialIndex","layer_","_Vector2","style","styleFunction_","bind","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","featureUid","getUid","toString","features","removeFeature","clear","group","_obj2","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","map","setMap","setStyle","createFunction","condition","opt_message","var_args","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","item","mapUid","previous","setAt","removeAt","insertAt","event","_CustomEvent2","current","dispatchEvent","updateDimensions","dimensions","baseBgLayer","layers","getArray","_Layer2","hasUpdates","updatedDimensions","refresh","directive_","$window","ngeoSyncDataSourcesMap","prop","$eval","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","_events2","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","view","getView","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","evt","target","_View2","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","manager","manager_","features_","index_","setFeatures","handleFeatureAdd_","handleFeatureRemove_","e","Error","code","app","ngeo","_module2","_btnComponent2","_ToolActivateMgr2","MainController","ngeoFeatureOverlayMgr","ngeoToolActivateMgr","_Tile2","_OSM2","zoom","overlay","fill","_Fill2","color","stroke","_Stroke2","width","_Circle2","radius","mapClickIsEnabled","content","document","getElementById","c","_coordinate2","toStringXY","innerHTML","mapClickTool","_ToolActivate2","drawPoint","_Draw2","_decorate2","addInteraction","drawPointTool","drawLine","drawLineTool","drawPolygon","drawPolygonTool","$element","$attrs","mapExpr","recenter","attr","getSize","fit","setZoom","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","templateUrl","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","goog","zoomLevels","keys","newLength","Number","sort","_array2","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","_this2","__WEBPACK_IMPORTED_MODULE_9__math_js__","MultiPoint","coordinates","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","setCoordinates","__WEBPACK_IMPORTED_MODULE_0__index_js__","appendPoint","point","flatCoordinates","__WEBPACK_IMPORTED_MODULE_1__array_js__","getFlatCoordinates","slice","clone","multiPoint","setFlatCoordinates","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","ii","j","stride","squaredDistance","getCoordinates","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","points","getType","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_POINT","intersectsExtent","setLayout","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XY","setFlatCoordinatesInternal","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","MultiLineString","ends_","maxDelta_","maxDeltaRevision_","appendLineString","lineString","multiLineString","sqrt","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","m","opt_extrapolate","opt_interpolate","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","ends","lineStrings","offset","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","MULTI_LINE_STRING","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","MultiPolygon","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","polygon","multiPolygon","len","newEndss","Array","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","jj","endss","polygons","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","DrawEventType","Draw","Pointer","handleDownEvent","handleDownEvent_","handleEvent","handleUpEvent","handleUpEvent_","shouldHandle_","downPx_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","POLYGON","maxPoints_","maxPoints","Infinity","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","CIRCLE","opt_geometry","circle","Circle","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","POINT","Point","LINE_STRING","LineString","Polygon","geometry","concat","geometryFunction_","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","getDefaultStyleFunction","geometryName_","geometryName","condition_","noModifierKeys","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","ol_Object","getChangeEventType","Property","ACTIVE","updateState_","styles","Style","createDefaultEditing","getGeometry","pass","MapBrowserEventType","POINTERDRAG","addToDrawing_","POINTERDOWN","POINTERMOVE","handlePointerMove_","DBLCLICK","pixel","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","dx","dy","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","getPixelFromCoordinate","Feature","updateSketchFeatures_","setGeometryName","setGeometry","Event","last","ring","getLinearRing","done","pop","removeLastPoint","sketchFeature","extend","shouldStopEvent","sketchFeatures","overlaySource","addFeatures","getMap","active","createRegularPolygon","opt_sides","opt_angle","angle","atan","createBox","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","delta","getRadius","getRadiusSquared_","getCenter","computeExtent","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","circleExtent","intersectsCoordinate","setCenter","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","setRadius","transform"],"mappings":"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","file":"toolActivate.min.js","sourcesContent":["/**\n * @module ngeo.misc.ToolActivate\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivate.js","/**\n * @type {string} Default WMS version.\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.misc.btnComponent\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n *//* @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach(function(expressionFn, i) {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  }, this);\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/btnComponent.js","/**\n * @module ngeo.misc.decorate\n*/\nconst exports = {};\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport olInteractionInteraction from 'ol/interaction/Interaction';\nimport olLayerBase from 'ol/layer/Base';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerLayer from 'ol/layer/Layer';\nimport olSourceImage from 'ol/source/Image';\nimport olSourceTile from 'ol/source/Tile';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.misc.ToolActivateMgr\n*/\nimport ngeoBase from 'ngeo';\nimport googAsserts from 'goog/asserts';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n *//* @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivateMgr.js","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nvar _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nvar ImageWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var extent = getForViewAndSize(coordinate, resolution, 0,\n      ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n      extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var imageResolution = resolution / pixelRatio;\n\n  var center = getCenter(extent);\n  var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n  var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n  var image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  var params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return _ol_uri_.appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n    imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.CustomEvent\n*/\nimport olBase from 'ol';\nimport olEventsEvent from 'ol/events/Event';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nvar TileWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var params = options.params || {};\n\n  var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, params) {\n\n  var urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    var tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  var url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    var index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return _ol_uri_.appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  var i = 0;\n  var res = [];\n  for (var key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo';\nimport olCollection from 'ol/Collection';\n\n\nngeoBase.module.value('ngeoDataSources', new olCollection());\n\n\n/**\n * @typedef {!ol.Collection.<!ngeo.datasource.DataSource>}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olLayerVector from 'ol/layer/Vector';\nimport olObj from 'ol/obj';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleStyle from 'ol/style/Style';\nimport googAsserts from 'goog/asserts';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {};\nexports.assertNumber = function(value, opt_message, var_args) {};\nexports.assertString = function(value, opt_message, var_args) {};\nexports.assertFunction = function(value, opt_message, var_args) {};\nexports.assertObject = function(value, opt_message, var_args) {};\nexports.assertArray = function(value, opt_message, var_args) {};\nexports.assertBoolean = function(value, opt_message, var_args) {};\nexports.assertElement = function(value, opt_message, var_args) {};\nexports.assertInstanceof = function(value, type, opt_message, var_args) {};\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.prod.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr';\nimport ngeoMapDirective from 'ngeo/map/directive';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr';\nimport ngeoMapRecenter from 'ngeo/map/recenter';\nimport ngeoMapResizemap from 'ngeo/map/resizemap';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport ngeoCustomEvent from 'ngeo/CustomEvent';\nimport olBase from 'ol';\nimport olObservable from 'ol/Observable';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerLayer from 'ol/layer/Layer';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\nimport olSourceTileWMS from 'ol/source/TileWMS';\nimport olSourceWMTS from 'ol/source/WMTS';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap';\n\nimport olEvents from 'ol/events';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources';\n\nimport olEvents from 'ol/events';\nimport olObservable from 'ol/Observable';\nimport olView from 'ol/View';\nimport googAsserts from 'goog/asserts';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\nngeoBase.module.service(\n  'ngeoSyncDataSourcesMap', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olEvents from 'ol/events';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module app.toolActivate\n*/\nconst exports = {};\n\nimport 'examples/toolActivate.css';\nimport './common_dependencies.js';\nimport ngeoMapModule from 'ngeo/map/module';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr';\nimport olCollection from 'ol/Collection';\nimport olMap from 'ol/Map';\nimport olView from 'ol/View';\nimport olBase from 'ol';\nimport olCoordinate from 'ol/coordinate';\nimport olInteractionDraw from 'ol/interaction/Draw';\nimport olLayerTile from 'ol/layer/Tile';\nimport olSourceOSM from 'ol/source/OSM';\nimport olStyleCircle from 'ol/style/Circle';\nimport olStyleFill from 'ol/style/Fill';\nimport olStyleStroke from 'ol/style/Stroke';\nimport olStyleStyle from 'ol/style/Style';\n\n/** @type {!angular.Module} **/\napp.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\n/**\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr ToolActivate manager.\n * @constructor\n *//* @ngInject\n */\napp.MainController = function(ngeoFeatureOverlayMgr, ngeoToolActivateMgr) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [1444682, 5979706],\n      zoom: 4\n    })\n  });\n\n  const map = this.map;\n\n  // initialize the feature overlay manager with the map\n  ngeoFeatureOverlayMgr.init(map);\n\n  /**\n   * Collection shared between the drawing interactions and the feature\n   * overlay used to render the drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   */\n  const features = new olCollection();\n\n  const overlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  overlay.setFeatures(features);\n  overlay.setStyle(new olStyleStyle({\n    fill: new olStyleFill({\n      color: 'rgba(255, 255, 255, 0.2)'\n    }),\n    stroke: new olStyleStroke({\n      color: '#ffcc33',\n      width: 2\n    }),\n    image: new olStyleCircle({\n      radius: 7,\n      fill: new olStyleFill({\n        color: '#ffcc33'\n      })\n    })\n  }));\n\n\n  // manage clicks on the map\n  this.mapClickIsEnabled = true;\n  const content = document.getElementById('popup-content');\n  this.map.on('singleclick', (evt) => {\n    if (this.mapClickIsEnabled) {\n      const c = olCoordinate.toStringXY(evt.coordinate);\n      content.innerHTML = `<p>You clicked here: <code>${c}</code></p>`;\n    }\n  });\n\n  const mapClickTool = new ngeoMiscToolActivate(this, 'mapClickIsEnabled');\n  ngeoToolActivateMgr.registerTool('mapTools', mapClickTool, true);\n\n\n  // draw point interaction\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint = new olInteractionDraw(\n    /** @type {olx.interaction.DrawOptions} */ ({\n      type: 'Point',\n      features: features\n    }));\n  this.drawPoint.setActive(false);\n  ngeoMiscDecorate.interaction(this.drawPoint);\n  map.addInteraction(this.drawPoint);\n\n  const drawPointTool = new ngeoMiscToolActivate(this.drawPoint, 'active');\n  ngeoToolActivateMgr.registerTool('mapTools', drawPointTool);\n\n  // draw line interaction\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawLine = new olInteractionDraw(\n    /** @type {olx.interaction.DrawOptions} */ ({\n      type: 'LineString',\n      features: features\n    }));\n  this.drawLine.setActive(false);\n  ngeoMiscDecorate.interaction(this.drawLine);\n  map.addInteraction(this.drawLine);\n\n  const drawLineTool = new ngeoMiscToolActivate(this.drawLine, 'active');\n  ngeoToolActivateMgr.registerTool('mapTools', drawLineTool);\n\n  // draw polygon interaction\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPolygon = new olInteractionDraw(\n    /** @type {olx.interaction.DrawOptions} */ ({\n      type: 'Polygon',\n      features: features\n    }));\n  this.drawPolygon.setActive(false);\n  ngeoMiscDecorate.interaction(this.drawPolygon);\n  map.addInteraction(this.drawPolygon);\n\n  const drawPolygonTool = new ngeoMiscToolActivate(this.drawPolygon, 'active');\n  ngeoToolActivateMgr.registerTool('mapTools', drawPolygonTool);\n};\n\n\napp.module.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/toolActivate.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo';\nimport olArray from 'ol/array';\nimport olMap from 'ol/Map';\nimport olEvents from 'ol/events';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  var multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  var flatCoordinates = this.flatCoordinates;\n  var stride = this.stride;\n  var i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  var n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  var point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  var flatCoordinates = this.flatCoordinates;\n  var layout = this.layout;\n  var stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  var points = [];\n  var i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    var point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  var flatCoordinates = this.flatCoordinates;\n  var stride = this.stride;\n  var i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n        this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nvar OSM = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  var crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  var url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nvar XYZ = function(opt_options) {\n  var options = opt_options || {};\n  var projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  var multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  var lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  var flatCoordinates = this.flatCoordinates;\n  var ends = this.ends_;\n  var layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  var lineStrings = [];\n  var offset = 0;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  var midpoints = [];\n  var flatCoordinates = this.flatCoordinates;\n  var offset = 0;\n  var ends = this.ends_;\n  var stride = this.stride;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var midpoint = _ol_geom_flat_interpolate_.lineString(\n        flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n  var simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n      GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = _ol_geom_flat_deflate_.coordinatess(\n        this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var ends = [];\n  var i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    var lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  var ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    var offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  var multiPolygon = new MultiPolygon(null);\n\n  var len = this.endss_.length;\n  var newEndss = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  var flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n      flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    var flatCenters = _ol_geom_flat_center_.linearRingss(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  var interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n      this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    var flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n  var simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n      GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  var offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    var prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  var ends = this.endss_[index].slice();\n  var end = ends[ends.length - 1];\n  if (offset !== 0) {\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  var polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  var layout = this.layout;\n  var flatCoordinates = this.flatCoordinates;\n  var endss = this.endss_;\n  var polygons = [];\n  var offset = 0;\n  var i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    var polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n        layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = _ol_geom_flat_deflate_.coordinatesss(\n        this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var endss = [];\n  var i, ii, ends;\n  for (i = 0, ii = polygons.length; i < ii; ++i) {\n    var polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    var offset = flatCoordinates.length;\n    ends = polygon.getEnds();\n    var j, jj;\n    for (j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport _ol_interaction_Pointer_ from '../interaction/Pointer.js';\nimport _ol_interaction_Property_ from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport _ol_style_Style_ from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nvar Draw = function(options) {\n\n  _ol_interaction_Pointer_.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  var geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        var circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        var squaredLength = _ol_coordinate_.squaredDistance(\n            coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      var Constructor;\n      var mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        var geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction()\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n      BaseObject.getChangeEventType(_ol_interaction_Property_.ACTIVE),\n      this.updateState_, this);\n\n};\n\ninherits(Draw, _ol_interaction_Pointer_);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  var styles = _ol_style_Style_.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  _ol_interaction_Pointer_.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  var pass = true;\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (event.type === MapBrowserEventType.POINTERMOVE) {\n    pass = this.handlePointerMove_(event);\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n  return _ol_interaction_Pointer_.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  var pass = true;\n\n  this.handlePointerMove_(event);\n\n  var circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    var downPx = this.downPx_;\n    var clickPx = event.pixel;\n    var dx = downPx[0] - clickPx[0];\n    var dy = downPx[1] - clickPx[1];\n    var squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  var at = false;\n  if (this.sketchFeature_) {\n    var potentiallyDone = false;\n    var potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      var map = event.map;\n      for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        var finishCoordinate = potentiallyFinishCoordinates[i];\n        var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        var pixel = event.pixel;\n        var dx = pixel[0] - finishPixel[0];\n        var dy = pixel[1] - finishPixel[1];\n        var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  var coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    var sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  var start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n    if (this.mode_ === Draw.Mode_.CIRCLE) {\n      this.sketchLineCoords_ = this.sketchCoords_;\n    }\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n  }\n  var geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  var coordinate = event.coordinate;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    var sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  var sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    var ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  var coordinate = event.coordinate;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var done;\n  var coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  var sketchFeature = this.abortDrawing_();\n  var coordinates = this.sketchCoords_;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  var sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  var geometry = feature.getGeometry();\n  var lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  var sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  var overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  var map = this.getMap();\n  var active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      var center = coordinates[0];\n      var end = coordinates[1];\n      var radius = Math.sqrt(\n          _ol_coordinate_.squaredDistance(center, end));\n      var geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      var angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(coordinates);\n      var geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  var radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  var circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  var flatCoordinates = this.flatCoordinates;\n  var dx = x - flatCoordinates[0];\n  var dy = y - flatCoordinates[1];\n  var squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    var i;\n    if (squaredDistance === 0) {\n      for (i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      var delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  var flatCoordinates = this.flatCoordinates;\n  var dx = x - flatCoordinates[0];\n  var dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  var flatCoordinates = this.flatCoordinates;\n  var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  var circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    var center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  var stride = this.stride;\n  var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  var flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  var i;\n  for (i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = _ol_geom_flat_deflate_.coordinate(\n        flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    var i, ii;\n    for (i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 80\n// module chunks = 0 1 2 6 7 8 9 11 14"],"sourceRoot":""}