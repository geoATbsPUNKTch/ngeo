{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./src/misc/decorate.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/message/Popup.js","webpack:///./src/message/popupComponent.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.prod.js","webpack:///./src/map/module.js","webpack:///./examples/layertree.js","webpack:///./node_modules/openlayers/src/ol/source/Stamen.js","webpack:///./src/layertree/module.js","webpack:///./src/layertree/component.js","webpack:///./src/layertree/Controller.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js"],"names":["__webpack_require__","d","__webpack_exports__","DEFAULT_WMS_VERSION","exports","interaction","_asserts2","default","assertInstanceof","_Interaction2","Object","defineProperty","get","getActive","set","val","setActive","layer","_Base2","configurable","getVisible","setVisible","getOpacity","setOpacity","$scope","source","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","parent","decrementLoadCount_","decrement_","getLayers","on","olEvent","element","getSource","fail","$applyAsync","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","call","this","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","ol","prototype","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","undefined","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","forEach","unlistenByKey","ol_Image","ImageWMS","opt_options","options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","assign","x","Math","floor","y","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","listen","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","bbox","axisOrientation","getAxisOrientation","substr","join","uri","appendParams","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","$compile","$rootScope","$sce","$timeout","_this","scope","$new","$watch","open","autoDestroy_","timeout_","destroy","sce_","element_","angular","document","body","append","getOpen","setOpen","$destroy","remove","setTitle","title","trustedTitle","trustAsHtml","setContent","content","opt_trusted","setWidth","width","setHeight","setSize","setAutoDestroy","autoDestroy","addClass","cls","Factory","module","_popupComponent2","name","factory","_ngeo2","requires","push","_ngeo","value","attrs","templateUrl","baseModuleTemplateUrl","directive_","ngeoPopupTemplateUrl","restrict","link","close","evt","stopPropagation","preventDefault","newVal","oldVal","css","directive","type","detail","arguments","length","_Event2","_ol2","inherits","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","i","res","key","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","_Collection2","featureUidToGroupIndex_","groups_","source_","_Vector4","useSpatialIndex","layer_","_Vector2","style","styleFunction_","bind","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","assert","featureUid","getUid","toString","features","removeFeature","clear","group","_obj2","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","map","setMap","setStyle","createFunction","service","condition","opt_message","var_args","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","e","Error","code","layerCache","app","ngeo","_module2","_module4","_Popup2","layertreeComponent","bindings","controller","controllerAs","template","component","LayertreeController","$http","appGetLayer","ngeoCreatePopup","tree","then","resp","data","http_","getLayer_","infoPopup_","promises_","node","onButtonClick","_this2","layerType","infoPopup","html","_Stamen2","_OSM2","_Tile2","MainController","_Map2","layers","view","_View2","zoom","__WEBPACK_IMPORTED_MODULE_2__source_XYZ_js__","Stamen","indexOf","provider","slice","providerConfig","ProviderConfig","layerConfig","LayerConfig","extension","ATTRIBUTIONS","maxZoom","minZoom","__WEBPACK_IMPORTED_MODULE_0__index_js__","__WEBPACK_IMPORTED_MODULE_1__source_OSM_js__","ATTRIBUTION","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","_component2","_Controller2","ngeoLayertreeTemplateUrl","$attrs","isRoot","nodeExpr","rootScope_","properties","state_","$eval","goog","mapExpr","$parent","children","$on","index","splice","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","treeCtrl","dataSource_","_decorate2","layerLoading","_events2","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","child","newState","getCalculateState","childState","previousChildState","some","getSetActive","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","VisitorDecision","STOP","SKIP","DESCEND","traverseDepthFirst","visitor","_Observable2","mapUids_","item","mapUid","previous","setAt","removeAt","insertAt","event","_CustomEvent2","current","dispatchEvent","updateDimensions","dimensions","baseBgLayer","_Layer2","hasUpdates","updatedDimensions","refresh","$window","ngeoSyncDataSourcesMap","prop","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","getView","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","target","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","manager","manager_","features_","index_","setFeatures","unlisten","handleFeatureAdd_","handleFeatureRemove_","$element","recenter","attr","getSize","fit","setZoom","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","keys","newLength","Number","sort","_array2","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","createXYZ","extentFromProjection","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction"],"mappings":"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","file":"layertree.min.js","sourcesContent":["/**\n * @type {string} Default WMS version.\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.misc.decorate\n*/\nconst exports = {};\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport olInteractionInteraction from 'ol/interaction/Interaction';\nimport olLayerBase from 'ol/layer/Base';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerLayer from 'ol/layer/Layer';\nimport olSourceImage from 'ol/source/Image';\nimport olSourceTile from 'ol/source/Tile';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nvar _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nvar ImageWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var extent = getForViewAndSize(coordinate, resolution, 0,\n      ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n      extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var imageResolution = resolution / pixelRatio;\n\n  var center = getCenter(extent);\n  var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n  var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n  var image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  var params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return _ol_uri_.appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n    imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.message.Popup\n*/\nimport ngeoBase from 'ngeo';\nimport googAsserts from 'goog/asserts';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n *//* @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Popup.js","/**\n * @module ngeo.message.popupComponent\n*/\nimport ngeoBase from 'ngeo';\nconst exports = angular.module('ngeoPopup', []);\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/message/popupcomponent.html`;\n  });\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intented to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/popupComponent.js","/**\n * @module ngeo.CustomEvent\n*/\nimport olBase from 'ol';\nimport olEventsEvent from 'ol/events/Event';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nvar TileWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var params = options.params || {};\n\n  var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, params) {\n\n  var urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    var tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  var url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    var index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return _ol_uri_.appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  var i = 0;\n  var res = [];\n  for (var key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo';\nimport olCollection from 'ol/Collection';\n\n\nngeoBase.module.value('ngeoDataSources', new olCollection());\n\n\n/**\n * @typedef {!ol.Collection.<!ngeo.datasource.DataSource>}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olLayerVector from 'ol/layer/Vector';\nimport olObj from 'ol/obj';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleStyle from 'ol/style/Style';\nimport googAsserts from 'goog/asserts';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {};\nexports.assertNumber = function(value, opt_message, var_args) {};\nexports.assertString = function(value, opt_message, var_args) {};\nexports.assertFunction = function(value, opt_message, var_args) {};\nexports.assertObject = function(value, opt_message, var_args) {};\nexports.assertArray = function(value, opt_message, var_args) {};\nexports.assertBoolean = function(value, opt_message, var_args) {};\nexports.assertElement = function(value, opt_message, var_args) {};\nexports.assertInstanceof = function(value, type, opt_message, var_args) {};\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.prod.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr';\nimport ngeoMapDirective from 'ngeo/map/directive';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr';\nimport ngeoMapRecenter from 'ngeo/map/recenter';\nimport ngeoMapResizemap from 'ngeo/map/resizemap';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module app.layertree\n*/\n/**\n * This example shows how to create a layer tree tree based\n * on ngeo's ngeoLayertree directive.\n */\n\nimport 'examples/layertree.css';\nimport './common_dependencies.js';\n/**\n * This example shows how to create a layer tree tree based\n * on ngeo's ngeoLayertree directive.\n */\n\nimport 'examples/layertree.css';\nimport './common_dependencies.js';\nconst exports = {};\nimport olMap from 'ol/Map';\nimport olView from 'ol/View';\nimport olLayerTile from 'ol/layer/Tile';\nimport olSourceOSM from 'ol/source/OSM';\nimport olSourceStamen from 'ol/source/Stamen';\nimport ngeoLayertreeModule from 'ngeo/layertree/module';\nimport ngeoMapModule from 'ngeo/map/module';\nimport ngeoMessagePopup from 'ngeo/message/Popup';\n\n\n/** @type {!angular.Module} **/\napp.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoLayertreeModule.name,\n  ngeoMapModule.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\n/**\n * An application-specific component wrapping the ngeo tree layer component.\n * The component includes a controller defining the tree tree.\n *\n * @type {!angular.Component}\n */\napp.layertreeComponent = {\n  bindings: {\n    'map': '=appLayertreeMap'\n  },\n  controller: 'AppLayertreeController',\n  controllerAs: 'ctrl',\n  // use \"::ctrl.tree\" for the \"tree\" expression as we know the\n  // layer tree won't change\n  template:\n      '<div ngeo-layertree=\"::ctrl.tree\" ' +\n      'ngeo-layertree-templateurl=\"partials/layertree.html\" ' +\n      'ngeo-layertree-map=\"ctrl.map\" ' +\n      'ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\">' +\n      '</div>'\n};\n\n\napp.module.component('appLayertree', app.layertreeComponent);\n\n\n/**\n * @constructor\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {function(Object):ol.layer.Layer} appGetLayer Get layer service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n *//* @ngInject\n * @export\n */\napp.LayertreeController = function($http, $sce, appGetLayer, ngeoCreatePopup) {\n\n  /**\n   * @type {Object|undefined}\n   * @export\n   */\n  this.tree = undefined;\n\n  $http.get('data/tree.json').then((resp) => {\n    this.tree = resp.data;\n  });\n\n  /**\n   * @private\n   * @type {angular.$http}\n   */\n  this.http_ = $http;\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @private\n   * @type {function(Object):ol.layer.Layer}\n   */\n  this.getLayer_ = appGetLayer;\n\n  /**\n   * @private\n   * @type {ngeo.message.Popup}\n   */\n  this.infoPopup_ = ngeoCreatePopup();\n\n  /**\n   * @type {Object.<string, !angular.$q.Promise>}\n   * @private\n   */\n  this.promises_ = {};\n};\n\n\n/**\n * Function called by the ngeo-layertree directives to create a layer\n * from a tree node. The function should return `null` if no layer should\n * be associated to the node (because it's not a leaf).\n * @param {Object} node Node object.\n * @return {ol.layer.Layer} The layer for this node.\n * @export\n */\napp.LayertreeController.prototype.getLayer = function(node) {\n  return this.getLayer_(node);\n};\n\n\n/**\n * @param {Object} node Tree node.\n * @param {ol.layer.Layer} layer Layer.\n * @export\n */\napp.LayertreeController.prototype.onButtonClick = function(node, layer) {\n  const layerType = node['layerType'];\n  if (!(layerType in this.promises_)) {\n    this.promises_[layerType] = this.http_.get('data/metadata.html').then(\n      (resp) => {\n        const html = this.sce_.trustAsHtml(resp.data);\n        return html;\n      }\n    );\n  }\n  const infoPopup = this.infoPopup_;\n  this.promises_[layerType].then((html) => {\n    infoPopup.setTitle(node['name']);\n    infoPopup.setContent(html);\n    infoPopup.setOpen(true);\n  });\n};\n\n\napp.module.controller('AppLayertreeController', app.LayertreeController);\n\n\n/**\n * A function that returns a layer for a node. A cache is used, so always the\n * same layer instance is returned for a given node. This function is called by\n * the ngeoLayertree directive for creating layers from tree nodes. The\n * function returns `null` when no layer should be created for the node.\n *\n * @param {Object} node Layer tree node.\n * @return {ol.layer.Layer} Layer.\n */\napp.getLayer = (function() {\n  /**\n   * @type {Object.<string, ol.layer.Layer>}\n   */\n  const layerCache = {};\n  return (\n    /**\n         * @param {Object} node Tree node.\n         * @return {ol.layer.Layer} Layer.\n         */\n    function(node) {\n      if (!('layerType' in node)) {\n        return null;\n      }\n      const type = node['layerType'];\n      if (type in layerCache) {\n        return layerCache[type];\n      }\n      let source;\n      if (type == 'stamenWatercolor') {\n        source = new olSourceStamen({\n          layer: 'watercolor'\n        });\n      } else if (type == 'stamenTerrain-labels') {\n        source = new olSourceStamen({\n          layer: 'terrain-labels'\n        });\n      } else if (type == 'osmHumanitarian') {\n        source = new olSourceOSM({\n          url: 'https://tile-{a-c}.openstreetmap.fr/hot/{z}/{x}/{y}.png'\n        });\n      } else if (type == 'osmCycle') {\n        source = new olSourceOSM({\n          url: 'https://{a-c}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png'\n        });\n      } else if (type == 'osmTransport') {\n        source = new olSourceOSM({\n          url: 'https://{a-c}.tile.thunderforest.com/transport/{z}/{x}/{y}.png'\n        });\n      } else {\n        source = new olSourceOSM();\n      }\n      const layer = new olLayerTile({\n        source\n      });\n      layer.set('type', type);\n      layerCache[type] = layer;\n      return layer;\n    }\n  );\n})();\n\n\napp.module.value('appGetLayer', app.getLayer);\n\n\n/**\n * The application's main directive.\n * @constructor\n *//* @ngInject\n */\napp.MainController = function() {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [-10983710.59086991, 4686507.078220731],\n      zoom: 4\n    })\n  });\n};\n\n\napp.module.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/layertree.js","/**\n * @module ol/source/Stamen\n */\nimport {inherits} from '../index.js';\nimport OSM from '../source/OSM.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.StamenOptions} options Stamen options.\n * @api\n */\nvar Stamen = function(options) {\n  var i = options.layer.indexOf('-');\n  var provider = i == -1 ? options.layer : options.layer.slice(0, i);\n  var providerConfig = Stamen.ProviderConfig[provider];\n\n  var layerConfig = Stamen.LayerConfig[options.layer];\n\n  var url = options.url !== undefined ? options.url :\n    'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n      '/{z}/{x}/{y}.' + layerConfig.extension;\n\n  XYZ.call(this, {\n    attributions: Stamen.ATTRIBUTIONS,\n    cacheSize: options.cacheSize,\n    crossOrigin: 'anonymous',\n    maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n    minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n    opaque: layerConfig.opaque,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n};\n\ninherits(Stamen, XYZ);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nStamen.ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n  OSM.ATTRIBUTION\n];\n\n/**\n * @type {Object.<string, {extension: string, opaque: boolean}>}\n */\nStamen.LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true\n  }\n};\n\n/**\n * @type {Object.<string, {minZoom: number, maxZoom: number}>}\n */\nStamen.ProviderConfig = {\n  'terrain': {\n    minZoom: 4,\n    maxZoom: 18\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20\n  },\n  'watercolor': {\n    minZoom: 1,\n    maxZoom: 16\n  }\n};\nexport default Stamen;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/Stamen.js\n// module id = 324\n// module chunks = 15","/**\n * @module ngeo.layertree.module\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoLayertreeComponent from 'ngeo/layertree/component';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.layertree.Controller (already required by ngeo.layertree.component)\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertreeModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoLayertreeComponent.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/module.js","/**\n * @module ngeo.layertree.component\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/layertree/component.html`;\n  });\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {angular.$compile} $compile Angular compile service.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function($compile, ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/component.js","/**\n * @module ngeo.layertree.Controller\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olEvents from 'ol/events';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerLayer from 'ol/layer/Layer';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n *//* @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    goog.asserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      goog.asserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    goog.asserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  goog.asserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      goog.asserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    goog.asserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      goog.asserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport ngeoCustomEvent from 'ngeo/CustomEvent';\nimport olBase from 'ol';\nimport olObservable from 'ol/Observable';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerLayer from 'ol/layer/Layer';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\nimport olSourceTileWMS from 'ol/source/TileWMS';\nimport olSourceWMTS from 'ol/source/WMTS';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap';\n\nimport olEvents from 'ol/events';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources';\n\nimport olEvents from 'ol/events';\nimport olObservable from 'ol/Observable';\nimport olView from 'ol/View';\nimport googAsserts from 'goog/asserts';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\nngeoBase.module.service(\n  'ngeoSyncDataSourcesMap', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olEvents from 'ol/events';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo';\nimport olArray from 'ol/array';\nimport olMap from 'ol/Map';\nimport olEvents from 'ol/events';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nvar OSM = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  var crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  var url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nvar XYZ = function(opt_options) {\n  var options = opt_options || {};\n  var projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30"],"sourceRoot":""}