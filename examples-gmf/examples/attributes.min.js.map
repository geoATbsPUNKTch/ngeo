{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/Attribute.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/datasource/DataSources.js","webpack:///./examples/attributes.js","webpack:///./src/format/XSDAttribute.js","webpack:///./src/editing/attributesComponent.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.prod.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js"],"names":["__WEBPACK_IMPORTED_MODULE_0__xml_js__","__webpack_require__","XML","prototype","read","source","isDocument","this","readFromDocument","isNode","readFromNode","doc","parse","node","__webpack_exports__","d","DEFAULT_WMS_VERSION","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","call","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","Object","ol","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","undefined","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","forEach","unlistenByKey","ol_Image","ImageWMS","opt_options","options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","assign","x","Math","floor","y","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","listen","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","bbox","axisOrientation","getAxisOrientation","substr","join","uri","appendParams","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","exports","attribute","type","exec","ngeo","AttributeType","GEOMETRY","geomType","listenerKeys_","addListenerKey","uid","key","initListenerKey_","push","clearListenerKey","length","_events2","default","module","angular","service","_ngeo2","requires","name","detail","arguments","_Event2","_ol2","inherits","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","i","res","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","_ngeo","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","_createClass","value","get","set","_Collection2","e","Error","code","app","_module2","_attributesComponent2","MainController","$http","$timeout","timeout_","disabled","feature","_Feature2","kind","then","handleXSDAttributeGet_","bind","resp","_XSDAttribute2","data","updateName","_this","controller","_XML2","_asserts2","assert","nodeType","Node","DOCUMENT_NODE","n","firstChild","nextSibling","ELEMENT_NODE","localName","elements","getElementsByTagName","ii","readFromElementNode_","getAttribute","assertString","alias","nillable","required","_Attribute2","setGeometryType","setAttributeByXsdType_","enumerations","SELECT","choices","restrictions","restrictionNode","maxLengths","maxLength","Number","BOOLEAN","DATE","DATETIME","NUMBER","numType","NumberType","FLOAT","INTEGER","TEXT","getGeometryAttribute","geomAttribute","_EventHelper2","component_","bindings","require","form","templateUrl","baseModuleTemplateUrl","component","Controller_","$scope","ngeoEventHelper","gettextCatalog","properties","scope_","ngeoEventHelper_","gettextCatalog_","dateOptions","changeMonth","changeYear","updating_","$onInit","getProperties","getUid","handleFeaturePropertyChange_","lang","getCurrentLanguage","$","handleInputChange","$onDestroy","evt","target","$apply","featureUidToGroupIndex_","groups_","source_","_Vector4","useSpatialIndex","layer_","_Vector2","style","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","featureUid","toString","features","removeFeature","clear","group","_obj2","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","map","setMap","setStyle","createFunction","condition","opt_message","var_args","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","getLayers","item","layer","mapUid","previous","setAt","removeAt","insertAt","event","_CustomEvent2","current","dispatchEvent","updateDimensions","dimensions","baseBgLayer","layers","getArray","assertInstanceof","_Layer2","hasUpdates","updatedDimensions","getSource","refresh","directive_","$window","ngeoSyncDataSourcesMap","restrict","link","scope","element","attrs","prop","$eval","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","ngeoDataSources","ngeoDataSources_","map_","handleDataSourcesAdd_","$inject","view","getView","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","_View2","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","manager","index","manager_","features_","index_","setFeatures","unlisten","handleFeatureAdd_","handleFeatureRemove_","$element","$attrs","mapExpr","recenter","attr","getSize","fit","zoom","setZoom","on","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","$watch","newVal","oldVal","cancelAnimationFrame","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","goog","zoomLevels","keys","newLength","sort","_array2","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","_this2","$applyAsync"],"mappings":"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","file":"attributes.min.js","sourcesContent":["/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nvar XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 105\n// module chunks = 0 1 5 24","/**\n * @type {string} Default WMS version.\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nvar _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nvar ImageWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var extent = getForViewAndSize(coordinate, resolution, 0,\n      ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n      extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var imageResolution = resolution / pixelRatio;\n\n  var center = getCenter(extent);\n  var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n  var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n  var image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  var params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return _ol_uri_.appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n    imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.Attribute\n*/\nconst exports = {};\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeo.AttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Attribute.js","/**\n * @module ngeo.misc.EventHelper\n*/\nimport ngeoBase from 'ngeo';\nimport olEvents from 'ol/events';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n *//* @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.CustomEvent\n*/\nimport olBase from 'ol';\nimport olEventsEvent from 'ol/events/Event';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nvar TileWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var params = options.params || {};\n\n  var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, params) {\n\n  var urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    var tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  var url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    var index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return _ol_uri_.appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  var i = 0;\n  var res = [];\n  for (var key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo';\nimport olCollection from 'ol/Collection';\n\n\nngeoBase.module.value('ngeoDataSources', new olCollection());\n\n\n/**\n * @typedef {!ol.Collection.<!ngeo.datasource.DataSource>}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module app.attributes\n*/\nconst exports = {};\n\nimport 'examples/attributes.css';\nimport './common_dependencies.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingAttributesComponent from 'ngeo/editing/attributesComponent';\n\nimport olFeature from 'ol/Feature';\nimport ngeoMapModule from 'ngeo/map/module';\n\n\n/** @type {!angular.Module} */\napp.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name,\n  ngeoEditingAttributesComponent.name,\n]);\n\n\n/**\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n *//* @ngInject\n * @constructor\n */\napp.MainController = function($http, $timeout) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {?Array.<ngeox.Attribute>}\n   * @export\n   */\n  this.attributes = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.disabled = false;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature = new olFeature({\n    'name': 'A feature',\n    'kind': 'house'\n  });\n\n  $http.get('data/xsdattributes.xml').then(\n    this.handleXSDAttributeGet_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @private\n */\napp.MainController.prototype.handleXSDAttributeGet_ = function(resp) {\n  const format = new ngeoFormatXSDAttribute();\n  const attributes = format.read(resp.data);\n  this.attributes = attributes;\n  return attributes;\n};\n\n\n/**\n * @export\n */\napp.MainController.prototype.updateName = function() {\n  this.timeout_(() => {\n    this.feature.set('name', 'An alternate name');\n  }, 0);\n};\n\n\napp.module.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/attributes.js","/**\n * @module ngeo.format.XSDAttribute\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoAttribute from 'ngeo/Attribute';\nimport olFormatXML from 'ol/format/XML';\nimport googAsserts from 'goog/asserts';\n\n/**\n * @classdesc\n * Reads attributes that are defined in XSD format and return them as a list.\n *\n * @constructor\n * @struct\n * @extends {ol.format.XML}\n */\nconst exports = function() {\n  olFormatXML.call(this);\n};\n\nol.inherits(exports, olFormatXML);\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Array.<ngeox.Attribute>} The parsed result.\n * @override\n */\nexports.prototype.read = function(source) {\n  return (\n    /** @type {Array.<ngeox.Attribute>} */ olFormatXML.prototype.read.call(this, source)\n  );\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromDocument = function(doc) {\n  googAsserts.assert(doc.nodeType == Node.DOCUMENT_NODE,\n    'doc.nodeType should be DOCUMENT');\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromNode = function(node) {\n  googAsserts.assert(node.nodeType == Node.ELEMENT_NODE,\n    'node.nodeType should be ELEMENT');\n  googAsserts.assert(node.localName == 'schema',\n    'localName should be schema');\n\n  let elements = node.getElementsByTagName('element');\n  if (!elements.length) {\n    elements = node.getElementsByTagName('xsd:element');\n  }\n  const attributes = [];\n\n  let attribute;\n  for (let i = 0, ii = elements.length; i < ii; i++) {\n    attribute = this.readFromElementNode_(elements[i]);\n    if (attribute) {\n      attributes.push(attribute);\n    }\n  }\n\n  return attributes;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {?ngeox.Attribute} An attribute object.\n * @private\n */\nexports.prototype.readFromElementNode_ = function(node) {\n\n  const name = node.getAttribute('name');\n  googAsserts.assertString(name, 'name should be defined in element node.');\n\n  const alias = node.getAttribute('alias');\n  const nillable = node.getAttribute('nillable');\n  const required = !(nillable === true || nillable === 'true');\n\n  const attribute = {\n    name,\n    alias,\n    required\n  };\n\n  const type = node.getAttribute('type');\n  if (type) {\n    if (!ngeoAttribute.setGeometryType(attribute, type)) {\n      this.setAttributeByXsdType_(attribute, type);\n    }\n  } else {\n\n    // Attribute has no type defined on 'element' node.  Try:\n\n    // (1) Enumerations\n    let enumerations = node.getElementsByTagName('enumeration');\n    if (!enumerations.length) {\n      enumerations = node.getElementsByTagName('xsd:enumeration');\n    }\n    if (enumerations.length) {\n      attribute.type = ngeoBase.AttributeType.SELECT;\n      const choices = [];\n      for (let i = 0, ii = enumerations.length; i < ii; i++) {\n        choices.push(enumerations[i].getAttribute('value'));\n      }\n      attribute.choices = choices;\n    } else {\n      // (2) Other types with restrictions\n      let restrictions = node.getElementsByTagName('restriction');\n      if (!restrictions.length) {\n        restrictions = node.getElementsByTagName('xsd:restriction');\n      }\n      if (restrictions.length && restrictions[0]) {\n        const restrictionNode = restrictions[0];\n        this.setAttributeByXsdType_(\n          attribute,\n          restrictionNode.getAttribute('base')\n        );\n        // MaxLength\n        let maxLengths = node.getElementsByTagName('maxLength');\n        if (!maxLengths.length) {\n          maxLengths = node.getElementsByTagName('xsd:maxLength');\n        }\n        if (maxLengths.length && maxLengths[0]) {\n          attribute.maxLength = Number(maxLengths[0].getAttribute('value'));\n        }\n      }\n    }\n  }\n\n  if (!attribute.type) {\n    return null;\n  }\n\n  googAsserts.assert(attribute.type);\n\n  return attribute;\n};\n\n\n/**\n * Set the `type` and `numType` properties of an attribute depending on the\n * given xsdType.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type The xsd type.\n * @private\n */\nexports.prototype.setAttributeByXsdType_ = function(\n  attribute, type\n) {\n  if (type === 'xsd:boolean') {\n    attribute.type = ngeoBase.AttributeType.BOOLEAN;\n  } else if (type === 'xsd:date') {\n    attribute.type = ngeoBase.AttributeType.DATE;\n  } else if (type === 'xsd:dateTime') {\n    attribute.type = ngeoBase.AttributeType.DATETIME;\n  } else if (type === 'xsd:decimal') {\n    attribute.type = ngeoBase.AttributeType.NUMBER;\n    attribute.numType = ngeoBase.NumberType.FLOAT;\n  } else if (type === 'xsd:integer') {\n    attribute.type = ngeoBase.AttributeType.NUMBER;\n    attribute.numType = ngeoBase.NumberType.INTEGER;\n  } else if (type === 'xsd:string') {\n    attribute.type = ngeoBase.AttributeType.TEXT;\n  }\n};\n\n\n/**\n * Returns the first geometry attribute among a given list of attributes.\n * @param {Array.<ngeox.Attribute>} attributes The list of attributes.\n * @return {?ngeox.Attribute} A geometry attribute object.\n */\nexports.getGeometryAttribute = function(attributes) {\n  let geomAttribute = null;\n  for (let i = 0, ii = attributes.length; i < ii; i++) {\n    if (attributes[i].type === ngeoBase.AttributeType.GEOMETRY) {\n      geomAttribute = attributes[i];\n      break;\n    }\n  }\n  return geomAttribute;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/XSDAttribute.js","/**\n * @module ngeo.editing.attributesComponent\n*/\nimport olBase from 'ol';\nimport olEvents from 'ol/events';\nimport ngeoBase from 'ngeo';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper';\n\nconst exports = angular.module('ngeoAttributes', [\n  ngeoMiscEventHelper.module.name,\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Component used to render the attributes of a feature into a form.\n * Example:\n *\n *     <ngeo-attributes\n *       ngeo-attributes-attributes=\"::ctrl.attributes\"\n *       ngeo-attributes-disabled=\"ctrl.attributesDisabled\"\n *       ngeo-attributes-feature=\"::ctrl.feature\">\n *     </ngeo-attributes>\n *\n * @htmlAttribute {Array.<ngeox.Attribute>} ngeo-attributes-attributes The\n *     list of attributes to use.\n * @htmlAttribute {boolean} ngeo-attributes-disabled Whether the fieldset should\n *     be disabled or not.\n * @htmlAttribute {ol.Feature} ngeo-attributes-feature The feature.\n *\n * @ngdoc component\n * @ngname ngeoAttributes\n */\nexports.component_ = {\n  controller: 'ngeoAttributesController as attrCtrl',\n  bindings: {\n    'attributes': '=ngeoAttributesAttributes',\n    'disabled': '<ngeoAttributesDisabled',\n    'feature': '=ngeoAttributesFeature'\n  },\n  require: {\n    'form': '^'\n  },\n  templateUrl: () => `${ngeoBase.baseModuleTemplateUrl}/editing/attributescomponent.html`\n};\n\nexports.component('ngeoAttributes', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n *//* @ngInject\n * @ngdoc controller\n * @ngname ngeoAttributesController\n */\nexports.Controller_ = function($scope, ngeoEventHelper, gettextCatalog) {\n\n  /**\n   * The list of attributes to create the form with.\n   * @type {Array.<ngeox.Attribute>}\n   * @export\n   */\n  this.attributes;\n\n  /**\n   * Whether the fieldset should be disabled or not.\n   * @type {boolean}\n   * @export\n   */\n  this.disabled = false;\n\n  /**\n   * The feature containing the values.\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * The properties bound to the form, initialized with the inner properties\n   * of the feature.\n   * @type {?Object.<string, *>}\n   * @export\n   */\n  this.properties;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * Datepicker options\n   * @type {Object}\n   * @export\n   */\n  this.dateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * While changes happen from the form (from the template), they are applied\n   * to the feature inner properties. The 'propertychange' event registered\n   * above does the opposite, i.e. it listens to the feature inner properties\n   * changes and apply them to the form. To prevent circular issues, while\n   * applying changes coming from the form, this flag is set. While set, changes\n   * from the feature inner properties are ignored.\n   * @type {boolean}\n   * @private\n   */\n  this.updating_ = false;\n};\n\n\n/**\n * Initialise the component.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.properties = this.feature.getProperties();\n\n  // Listen to the feature inner properties change and apply them to the form\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(this.feature, 'propertychange', this.handleFeaturePropertyChange_, this)\n  );\n\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $['datepicker']['setDefaults']($['datepicker']['regional'][lang]);\n};\n\n\n/**\n * Called when an input node value changes\n * @param {string} name Attribute name\n * @export\n */\nexports.Controller_.prototype.handleInputChange = function(name) {\n  this.updating_ = true;\n  const value = this.properties[name];\n  this.feature.set(name, value);\n  this.updating_ = false;\n};\n\n\n/**\n * Cleanup event listeners.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n};\n\n\n/**\n * @param {ol.Object.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function(evt) {\n  if (this.updating_) {\n    return;\n  }\n  this.properties[evt.key] = evt.target.get(evt.key);\n  this.scope_.$apply();\n};\n\n\nexports.controller('ngeoAttributesController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/editing/attributesComponent.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olLayerVector from 'ol/layer/Vector';\nimport olObj from 'ol/obj';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleStyle from 'ol/style/Style';\nimport googAsserts from 'goog/asserts';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {};\nexports.assertNumber = function(value, opt_message, var_args) {};\nexports.assertString = function(value, opt_message, var_args) {};\nexports.assertFunction = function(value, opt_message, var_args) {};\nexports.assertObject = function(value, opt_message, var_args) {};\nexports.assertArray = function(value, opt_message, var_args) {};\nexports.assertBoolean = function(value, opt_message, var_args) {};\nexports.assertElement = function(value, opt_message, var_args) {};\nexports.assertInstanceof = function(value, type, opt_message, var_args) {};\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.prod.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr';\nimport ngeoMapDirective from 'ngeo/map/directive';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr';\nimport ngeoMapRecenter from 'ngeo/map/recenter';\nimport ngeoMapResizemap from 'ngeo/map/resizemap';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport ngeoCustomEvent from 'ngeo/CustomEvent';\nimport olBase from 'ol';\nimport olObservable from 'ol/Observable';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerLayer from 'ol/layer/Layer';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\nimport olSourceTileWMS from 'ol/source/TileWMS';\nimport olSourceWMTS from 'ol/source/WMTS';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap';\n\nimport olEvents from 'ol/events';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources';\n\nimport olEvents from 'ol/events';\nimport olObservable from 'ol/Observable';\nimport olView from 'ol/View';\nimport googAsserts from 'goog/asserts';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\nngeoBase.module.service(\n  'ngeoSyncDataSourcesMap', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olEvents from 'ol/events';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo';\nimport olArray from 'ol/array';\nimport olMap from 'ol/Map';\nimport olEvents from 'ol/events';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js"],"sourceRoot":""}