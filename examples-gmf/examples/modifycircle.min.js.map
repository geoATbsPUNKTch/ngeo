{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/interaction/ModifyEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Modify.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.prod.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./examples/modifycircle.js","webpack:///./src/map/directive.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/interaction/Measure.js"],"names":["__webpack_require__","d","__webpack_exports__","DEFAULT_WMS_VERSION","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","exports","unitPrefixFormat","numberFormat","opt_options","options","_Measure2","default","call","this","continueMsg","undefined","document","createElement","textContent","_asserts2","assert","ol","inherits","prototype","createDrawInteraction","style","source","_DrawAzimut2","handleMeasure","callback","geom","assertInstanceof","sketchFeature","getGeometry","_GeometryCollection2","line","getGeometries","_LineString2","getFormattedAzimutRadius","getMap","getView","getProjection","proj","Projection","decimals","precision","getLastCoordinate","projection","formatLength","formatAzimut","output","getFormattedAzimut","getFormattedLength","format","getAzimut","coords","getCoordinates","dx","dy","rad","Math","acos","sqrt","PI","_Pointer2","handleDownEvent","handleDownEvent_","handleEvent","handleEvent_","handleUpEvent","handleUpEvent_","downPx_","source_","started_","sketchFeature_","sketchPoint_","squaredClickTolerance_","sketchLayer_","_Vector2","_Vector4","useSpatialIndex","wrapX","_Draw2","getDefaultStyleFunction","_events2","listen","updateState_","event","pixel","downPx","clickPx","pass","handlePointerMove_","finishDrawing_","startDrawing_","mapBrowserEvent","type","modifyDrawing_","createOrUpdateSketchPoint_","coordinates","coordinate","slice","_Feature2","_Point2","updateSketchFeatures_","sketchPointGeom","setCoordinates","sketchFeatures","push","getSource","clear","addFeatures","start","circle","_Circle2","geometry","setGeometry","dispatchEvent","Event","geometries","getGeometriesArray","last","length","setRadius","getLength","abortDrawing_","shouldStopEvent","_functions2","FALSE","map","active","getActive","setMap","addFeature","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","Object","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","forEach","unlistenByKey","ol_Image","ImageWMS","source_Image","attributions","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","assign","x","floor","y","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","bbox","axisOrientation","getAxisOrientation","substr","join","uri","appendParams","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","ModifyEventType","_ol_interaction_Modify_","features","Pointer","handleDragEvent","handleDragEvent_","condition_","condition","primaryAction","defaultDeleteCondition_","altKeyOnly","singleClick","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","always","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","RBush","pixelTolerance_","pixelTolerance","snappedToVertex_","changingFeature_","dragSegments_","overlay_","Vector","source_Vector","updateWhileAnimating","updateWhileInteracting","SEGMENT_WRITERS_","Point","writePointGeometry_","LineString","writeLineStringGeometry_","LinearRing","Polygon","writePolygonGeometry_","MultiPoint","writeMultiPointGeometry_","MultiLineString","writeMultiLineStringGeometry_","MultiPolygon","writeMultiPolygonGeometry_","Circle","writeCircleGeometry_","GeometryCollection","writeGeometryCollectionGeometry_","Collection","getFeatures","VectorEventType","ADDFEATURE","handleSourceAdd_","REMOVEFEATURE","handleSourceRemove_","Error","features_","addFeature_","bind","CollectionEventType","ADD","handleFeatureAdd_","REMOVE","handleFeatureRemove_","lastPointerEvent_","MODIFY_SEGMENT_CIRCLE_CENTER_INDEX","MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX","feature","getType","isRendered","handlePointerAtPixel_","handleFeatureChange_","willModifyFeatures_","evt","removeFeature_","removeFeatureSegmentData_","removeFeature","unlisten","rBush","nodesToRemove","node","i","remove","setActive","segmentData","segment","insert","ii","points","depth","index","j","jj","lines","rings","k","kk","polygons","getCenter","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","vertexFeature","Feature","compareIndexes_","a","b","pixelCoordinate","getCoordinateFromPixel","insertVertices","vertex","vertexExtent","segmentDataMatches","getInExtent","componentSegments","sort","segmentDataMatch","uid","Array","GeometryType","CIRCLE","closestVertex","closestOnSegmentData_","equals","LINE_STRING","MULTI_LINE_STRING","insertVertex_","apply","dragSegment","getStride","POINT","MULTI_POINT","POLYGON","MULTI_POLYGON","setCenter","distance","setGeometryCoordinates_","update","MapBrowserPointerEvent","getInteracting","MapBrowserEventType","POINTERMOVE","handlingDownUpSequence","handled","SINGLECLICK","removePoint","box","nodes","pointDistanceToSegmentDataSquared_","closestSegment","vertexPixel","getPixelFromCoordinate","dist","vertexSegments","pixel1","pixel2","squaredDist1","squaredDistance","squaredDist2","min","pointCoordinates","circleGeometry","distanceToCenterSquared","distanceToCircumference","getRadius","squaredDistanceToSegment","getClosestPoint","closestOnSegment","splice","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","POINTERDRAG","removeVertex_","component","left","newIndex","right","dragSegments","segmentsByFeature","deleted","pop","segments","delta","forEachInExtent","array","Style","createDefaultEditing","mapBrowserPointerEvent","detail","arguments","_Event2","_ol2","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","res","key","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","_ngeo","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","name","_createClass","value","get","set","_ngeo2","module","_Collection2","featureUidToGroupIndex_","groups_","layer_","styleFunction_","groupIndex","featureUid","getUid","toString","group","_obj2","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","setStyle","createFunction","angular","service","requires","opt_message","var_args","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","getLayers","item","layer","mapUid","previous","setAt","removeAt","insertAt","_CustomEvent2","current","updateDimensions","dimensions","baseBgLayer","layers","getArray","_Layer2","hasUpdates","updatedDimensions","refresh","e","code","ngeo","_module3","app","MainController","_Map2","_Tile2","_OSM2","view","_View2","zoom","circleFeature","fromCircle","color","label","opacity","stroke","FeatureProperties","IS_CIRCLE","vectorSource","interaction","_ModifyCircle2","addInteraction","controller","directive_","$window","ngeoSyncDataSourcesMap","restrict","link","scope","element","attrs","prop","$eval","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","_RBush2","_Modify2","_extent2","boundingExtent","_coordinate2","_Polygon2","azimut","_MeasureAzimut2","AZIMUT","lowerLeft","upperRight","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","target","_this","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","manager","manager_","index_","setFeatures","$scope","$element","$attrs","mapExpr","recenter","attr","getSize","fit","setZoom","on","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","$watch","newVal","oldVal","cancelAnimationFrame","templateUrl","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","goog","zoomLevels","keys","newLength","Number","_array2","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","_this2","$applyAsync","__WEBPACK_IMPORTED_MODULE_9__math_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","__WEBPACK_IMPORTED_MODULE_0__index_js__","appendPoint","point","flatCoordinates","__WEBPACK_IMPORTED_MODULE_1__array_js__","getFlatCoordinates","clone","multiPoint","setFlatCoordinates","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","stride","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","intersectsExtent","setLayout","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XY","setFlatCoordinatesInternal","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","ends_","maxDelta_","maxDeltaRevision_","appendLineString","lineString","multiLineString","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","m","opt_extrapolate","opt_interpolate","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","ends","lineStrings","offset","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","polygon","multiPolygon","len","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","endss","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","__WEBPACK_IMPORTED_MODULE_6__obj_js__","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","GEOMETRY_COLLECTION","rotate","angle","anchor","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","DrawEventType","Draw","shouldHandle_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","maxPoints_","maxPoints","Infinity","finishCondition_","finishCondition","functions","geometryFunction","opt_geometry","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","concat","geometryFunction_","finishCoordinate_","sketchCoords_","sketchLine_","sketchLineCoords_","clickTolerance","geometryName_","geometryName","noModifierKeys","freehandCondition_","freehand","freehandCondition","shiftKeyOnly","ol_Object","getChangeEventType","Property","ACTIVE","styles","addToDrawing_","POINTERDOWN","DBLCLICK","circleMode","finishDrawing","atFinish_","stopPropagation","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","setGeometryName","ring","getLinearRing","done","removeLastPoint","extend","overlaySource","createRegularPolygon","opt_sides","opt_angle","radius","atan","createBox","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","getRadiusSquared_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","circleExtent","intersectsCoordinate","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","transform","MeasureBaseOptions","_Interaction2","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","displayHelpTooltip_","displayHelpTooltip","startMsg","changeEventKey_","postcomposeEventKey_","fill","_Fill2","_Stroke2","width","vectorLayer_","drawInteraction_","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","SPHERE_WGS84","_sphere2","_EPSG2","RADIUS","getFormattedArea","abs","geodesicArea","getFormattedCircleArea","pow","c1","c2","haversineDistance","getFormattedPoint","opt_template","dragging","helpMsg","_dom2","removeChildren","appendChild","setPosition","getDrawInteraction","prevMap","removeInteraction","createMeasureTooltip_","measure","coord","innerHTML","classList","add","setOffset","createHelpTooltip_","removeHelpTooltip_","_Overlay2","positioning","addOverlay","removeOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement"],"mappings":"kDAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAGA,IAAAA,EAAA,yCCOAD,EAAA,GACAE,gBAAA,iBACAC,UAAA,YACAC,UAAA,YACAC,KAAA,2FCXA,QAAAP,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,wDAgBA,IAAMQ,EAAU,SAASC,EAAkBC,EAAcC,GAEvD,IAAMC,EAAUD,MAEhBE,EAAAC,QAAuBC,KAAKC,KAAMJ,GAOlCI,KAAKC,iBACuBC,IAAxBN,EAAQK,YACVD,KAAKC,YAAcL,EAAQK,aAE3BD,KAAKC,YAAcE,SAASC,cAAc,QAC1CJ,KAAKC,YAAYI,YAAc,oBAOjCL,KAAKN,aAAeY,EAAAR,QAAYS,OAAOb,GAMvCM,KAAKP,iBAAmBa,EAAAR,QAAYS,OAAOd,IAI7Ce,GAAGC,SAASjB,EAAZK,EAAAC,SAMAN,EAAQkB,UAAUC,sBAAwB,SAASC,EACjDC,GAEA,OAAO,IAAAC,EAAAhB,SACLe,SACAD,WAUJpB,EAAQkB,UAAUK,cAAgB,SAASC,GACzC,IAAMC,EAAOX,EAAAR,QAAYoB,iBAAiBlB,KAAKmB,cAAcC,cAAhDC,EAAAvB,SACPwB,EAAOhB,EAAAR,QAAYoB,iBAAiBD,EAAKM,gBAAgB,GAAlDC,EAAA1B,SAIbkB,EAHexB,EAAQiC,yBACrBH,EAAMhB,EAAAR,QAAYoB,iBAAiBlB,KAAK0B,SAASC,UAAUC,gBAAiBpB,GAAGqB,KAAKC,YACpF9B,KAAK+B,SAAU/B,KAAKgC,UAAWhC,KAAKP,iBAAkBO,KAAKN,cAC5C4B,EAAKW,sBAcxBzC,EAAQiC,yBAA2B,SACjCH,EAAMY,EAAYH,EAAUC,EAAWG,EAAcC,GAErD,IAAIC,EAAS7C,EAAQ8C,mBAAmBhB,EAAMS,EAAUK,GAKxD,OAHAC,QAAexC,EAAAC,QAAuByC,mBACpCjB,EAAMY,EAAYF,EAAWG,IAajC3C,EAAQ8C,mBAAqB,SAAShB,EAAMS,EAAUS,GAEpD,OAAUA,EADKhD,EAAQiD,UAAUnB,GACRS,GAAzB,KASFvC,EAAQiD,UAAY,SAASnB,GAC3B,IAAMoB,EAASpB,EAAKqB,iBACdC,EAAKF,EAAO,GAAG,GAAKA,EAAO,GAAG,GAC9BG,EAAKH,EAAO,GAAG,GAAKA,EAAO,GAAG,GAC9BI,EAAMC,KAAKC,KAAKH,EAAKE,KAAKE,KAAKL,EAAKA,EAAKC,EAAKA,IAEpD,OADeD,EAAK,EAAI,GAAK,GACZE,EAAM,IAAMC,KAAKG,GAAM,eAI3B1D,qFCtIf,QAAAR,EAAA,QACAA,EAAA,UACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,wDAWA,IAAMQ,EAAU,SAAVA,EAAmBI,GAEvBuD,EAAArD,QAAqBC,KAAKC,MACxBoD,gBAAiB5D,EAAQ6D,iBACzBC,YAAa9D,EAAQ+D,aACrBC,cAAehE,EAAQiE,iBAOzBzD,KAAK0D,QAAU,KAOf1D,KAAK2D,aAA6BzD,IAAnBN,EAAQiB,OAAuBjB,EAAQiB,OAAS,KAO/Db,KAAK4D,UAAW,EAOhB5D,KAAK6D,eAAiB,KAOtB7D,KAAK8D,aAAe,KAUpB9D,KAAK+D,uBAAyB,EAQ9B/D,KAAKgE,aAAe,IAAAC,EAAAnE,SAClBe,OAAQ,IAAAqD,EAAApE,SACNqE,iBAAiB,EACjBC,OAAO,IAETxD,WAAyBV,IAAlBN,EAAQgB,MACbhB,EAAQgB,MAAQyD,EAAAvE,QAAkBwE,4BAGtCC,EAAAzE,QAAS0E,OAAOxE,KAAM,gBAAiBA,KAAKyE,aAAczE,OAG5DQ,GAAGC,SAASjB,EAAZ2D,EAAArD,SASAN,EAAQ6D,iBAAmB,SAASqB,GAElC,OADA1E,KAAK0D,QAAUgB,EAAMC,OACd,GAUTnF,EAAQiE,eAAiB,SAASiB,GAChC,IAAME,EAAS5E,KAAK0D,QACdmB,EAAUH,EAAMC,MAChB/B,EAAKgC,EAAO,GAAKC,EAAQ,GACzBhC,EAAK+B,EAAO,GAAKC,EAAQ,GAE3BC,GAAO,EAUX,OAXwBlC,EAAKA,EAAKC,EAAKA,GAEhB7C,KAAK+D,yBAC1B/D,KAAK+E,mBAAmBL,GACnB1E,KAAK4D,SAGR5D,KAAKgF,iBAFLhF,KAAKiF,cAAcP,GAIrBI,GAAO,GAEFA,GAUTtF,EAAQ+D,aAAe,SAAS2B,GAC9B,IAAIJ,GAAO,EAMX,MAL6B,gBAAzBI,EAAgBC,KAClBL,EAAO9E,KAAK+E,mBAAmBG,GACG,aAAzBA,EAAgBC,OACzBL,GAAO,GAEF3B,EAAArD,QAAqBwD,YAAYvD,KAAKC,KAAMkF,IAAoBJ,GAUzEtF,EAAQkB,UAAUqE,mBAAqB,SAASL,GAM9C,OALI1E,KAAK4D,SACP5D,KAAKoF,eAAeV,GAEpB1E,KAAKqF,2BAA2BX,IAE3B,GAQTlF,EAAQkB,UAAU2E,2BAA6B,SAASX,GACtD,IAAMY,EAAcZ,EAAMa,WAAWC,QACrC,GAA0B,OAAtBxF,KAAK8D,aACP9D,KAAK8D,aAAe,IAAA2B,EAAA3F,QAAc,IAAA4F,EAAA5F,QAAgBwF,IAClDtF,KAAK2F,4BACA,CACL,IAAMC,EAAkB5F,KAAK8D,aAAa1C,cAC1Cd,EAAAR,QAAYoB,iBAAiB0E,EAA7BF,EAAA5F,SACA8F,EAAgBC,eAAeP,KASnC9F,EAAQkB,UAAUiF,sBAAwB,WACxC,IAAMG,KACsB,OAAxB9F,KAAK6D,gBACPiC,EAAeC,KAAK/F,KAAK6D,gBAED,OAAtB7D,KAAK8D,cACPgC,EAAeC,KAAK/F,KAAK8D,cAE3B,IAAMjD,EAASb,KAAKgE,aAAagC,YACjCnF,EAAOoF,OAAM,GACbpF,EAAOqF,YAAYJ,IASrBtG,EAAQkB,UAAUuE,cAAgB,SAASP,GACzC,IAAMyB,EAAQzB,EAAMa,WACpBvF,KAAK4D,UAAW,EAChB,IAAMtC,EAAO,IAAAE,EAAA1B,SAAsBqG,EAAMX,QAASW,EAAMX,UAClDY,EAAS,IAAAC,EAAAvG,QAAiBqG,EAAO,GACjCG,EAAW,IAAAjF,EAAAvB,SAA8BwB,EAAM8E,IACrD9F,EAAAR,QAAYS,YAAoBL,IAAboG,GACnBtG,KAAK6D,eAAiB,IAAA4B,EAAA3F,QACtBE,KAAK6D,eAAe0C,YAAYD,GAChCtG,KAAK2F,wBACL3F,KAAKwG,cAAc,IAAInC,EAAAvE,QAAkB2G,MACM,YAAczG,KAAK6D,kBASpErE,EAAQkB,UAAU0E,eAAiB,SAASV,GAC1C,IAAMa,EAAab,EAAMa,WAGnBmB,EAFWpG,EAAAR,QAAYoB,iBAC3BlB,KAAK6D,eAAezC,cADLC,EAAAvB,SAEW6G,qBACtBrF,EAAOoF,EAAW,GACxBpG,EAAAR,QAAYoB,iBAAiBI,EAA7BE,EAAA1B,SACA,IAAMwF,EAAchE,EAAKqB,iBACnBiD,EAAkB5F,KAAK8D,aAAa1C,cAC1Cd,EAAAR,QAAYoB,iBAAiB0E,EAA7BF,EAAA5F,SACA8F,EAAgBC,eAAeN,GAC/B,IAAMqB,EAAOtB,EAAYA,EAAYuB,OAAS,GAC9CD,EAAK,GAAKrB,EAAW,GACrBqB,EAAK,GAAKrB,EAAW,GACrBjF,EAAAR,QAAYoB,iBAAiBI,EAA7BE,EAAA1B,SACAwB,EAAKuE,eAAeP,GACLhF,EAAAR,QAAYoB,iBAAiBwF,EAAW,GAAxCL,EAAAvG,SACRgH,UAAUxF,EAAKyF,aACtB/G,KAAK2F,yBASPnG,EAAQkB,UAAUsG,cAAgB,WAChChH,KAAK4D,UAAW,EAChB,IAAMzC,EAAgBnB,KAAK6D,eAM3B,OALsB,OAAlB1C,IACFnB,KAAK6D,eAAiB,KACtB7D,KAAK8D,aAAe,KACpB9D,KAAKgE,aAAagC,YAAYC,OAAM,IAE/B9E,GAOT3B,EAAQkB,UAAUuG,gBAAkBC,EAAApH,QAAYqH,MAMhD3H,EAAQkB,UAAU+D,aAAe,WAC/B,IAAM2C,EAAMpH,KAAK0B,SACX2F,EAASrH,KAAKsH,YACR,OAARF,GAAiBC,GACnBrH,KAAKgH,gBAEPhH,KAAKgE,aAAauD,OAAOF,EAASD,EAAM,OAQ1C5H,EAAQkB,UAAUsE,eAAiB,WACjC,IAAM7D,EAAgBnB,KAAKgH,gBAC3B1G,EAAAR,QAAYS,OAAyB,OAAlBY,GAEE,OAAjBnB,KAAK2D,SACP3D,KAAK2D,QAAQ6D,WAAWrG,GAG1BnB,KAAKwG,cAAc,IAAInC,EAAAvE,QAAkB2G,MACM,UAAYtF,KAO7D3B,EAAQkB,UAAU6G,OAAS,SAASH,GAClCjE,EAAArD,QAAqBY,UAAU6G,OAAOxH,KAAKC,KAAMoH,GACjDpH,KAAKyE,0BAIQjF,4ICtSfiI,EAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEAC,EAAA,EAAAjI,KAAAC,KAAA0H,EAAAC,EAAAC,EAAAK,EAAA,EAAAC,MAMAlI,KAAAmI,KAAAN,EAMA7H,KAAAoI,OAAA,IAAAC,MACA,OAAAP,IACA9H,KAAAoI,OAAAN,eAOA9H,KAAAsI,mBAAA,KAMAtI,KAAAuI,MAAAN,EAAA,EAAAC,KAMAlI,KAAAwI,mBAAAT,GAIAU,OAAAjI,EAAA,SAAAiI,CAAAhB,EAAAO,EAAA,GAOAP,EAAA/G,UAAAgI,SAAA,WACA,OAAA1I,KAAAoI,QASAX,EAAA/G,UAAAiI,kBAAA,WACA3I,KAAAuI,MAAAN,EAAA,EAAAW,MACA5I,KAAA6I,iBACA7I,KAAA8I,WASArB,EAAA/G,UAAAqI,iBAAA,gBACA7I,IAAAF,KAAA2H,aACA3H,KAAA2H,WAAAc,OAAAO,EAAA,UAAAP,CAAAzI,KAAA0H,QAAA1H,KAAAoI,OAAAa,QAEAjJ,KAAAuI,MAAAN,EAAA,EAAAiB,OACAlJ,KAAA6I,iBACA7I,KAAA8I,WAWArB,EAAA/G,UAAAyI,KAAA,WACAnJ,KAAAuI,OAAAN,EAAA,EAAAC,MAAAlI,KAAAuI,OAAAN,EAAA,EAAAW,QACA5I,KAAAuI,MAAAN,EAAA,EAAAmB,QACApJ,KAAA8I,UACA9I,KAAAsI,oBACAe,EAAA,QAAAC,WAAAtJ,KAAAoI,OAAAmB,EAAA,EAAAX,MACA5I,KAAA2I,kBAAA3I,MACAqJ,EAAA,QAAAC,WAAAtJ,KAAAoI,OAAAmB,EAAA,EAAAC,KACAxJ,KAAA+I,iBAAA/I,OAEAA,KAAAwI,mBAAAxI,UAAAmI,QAQAV,EAAA/G,UAAA+I,SAAA,SAAAC,GACA1J,KAAAoI,OAAAsB,GASAjC,EAAA/G,UAAAmI,eAAA,WACA7I,KAAAsI,mBAAAqB,QAAAN,EAAA,QAAAO,eACA5J,KAAAsI,mBAAA,MAEA,IAAAuB,EAAA,gEC5GAC,EAAA,SAAAnK,GAEA,IAAAC,EAAAD,MAEAoK,EAAA,QAAAhK,KAAAC,MACAgK,aAAApK,EAAAoK,aACA9H,WAAAtC,EAAAsC,WACA+H,YAAArK,EAAAqK,cAOAjK,KAAAkK,kBACAhK,IAAAN,EAAAkI,YAAAlI,EAAAkI,YAAA,KAMA9H,KAAAmK,KAAAvK,EAAAwK,IAMApK,KAAAwI,wBAAAtI,IAAAN,EAAAmI,kBACAnI,EAAAmI,kBAAAgC,EAAA,QAAAM,yBAMArK,KAAAsK,QAAA1K,EAAA2K,WAMAvK,KAAAwK,MAAA,EACAxK,KAAAyK,aAMAzK,KAAA0K,YAAkE9K,EAAA,WAMlEI,KAAA2K,YAAAzK,IAAAN,EAAAgL,OAAAhL,EAAAgL,MAMA5K,KAAAoI,OAAA,KAMApI,KAAA6K,YAAA,KAMA7K,KAAA8K,kBAAA,EAMA9K,KAAA+K,YAAA7K,IAAAN,EAAAoL,MAAApL,EAAAoL,MAAA,KAIAvC,OAAAjI,EAAA,SAAAiI,CAAAqB,EAAAC,EAAA,SAQAD,EAAAmB,4BAAA,SAiBAnB,EAAApJ,UAAAwK,qBAAA,SAAA3F,EAAAoC,EAAAzF,EAAAqI,GACA,QAAArK,IAAAF,KAAAmK,KAAA,CAGA,IAAAgB,EAAA1C,OAAA5G,EAAA,IAAA4G,CAAAvG,GACAkJ,EAAApL,KAAA4B,gBAEAwJ,OAAAD,IACAxD,EAAA0D,EAAA,EAAAC,0BAAAF,EAAAD,EAAA5F,EAAAoC,GACApC,EAAAkD,OAAA5G,EAAA,UAAA4G,CAAAlD,EAAA4F,EAAAC,IAGA,IAAA1D,EAAAe,OAAAO,EAAA,kBAAAP,CAAAlD,EAAAoC,EAAA,EACAmC,EAAAmB,4BAEAM,GACAC,QAAA,MACAC,QAAAC,EAAA,EACAC,QAAA,iBACAC,OAAA,YACAC,aAAA,EACAC,aAAA9L,KAAAsK,QAAA,QAEAyB,EAAA,QAAAC,OAAAT,EAAAvL,KAAAsK,QAAAC,GAEA,IAAA0B,EAAAlJ,KAAAmJ,OAAA3G,EAAA,GAAAmC,EAAA,IAAAC,GACAwE,EAAApJ,KAAAmJ,OAAAxE,EAAA,GAAAnC,EAAA,IAAAoC,GAIA,OAHA4D,EAAAvL,KAAAwK,KAAA,SAAAyB,EACAV,EAAAvL,KAAAwK,KAAA,SAAA2B,EAEAnM,KAAAoM,eACA1E,EAAAoC,EAAAmB,2BACA,EAAAG,GAAAD,EAAAI,KAUAzB,EAAApJ,UAAA2L,UAAA,WACA,OAAArM,KAAAsK,SAOAR,EAAApJ,UAAA4L,iBAAA,SAAA5E,EAAAC,EAAAC,EAAA1F,GAEA,QAAAhC,IAAAF,KAAAmK,KACA,YAGAxC,EAAA3H,KAAAuM,sBAAA5E,GAEA,GAAAC,GAAA5H,KAAA2K,aAAAzK,IAAAF,KAAA0K,cACA9C,EAAA,GAGA,IAAA4E,EAAA7E,EAAAC,EAEA6E,EAAAhE,OAAAO,EAAA,UAAAP,CAAAf,GACAgF,EAAA3J,KAAA4J,KAAAlE,OAAAO,EAAA,SAAAP,CAAAf,GAAA8E,GACAI,EAAA7J,KAAA4J,KAAAlE,OAAAO,EAAA,UAAAP,CAAAf,GAAA8E,GACAK,EAAApE,OAAAO,EAAA,kBAAAP,CAAAgE,EAAAD,EAAA,GACAE,EAAAE,IACAE,EAAA/J,KAAA4J,KAAA3M,KAAA+K,OAAAtC,OAAAO,EAAA,SAAAP,CAAAf,GAAA8E,GACAO,EAAAhK,KAAA4J,KAAA3M,KAAA+K,OAAAtC,OAAAO,EAAA,UAAAP,CAAAf,GAAA8E,GACAQ,EAAAvE,OAAAO,EAAA,kBAAAP,CAAAgE,EAAAD,EAAA,GACAM,EAAAC,IAEArD,EAAA1J,KAAAoI,OACA,GAAAsB,GACA1J,KAAA8K,mBAAA9K,KAAAiN,eACAvD,EAAAwD,iBAAAvF,GACA+B,EAAAyD,iBAAAvF,GACAa,OAAAO,EAAA,eAAAP,CAAAiB,EAAA0D,YAAAP,GACA,OAAAnD,EAGA,IAAAa,GACAiB,QAAA,MACAC,QAAAC,EAAA,EACAC,QAAA,SACAC,OAAA,YACAC,aAAA,GAEAE,EAAA,QAAAC,OAAAzB,EAAAvK,KAAAsK,SAEAtK,KAAA6K,WAAA,GAAA9H,KAAAsK,MAAA5E,OAAAO,EAAA,SAAAP,CAAAuE,GAAAR,GACAxM,KAAA6K,WAAA,GAAA9H,KAAAsK,MAAA5E,OAAAO,EAAA,UAAAP,CAAAuE,GAAAR,GAEA,IAAApC,EAAApK,KAAAoM,eAAAY,EAAAhN,KAAA6K,WAAAjD,EACA1F,EAAAqI,GAUA,OARAvK,KAAAoI,OAAA,IAAAyB,EAAAmD,EAAArF,EAAAC,EACAwC,EAAApK,KAAAkK,aAAAlK,KAAAwI,oBAEAxI,KAAA8K,kBAAA9K,KAAAiN,cAEA5D,EAAA,QAAA7E,OAAAxE,KAAAoI,OAAAmB,EAAA,EAAA+D,OACAtN,KAAAuN,kBAAAvN,MAEAA,KAAAoI,QAUA0B,EAAApJ,UAAA8M,qBAAA,WACA,OAAAxN,KAAAwI,oBAaAsB,EAAApJ,UAAA0L,eAAA,SAAA1E,EAAA+F,EAAA7F,EAAA1F,EAAAqI,GAUA,GARA9B,OAAAiF,EAAA,EAAAjF,MAAAvI,IAAAF,KAAAmK,KAAA,GAEAI,EAAAvK,KAAAwK,KAAA,aAAAtI,EAAAyL,UAEA,WAAA3N,KAAAsK,UACAC,EAAA,WAGA,GAAA3C,EACA,OAAA5H,KAAA0K,aACA,KAAAkD,EAAA,EAAAvO,UACA,IAAAwO,EAAA,GAAAjG,EAAA,KACA,mBAAA2C,EACAA,EAAA,wBAAwCsD,EAExCtD,EAAA,sBAAAsD,EAEA,MACA,KAAAD,EAAA,EAAAtO,UACAiL,EAAA,kBAAA3C,EACA,MACA,KAAAgG,EAAA,EAAAxO,gBACA,KAAAwO,EAAA,EAAArO,KACAgL,EAAA,OAAA3C,EACA,MACA,QACAa,OAAAiF,EAAA,EAAAjF,EAAA,KAKA8B,EAAA,MAAAkD,EAAA,GACAlD,EAAA,OAAAkD,EAAA,GAEA,IACAK,EADAC,EAAA7L,EAAA8L,qBASA,OANAF,EADA9N,KAAAwK,MAAA,MAAAuD,EAAAE,OAAA,MACAvG,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEAA,EAEA6C,EAAA,KAAAuD,EAAAI,KAAA,KAEAC,EAAA,QAAAC,aAAiDpO,KAAA,KAAAuK,IASjDT,EAAApJ,UAAA2N,OAAA,WACA,OAAArO,KAAAmK,MASAL,EAAApJ,UAAA4N,qBAAA,SACAvG,GACA/H,KAAAoI,OAAA,KACApI,KAAAwI,mBAAAT,EACA/H,KAAA8I,WASAgB,EAAApJ,UAAA6N,OAAA,SAAAnE,GACAA,GAAApK,KAAAmK,OACAnK,KAAAmK,KAAAC,EACApK,KAAAoI,OAAA,KACApI,KAAA8I,YAUAgB,EAAApJ,UAAA8N,aAAA,SAAAjE,GACAwB,EAAA,QAAAC,OAAAhM,KAAAsK,QAAAC,GACAvK,KAAAyK,aACAzK,KAAAoI,OAAA,KACApI,KAAA8I,WAOAgB,EAAApJ,UAAA+J,WAAA,WACA,IAAAgE,EAAAzO,KAAAsK,QAAA,SAAAoB,EAAA,EACA1L,KAAAwK,KAAAkE,EAAA,QAAAC,gBAAAF,EAAA,WAEAvP,EAAA,sNC5WA0P,EAMA,cANAA,EAYA,8DC0BAC,EAAA,SAAAjP,GAqJA,IAAAkP,EAWA,GA9JAC,EAAA,QAAAhP,KAAAC,MACAoD,gBAAAyL,EAAAxL,iBACA2L,gBAAAH,EAAAI,iBACA3L,YAAAuL,EAAAvL,YACAE,cAAAqL,EAAApL,iBAOAzD,KAAAkP,WAAAtP,EAAAuP,UACAvP,EAAAuP,YAAA,QAAAC,cAQApP,KAAAqP,wBAAA,SAAAnK,GACA,OAAAiK,EAAA,QAAAG,WAAApK,IACAiK,EAAA,QAAAI,YAAArK,IAOAlF,KAAAwP,iBAAA5P,EAAA6P,gBACA7P,EAAA6P,gBAAAzP,KAAAqP,wBAMArP,KAAA0P,uBAAA9P,EAAA+P,sBACA/P,EAAA+P,sBAAAR,EAAA,QAAAS,OAOA5P,KAAA6P,eAAA,KAOA7P,KAAA8P,gBAAA,KAMA9P,KAAA+P,YAAA,KAQA/P,KAAAgQ,wBAAA,EAMAhQ,KAAAiQ,WAAA,EAOAjQ,KAAAkQ,OAAA,IAAAC,EAAA,QAMAnQ,KAAAoQ,qBAAAlQ,IAAAN,EAAAyQ,eACAzQ,EAAAyQ,eAAA,GAMArQ,KAAAsQ,kBAAA,EAQAtQ,KAAAuQ,kBAAA,EAMAvQ,KAAAwQ,iBAOAxQ,KAAAyQ,SAAA,IAAAC,EAAA,SACA7P,OAAA,IAAA8P,EAAA,SACAxM,iBAAA,EACAC,QAAAxE,EAAAwE,QAEAxD,MAAAhB,EAAAgB,MAAAhB,EAAAgB,MACAiO,EAAAvK,0BACAsM,sBAAA,EACAC,wBAAA,IAQA7Q,KAAA8Q,kBACAC,MAAA/Q,KAAAgR,oBACAC,WAAAjR,KAAAkR,yBACAC,WAAAnR,KAAAkR,yBACAE,QAAApR,KAAAqR,sBACAC,WAAAtR,KAAAuR,yBACAC,gBAAAxR,KAAAyR,8BACAC,aAAA1R,KAAA2R,2BACAC,OAAA5R,KAAA6R,qBACAC,mBAAA9R,KAAA+R,kCAQA/R,KAAA2D,QAAA,KAGA/D,EAAAiB,QACAb,KAAA2D,QAAA/D,EAAAiB,OACAiO,EAAA,IAAAkD,EAAA,QAAAhS,KAAA2D,QAAAsO,eACA5I,EAAA,QAAA7E,OAAAxE,KAAA2D,QAAAuO,EAAA,EAAAC,WACAnS,KAAAoS,iBAAApS,MACAqJ,EAAA,QAAA7E,OAAAxE,KAAA2D,QAAAuO,EAAA,EAAAG,cACArS,KAAAsS,oBAAAtS,OAEA8O,EAAAlP,EAAAkP,UAEAA,EACA,UAAAyD,MAAA,wDAOAvS,KAAAwS,UAAA1D,EAEA9O,KAAAwS,UAAA7I,QAAA3J,KAAAyS,YAAAC,KAAA1S,OACAqJ,EAAA,QAAA7E,OAAAxE,KAAAwS,UAAAG,EAAA,EAAAC,IACA5S,KAAA6S,kBAAA7S,MACAqJ,EAAA,QAAA7E,OAAAxE,KAAAwS,UAAAG,EAAA,EAAAG,OACA9S,KAAA+S,qBAAA/S,MAMAA,KAAAgT,kBAAA,MAIAvK,OAAAjI,EAAA,SAAAiI,CAAAoG,EAAAE,EAAA,SAOAF,EAAAoE,mCAAA,EAMApE,EAAAqE,0CAAA,EAOArE,EAAAnO,UAAA+R,YAAA,SAAAU,GACA,IAAA7M,EAAA6M,EAAA/R,cACAkF,KAAA8M,YAAApT,KAAA8Q,kBACA9Q,KAAA8Q,iBAAAxK,EAAA8M,WAAArT,KAAAC,KAAAmT,EAAA7M,GAEA,IAAAc,EAAApH,KAAA0B,SACA0F,KAAAiM,cAAArT,KAAAsH,aACAtH,KAAAsT,sBAAAtT,KAAA+P,WAAA3I,GAEAiC,EAAA,QAAA7E,OAAA2O,EAAA5J,EAAA,EAAA+D,OACAtN,KAAAuT,qBAAAvT,OAQA6O,EAAAnO,UAAA8S,oBAAA,SAAAC,GACAzT,KAAAiQ,YACAjQ,KAAAiQ,WAAA,EACAjQ,KAAAwG,cAAA,IAAAqI,EAAApI,MACAmI,EAAA5O,KAAAwS,UAAAiB,MASA5E,EAAAnO,UAAAgT,eAAA,SAAAP,GACAnT,KAAA2T,0BAAAR,GAGAnT,KAAA6P,gBAAA,IAAA7P,KAAAwS,UAAAzL,cACA/G,KAAAyQ,SAAAzK,YAAA4N,cAAA5T,KAAA6P,gBACA7P,KAAA6P,eAAA,MAEAxG,EAAA,QAAAwK,SAAAV,EAAA5J,EAAA,EAAA+D,OACAtN,KAAAuT,qBAAAvT,OAQA6O,EAAAnO,UAAAiT,0BAAA,SAAAR,GACA,IAAAW,EAAA9T,KAAAkQ,OACkD6D,KAClDD,EAAAnK,QAIA,SAAAqK,GACAb,IAAAa,EAAAb,SACAY,EAAAhO,KAAAiO,KAGA,QAAAC,EAAAF,EAAAlN,OAAA,EAAwCoN,GAAA,IAAQA,EAChDH,EAAAI,OAAAH,EAAAE,KAQApF,EAAAnO,UAAAyT,UAAA,SAAA9M,GACArH,KAAA6P,iBAAAxI,IACArH,KAAAyQ,SAAAzK,YAAA4N,cAAA5T,KAAA6P,gBACA7P,KAAA6P,eAAA,MAEAd,EAAA,QAAArO,UAAAyT,UAAApU,KAAAC,KAAAqH,IAOAwH,EAAAnO,UAAA6G,OAAA,SAAAH,GACApH,KAAAyQ,SAAAlJ,OAAAH,GACA2H,EAAA,QAAArO,UAAA6G,OAAAxH,KAAAC,KAAAoH,IAQAyH,EAAAnO,UAAA0R,iBAAA,SAAA1N,GACAA,EAAAyO,SACAnT,KAAAwS,UAAAzM,KAAArB,EAAAyO,UASAtE,EAAAnO,UAAA4R,oBAAA,SAAA5N,GACAA,EAAAyO,SACAnT,KAAAwS,UAAA0B,OAAAxP,EAAAyO,UASAtE,EAAAnO,UAAAmS,kBAAA,SAAAY,GACAzT,KAAAyS,YAAyCgB,EAAA,UAQzC5E,EAAAnO,UAAA6S,qBAAA,SAAAE,GACA,IAAAzT,KAAAuQ,iBAAA,CACA,IAAA4C,EAAwCM,EAAA,OACxCzT,KAAA0T,eAAAP,GACAnT,KAAAyS,YAAAU,KASAtE,EAAAnO,UAAAqS,qBAAA,SAAAU,GACA,IAAAN,EAAsCM,EAAA,QACtCzT,KAAA0T,eAAAP,IASAtE,EAAAnO,UAAAsQ,oBAAA,SAAAmC,EAAA7M,GACA,IAAAhB,EAAAgB,EAAA3D,iBACAyR,GACAjB,UACA7M,WACA+N,SAAA/O,MAEAtF,KAAAkQ,OAAAoE,OAAAhO,EAAA8G,YAAAgH,IASAvF,EAAAnO,UAAA6Q,yBAAA,SAAA4B,EAAA7M,GACA,IACAhB,EAAA2O,EAAAM,EAAAH,EADAI,EAAAlO,EAAA3D,iBAEA,IAAAsR,EAAA,EAAAM,EAAAC,EAAA3N,OAAiCoN,EAAAM,IAAQN,EAEzCG,GACAjB,UACA7M,WACAmO,OAAAR,GACAS,MAAAT,EACAI,SANA/O,EAAAkP,EAAAP,GAMA3O,IAEAtF,KAAAkQ,OAAAoE,OAAAhO,EAAA8G,YAAAgH,IAUAvF,EAAAnO,UAAAwQ,yBAAA,SAAAiC,EAAA7M,GACA,IACA2N,EAAAM,EAAAF,EAAAD,EADA9O,EAAAgB,EAAA3D,iBAEA,IAAAsR,EAAA,EAAAM,EAAAjP,EAAAuB,OAAA,EAA0CoN,EAAAM,IAAQN,EAElDG,GACAjB,UACA7M,WACAoO,MAAAT,EACAI,QALAA,EAAA/O,EAAAE,MAAAyO,IAAA,IAOAjU,KAAAkQ,OAAAoE,OAAA7L,OAAAf,EAAA,eAAAe,CAAA4L,GAAAD,IAUAvF,EAAAnO,UAAA+Q,8BAAA,SAAA0B,EAAA7M,GACA,IACAhB,EAAA2O,EAAAM,EAAAI,EAAAC,EAAAP,EAAAD,EADAS,EAAAvO,EAAA3D,iBAEA,IAAAgS,EAAA,EAAAC,EAAAC,EAAAhO,OAAgC8N,EAAAC,IAAQD,EAExC,IAAAV,EAAA,EAAAM,GADAjP,EAAAuP,EAAAF,IACA9N,OAAA,EAA4CoN,EAAAM,IAAQN,EAEpDG,GACAjB,UACA7M,WACAmO,OAAAE,GACAD,MAAAT,EACAI,QANAA,EAAA/O,EAAAE,MAAAyO,IAAA,IAQAjU,KAAAkQ,OAAAoE,OAAA7L,OAAAf,EAAA,eAAAe,CAAA4L,GAAAD,IAWAvF,EAAAnO,UAAA2Q,sBAAA,SAAA8B,EAAA7M,GACA,IACAhB,EAAA2O,EAAAM,EAAAI,EAAAC,EAAAP,EAAAD,EADAU,EAAAxO,EAAA3D,iBAEA,IAAAgS,EAAA,EAAAC,EAAAE,EAAAjO,OAAgC8N,EAAAC,IAAQD,EAExC,IAAAV,EAAA,EAAAM,GADAjP,EAAAwP,EAAAH,IACA9N,OAAA,EAA4CoN,EAAAM,IAAQN,EAEpDG,GACAjB,UACA7M,WACAmO,OAAAE,GACAD,MAAAT,EACAI,QANAA,EAAA/O,EAAAE,MAAAyO,IAAA,IAQAjU,KAAAkQ,OAAAoE,OAAA7L,OAAAf,EAAA,eAAAe,CAAA4L,GAAAD,IAWAvF,EAAAnO,UAAAiR,2BAAA,SAAAwB,EAAA7M,GACA,IACAhB,EAAA2O,EAAAM,EAAAI,EAAAC,EAAAG,EAAAC,EAAAF,EAAAT,EAAAD,EADAa,EAAA3O,EAAA3D,iBAEA,IAAAoS,EAAA,EAAAC,EAAAC,EAAApO,OAAmCkO,EAAAC,IAAQD,EAE3C,IAAAJ,EAAA,EAAAC,GADAE,EAAAG,EAAAF,IACAlO,OAAkC8N,EAAAC,IAAQD,EAE1C,IAAAV,EAAA,EAAAM,GADAjP,EAAAwP,EAAAH,IACA9N,OAAA,EAA8CoN,EAAAM,IAAQN,EAEtDG,GACAjB,UACA7M,WACAmO,OAAAE,EAAAI,GACAL,MAAAT,EACAI,QANAA,EAAA/O,EAAAE,MAAAyO,IAAA,IAQAjU,KAAAkQ,OAAAoE,OAAA7L,OAAAf,EAAA,eAAAe,CAAA4L,GAAAD,IAkBAvF,EAAAnO,UAAAmR,qBAAA,SAAAsB,EAAA7M,GACA,IAAAhB,EAAAgB,EAAA4O,YACAC,GACAhC,UACA7M,WACAoO,MAAA7F,EAAAoE,mCACAoB,SAAA/O,MAEA8P,GACAjC,UACA7M,WACAoO,MAAA7F,EAAAqE,0CACAmB,SAAA/O,MAEA+P,GAAAF,EAAAC,GACAD,EAAAE,gBAAAD,EAAAC,kBACArV,KAAAkQ,OAAAoE,OAAA7L,OAAAf,EAAA,6BAAAe,CAAAnD,GAAA6P,GACAnV,KAAAkQ,OAAAoE,OAAAhO,EAAA8G,YAAAgI,IASAvG,EAAAnO,UAAAqR,iCAAA,SAAAoB,EAAA7M,GACA,IAAA2N,EAAAvN,EAAAJ,EAAAK,qBACA,IAAAsN,EAAA,EAAaA,EAAAvN,EAAAG,SAAuBoN,EACpCjU,KAAA8Q,iBAAApK,EAAAuN,GAAAb,WAAArT,KACAC,KAAAmT,EAAAzM,EAAAuN,KAUApF,EAAAnO,UAAA4U,6BAAA,SAAAhQ,GACA,IAAAiQ,EAAAvV,KAAA6P,eACA0F,EAK4CA,EAAAnU,cAC5CyE,eAAAP,IALAiQ,EAAA,IAAAC,EAAA,YAAAzE,EAAA,QAAAzL,IACAtF,KAAA6P,eAAA0F,EACAvV,KAAAyQ,SAAAzK,YAAAwB,WAAA+N,IAKA,OAAAA,GAUA1G,EAAA4G,gBAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAhB,MAAAiB,EAAAjB,OAUA7F,EAAAxL,iBAAA,SAAAoQ,GACA,IAAAzT,KAAAkP,WAAAuE,GACA,SAEAzT,KAAAsT,sBAAAG,EAAA9O,MAAA8O,EAAArM,KACA,IAAAwO,EAAAnC,EAAArM,IAAAyO,uBAAApC,EAAA9O,OACA3E,KAAAwQ,cAAA3J,OAAA,EACA7G,KAAAiQ,WAAA,EACA,IAAAsF,EAAAvV,KAAA6P,eACA,GAAA0F,EAAA,CACA,IAAAO,KAEAC,EAD4CR,EAAAnU,cAC5CuB,iBACAqT,EAAAvN,OAAAf,EAAA,eAAAe,EAAAsN,IACAE,EAAAjW,KAAAkQ,OAAAgG,YAAAF,GACAG,KACAF,EAAAG,KAAAvH,EAAA4G,iBACA,QAAAxB,EAAA,EAAAM,EAAA0B,EAAApP,OAAmDoN,EAAAM,IAAQN,EAAA,CAC3D,IAAAoC,EAAAJ,EAAAhC,GACAI,EAAAgC,EAAAhC,QACAiC,EAAA7N,OAAAjI,EAAA,OAAAiI,CAAA4N,EAAAlD,SACAsB,EAAA4B,EAAA5B,MAOA,GANAA,IACA6B,GAAA,IAAA7B,EAAAvG,KAAA,MAEAiI,EAAAG,KACAH,EAAAG,GAAA,IAAAC,MAAA,IAEAF,EAAA/P,SAAA8M,YAAAoD,EAAA,QAAAC,QACAJ,EAAA3B,QAAA7F,EAAAqE,0CAAA,CAEA,IAAAwD,EAAA7H,EAAA8H,sBAAAf,EAAAS,GACA9Q,EAAA,QAAAqR,OAAAF,EAAAX,KAAAI,EAAAG,GAAA,KACAtW,KAAAwQ,cAAAzK,MAAAsQ,EAAA,IACAF,EAAAG,GAAA,GAAAD,QAEO,GAAA9Q,EAAA,QAAAqR,OAAAvC,EAAA,GAAA0B,KACPI,EAAAG,GAAA,GACAtW,KAAAwQ,cAAAzK,MAAAsQ,EAAA,IACAF,EAAAG,GAAA,GAAAD,OACO,GAAA9Q,EAAA,QAAAqR,OAAAvC,EAAA,GAAA0B,KACPI,EAAAG,GAAA,IAGA,IAAAD,EAAA/P,SAAA8M,YACAoD,EAAA,QAAAK,aACAR,EAAA/P,SAAA8M,YACAoD,EAAA,QAAAM,oBACAX,EAAAG,GAAA,IACA,IAAAH,EAAAG,GAAA,GAAA5B,MACA,SAGA1U,KAAAwQ,cAAAzK,MAAAsQ,EAAA,IACAF,EAAAG,GAAA,GAAAD,OACOrW,KAAA0P,uBAAA+D,IAAAhL,OAAAjI,EAAA,OAAAiI,CAAA4L,KAAArU,KAAA8P,kBACPqG,EAAAG,GAAA,KAAAH,EAAAG,GAAA,IACAR,EAAA/P,MAAAsQ,EAAAN,IAGAD,EAAAjP,QACA7G,KAAAwT,oBAAAC,GAEA,QAAAkB,EAAAmB,EAAAjP,OAAA,EAA2C8N,GAAA,IAAQA,EACnD3U,KAAA+W,cAAAC,MAAAhX,KAAA8V,EAAAnB,IAGA,QAAA3U,KAAA6P,gBASAhB,EAAAI,iBAAA,SAAAwE,GACAzT,KAAAgQ,wBAAA,EACAhQ,KAAAwT,oBAAAC,GAGA,IADA,IAAAsC,EAAAtC,EAAAlO,WACA0O,EAAA,EAAAM,EAAAvU,KAAAwQ,cAAA3J,OAAiDoN,EAAAM,IAAQN,EAAA,CASzD,IARA,IAIA3O,EAJA2R,EAAAjX,KAAAwQ,cAAAyD,GACAG,EAAA6C,EAAA,GACAxC,EAAAL,EAAAK,MACAnO,EAAA8N,EAAA9N,SAEA+N,EAAAD,EAAAC,QACAK,EAAAuC,EAAA,GAEAlB,EAAAlP,OAAAP,EAAA4Q,aACAnB,EAAAhQ,KAAAsO,EAAAK,GAAAqB,EAAAlP,SAGA,OAAAP,EAAA8M,WACA,KAAAoD,EAAA,QAAAW,MACA7R,EAAAyQ,EACA1B,EAAA,GAAAA,EAAA,GAAA0B,EACA,MACA,KAAAS,EAAA,QAAAY,aACA9R,EAAAgB,EAAA3D,kBACAyR,EAAAM,OAAAqB,EACA1B,EAAA,GAAAA,EAAA,GAAA0B,EACA,MACA,KAAAS,EAAA,QAAAK,aACAvR,EAAAgB,EAAA3D,kBACAyR,EAAAM,SAAAqB,EACA1B,EAAAK,GAAAqB,EACA,MACA,KAAAS,EAAA,QAAAM,kBAKA,KAAAN,EAAA,QAAAa,SACA/R,EAAAgB,EAAA3D,kBACA8R,EAAA,IAAAL,EAAAM,SAAAqB,EACA1B,EAAAK,GAAAqB,EACA,MACA,KAAAS,EAAA,QAAAc,eACAhS,EAAAgB,EAAA3D,kBACA8R,EAAA,IAAAA,EAAA,IAAAL,EAAAM,SAAAqB,EACA1B,EAAAK,GAAAqB,EACA,MACA,KAAAS,EAAA,QAAAC,OACApC,EAAA,GAAAA,EAAA,GAAA0B,EACA3B,EAAAM,QAAA7F,EAAAoE,oCACAjT,KAAAuQ,kBAAA,EACAjK,EAAAiR,UAAAxB,GACA/V,KAAAuQ,kBAAA,IAEAvQ,KAAAuQ,kBAAA,EACAjK,EAAAQ,UAAAvB,EAAA,QAAAiS,SAAAlR,EAAA4O,YAAAa,IACA/V,KAAAuQ,kBAAA,GAOAjL,GACAtF,KAAAyX,wBAAAnR,EAAAhB,GAGAtF,KAAAsV,6BAAAS,IAUAlH,EAAApL,eAAA,SAAAgQ,GAGA,IAFA,IAAAW,EACA9N,EACA2N,EAAAjU,KAAAwQ,cAAA3J,OAAA,EAA6CoN,GAAA,IAAQA,EAGrD,IADA3N,GADA8N,EAAApU,KAAAwQ,cAAAyD,GAAA,IACA3N,UACA8M,YAAAoD,EAAA,QAAAC,OAAA,CAEA,IAAAnR,EAAAgB,EAAA4O,YACAC,EAAAf,EAAAiB,gBAAA,GACAD,EAAAhB,EAAAiB,gBAAA,GACAF,EAAAd,QAAA,GAAAc,EAAAd,QAAA,GAAA/O,EACA8P,EAAAf,QAAA,GAAAe,EAAAf,QAAA,GAAA/O,EACAtF,KAAAkQ,OAAAwH,OAAAjP,OAAAf,EAAA,6BAAAe,CAAAnD,GAAA6P,GACAnV,KAAAkQ,OAAAwH,OAAApR,EAAA8G,YAAAgI,QAEApV,KAAAkQ,OAAAwH,OAAAjP,OAAAf,EAAA,eAAAe,CAAA2L,EAAAC,SACAD,GAQA,OALApU,KAAAiQ,YACAjQ,KAAAwG,cAAA,IAAAqI,EAAApI,MACAmI,EAAA5O,KAAAwS,UAAAiB,IACAzT,KAAAiQ,WAAA,IAEA,GAYApB,EAAAvL,YAAA,SAAA4B,GACA,QAAAA,aAAAyS,EAAA,WAGA3X,KAAAgT,kBAAA9N,EAGAA,EAAAkC,IAAAzF,UAAAiW,kBACA1S,EAAAC,MAAA0S,EAAA,EAAAC,aACA9X,KAAA+X,wBACA/X,KAAA+E,mBAAAG,GAEAlF,KAAA6P,gBAAA7P,KAAAwP,iBAAAtK,KAKA8S,IAJA9S,EAAAC,MAAA0S,EAAA,EAAAI,cACAjY,KAAAgQ,yBACAhQ,KAAAkY,eAMAhT,EAAAC,MAAA0S,EAAA,EAAAI,cACAjY,KAAAgQ,wBAAA,GAGAjB,EAAA,QAAAzL,YAAAvD,KAAAC,KAAAkF,KACA8S,GApBA,IAAAA,GA4BAnJ,EAAAnO,UAAAqE,mBAAA,SAAA0O,GACAzT,KAAA+P,WAAA0D,EAAA9O,MACA3E,KAAAsT,sBAAAG,EAAA9O,MAAA8O,EAAArM,MASAyH,EAAAnO,UAAA4S,sBAAA,SAAA3O,EAAAyC,GACA,IAAAwO,EAAAxO,EAAAyO,uBAAAlR,GAMAwT,EAAA1P,OAAAf,EAAA,OAAAe,QAAAf,EAAA,6BAAAe,CAAAmN,GACAxO,EAAAzF,UAAAuL,gBAAAlN,KAAAoQ,iBAGAgI,EADApY,KAAAkQ,OACAgG,YAAAiC,GACA,GAAAC,EAAAvR,OAAA,GACAuR,EAAAhC,KAXA,SAAAV,EAAAC,GACA,OAAA9G,EAAAwJ,mCAAAzC,EAAAF,GACA7G,EAAAwJ,mCAAAzC,EAAAD,KAUA,IAAA3B,EAAAoE,EAAA,GACAE,EAAAtE,EAAAK,QACA0B,EAAAlH,EAAA8H,sBAAAf,EAAA5B,GACAuE,EAAAnR,EAAAoR,uBAAAzC,GACA0C,EAAAlT,EAAA,QAAAiS,SAAA7S,EAAA4T,GACA,GAAAE,GAAAzY,KAAAoQ,gBAAA,CACA,IAAAsI,KAEA,GAAA1E,EAAA1N,SAAA8M,YAAAoD,EAAA,QAAAC,QACAzC,EAAAU,QAAA7F,EAAAqE,0CAEAlT,KAAAsQ,kBAAA,EACAtQ,KAAAsV,6BAAAS,OACO,CACP,IAWA1B,EAXAsE,EAAAvR,EAAAoR,uBAAAF,EAAA,IACAM,EAAAxR,EAAAoR,uBAAAF,EAAA,IACAO,EAAAtT,EAAA,QAAAuT,gBAAAP,EAAAI,GACAI,EAAAxT,EAAA,QAAAuT,gBAAAP,EAAAK,GACAH,EAAA1V,KAAAE,KAAAF,KAAAiW,IAAAH,EAAAE,IACA/Y,KAAAsQ,iBAAAmI,GAAAzY,KAAAoQ,gBACApQ,KAAAsQ,mBACAyF,EAAA8C,EAAAE,EACAT,EAAA,GAAAA,EAAA,IAEAtY,KAAAsV,6BAAAS,GAEA,QAAA9B,EAAA,EAAAM,EAAA6D,EAAAvR,OAA0CoN,EAAAM,IAC1CF,EAAA+D,EAAAnE,GAAAI,QACA9O,EAAA,QAAAqR,OAAA0B,EAAA,GAAAjE,EAAA,KACA9O,EAAA,QAAAqR,OAAA0B,EAAA,GAAAjE,EAAA,KACA9O,EAAA,QAAAqR,OAAA0B,EAAA,GAAAjE,EAAA,KACA9O,EAAA,QAAAqR,OAAA0B,EAAA,GAAAjE,EAAA,OALkDJ,EAMlDyE,EAAAjQ,OAAAjI,EAAA,OAAAiI,CAAA4L,KAAA,EASA,OAFAqE,EAAAjQ,OAAAjI,EAAA,OAAAiI,CAAA6P,KAAA,OACAtY,KAAA8P,gBAAA4I,IAIA1Y,KAAA6P,iBACA7P,KAAAyQ,SAAAzK,YAAA4N,cAAA5T,KAAA6P,gBACA7P,KAAA6P,eAAA,OAcAhB,EAAAwJ,mCAAA,SAAAY,EAAA7E,GACA,IAAA9N,EAAA8N,EAAA9N,SAEA,GAAAA,EAAA8M,YAAAoD,EAAA,QAAAC,OAAA,CACA,IAAAyC,EAAmD,EAEnD,GAAA9E,EAAAM,QAAA7F,EAAAqE,0CAAA,CACA,IAAAiG,EACA5T,EAAA,QAAAuT,gBAAAI,EAAAhE,YAAA+D,GACAG,EACArW,KAAAE,KAAAkW,GAAAD,EAAAG,YACA,OAAAD,KAGA,OAAA7T,EAAA,QAAA+T,yBAAAL,EAAA7E,EAAAC,UAYAxF,EAAA8H,sBAAA,SAAAsC,EAAA7E,GACA,IAAA9N,EAAA8N,EAAA9N,SAEA,OAAAA,EAAA8M,YAAAoD,EAAA,QAAAC,QACArC,EAAAM,QAAA7F,EAAAqE,0CACA5M,EAAAiT,gBAAAN,GAEA1T,EAAA,QAAAiU,iBAAAP,EAAA7E,EAAAC,UASAxF,EAAAnO,UAAAqW,cAAA,SAAA3C,EAAA2B,GAQA,IAPA,IAKAzQ,EALA+O,EAAAD,EAAAC,QACAlB,EAAAiB,EAAAjB,QACA7M,EAAA8N,EAAA9N,SACAmO,EAAAL,EAAAK,MACAC,EAAgCN,EAAA,MAGhC2B,EAAAlP,OAAAP,EAAA4Q,aACAnB,EAAAhQ,KAAA,GAGA,OAAAO,EAAA8M,WACA,KAAAoD,EAAA,QAAAM,kBAIA,KAAAN,EAAA,QAAAa,SACA/R,EAAAgB,EAAA3D,kBACA8R,EAAA,IAAAgF,OAAA/E,EAAA,IAAAqB,GACA,MACA,KAAAS,EAAA,QAAAc,eACAhS,EAAAgB,EAAA3D,kBACA8R,EAAA,IAAAA,EAAA,IAAAgF,OAAA/E,EAAA,IAAAqB,GACA,MACA,KAAAS,EAAA,QAAAK,aACAvR,EAAAgB,EAAA3D,kBACA8W,OAAA/E,EAAA,IAAAqB,GACA,MACA,QACA,OAGA/V,KAAAyX,wBAAAnR,EAAAhB,GACA,IAAAoU,EAAA1Z,KAAAkQ,OACAwJ,EAAAxF,OAAAE,GACApU,KAAA2Z,sBAAArT,EAAAoO,EAAAD,EAAA,GACA,IAAAmF,GACAvF,WAAA,GAAA0B,GACA5C,UACA7M,WACAmO,QACAC,SAEAgF,EAAApF,OAAA7L,OAAAf,EAAA,eAAAe,CAAAmR,EAAAvF,SACAuF,GACA5Z,KAAAwQ,cAAAzK,MAAA6T,EAAA,IAEA,IAAAC,GACAxF,SAAA0B,EAAA1B,EAAA,IACAlB,UACA7M,WACAmO,QACAC,QAAA,GAEAgF,EAAApF,OAAA7L,OAAAf,EAAA,eAAAe,CAAAoR,EAAAxF,SACAwF,GACA7Z,KAAAwQ,cAAAzK,MAAA8T,EAAA,IACA7Z,KAAAgQ,wBAAA,GAQAnB,EAAAnO,UAAAwX,YAAA,WACA,GAAAlY,KAAAgT,mBAAAhT,KAAAgT,kBAAA7N,MAAA0S,EAAA,EAAAiC,YAAA,CACA,IAAArG,EAAAzT,KAAAgT,kBAMA,OALAhT,KAAAwT,oBAAAC,GACAzT,KAAA+Z,gBACA/Z,KAAAwG,cAAA,IAAAqI,EAAApI,MACAmI,EAAA5O,KAAAwS,UAAAiB,IACAzT,KAAAiQ,WAAA,GACA,EAEA,UAQApB,EAAAnO,UAAAqZ,cAAA,WACA,IAGAC,EAAA1U,EAAA2R,EAAA3Q,EAAA2N,EAAAS,EAAAuF,EACAC,EAAAC,EAAA/F,EAAAkC,EAJA8D,EAAApa,KAAAwQ,cACA6J,KACAC,GAAA,EAGA,IAAArG,EAAAmG,EAAAvT,OAAA,EAAmCoN,GAAA,IAAQA,EAE3CG,GADA6C,EAAAmD,EAAAnG,IACA,GACAqC,EAAA7N,OAAAjI,EAAA,OAAAiI,CAAA2L,EAAAjB,SACAiB,EAAAK,QAEA6B,GAAA,IAAAlC,EAAAK,MAAAvG,KAAA,MAEAoI,KAAA+D,IACAA,EAAA/D,OAEA,IAAAW,EAAA,IACAoD,EAAA/D,GAAA6D,MAAA/F,EACAiG,EAAA/D,GAAA5B,MAAAN,EAAAM,OACK,GAAAuC,EAAA,KACLoD,EAAA/D,GAAA2D,KAAA7F,EACAiG,EAAA/D,GAAA5B,MAAAN,EAAAM,MAAA,GAIA,IAAA4B,KAAA+D,EAAA,CAiBA,OAhBAF,EAAAE,EAAA/D,GAAA6D,MACAF,EAAAI,EAAA/D,GAAA2D,KAEAC,GADAxF,EAAA2F,EAAA/D,GAAA5B,OACA,EAEAN,OADAlU,IAAA+Z,EACAA,EAEAE,EAEAD,EAAA,IACAA,EAAA,GAIAF,EADA1U,GADAgB,EAAA8N,EAAA9N,UACA3D,iBAEA2X,GAAA,EACAhU,EAAA8M,WACA,KAAAoD,EAAA,QAAAM,kBACAxR,EAAA8O,EAAAK,MAAA,IAAA5N,OAAA,IACAvB,EAAA8O,EAAAK,MAAA,IAAAgF,OAAA/E,EAAA,GACA4F,GAAA,GAEA,MACA,KAAA9D,EAAA,QAAAK,YACAvR,EAAAuB,OAAA,IACAvB,EAAAmU,OAAA/E,EAAA,GACA4F,GAAA,GAEA,MACA,KAAA9D,EAAA,QAAAc,cACA0C,IAAA5F,EAAAK,MAAA,IAEA,KAAA+B,EAAA,QAAAa,SACA2C,IAAA5F,EAAAK,MAAA,KACA5N,OAAA,IACA6N,GAAAsF,EAAAnT,OAAA,IACA6N,EAAA,GAEAsF,EAAAP,OAAA/E,EAAA,GACA4F,GAAA,EACA,IAAA5F,IAEAsF,EAAAO,MACAP,EAAAjU,KAAAiU,EAAA,IACAE,EAAAF,EAAAnT,OAAA,IAQA,GAAAyT,EAAA,CACAta,KAAAyX,wBAAAnR,EAAAhB,GACA,IAAAkV,KASA,QARAta,IAAA+Z,IACAja,KAAAkQ,OAAAgE,OAAA+F,GACAO,EAAAzU,KAAAkU,EAAA5F,QAAA,UAEAnU,IAAAia,IACAna,KAAAkQ,OAAAgE,OAAAiG,GACAK,EAAAzU,KAAAoU,EAAA9F,QAAA,UAEAnU,IAAA+Z,QAAA/Z,IAAAia,EAAA,CACA,IAAAP,GACAnF,MAAAL,EAAAK,MACAtB,QAAAiB,EAAAjB,QACA7M,SAAA8N,EAAA9N,SACAoO,MAAAwF,EACA7F,QAAAmG,GAEAxa,KAAAkQ,OAAAoE,OAAA7L,OAAAf,EAAA,eAAAe,CAAAmR,EAAAvF,SACAuF,GAEA5Z,KAAA2Z,sBAAArT,EAAAoO,EAAAN,EAAAK,OAAA,GACAzU,KAAA6P,iBACA7P,KAAAyQ,SAAAzK,YAAA4N,cAAA5T,KAAA6P,gBACA7P,KAAA6P,eAAA,MAEAuK,EAAAvT,OAAA,GAIA,OAAAyT,GASAzL,EAAAnO,UAAA+W,wBAAA,SAAAnR,EAAAhB,GACAtF,KAAAuQ,kBAAA,EACAjK,EAAAT,eAAAP,GACAtF,KAAAuQ,kBAAA,GAWA1B,EAAAnO,UAAAiZ,sBAAA,SACArT,EAAAoO,EAAAD,EAAAgG,GACAza,KAAAkQ,OAAAwK,gBAAApU,EAAA8G,YAAA,SAAAiJ,GACAA,EAAA/P,oBACApG,IAAAuU,QAAAvU,IAAAmW,EAAA5B,OACAhM,OAAAkS,EAAA,OAAAlS,CAAA4N,EAAA5B,WACA4B,EAAA3B,UACA2B,EAAA3B,OAAA+F,MASA5L,EAAAvK,wBAAA,WACA,IAAA1D,EAAAga,EAAA,QAAAC,uBACA,gBAAA1H,EAAAxL,GACA,OAAA/G,EAAA4V,EAAA,QAAAW,SAkBAtI,EAAApI,MAAA,SAAAtB,EAAA2J,EAAAgM,GAEArU,EAAA,QAAA1G,KAAAC,KAAAmF,GAOAnF,KAAA8O,WAOA9O,KAAAkF,gBAAA4V,GAEArS,OAAAjI,EAAA,SAAAiI,CAAAoG,EAAApI,QAAA,SACAvH,EAAA,4FC/sCA,QAAAF,EAAA,QACAA,EAAA,wDASA,IAAMQ,EAAU,SAAS2F,GAAmB,IAAb4V,EAAaC,UAAAnU,OAAA,QAAA3G,IAAA8a,UAAA,GAAAA,UAAA,MAE1CC,EAAAnb,QAAcC,KAAKC,KAAMmF,GAKzBnF,KAAK+a,OAASA,GAIhBG,EAAApb,QAAOW,SAASjB,EAAhByb,EAAAnb,mBAGeN,4LC3Bf2b,EAAAnc,EAAA,IA4BAoc,EAAA,SAAAzb,GAEA,IAAAC,EAAAD,MAEA4K,EAAA3K,EAAA2K,WAEA8Q,IAAA,gBAAA9Q,MAAA,YAEA+Q,EAAA,EAAAvb,KAAAC,MACAgK,aAAApK,EAAAoK,aACAuR,UAAA3b,EAAA2b,UACAzT,YAAAlI,EAAAkI,YACA0T,QAAAH,EACAnZ,WAAAtC,EAAAsC,WACAuZ,2BAAA7b,EAAA6b,2BACAC,UAAA9b,EAAA8b,UACAC,SAAA/b,EAAA+b,SACAC,iBAAAhc,EAAAgc,iBACAxR,IAAAxK,EAAAwK,IACAyR,KAAAjc,EAAAic,KACAzX,WAAAlE,IAAAN,EAAAwE,OAAAxE,EAAAwE,MACA0X,WAAAlc,EAAAkc,aAOA9b,KAAA+b,aAAA7b,IAAAN,EAAAoc,OAAApc,EAAAoc,OAAA,EAMAhc,KAAAsK,QAAAC,EAMAvK,KAAAwK,MAAA,EAMAxK,KAAA0K,YAAkE9K,EAAA,WAMlEI,KAAA2K,YAAAzK,IAAAN,EAAAgL,OAAAhL,EAAAgL,MAMA5K,KAAAic,WAAAxT,OAAAyT,EAAA,YAAAzT,GAEAzI,KAAAyK,aACAzK,KAAAmc,OAAAnc,KAAAoc,qBAIA3T,OAAA4T,EAAA,SAAA5T,CAAA2S,EAAAE,EAAA,GAiBAF,EAAA1a,UAAAwK,qBAAA,SAAA3F,EAAAoC,EAAAzF,EAAAqI,GACA,IAAAY,EAAA1C,OAAA6T,EAAA,IAAA7T,CAAAvG,GACAkJ,EAAApL,KAAA4B,gBAEA+Z,EAAA3b,KAAAuc,cACAZ,IACAA,EAAA3b,KAAAwc,yBAAArR,IAGA,IAAAsR,EAAAd,EAAAe,kCAAAnX,EAAAoC,GAEA,KAAAgU,EAAAgB,iBAAA9V,QAAA4V,EAAA,KAIA,IAAAG,EAAAjB,EAAAzO,cAAAuP,EAAA,IACAI,EAAAlB,EAAAmB,mBAAAL,EAAAzc,KAAAic,YACAc,EAAAC,EAAA,QAAAC,OAAAtB,EAAAuB,YAAAT,EAAA,IAAAzc,KAAAmd,SAGAnB,EAAAhc,KAAA+b,QACA,IAAAC,IACAe,EAAAC,EAAA,QAAAI,OAAAL,EAAAf,EAAAhc,KAAAmd,SACAN,EAAApU,OAAAyT,EAAA,OAAAzT,CAAAoU,EAAAD,EAAAZ,EAAAa,IAGAzR,OAAAD,IACAyR,EAAAS,EAAA,EAAA/R,0BAAAF,EAAAD,EAAA5F,EAAAqX,GACAC,EAAApU,OAAA6T,EAAA,gBAAA7T,CAAAoU,EAAA1R,EAAAC,GACA7F,EAAAkD,OAAA6T,EAAA,UAAA7T,CAAAlD,EAAA4F,EAAAC,IAGA,IAAAG,GACAC,QAAA,MACAC,QAAA6R,EAAA,EACA3R,QAAA,iBACAC,OAAA,YACAC,aAAA,EACAC,aAAA9L,KAAAsK,QAAA,QAEAiT,EAAA,QAAAvR,OAAAT,EAAAvL,KAAAsK,QAAAC,GAEA,IAAA0B,EAAAlJ,KAAAmJ,OAAA3G,EAAA,GAAAsX,EAAA,IAAAD,GACAzQ,EAAApJ,KAAAmJ,OAAA2Q,EAAA,GAAAtX,EAAA,IAAAqX,GAKA,OAHArR,EAAAvL,KAAAwK,KAAA,SAAAyB,EACAV,EAAAvL,KAAAwK,KAAA,SAAA2B,EAEAnM,KAAAoM,eAAAqQ,EAAAM,EAAAF,EACA,EAAAzR,GAAAD,EAAAI,KAOA6P,EAAA1a,UAAA8c,kBAAA,WACA,OAAAxd,KAAA+b,SAUAX,EAAA1a,UAAA2L,UAAA,WACA,OAAArM,KAAAsK,SAcA8Q,EAAA1a,UAAA0L,eAAA,SAAAqQ,EAAAM,EAAAF,EACAjV,EAAA1F,EAAAqI,GAEA,IAAAsR,EAAA7b,KAAA6b,KACA,GAAAA,EAAA,CAaA,GATAtR,EAAA,MAAAwS,EAAA,GACAxS,EAAA,OAAAwS,EAAA,GAEAxS,EAAAvK,KAAAwK,KAAA,aAAAtI,EAAAyL,UAEA,WAAA3N,KAAAsK,UACAC,EAAA,WAGA,GAAA3C,EACA,OAAA5H,KAAA0K,aACA,KAAA+S,EAAA,EAAApe,UACA,IAAAwO,EAAA,GAAAjG,EAAA,KACA,mBAAA2C,EACAA,EAAA,wBAAwCsD,EAExCtD,EAAA,sBAAAsD,EAEA,MACA,KAAA4P,EAAA,EAAAne,UACAiL,EAAA,kBAAA3C,EACA,MACA,KAAA6V,EAAA,EAAAre,gBACA,KAAAqe,EAAA,EAAAle,KACAgL,EAAA,OAAA3C,EACA,MACA,QACAa,OAAAiV,EAAA,EAAAjV,EAAA,MAKA,IAGAkV,EAUAvT,EAbA2D,EAAA7L,EAAA8L,qBACAF,EAAA+O,EACA,GAAA7c,KAAAwK,MAAA,MAAAuD,EAAAE,OAAA,KAEA0P,EAAAd,EAAA,GACA/O,EAAA,GAAA+O,EAAA,GACA/O,EAAA,GAAA6P,EACAA,EAAAd,EAAA,GACA/O,EAAA,GAAA+O,EAAA,GACA/O,EAAA,GAAA6P,EAKA,GAHApT,EAAA,KAAAuD,EAAAI,KAAA,KAGA,GAAA2N,EAAAhV,OACAuD,EAAAyR,EAAA,QAGAzR,EAAAyR,EADApT,OAAAmV,EAAA,OAAAnV,CAAAoV,EAAA,EAAAC,KAAArB,GAAAZ,EAAAhV,SAGA,OAAAsU,EAAA,QAAA/M,aAAAhE,EAAAG,KAOA6Q,EAAA1a,UAAAqd,kBAAA,SAAAnW,GACA,OAAA5H,KAAA2K,aAAAzK,IAAAF,KAAA0K,YACoB,EADpB,GASA0Q,EAAA1a,UAAA0b,iBAAA,WACA,IAAAnI,EAAA,EACA+J,KACA,QAAAC,KAAAje,KAAAsK,QACA0T,EAAA/J,KAAAgK,EAAA,IAAAje,KAAAsK,QAAA2T,GAEA,OAAAD,EAAA9P,KAAA,MAOAkN,EAAA1a,UAAAwd,qBAAA,SAAAzB,EAAA7U,EAAA1F,GAEA,IAAAyZ,EAAA3b,KAAAuc,cAKA,GAJAZ,IACAA,EAAA3b,KAAAwc,yBAAAta,MAGAyZ,EAAAgB,iBAAA9V,QAAA4V,EAAA,KAIA,GAAA7U,GAAA5H,KAAA2K,aAAAzK,IAAAF,KAAA0K,cACA9C,EAAA,GAGA,IAAAgV,EAAAjB,EAAAzO,cAAAuP,EAAA,IACAI,EAAAlB,EAAAmB,mBAAAL,EAAAzc,KAAAic,YACAc,EAAAC,EAAA,QAAAC,OACAtB,EAAAuB,YAAAT,EAAA,IAAAzc,KAAAmd,SAEAnB,EAAAhc,KAAA+b,QACA,IAAAC,IACAe,EAAAC,EAAA,QAAAI,OAAAL,EAAAf,EAAAhc,KAAAmd,SACAN,EAAApU,OAAAyT,EAAA,OAAAzT,CAAAoU,EAAAD,EAAAZ,EAAAa,IAGA,GAAAjV,IACAmV,EAAAC,EAAA,QAAAmB,MAAApB,EAAAnV,EAAA5H,KAAAmd,UAGA,IAAA5R,GACAC,QAAA,MACAC,QAAA6R,EAAA,EACA3R,QAAA,SACAC,OAAA,YACAC,aAAA,GAIA,OAFA0R,EAAA,QAAAvR,OAAAT,EAAAvL,KAAAsK,SAEAtK,KAAAoM,eAAAqQ,EAAAM,EAAAF,EACAjV,EAAA1F,EAAAqJ,KAQA6P,EAAA1a,UAAA8N,aAAA,SAAAjE,GACAgT,EAAA,QAAAvR,OAAAhM,KAAAsK,QAAAC,GACAvK,KAAAyK,aACAzK,KAAAmc,OAAAnc,KAAAoc,qBAOAhB,EAAA1a,UAAA+J,WAAA,WACA,IAAAgE,EAAAzO,KAAAsK,QAAA,SAAAgT,EAAA,EACAtd,KAAAwK,KAAA4T,EAAA,QAAAzP,gBAAAF,EAAA,WAEAvP,EAAA,uVCrVAmf,EAAArf,EAAA,uBAKA,IAAMQ,aAkBJ,SAAAA,EAAYI,gGAAS0e,CAAAte,KAAAR,GAiBnBQ,KAAKue,UAA+B,IAApB3e,EAAQ4e,QAQxBxe,KAAKye,UAA+B,IAApB7e,EAAQ8e,QAcxB1e,KAAK2e,WAAa/e,EAAQ+e,YAAc,KAOxC3e,KAAK4e,IAAMhf,EAAQif,GASnB7e,KAAK8e,qBAAuBlf,EAAQmf,oBAOpC/e,KAAKgf,eAAiBpf,EAAQqf,cAO9Bjf,KAAKkf,eAAiBtf,EAAQuf,cAO9Bnf,KAAKof,MAAQxf,EAAQyf,KA9FnB,OAAAC,EAAA9f,IAAAye,IAAA,gBAAAsB,MAAA,WA8IF,OAAOvf,KAAK2e,cA9IVV,IAAA,gBAAAsB,MAAA,SAqJUZ,GACZ3e,KAAK2e,WAAaA,KAtJhBV,IAAA,UAAAuB,IAAA,WA0GF,OAAOxf,KAAKue,UA1GVkB,IAAA,SAiHQjB,GACVxe,KAAKue,SAAWC,KAlHdP,IAAA,UAAAuB,IAAA,WA0HF,OAAOxf,KAAKye,UA1HVgB,IAAA,SAiIQf,GACV1e,KAAKye,SAAWC,KAlIdT,IAAA,KAAAuB,IAAA,WA8JF,OAAOxf,KAAK4e,OA9JVX,IAAA,sBAAAuB,IAAA,WAsKF,OAAOxf,KAAK8e,wBAtKVb,IAAA,gBAAAuB,IAAA,WA8KF,OAAOxf,KAAKgf,kBA9KVf,IAAA,gBAAAuB,IAAA,WAsLF,OAAOxf,KAAKkf,kBAtLVjB,IAAA,OAAAuB,IAAA,WA8LF,OAAOxf,KAAKof,SA9LVnB,IAAA,YAAAuB,IAAA,WA4MF,OAAO,KA5MLvB,IAAA,yBAAAuB,IAAA,WAqNF,OAA8B,OAAvBxf,KAAKif,eAAiD,OAAvBjf,KAAKmf,kBArNzC3f,eA0NSA,oFC9Nf,QAAAR,EAAA,QACAA,EAAA,wDAFA,IAAMQ,KAKNkgB,EAAA5f,QAAS6f,OAAOJ,MAAM,kBAAmB,IAAAK,EAAA9f,mBAS1BN,oFCdf,QAAAR,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,wDAyBA,IAAMQ,EAAU,WAMdQ,KAAK6f,2BAML7f,KAAK8f,WAML9f,KAAK2D,QAAU,IAAAO,EAAApE,SACbqE,iBAAiB,IAOnBnE,KAAK+f,OAAS,IAAA9b,EAAAnE,SACZe,OAAQb,KAAK2D,QACb/C,MAAOZ,KAAKggB,eAAetN,KAAK1S,MAChC4Q,sBAAsB,EACtBC,wBAAwB,KAW5BrR,EAAQkB,UAAU8G,WAAa,SAAS2L,EAAS8M,GAC/C3f,EAAAR,QAAYS,OAAO0f,GAAc,GACjC3f,EAAAR,QAAYS,OAAO0f,EAAajgB,KAAK8f,QAAQjZ,QAC7C,IAAMqZ,EAAahF,EAAApb,QAAOqgB,OAAOhN,GAASiN,WAC1CpgB,KAAK6f,wBAAwBK,GAAcD,EAC3CjgB,KAAK8f,QAAQG,GAAYnR,SAASoR,GAAc/M,EAChDnT,KAAK2D,QAAQ6D,WAAW2L,IAS1B3T,EAAQkB,UAAUkT,cAAgB,SAAST,EAAS8M,GAClD3f,EAAAR,QAAYS,OAAO0f,GAAc,GACjC3f,EAAAR,QAAYS,OAAO0f,EAAajgB,KAAK8f,QAAQjZ,QAC7C,IAAMqZ,EAAahF,EAAApb,QAAOqgB,OAAOhN,GAASiN,kBACnCpgB,KAAK6f,wBAAwBK,UAC7BlgB,KAAK8f,QAAQG,GAAYnR,SAASoR,GACzClgB,KAAK2D,QAAQiQ,cAAcT,IAQ7B3T,EAAQkB,UAAUuF,MAAQ,SAASga,GACjC3f,EAAAR,QAAYS,OAAO0f,GAAc,GACjC3f,EAAAR,QAAYS,OAAO0f,EAAajgB,KAAK8f,QAAQjZ,QAC7C,IAAMwZ,EAAQrgB,KAAK8f,QAAQG,GAC3B,IAAK,IAAMC,KAAcG,EAAMvR,SAC7B9O,KAAK4T,cAAcyM,EAAMvR,SAASoR,GAAaD,GAEjD3f,EAAAR,QAAYS,OAAO+f,EAAAxgB,QAAMygB,QAAQF,EAAMvR,YAQzCtP,EAAQkB,UAAU8f,SAAW,WAC3B,OAAOxgB,KAAK+f,QAQdvgB,EAAQkB,UAAU+f,kBAAoB,WACpC,IAAMR,EAAajgB,KAAK8f,QAAQjZ,OAKhC,OAJA7G,KAAK8f,QAAQ/Z,MACX2a,cAAeC,EAAA7gB,QAAa8gB,gBAC5B9R,cAEK,IAAA+R,EAAA/gB,QAA0BE,KAAMigB,IAQzCzgB,EAAQkB,UAAUogB,KAAO,SAAS1Z,GAChCpH,KAAK+f,OAAOxY,OAAOH,IAUrB5H,EAAQkB,UAAUqgB,SAAW,SAASngB,EAAOqf,GAC3C3f,EAAAR,QAAYS,OAAO0f,GAAc,GACjC3f,EAAAR,QAAYS,OAAO0f,EAAajgB,KAAK8f,QAAQjZ,QAC7C7G,KAAK8f,QAAQG,GAAYS,cAA0B,OAAV9f,EACvC+f,EAAA7gB,QAAa8gB,gBAAkBD,EAAA7gB,QAAakhB,eAAepgB,IAU/DpB,EAAQkB,UAAUsf,eAAiB,SAAS7M,EAASxL,GACnD,IAAMuY,EAAahF,EAAApb,QAAOqgB,OAAOhN,GAASiN,WAC1C9f,EAAAR,QAAYS,OAAO2f,KAAclgB,KAAK6f,yBACtC,IAAMI,EAAajgB,KAAK6f,wBAAwBK,GAEhD,OADclgB,KAAK8f,QAAQG,GACdS,cAAcvN,EAASxL,KAOtCnI,EAAQmgB,OAASsB,QAAQtB,OAAO,yBAC9BkB,EAAA/gB,QAAsB6f,OAAON,QAEhB6B,QAAQ,wBAAyB1hB,GAChDkgB,EAAA5f,QAAS6f,OAAOwB,SAASpb,KAAKvG,EAAQmgB,OAAON,gBAG9B7f,mFC3Lf,IAAMA,GAENA,OAAiB,SAAS2P,EAAWiS,EAAaC,KAClD7hB,aAAuB,SAAS+f,EAAO6B,EAAaC,KACpD7hB,aAAuB,SAAS+f,EAAO6B,EAAaC,KACpD7hB,eAAyB,SAAS+f,EAAO6B,EAAaC,KACtD7hB,aAAuB,SAAS+f,EAAO6B,EAAaC,KACpD7hB,YAAsB,SAAS+f,EAAO6B,EAAaC,KACnD7hB,cAAwB,SAAS+f,EAAO6B,EAAaC,KACrD7hB,cAAwB,SAAS+f,EAAO6B,EAAaC,KACrD7hB,iBAA2B,SAAS+f,EAAOpa,EAAMic,EAAaC,KAC9D7hB,8BAAwC,wBAEzBA,oFCVf,QAAAR,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,wDAQA,IAAMQ,EAAUyhB,QAAQtB,OAAO,iBAC7BD,EAAA5f,QAAS6f,OAAON,KAChBiC,EAAAxhB,QAA0B6f,OAAON,KACjCkC,EAAAzhB,QAAiBuf,KACjBmC,EAAA1hB,QAAyB6f,OAAON,KAChCoC,EAAA3hB,QAAgBuf,KAChBqC,EAAA5hB,QAAiBuf,KACjBsC,EAAA7hB,QAAqBuf,iBAIR7f,oFCzBf,QAAAR,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,wDA8CA,IAAMQ,EAAU,WAEdoiB,EAAA9hB,QAAaC,KAAKC,MAOlBA,KAAK6hB,aAGP3G,EAAApb,QAAOW,SAASjB,EAAhBoiB,EAAA9hB,SAUAN,EAAQkB,UAAU8e,IAAM,SAASpY,GAE/B,OADe8T,EAAApb,QAAOqgB,OAAO/Y,GAAKgZ,aACjBpgB,KAAK6hB,SAAWza,EAAI0a,YAAYC,KAAK,GAAK,MAY7DviB,EAAQkB,UAAU+e,IAAM,SAASrY,EAAK4a,GACpC,IAAMC,EAAS/G,EAAApb,QAAOqgB,OAAO/Y,GAAKgZ,WAC5B8B,EAAWliB,KAAKwf,IAAIpY,GACT,OAAb8a,GACF5hB,EAAAR,QAAYS,OAAO0hB,KAAUjiB,KAAK6hB,UACpB,OAAVG,EACF5a,EAAI0a,YAAYK,MAAM,EAAGH,IAEzB5a,EAAI0a,YAAYM,SAAS,UAClBpiB,KAAK6hB,SAASI,KAEJ,OAAVD,IACT5a,EAAI0a,YAAYO,SAAS,EAAGL,GAC5BhiB,KAAK6hB,SAASI,IAAU,GAG1B,IAAMvd,EAAQ,IAAA4d,EAAAxiB,QAAoB,UAChCyiB,QAASP,EACTE,SAAUA,IAIZ,OAFAliB,KAAKwG,cAAc9B,GAEZwd,GAQT1iB,EAAQkB,UAAU8hB,iBAAmB,SAASpb,EAAKqb,GACjD,IAAMC,EAAc1iB,KAAKwf,IAAIpY,GAC7B,GAAIsb,EAAa,CACf,IAAIC,GAAUD,GACVA,yBAEFC,EAASD,EAAYZ,YAAYc,YAGnCD,EAAOhZ,QAAQ,SAACqY,GAEd,GADA1hB,EAAAR,QAAYoB,iBAAiB8gB,EAA7Ba,EAAA/iB,SACIkiB,EAAO,CACT,IAAIc,GAAa,EACXC,KACN,IAAK,IAAM9E,KAAO+D,EAAMxC,IAAI,cAAe,CACzC,IAAMD,EAAQkD,EAAWxE,QACX/d,IAAVqf,IACFwD,EAAkB9E,GAAOsB,EACzBuD,GAAa,GAGjB,GAAIA,EAAY,CACd,IAAMjiB,EAASmhB,EAAMhc,YACjBnF,wBACFA,EAAO2hB,iBAAiBO,GACxBliB,EAAOmiB,YACEniB,wBAAqCA,0BAC9CA,EAAO2N,aAAauU,GACpBliB,EAAOmiB,kBAWnBxjB,EAAQmgB,OAASsB,QAAQtB,OAAO,8BACjBuB,QAAQ,yBAA0B1hB,GACjDkgB,EAAA5f,QAAS6f,OAAOwB,SAASpb,KAAKvG,EAAQmgB,OAAON,gBAG9B7f,qFCnKfR,GAAA,eAAAikB,EAAA,IAAA1Q,MAAA,wDAAA0Q,EAAAC,KAAA,mBAAAD,EAAA,IACAjkB,EAAA,IACA,QAAAA,EAAA,UAEAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,wDAfA,IAmBM2gB,EAASsB,QAAQtB,OAAO,OAC5BwD,KAAKxD,OAAON,KACZ+D,EAAAtjB,QAAcuf,OAQhBgE,IAAIC,eAAiB,WAMnBtjB,KAAKoH,IAAM,IAAAmc,EAAAzjB,SACT6iB,QACE,IAAAa,EAAA1jB,SACEe,OAAQ,IAAA4iB,EAAA3jB,WAGZ4jB,KAAM,IAAAC,EAAA7jB,SACJ2M,SAAU,SAAU,SACpBmX,KAAM,MAIV,IAAMxc,EAAMpH,KAAKoH,IAEXhB,EAAS,IAAAC,EAAAvG,UAAmB,SAAU,SAAU,OAMtDE,KAAK8O,SAAW,IAAA8Q,EAAA9f,QAEhB,IAAM+jB,EAAgB,IAAApe,EAAA3F,SACpBwG,SAAU9F,GAAGS,KAAKmQ,QAAQ0S,WAAW1d,GACrC2d,MAAO,UACPC,MAAO,WACPC,QAAS,MACTC,OAAQ,MAGVL,EAAcpE,IAAI0D,KAAKgB,kBAAkBC,WAAW,GACpDpkB,KAAK8O,SAAS/I,KAAK8d,GAEnB,IAAMQ,EAAe,IAAAngB,EAAApE,SACnBgP,SAAU9O,KAAK8O,WAEG,IAAA7K,EAAAnE,SAClBe,OAAQwjB,IAKE9c,OAAOH,GAMnBpH,KAAKskB,YAAc,IAAAC,EAAAzkB,SAEfgP,SAAU9O,KAAK8O,WAGnB,IAAMwV,EAActkB,KAAKskB,YACzBA,EAAYnQ,WAAU,GACtB/M,EAAIod,eAAeF,IAKrB3E,EAAO8E,WAAW,iBAAkBpB,IAAIC,+GC/FxC,QAAAtkB,EAAA,QACAA,EAAA,SAGAA,EAAA,OAEAA,EAAA,SACAA,EAAA,uDAKA,IAAMQ,EAAUyhB,QAAQtB,OAAO,cAE/BD,EAAA5f,QAAS6f,OAAOwB,SAASpb,KAAKvG,EAAQ6f,MAkCtC7f,EAAQklB,WAAa,SAASC,EAASC,GACrC,OACEC,SAAU,IAMVC,KAAM,SAACC,EAAOC,EAASC,GAErB,IACMC,EAAOD,EAAA,QAEP7d,EAAM2d,EAAMI,MAAMD,GACxB5kB,EAAAR,QAAYoB,iBAAiBkG,EAA7Bmc,EAAAzjB,SAEAsH,EAAIge,UAAUJ,EAAQ,IAEtBJ,EAAuBxd,IAAMA,EAQ7B,IACMie,EAAmBJ,EAAA,oBAGzB,GAFqBF,EAAMI,MAAME,GAEf,CAChB,IACMC,EAAuBL,EAAA,wBAEvBM,EACJR,EAAMI,MAAMG,GAEd/gB,EAAAzE,QAAS0E,OACPmgB,EACA,SACA,WACE,GAAIY,EAAkB,CAEpB,IAAMpf,EAAQqf,KAAKC,MACfC,GAAO,GACQ,SAAbC,IACJve,EAAIwe,aACJxe,EAAIye,aACAH,GACFf,EAAQmB,sBAAsBH,GAE5BH,KAAKC,MAAQtf,EAAQof,IACvBG,GAAO,GAGXC,QAGAve,EAAIwe,mBA1DlBpmB,EAAQklB,wDAoERllB,EAAQumB,UAAU,UAAWvmB,EAAQklB,sBAGtBllB,qFCvHf,QAAAR,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,OACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,wDAaA,IAAMQ,EAAU,SAAVA,EAAmBI,GAEvBU,EAAAR,QAAYS,OAAOX,EAAQkP,UAE3B3L,EAAArD,QAAqBC,KAAKC,MACxBoD,gBAAiB5D,EAAQ6D,iBACzB2L,gBAAiBxP,EAAQyP,iBACzB3L,YAAa9D,EAAQ8D,YACrBE,cAAehE,EAAQiE,iBAQzBzD,KAAK6P,eAAiB,KAMtB7P,KAAK+P,YAAc,EAAG,GAMtB/P,KAAKiQ,WAAY,EAOjBjQ,KAAKkQ,OAAS,IAAA8V,EAAAlmB,QAMdE,KAAKoQ,qBAA6ClQ,IAA3BN,EAAQyQ,eAC7BzQ,EAAQyQ,eAAiB,GAM3BrQ,KAAKsQ,kBAAmB,EAQxBtQ,KAAKuQ,kBAAmB,EAMxBvQ,KAAKwQ,cAAgB,KAOrBxQ,KAAKyQ,SAAW,IAAAxM,EAAAnE,SACde,OAAQ,IAAAqD,EAAApE,SACNqE,iBAAiB,EACjBC,QAASxE,EAAQwE,QAEnBxD,MAAOhB,EAAQgB,MAAQhB,EAAQgB,MAC7BpB,EAAQ8E,0BACVsM,sBAAsB,EACtBC,wBAAwB,IAO1B7Q,KAAKwS,UAAY5S,EAAQkP,SAEzB9O,KAAKwS,UAAU7I,QAAQ3J,KAAKyS,YAAazS,MACzCuE,EAAAzE,QAAS0E,OAAOxE,KAAKwS,UAAW,MAAOxS,KAAK6S,kBAAmB7S,MAC/DuE,EAAAzE,QAAS0E,OAAOxE,KAAKwS,UAAW,SAAUxS,KAAK+S,qBAAsB/S,OAIvEkb,EAAApb,QAAOW,SAASjB,EAAhB2D,EAAArD,SAOAN,EAAQkB,UAAU+R,YAAc,SAASU,GACvC,GAAwC,YAApCA,EAAQ/R,cAAcgS,WACpBD,EAAQqM,IAAI2D,KAAKgB,kBAAkBC,WAAY,CACnD,IAAM9d,EAA0C6M,EAAQ/R,cACxDpB,KAAK6R,qBAAqBsB,EAAS7M,GAEnC,IAAMc,EAAMpH,KAAK0B,SACb0F,GACFpH,KAAKsT,sBAAsBtT,KAAK+P,WAAY3I,KAUlD5H,EAAQkB,UAAU8S,oBAAsB,SAASC,GAC1CzT,KAAKiQ,YACRjQ,KAAKiQ,WAAY,EACjBjQ,KAAKwG,cAAc,IAAIyf,EAAAnmB,QAAoB2G,MACM,cAAgBzG,KAAKwS,UAAWiB,MASrFjU,EAAQkB,UAAUgT,eAAiB,SAASP,GAC1CnT,KAAK2T,0BAA0BR,GAG3BnT,KAAK6P,gBAAiD,IAA/B7P,KAAKwS,UAAUzL,cACxC/G,KAAKyQ,SAASzK,YAAY4N,cAAc5T,KAAK6P,gBAC7C7P,KAAK6P,eAAiB,OAS1BrQ,EAAQkB,UAAUiT,0BAA4B,SAASR,GACrD,IAAMW,EAAQ9T,KAAKkQ,OACmC6D,KACtDD,EAAMnK,QAIJ,SAACqK,GACKb,IAAYa,EAAKb,SACnBY,EAAchO,KAAKiO,KAGzB,IAAK,IAAIC,EAAIF,EAAclN,OAAS,EAAGoN,GAAK,IAAKA,EAC/CH,EAAMI,OAAOH,EAAcE,KAQ/BzU,EAAQkB,UAAU6G,OAAS,SAASH,GAClCpH,KAAKyQ,SAASlJ,OAAOH,GACrBjE,EAAArD,QAAqBY,UAAU6G,OAAOxH,KAAKC,KAAMoH,IAQnD5H,EAAQkB,UAAUmS,kBAAoB,SAASY,GAC7C,IAAMN,EAAUM,EAAIuR,QACpB1kB,EAAAR,QAAYoB,iBAAiBiS,EAA7B1N,EAAA3F,QACE,mCACFE,KAAKyS,YAAYU,IAQnB3T,EAAQkB,UAAUqS,qBAAuB,SAASU,GAChD,IAAMN,EAAqCM,EAAIuR,QAC/ChlB,KAAK0T,eAAeP,IAStB3T,EAAQkB,UAAUmR,qBAAuB,SAASsB,EAAS7M,GACzD,IAC2BsO,EADrBE,EAAQxO,EAAS3D,iBACnB2C,SAAa2O,SAAGM,SAAII,SAAON,SAASD,SACxC,IAAKO,EAAI,EAAGC,EAAKE,EAAMjO,OAAQ8N,EAAIC,IAAMD,EAEvC,IAAKV,EAAI,EAAGM,GADZjP,EAAcwP,EAAMH,IACS9N,OAAS,EAAGoN,EAAIM,IAAMN,EAEjDG,GACEjB,QAASA,EACT7M,SAAUA,EACVmO,OAAQE,GACRD,MAAOT,EACPI,QANFA,EAAU/O,EAAYE,MAAMyO,EAAGA,EAAI,IAQnCjU,KAAKkQ,OAAOoE,OAAO4R,EAAApmB,QAASqmB,eAAe9R,GAAUD,IAW3D5U,EAAQkB,UAAU4U,6BAA+B,SAAShQ,GACxD,IAAIiQ,EAAgBvV,KAAK6P,eACpB0F,EAK4CA,EAAcnU,cACpDyE,eAAeP,IALxBiQ,EAAgB,IAAA9P,EAAA3F,QAAc,IAAA4F,EAAA5F,QAAgBwF,IAC9CtF,KAAK6P,eAAiB0F,EACtBvV,KAAKyQ,SAASzK,YAAYwB,WAAW+N,IAKvC,OAAOA,GAUT/V,EAAQiW,gBAAkB,SAASC,EAAGC,GACpC,OAAOD,EAAEhB,MAAQiB,EAAEjB,OAUrBlV,EAAQ6D,iBAAmB,SAASoQ,GAClCzT,KAAKsT,sBAAsBG,EAAI9O,MAAO8O,EAAIrM,KAC1CpH,KAAKwQ,iBACLxQ,KAAKiQ,WAAY,EACjB,IAAMsF,EAAgBvV,KAAK6P,eAC3B,GAAI0F,EAAe,CACjB,IACMQ,EADyCR,EAAcnU,cACrCuB,iBAClBqT,EAAekQ,EAAApmB,QAASqmB,gBAAgBpQ,IACxCE,EAAqBjW,KAAKkQ,OAAOgG,YAAYF,GAC7CG,KACNF,EAAmBG,KAAK5W,EAAQiW,iBAChC,IAAK,IAAIxB,EAAI,EAAGM,EAAK0B,EAAmBpP,OAAQoN,EAAIM,IAAMN,EAAG,CAC3D,IAAMoC,EAAmBJ,EAAmBhC,GACtCI,EAAUgC,EAAiBhC,QAC7BiC,EAAM4E,EAAApb,QAAOqgB,OAAO9J,EAAiBlD,SACnCsB,EAAQ4B,EAAiB5B,MAC3BA,IACF6B,OAAW7B,EAAMvG,KAAK,MAEnBiI,EAAkBG,KACrBH,EAAkBG,GAAO,IAAIC,MAAM,IAEjC6P,EAAAtmB,QAAa8W,OAAOvC,EAAQ,GAAI0B,KAC/BI,EAAkBG,GAAK,IAC1BtW,KAAKwQ,cAAczK,MAAMsQ,EAAkB,IAC3CF,EAAkBG,GAAK,GAAKD,GACnB+P,EAAAtmB,QAAa8W,OAAOvC,EAAQ,GAAI0B,KACtCI,EAAkBG,GAAK,KAC1BtW,KAAKwQ,cAAczK,MAAMsQ,EAAkB,IAC3CF,EAAkBG,GAAK,GAAKD,IAIlC,QAASrW,KAAK6P,gBAShBrQ,EAAQyP,iBAAmB,SAASwE,GAClCzT,KAAKwT,oBAAoBC,GACzB,IAAMsC,EAAStC,EAAIlO,WACbe,EAC6BtG,KAAKwQ,cAAc,GAAG,GAAGlK,SACtDmG,EAASyZ,EAAApmB,QAASoV,UAAU5O,EAAS8G,aAErC9L,EAAO,IAAAE,EAAA1B,SAAsB2M,EAAQsJ,IAMrC3P,EAAS,IAAAC,EAAAvG,QAAiB2M,EAAQnL,EAAKyF,aACvCzB,EAAc+gB,EAAAvmB,QAAcgkB,WAAW1d,EAAQ,IAAIzD,iBACzD3C,KAAKyX,wBAAwBnR,EAAUhB,GAGvC,IAAMghB,EAASC,EAAAzmB,QAA6B2C,UAAUnB,GACtDtB,KAAKwS,UAAUoQ,WAAW,GAAGnD,IAAI0D,KAAKgB,kBAAkBqC,OAAQF,GAEhEtmB,KAAKsV,6BAA6BS,IAUpCvW,EAAQiE,eAAiB,SAASgQ,GAUhC,OATAzT,KAAKkQ,OAAOjK,QACZjG,KAAK6R,qBAAqB7R,KAAKwQ,cAAc,GAAG,GAAG2C,QACjDnT,KAAKwQ,cAAc,GAAG,GAAGlK,UAEvBtG,KAAKiQ,YACPjQ,KAAKwG,cAAc,IAAIyf,EAAAnmB,QAAoB2G,MACM,YAAczG,KAAKwS,UAAWiB,IAC/EzT,KAAKiQ,WAAY,IAEZ,GAYTzQ,EAAQ8D,YAAc,SAAS4B,GAC7B,KAAMA,wBACJ,OAAO,EAST,OALKA,EAAgBkC,IAAIzF,UAAUiW,kBACP,eAAxB1S,EAAgBC,MAA0BnF,KAAK+X,wBACjD/X,KAAK+E,mBAAmBG,GAGnB/B,EAAArD,QAAqBwD,YAAYvD,KAAKC,KAAMkF,KAC/C,GAQN1F,EAAQkB,UAAUqE,mBAAqB,SAAS0O,GAC9CzT,KAAK+P,WAAa0D,EAAI9O,MACtB3E,KAAKsT,sBAAsBG,EAAI9O,MAAO8O,EAAIrM,MAS5C5H,EAAQkB,UAAU4S,sBAAwB,SAAS3O,EAAOyC,GACxD,IAAMwO,EAAkBxO,EAAIyO,uBAAuBlR,GAM7C8hB,EAAYrf,EAAIyO,wBACnBlR,EAAM,GAAK3E,KAAKoQ,gBAAiBzL,EAAM,GAAK3E,KAAKoQ,kBAC9CsW,EAAatf,EAAIyO,wBACpBlR,EAAM,GAAK3E,KAAKoQ,gBAAiBzL,EAAM,GAAK3E,KAAKoQ,kBAC9C+H,EAAM+N,EAAApmB,QAASqmB,gBAAgBM,EAAWC,IAG1CtO,EADQpY,KAAKkQ,OACCgG,YAAYiC,GAChC,GAAIC,EAAMvR,OAAS,EAAG,CACpBuR,EAAMhC,KAde,SAASV,EAAGC,GACjC,OAAOyQ,EAAAtmB,QAAawZ,yBAAyB1D,EAAiBF,EAAErB,SAC5D+R,EAAAtmB,QAAawZ,yBAAyB1D,EAAiBD,EAAEtB,WAa7D,IACMiE,EADOF,EAAM,GACS/D,QACxB0B,EAAUqQ,EAAAtmB,QAAa0Z,iBAAiB5D,EAC1C0C,GACIC,EAAcnR,EAAIoR,uBAAuBzC,GAC/C,GAAIhT,KAAKE,KAAKmjB,EAAAtmB,QAAagZ,gBAAgBnU,EAAO4T,KAC9CvY,KAAKoQ,gBAAiB,CACxB,IAAMuI,EAASvR,EAAIoR,uBAAuBF,EAAe,IACnDM,EAASxR,EAAIoR,uBAAuBF,EAAe,IACnDO,EAAeuN,EAAAtmB,QAAagZ,gBAAgBP,EAAaI,GACzDI,EAAeqN,EAAAtmB,QAAagZ,gBAAgBP,EAAaK,GACzDH,EAAO1V,KAAKE,KAAKF,KAAKiW,IAAIH,EAAcE,IAE9C,GADA/Y,KAAKsQ,iBAAmBmI,GAAQzY,KAAKoQ,gBACjCpQ,KAAKsQ,iBAAkB,CACzByF,EAAS8C,EAAeE,EACtBT,EAAe,GAAKA,EAAe,GACrCtY,KAAKsV,6BAA6BS,GAClC,IAAM2C,KACNA,EAAewC,EAAApb,QAAOqgB,OAAO7H,KAAmB,EAEhD,IADA,IAAIjE,SACKJ,EAAI,EAAGM,EAAK6D,EAAMvR,OAAQoN,EAAIM,IACrCF,EAAU+D,EAAMnE,GAAGI,QACd+R,EAAAtmB,QAAa8W,OAAO0B,EAAe,GAAIjE,EAAQ,KAChD+R,EAAAtmB,QAAa8W,OAAO0B,EAAe,GAAIjE,EAAQ,KAC9C+R,EAAAtmB,QAAa8W,OAAO0B,EAAe,GAAIjE,EAAQ,KAChD+R,EAAAtmB,QAAa8W,OAAO0B,EAAe,GAAIjE,EAAQ,OALRJ,EAMzCyE,EAAewC,EAAApb,QAAOqgB,OAAO9L,KAAY,EAK7C,SAIFrU,KAAK6P,iBACP7P,KAAKyQ,SAASzK,YAAY4N,cAAc5T,KAAK6P,gBAC7C7P,KAAK6P,eAAiB,OAU1BrQ,EAAQkB,UAAU+W,wBAA0B,SAASnR,EAAUhB,GAC7DtF,KAAKuQ,kBAAmB,EACxBjK,EAAST,eAAeP,GACxBtF,KAAKuQ,kBAAmB,GAO1B/Q,EAAQ8E,wBAA0B,WAChC,IAAM1D,EAAQ+f,EAAA7gB,QAAa+a,uBAC3B,OAAO,SAAS1H,EAASxL,GACvB,OAAO/G,EAAA,kBAKIpB,iVC/efR,EAAA,QACAA,EAAA,UAGAA,EAAA,OAEAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,uDAEA,IAAMQ,aAqBJ,SAAAA,EAAYmnB,gGAAiBrI,CAAAte,KAAAR,GAM3BQ,KAAK4mB,iBAAmBD,EAMxB3mB,KAAK6mB,KAAO,KAMZ7mB,KAAK8mB,iBAELviB,EAAAzE,QAAS0E,OAAOxE,KAAK4mB,iBAAkB,MAAO5mB,KAAK+mB,sBAAuB/mB,MAzCxE,OAAAR,EAAAwnB,SAAA,mBAAA1H,EAAA9f,IAAAye,IAAA,WAAAsB,MAAA,SAiEKnY,GAGP,IAAMsc,EAAOtc,EAAIzF,UACjB3B,KAAK8mB,cAAc/gB,KACjBxB,EAAAzE,QAAS0E,OAAOkf,EAAM,oBAAqB1jB,KAAKinB,4BAA6BjnB,OAI/E,IAAM2H,EAAa+b,EAAKxW,gBACxB5M,EAAAR,QAAYonB,aAAavf,GACzB3H,KAAKmnB,6BAA6Bxf,MA5EhCsW,IAAA,aAAAsB,MAAA,SAoFOnY,GACTwa,EAAA9hB,QAAasnB,QAAQpnB,KAAK8mB,eAC1B9mB,KAAK8mB,oBAtFH7I,IAAA,8BAAAsB,MAAA,SA+FwB9L,GAC1B,IAAMiQ,EAAOjQ,EAAI4T,OACjB/mB,EAAAR,QAAYoB,iBAAiBwiB,EAA7BC,EAAA7jB,SACA,IAAM6H,EAAa+b,EAAKxW,gBACxB5M,EAAAR,QAAYonB,aAAavf,GACzB3H,KAAKmnB,6BAA6Bxf,MApGhCsW,IAAA,+BAAAsB,MAAA,SA4GyB5X,GAAY,IAAA2f,EAAAtnB,KACvCA,KAAK4mB,iBAAiBjd,QAAQ,SAAC4d,GAC7BD,EAAKE,4BAA4BD,EAAY5f,QA9G7CsW,IAAA,8BAAAsB,MAAA,SAwHwBgI,EAAY5f,GAGtC,GAAK4f,EAAWE,uBAAhB,CAIA,IAAMxI,EAAgBsI,EAAWtI,cAC3BE,EAAgBoI,EAAWpI,cAQ3BX,GAN+B,OAAlBW,QACGjf,IAAlBif,GACAxX,GAAcwX,KACmB,OAAlBF,QACG/e,IAAlB+e,GACAtX,GAAcsX,GAGlBsI,EAAW/I,QAAUA,MA1InBP,IAAA,wBAAAsB,MAAA,SAmJkB7a,GACpB,IAAM6iB,EAAajnB,EAAAR,QAAYoB,iBAC7BwD,EAAMsgB,QADW0C,EAAA5nB,SAEnB,GAAIE,KAAK6mB,KAAM,CACb,IAAMlf,EAAa3H,KAAK6mB,KAAKllB,UAAUuL,gBACvC5M,EAAAR,QAAYonB,aAAavf,GACzB3H,KAAKwnB,4BAA4BD,EAAY5f,OAzJ7CsW,IAAA,MAAAwB,IAAA,SAgDIrY,GACFpH,KAAK6mB,MACP7mB,KAAK2nB,WAAW3nB,KAAK6mB,MAGvB7mB,KAAK6mB,KAAOzf,EAERA,GACFpH,KAAK4nB,SAASxgB,OAxDd5H,KAgKNkgB,EAAA5f,QAAS6f,OAAOuB,QACd,yBAA0B1hB,aAGbA,oFC/Kf,QAAAR,EAAA,SACAA,EAAA,MACAA,EAAA,wDAOA,IAAMQ,EAAU,SAASqoB,EAASnT,GAMhC1U,KAAK8nB,SAAWD,EAMhB7nB,KAAKwS,UAAY,KAMjBxS,KAAK+nB,OAASrT,GAShBlV,EAAQkB,UAAU8G,WAAa,SAAS2L,GACtCnT,KAAK8nB,SAAStgB,WAAW2L,EAASnT,KAAK+nB,SASzCvoB,EAAQkB,UAAUkT,cAAgB,SAAST,GACzCnT,KAAK8nB,SAASlU,cAAcT,EAASnT,KAAK+nB,SAQ5CvoB,EAAQkB,UAAUuF,MAAQ,WACxBjG,KAAK8nB,SAAS7hB,MAAMjG,KAAK+nB,SAa3BvoB,EAAQkB,UAAUsnB,YAAc,SAASlZ,GAChB,OAAnB9O,KAAKwS,YACPxS,KAAKwS,UAAUvM,QACf1B,EAAAzE,QAAS+T,SAAS7T,KAAKwS,UAAW,MAAOxS,KAAK6S,kBAAmB7S,MACjEuE,EAAAzE,QAAS+T,SAAS7T,KAAKwS,UAAW,SAAUxS,KAAK+S,qBAAsB/S,OAExD,OAAb8O,IACFA,EAASnF,QAAQ,SAASwJ,GACxBnT,KAAKwH,WAAW2L,IACfnT,MACHuE,EAAAzE,QAAS0E,OAAOsK,EAAU,MAAO9O,KAAK6S,kBAAmB7S,MACzDuE,EAAAzE,QAAS0E,OAAOsK,EAAU,SAAU9O,KAAK+S,qBAAsB/S,OAEjEA,KAAKwS,UAAY1D,GAUnBtP,EAAQkB,UAAUqgB,SAAW,SAASngB,GACpCZ,KAAK8nB,SAAS/G,SAASngB,EAAOZ,KAAK+nB,SAQrCvoB,EAAQkB,UAAUmS,kBAAoB,SAASY,GAC7C,IAAMN,EAAqCM,EAAIuR,QAC/ChlB,KAAKwH,WAAW2L,IAQlB3T,EAAQkB,UAAUqS,qBAAuB,SAASU,GAChD,IAAMN,EAAqCM,EAAIuR,QAC/ChlB,KAAK4T,cAAcT,IAMrB3T,EAAQmgB,OAASsB,QAAQtB,OAAO,yBAChCD,EAAA5f,QAAS6f,OAAOwB,SAASpb,KAAKvG,EAAQmgB,OAAON,gBAG9B7f,oFC3Hf,MAAA6e,EAAArf,EAAA,uCAKA,IAAMQ,EAAUyhB,QAAQtB,OAAO,mBAE/BD,EAAA5f,QAAS6f,OAAOwB,SAASpb,KAAKvG,EAAQ6f,MA6BtC7f,EAAQklB,WAAa,WACnB,OACEG,SAAU,IACVC,KAAM,SAACmD,EAAQC,EAAUC,GACvB,IAAMC,EAAUD,EAAA,gBACV/gB,EAA6B6gB,EAAO9C,MAAMiD,GAEhD,SAASC,EAASrD,GAChB,IAAMtd,EAASsd,EAAQsD,KAAK,eAC5B,QAAepoB,IAAXwH,EAAsB,CACxB,IAAM+F,EAA+BrG,EAAImhB,UACzCnhB,EAAIzF,UAAU6mB,IAAIP,EAAO9C,MAAMzd,IAAU+F,SAE3C,IAAMmW,EAAOoB,EAAQsD,KAAK,kBACbpoB,IAAT0jB,GACFxc,EAAIzF,UAAU8mB,QAAQR,EAAO9C,MAAMvB,IAKvCsE,EAASQ,GAAG,QAAS,IAAK,SAAShkB,GACjC2jB,EAASpH,QAAQ+D,QAAQ2D,EAAE3oB,UAI7BkoB,EAASQ,GAAG,SAAU,SAAChkB,GACrB,IAAMkkB,EAAWlkB,EAAM2iB,OAAOznB,QAAQ8E,EAAM2iB,OAAOwB,eACnDR,EAASpH,QAAQ+D,QAAQ4D,SAQjCppB,EAAQumB,UAAU,eAAgBvmB,EAAQklB,sBAG3BllB,oFC1Ef,QAAAR,EAAA,QACAA,EAAA,QACAA,EAAA,uDAKA,IAAMQ,EAAUyhB,QAAQtB,OAAO,oBAE/BD,EAAA5f,QAAS6f,OAAOwB,SAASpb,KAAKvG,EAAQ6f,MAuBtC7f,EAAQklB,WAAa,SAASC,GAG5B,OACEE,SAAU,IAMVC,KAAM,SAACC,EAAOC,EAASC,GACrB,IACMC,EAAOD,EAAA,cACP7d,EAAM2d,EAAMI,MAAMD,GACxB5kB,EAAAR,QAAYoB,iBAAiBkG,EAA7Bmc,EAAAzjB,SAEA,IAAMgpB,EAAY7D,EAAA,mBAClB3kB,EAAAR,QAAYS,YAAqBL,IAAd4oB,GAEnB,IAAI3iB,SACA4iB,SAEEC,EAAiB,SAAjBA,IACJ5hB,EAAIwe,aACJxe,EAAIye,aAEAL,KAAKC,MAAQtf,EAzBgB,MA0B/B4iB,EAAoBpE,EAAQmB,sBAAsBkD,KAMtDhE,EAAQ0D,GAAG,gBAAiB,WAC1BthB,EAAIwe,aACJxe,EAAIye,eAGNd,EAAMkE,OAAOH,EAAW,SAACI,EAAQC,GAC3BD,GAAUC,IACZhjB,EAAQqf,KAAKC,MACbd,EAAQyE,qBAAqBL,GAC7BA,EAAoBpE,EAAQmB,sBAAsBkD,SAQ5DxpB,EAAQumB,UAAU,gBAAiBvmB,EAAQklB,sBAG5BllB,oFCrFf,QAAAR,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,uDAKA,IAAMQ,EAAUyhB,QAAQtB,OAAO,wBAE/BD,EAAA5f,QAAS6f,OAAOwB,SAASpb,KAAKvG,EAAQ6f,MAGtC7f,EAAQ+f,MAAM,+BAMZ,SAACyF,EAASC,GACR,IAAMoE,EAAcpE,EAAA,6BACpB,YAAuB/kB,IAAhBmpB,EAA4BA,EAC9B3J,EAAA5f,QAASwpB,sBADP,4BAwDX9pB,EAAQklB,WAAa,SAAS6E,GAC5B,OACE1E,SAAU,IACVE,OAAO,EACPN,WAAY,8BACZ4E,YAAaE,IAKjB/pB,EAAQumB,UAAU,oBAAqBvmB,EAAQklB,YAc/CllB,EAAQgqB,yBAA2B,SAASvB,EAAQC,EAAUC,GAAQ,IAAAb,EAAAtnB,KAE9DypB,EAAatB,EAAA,kBAOnBnoB,KAAK0pB,OACFzB,EAAO9C,MAAMsE,GAChBE,KAAKjc,QAAQnN,YAAuBL,IAAhBF,KAAK0pB,QAMzB1pB,KAAK4pB,WAEL3B,EAAOgB,OAAO,kBAAMxgB,OAAOohB,KAAKvC,EAAKoC,QAAQ7iB,QAAQ,SAACijB,GACpDxC,EAAKsC,WAAanhB,OAAOohB,KAAKvC,EAAKoC,QAAQtiB,IAAI2iB,QAC/CzC,EAAKsC,WAAWxT,KAAK4T,EAAAlqB,QAAQmqB,6BAG/B,IAAM7B,EAAUD,EAAA,qBAMhBnoB,KAAK6mB,KAA8BoB,EAAO9C,MAAMiD,GAChDuB,KAAKjc,QAAQxM,iBAAiBlB,KAAK6mB,KAAnCtD,EAAAzjB,SAEA,IAAMoqB,EAAc/B,EAAA,yBACdvoB,EAAUqoB,EAAO9C,MAAM+E,GA2B7B,GArBAlqB,KAAKJ,QAAUJ,EAAQgqB,yBAAyBW,YAAYvqB,GAM5DI,KAAKoqB,QAAUnC,EAMfjoB,KAAKqqB,qBAAuB,KAM5BrqB,KAAKsqB,kBAAepqB,EAGP,OADAF,KAAK6mB,KAAKllB,UACJ,CACjB,IAAM4oB,EAAcvqB,KAAK6mB,KAAKllB,UAAU6oB,eACpBtqB,IAAhBqqB,IACFvqB,KAAKsqB,aAAetqB,KAAKyqB,SAASF,IAItChmB,EAAAzE,QAAS0E,OAAOxE,KAAK6mB,KAAM,cAAe7mB,KAAK0qB,kBAAmB1qB,MAElEA,KAAK2qB,oCAEL1C,EAAA,kBAA8BjoB,MAUhCR,EAAQgqB,yBAAyBW,YAAc,SAASvqB,GACtD,IAAIgrB,GAAS,EAIb,YAHgB1qB,IAAZN,IACFgrB,EAA8B,GAArBhrB,EAAA,SAGTgrB,OAAQA,IAUZprB,EAAQgqB,yBAAyB9oB,UAAU+pB,SAAW,SAAS7G,GAC7D,OAAO5jB,KAAK0pB,OAAO9F,IAQrBpkB,EAAQgqB,yBAAyB9oB,UAAUmqB,WAAa,SAASjH,GAC/D5jB,KAAK6mB,KAAKllB,UAAU8mB,QAAQ7E,IAQ9BpkB,EAAQgqB,yBAAyB9oB,UAAUoqB,wBAA0B,SAAS7H,GAAG,IAAA8H,EAAA/qB,KACzE0jB,EAAO1jB,KAAK6mB,KAAKllB,UACjB2oB,EAAetqB,KAAK0pB,OAA8BhG,EAAK8G,gBAaxCtqB,IAAjBoqB,GACFtqB,KAAKoqB,QAAQY,YAAY,WACvBD,EAAKT,aAAeA,KAU1B9qB,EAAQgqB,yBAAyB9oB,UAAUgqB,kBAAoB,SAASzH,GACtEjjB,KAAK2qB,oCACL3qB,KAAK8qB,wBAAwB,OAO/BtrB,EAAQgqB,yBAAyB9oB,UAAUiqB,kCAAoC,WAC3C,OAA9B3qB,KAAKqqB,sBACP9lB,EAAAzE,QAAS8J,cAAc5J,KAAKqqB,sBAE9B,IAAM3G,EAAO1jB,KAAK6mB,KAAKllB,UACvB3B,KAAKqqB,qBAAuB9lB,EAAAzE,QAAS0E,OAAOkf,EAC1C,oBAAqB1jB,KAAK8qB,wBAC1B9qB,OAIJR,EAAQilB,WAAW,8BACjBjlB,EAAQgqB,oCAGKhqB,6JC/QfyrB,EAAAjsB,EAAA,IAwBAsS,EAAA,SAAAhM,EAAA4lB,GACAC,EAAA,EAAAprB,KAAAC,MACAA,KAAA6F,eAAAP,EAAA4lB,IAGAziB,OAAA2iB,EAAA,SAAA3iB,CAAA6I,EAAA6Z,EAAA,GAQA7Z,EAAA5Q,UAAA2qB,YAAA,SAAAC,GACAtrB,KAAAurB,gBAGA9iB,OAAA+iB,EAAA,OAAA/iB,CAAAzI,KAAAurB,gBAAAD,EAAAG,sBAFAzrB,KAAAurB,gBAAAD,EAAAG,qBAAAjmB,QAIAxF,KAAA8I,WAUAwI,EAAA5Q,UAAAgrB,MAAA,WACA,IAAAC,EAAA,IAAAra,EAAA,MAEA,OADAqa,EAAAC,mBAAA5rB,KAAA6rB,OAAA7rB,KAAAurB,gBAAA/lB,SACAmmB,GAOAra,EAAA5Q,UAAAorB,eAAA,SAAA7f,EAAAE,EAAA4f,EAAAC,GACA,GAAAA,EAAAvjB,OAAAwjB,EAAA,yBAAAxjB,CAAAzI,KAAAoN,YAAAnB,EAAAE,GACA,OAAA6f,EAEA,IAEA/X,EAAAM,EAAAI,EAFA4W,EAAAvrB,KAAAurB,gBACAW,EAAAlsB,KAAAksB,OAEA,IAAAjY,EAAA,EAAAM,EAAAgX,EAAA1kB,OAA0CoN,EAAAM,EAAQN,GAAAiY,EAAA,CAClD,IAAApT,EAAArQ,OAAAwiB,EAAA,gBAAAxiB,CACAwD,EAAAE,EAAAof,EAAAtX,GAAAsX,EAAAtX,EAAA,IACA,GAAA6E,EAAAkT,EAAA,CAEA,IADAA,EAAAlT,EACAnE,EAAA,EAAiBA,EAAAuX,IAAYvX,EAC7BoX,EAAApX,GAAA4W,EAAAtX,EAAAU,GAEAoX,EAAAllB,OAAAqlB,GAGA,OAAAF,GAUA1a,EAAA5Q,UAAAiC,eAAA,WACA,OAAAwpB,EAAA,EAAA7mB,YACAtF,KAAAurB,gBAAA,EAAAvrB,KAAAurB,gBAAA1kB,OAAA7G,KAAAksB,SAUA5a,EAAA5Q,UAAA0rB,SAAA,SAAA1X,GACA,IAAA2X,EAAArsB,KAAAurB,gBACAvrB,KAAAurB,gBAAA1kB,OAAA7G,KAAAksB,OAAA,EACA,GAAAxX,EAAA,GAAA2X,GAAA3X,EACA,YAEA,IAAA4W,EAAA,IAAAgB,EAAA,cAGA,OAFAhB,EAAAM,mBAAA5rB,KAAA6rB,OAAA7rB,KAAAurB,gBAAA/lB,MACAkP,EAAA1U,KAAAksB,QAAAxX,EAAA,GAAA1U,KAAAksB,SACAZ,GASAha,EAAA5Q,UAAA6rB,UAAA,WACA,IAKAtY,EAAAM,EALAgX,EAAAvrB,KAAAurB,gBACAM,EAAA7rB,KAAA6rB,OACAK,EAAAlsB,KAAAksB,OAEA1X,KAEA,IAAAP,EAAA,EAAAM,EAAAgX,EAAA1kB,OAA0CoN,EAAAM,EAAQN,GAAAiY,EAAA,CAClD,IAAAZ,EAAA,IAAAgB,EAAA,cACAhB,EAAAM,mBAAAC,EAAAN,EAAA/lB,MAAAyO,IAAAiY,IACA1X,EAAAzO,KAAAulB,GAEA,OAAA9W,GAQAlD,EAAA5Q,UAAA0S,QAAA,WACA,OAAAoZ,EAAA,QAAApV,aAQA9F,EAAA5Q,UAAA+rB,iBAAA,SAAA/kB,GACA,IAEAuM,EAAAM,EAAAtI,EAAAE,EAFAof,EAAAvrB,KAAAurB,gBACAW,EAAAlsB,KAAAksB,OAEA,IAAAjY,EAAA,EAAAM,EAAAgX,EAAA1kB,OAA0CoN,EAAAM,EAAQN,GAAAiY,EAGlD,GAFAjgB,EAAAsf,EAAAtX,GACA9H,EAAAof,EAAAtX,EAAA,GACAxL,OAAAwjB,EAAA,WAAAxjB,CAAAf,EAAAuE,EAAAE,GACA,SAGA,UAWAmF,EAAA5Q,UAAAmF,eAAA,SAAAP,EAAA4lB,GACA5lB,GAGAtF,KAAA0sB,UAAAxB,EAAA5lB,EAAA,GACAtF,KAAAurB,kBACAvrB,KAAAurB,oBAEAvrB,KAAAurB,gBAAA1kB,OAAA8lB,EAAA,EAAArnB,YACAtF,KAAAurB,gBAAA,EAAAjmB,EAAAtF,KAAAksB,QACAlsB,KAAA8I,WARA9I,KAAA4rB,mBAAAgB,EAAA,QAAAC,GAAA,OAiBAvb,EAAA5Q,UAAAkrB,mBAAA,SAAAC,EAAAN,GACAvrB,KAAA8sB,2BAAAjB,EAAAN,GACAvrB,KAAA8I,WAEA5J,EAAA,uGCnMA6tB,EAAA/tB,EAAA,IAeAguB,EAAA,SAAArtB,GAEA,IAEAqK,EAFApK,EAAAD,MAIAqK,OADA9J,IAAAN,EAAAoK,aACApK,EAAAoK,cAEAgjB,EAAAC,aAGA,IAAAnlB,OAAA5H,IAAAN,EAAAkI,YACAlI,EAAAkI,YAAA,YAEAsC,OAAAlK,IAAAN,EAAAwK,IACAxK,EAAAwK,IAAA,uDAEA2iB,EAAA,EAAAhtB,KAAAC,MACAgK,eACAuR,UAAA3b,EAAA2b,UACAzT,cACA0T,YAAAtb,IAAAN,EAAA4b,QAAA5b,EAAA4b,OACA0R,aAAAhtB,IAAAN,EAAAstB,QAAAttB,EAAAstB,QAAA,GACAzR,2BAAA7b,EAAA6b,2BACAG,iBAAAhc,EAAAgc,iBACAxR,MACAhG,MAAAxE,EAAAwE,SAKAqE,OAAA2iB,EAAA,SAAA3iB,CAAAukB,EAAAD,EAAA,GAUAC,EAAAC,YAAA,2FAGA/tB,EAAA,8DC3DAiuB,EAAAnuB,EAAA,IA6BAouB,EAAA,SAAAztB,GACA,IAAAC,EAAAD,MACAuC,OAAAhC,IAAAN,EAAAsC,WACAtC,EAAAsC,WAAA,YAEAyZ,OAAAzb,IAAAN,EAAA+b,SAAA/b,EAAA+b,SACAwR,EAAA,EAAAE,WACA3lB,OAAAylB,EAAA,EAAAG,qBAAAprB,GACAgrB,QAAAttB,EAAAstB,QACAK,QAAA3tB,EAAA2tB,QACAxQ,SAAAnd,EAAAmd,WAGAyQ,EAAA,EAAAztB,KAAAC,MACAgK,aAAApK,EAAAoK,aACAuR,UAAA3b,EAAA2b,UACAzT,YAAAlI,EAAAkI,YACA0T,OAAA5b,EAAA4b,OACAtZ,aACAuZ,2BAAA7b,EAAA6b,2BACAE,WACAC,iBAAAhc,EAAAgc,iBACA6R,eAAA7tB,EAAA6tB,eACAC,gBAAA9tB,EAAA8tB,gBACAtjB,IAAAxK,EAAAwK,IACAyR,KAAAjc,EAAAic,KACAzX,WAAAlE,IAAAN,EAAAwE,OAAAxE,EAAAwE,MACA0X,WAAAlc,EAAAkc,cAKArT,OAAA2iB,EAAA,SAAA3iB,CAAA2kB,EAAAI,EAAA,GACAtuB,EAAA,wLC9DAyuB,EAAA3uB,EAAA,IA2BAwS,EAAA,SAAAlM,EAAA4lB,GAEAC,EAAA,EAAAprB,KAAAC,MAMAA,KAAA4tB,SAMA5tB,KAAA6tB,WAAA,EAMA7tB,KAAA8tB,mBAAA,EAEA9tB,KAAA6F,eAAAP,EAAA4lB,IAIAziB,OAAA2iB,EAAA,SAAA3iB,CAAA+I,EAAA2Z,EAAA,GAQA3Z,EAAA9Q,UAAAqtB,iBAAA,SAAAC,GACAhuB,KAAAurB,gBAGA9iB,OAAA+iB,EAAA,OAAA/iB,CAAAzI,KAAAurB,gBAAAyC,EAAAvC,qBAAAjmB,SAFAxF,KAAAurB,gBAAAyC,EAAAvC,qBAAAjmB,QAIAxF,KAAA4tB,MAAA7nB,KAAA/F,KAAAurB,gBAAA1kB,QACA7G,KAAA8I,WAUA0I,EAAA9Q,UAAAgrB,MAAA,WACA,IAAAuC,EAAA,IAAAzc,EAAA,MAGA,OAFAyc,EAAArC,mBACA5rB,KAAA6rB,OAAA7rB,KAAAurB,gBAAA/lB,QAAAxF,KAAA4tB,MAAApoB,SACAyoB,GAOAzc,EAAA9Q,UAAAorB,eAAA,SAAA7f,EAAAE,EAAA4f,EAAAC,GACA,OAAAA,EAAAvjB,OAAAwjB,EAAA,yBAAAxjB,CAAAzI,KAAAoN,YAAAnB,EAAAE,GACA6f,GAEAhsB,KAAA8tB,mBAAA9tB,KAAAiN,gBACAjN,KAAA6tB,UAAA9qB,KAAAE,KAAAirB,EAAA,EAAAC,oBACAnuB,KAAAurB,gBAAA,EAAAvrB,KAAA4tB,MAAA5tB,KAAAksB,OAAA,IACAlsB,KAAA8tB,kBAAA9tB,KAAAiN,eAEAihB,EAAA,EAAAE,iBACApuB,KAAAurB,gBAAA,EAAAvrB,KAAA4tB,MAAA5tB,KAAAksB,OACAlsB,KAAA6tB,WAAA,EAAA5hB,EAAAE,EAAA4f,EAAAC,KA0BAxa,EAAA9Q,UAAA2tB,iBAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAxuB,KAAA6rB,QAAAe,EAAA,QAAA6B,KACAzuB,KAAA6rB,QAAAe,EAAA,QAAA8B,MACA,IAAA1uB,KAAAurB,gBAAA1kB,OACA,YAEA,IAAA8nB,OAAAzuB,IAAAquB,KACAK,OAAA1uB,IAAAsuB,KACA,OAAAK,EAAA,EAAAC,yBAAA9uB,KAAAurB,gBAAA,EACAvrB,KAAA4tB,MAAA5tB,KAAAksB,OAAAoC,EAAAK,EAAAC,IAUApd,EAAA9Q,UAAAiC,eAAA,WACA,OAAAosB,EAAA,EAAAC,aACAhvB,KAAAurB,gBAAA,EAAAvrB,KAAA4tB,MAAA5tB,KAAAksB,SAOA1a,EAAA9Q,UAAAuuB,QAAA,WACA,OAAAjvB,KAAA4tB,OAUApc,EAAA9Q,UAAAwuB,cAAA,SAAAxa,GACA,GAAAA,EAAA,GAAA1U,KAAA4tB,MAAA/mB,QAAA6N,EACA,YAEA,IAAAsZ,EAAA,IAAAmB,EAAA,cAGA,OAFAnB,EAAApC,mBAAA5rB,KAAA6rB,OAAA7rB,KAAAurB,gBAAA/lB,MACA,IAAAkP,EAAA,EAAA1U,KAAA4tB,MAAAlZ,EAAA,GAAA1U,KAAA4tB,MAAAlZ,KACAsZ,GASAxc,EAAA9Q,UAAA0uB,eAAA,WACA,IAMAnb,EAAAM,EANAgX,EAAAvrB,KAAAurB,gBACA8D,EAAArvB,KAAA4tB,MACA/B,EAAA7rB,KAAA6rB,OAEAyD,KACAC,EAAA,EAEA,IAAAtb,EAAA,EAAAM,EAAA8a,EAAAxoB,OAA+BoN,EAAAM,IAAQN,EAAA,CACvC,IAAAub,EAAAH,EAAApb,GACA+Z,EAAA,IAAAmB,EAAA,cACAnB,EAAApC,mBAAAC,EAAAN,EAAA/lB,MAAA+pB,EAAAC,IACAF,EAAAvpB,KAAAioB,GACAuB,EAAAC,EAEA,OAAAF,GAOA9d,EAAA9Q,UAAA+uB,iBAAA,WACA,IAKAxb,EAAAM,EALAmb,KACAnE,EAAAvrB,KAAAurB,gBACAgE,EAAA,EACAF,EAAArvB,KAAA4tB,MACA1B,EAAAlsB,KAAAksB,OAEA,IAAAjY,EAAA,EAAAM,EAAA8a,EAAAxoB,OAA+BoN,EAAAM,IAAQN,EAAA,CACvC,IAAAub,EAAAH,EAAApb,GACA0b,EAAAd,EAAA,EAAAb,WACAzC,EAAAgE,EAAAC,EAAAtD,EAAA,IACAzjB,OAAA+iB,EAAA,OAAA/iB,CAAAinB,EAAAC,GACAJ,EAAAC,EAEA,OAAAE,GAOAle,EAAA9Q,UAAAkvB,8BAAA,SAAAC,GACA,IAAAC,KACAC,KACAD,EAAAjpB,OAAA8mB,EAAA,EAAAqC,gBACAhwB,KAAAurB,gBAAA,EAAAvrB,KAAA4tB,MAAA5tB,KAAAksB,OAAA2D,EACAC,EAAA,EAAAC,GACA,IAAAE,EAAA,IAAAze,EAAA,MAGA,OAFAye,EAAArE,mBACAgB,EAAA,QAAAC,GAAAiD,EAAAC,GACAE,GAQAze,EAAA9Q,UAAA0S,QAAA,WACA,OAAAoZ,EAAA,QAAA1V,mBAQAtF,EAAA9Q,UAAA+rB,iBAAA,SAAA/kB,GACA,OAAAwoB,EAAA,EAAAZ,YACAtvB,KAAAurB,gBAAA,EAAAvrB,KAAA4tB,MAAA5tB,KAAAksB,OAAAxkB,IAWA8J,EAAA9Q,UAAAmF,eAAA,SAAAP,EAAA4lB,GACA,GAAA5lB,EAEG,CACHtF,KAAA0sB,UAAAxB,EAAA5lB,EAAA,GACAtF,KAAAurB,kBACAvrB,KAAAurB,oBAEA,IAAA8D,EAAAc,EAAA,EAAAnB,aACAhvB,KAAAurB,gBAAA,EAAAjmB,EAAAtF,KAAAksB,OAAAlsB,KAAA4tB,OACA5tB,KAAAurB,gBAAA1kB,OAAA,IAAAwoB,EAAAxoB,OAAA,EAAAwoB,IAAAxoB,OAAA,GACA7G,KAAA8I,eATA9I,KAAA4rB,mBAAAgB,EAAA,QAAAC,GAAA,KAAA7sB,KAAA4tB,QAmBApc,EAAA9Q,UAAAkrB,mBAAA,SAAAC,EAAAN,EAAA8D,GACArvB,KAAA8sB,2BAAAjB,EAAAN,GACAvrB,KAAA4tB,MAAAyB,EACArvB,KAAA8I,WAOA0I,EAAA9Q,UAAA0vB,eAAA,SAAAd,GACA,IAGArb,EAAAM,EAHAsX,EAAA7rB,KAAAqwB,YACA9E,KACA8D,KAEA,IAAApb,EAAA,EAAAM,EAAA+a,EAAAzoB,OAAsCoN,EAAAM,IAAQN,EAAA,CAC9C,IAAA+Z,EAAAsB,EAAArb,GACA,IAAAA,IACA4X,EAAAmC,EAAAqC,aAEA5nB,OAAA+iB,EAAA,OAAA/iB,CAAA8iB,EAAAyC,EAAAvC,sBACA4D,EAAAtpB,KAAAwlB,EAAA1kB,QAEA7G,KAAA4rB,mBAAAC,EAAAN,EAAA8D,IAEAnwB,EAAA,sOCrTAoxB,EAAAtxB,EAAA,IAgCA0S,EAAA,SAAApM,EAAA4lB,GAEAqF,EAAA,EAAAxwB,KAAAC,MAMAA,KAAAwwB,UAMAxwB,KAAAywB,6BAAA,EAMAzwB,KAAA0wB,oBAAA,KAMA1wB,KAAA6tB,WAAA,EAMA7tB,KAAA8tB,mBAAA,EAMA9tB,KAAA2wB,mBAAA,EAMA3wB,KAAA4wB,yBAAA,KAEA5wB,KAAA6F,eAAAP,EAAA4lB,IAIAziB,OAAA2iB,EAAA,SAAA3iB,CAAAiJ,EAAA6e,EAAA,GAQA7e,EAAAhR,UAAAmwB,cAAA,SAAAC,GAEA,IAAAzB,EACA,GAAArvB,KAAAurB,gBAIG,CACH,IAGAtX,EAAAM,EAHAgb,EAAAvvB,KAAAurB,gBAAA1kB,OAIA,IAHA4B,OAAA+iB,EAAA,OAAA/iB,CAAAzI,KAAAurB,gBAAAuF,EAAArF,sBAGAxX,EAAA,EAAAM,GAFA8a,EAAAyB,EAAA7B,UAAAzpB,SAEAqB,OAAiCoN,EAAAM,IAAQN,EACzCob,EAAApb,IAAAsb,OATAvvB,KAAAurB,gBAAAuF,EAAArF,qBAAAjmB,QACA6pB,EAAAyB,EAAA7B,UAAAzpB,QACAxF,KAAAwwB,OAAAzqB,OAUA/F,KAAAwwB,OAAAzqB,KAAAspB,GACArvB,KAAA8I,WAUA4I,EAAAhR,UAAAgrB,MAAA,WAKA,IAJA,IAAAqF,EAAA,IAAArf,EAAA,MAEAsf,EAAAhxB,KAAAwwB,OAAA3pB,OACAoqB,EAAA,IAAA1a,MAAAya,GACA/c,EAAA,EAAiBA,EAAA+c,IAAS/c,EAC1Bgd,EAAAhd,GAAAjU,KAAAwwB,OAAAvc,GAAAzO,QAKA,OAFAurB,EAAAnF,mBACA5rB,KAAA6rB,OAAA7rB,KAAAurB,gBAAA/lB,QAAAyrB,GACAF,GAOArf,EAAAhR,UAAAorB,eAAA,SAAA7f,EAAAE,EAAA4f,EAAAC,GACA,OAAAA,EAAAvjB,OAAAwjB,EAAA,yBAAAxjB,CAAAzI,KAAAoN,YAAAnB,EAAAE,GACA6f,GAEAhsB,KAAA8tB,mBAAA9tB,KAAAiN,gBACAjN,KAAA6tB,UAAA9qB,KAAAE,KAAAiuB,EAAA,EAAAC,qBACAnxB,KAAAurB,gBAAA,EAAAvrB,KAAAwwB,OAAAxwB,KAAAksB,OAAA,IACAlsB,KAAA8tB,kBAAA9tB,KAAAiN,eAEAikB,EAAA,EAAAE,kBACApxB,KAAAqxB,6BAAA,EAAArxB,KAAAwwB,OAAAxwB,KAAAksB,OACAlsB,KAAA6tB,WAAA,EAAA5hB,EAAAE,EAAA4f,EAAAC,KAOAta,EAAAhR,UAAA4wB,WAAA,SAAArlB,EAAAE,GACA,OAAAolB,EAAA,EAAAC,uBACAxxB,KAAAqxB,6BAAA,EAAArxB,KAAAwwB,OAAAxwB,KAAAksB,OAAAjgB,EAAAE,IASAuF,EAAAhR,UAAA+wB,QAAA,WACA,OAAAC,EAAA,EAAAC,aACA3xB,KAAAqxB,6BAAA,EAAArxB,KAAAwwB,OAAAxwB,KAAAksB,SAkBAxa,EAAAhR,UAAAiC,eAAA,SAAAivB,GACA,IAAArG,EASA,YARArrB,IAAA0xB,GACArG,EAAAvrB,KAAAqxB,6BAAA7rB,QACAqsB,EAAA,EAAAC,mBACAvG,EAAA,EAAAvrB,KAAAwwB,OAAAxwB,KAAAksB,OAAA0F,IAEArG,EAAAvrB,KAAAurB,gBAGAwG,EAAA,EAAAC,cACAzG,EAAA,EAAAvrB,KAAAwwB,OAAAxwB,KAAAksB,SAOAxa,EAAAhR,UAAAuxB,SAAA,WACA,OAAAjyB,KAAAwwB,QAOA9e,EAAAhR,UAAAwxB,sBAAA,WACA,GAAAlyB,KAAAywB,6BAAAzwB,KAAAiN,cAAA,CACA,IAAAklB,EAAAC,EAAA,EAAAT,aACA3xB,KAAAurB,gBAAA,EAAAvrB,KAAAwwB,OAAAxwB,KAAAksB,QACAlsB,KAAA0wB,oBAAA2B,EAAA,EAAAV,aACA3xB,KAAAqxB,6BAAA,EAAArxB,KAAAwwB,OAAAxwB,KAAAksB,OACAiG,GACAnyB,KAAAywB,4BAAAzwB,KAAAiN,cAEA,OAAAjN,KAAA0wB,qBAUAhf,EAAAhR,UAAA4xB,kBAAA,WACA,IAAAC,EAAA,IAAAC,EAAA,cAGA,OAFAD,EAAA3G,mBAAAgB,EAAA,QAAA6B,IACAzuB,KAAAkyB,wBAAA1sB,SACA+sB,GAOA7gB,EAAAhR,UAAA2wB,2BAAA,WACA,GAAArxB,KAAA2wB,mBAAA3wB,KAAAiN,cAAA,CACA,IAAAse,EAAAvrB,KAAAurB,gBACAsG,EAAA,EAAAY,wBACAlH,EAAA,EAAAvrB,KAAAwwB,OAAAxwB,KAAAksB,QACAlsB,KAAA4wB,yBAAArF,GAEAvrB,KAAA4wB,yBAAArF,EAAA/lB,QACAxF,KAAA4wB,yBAAA/pB,OACAgrB,EAAA,EAAAC,mBACA9xB,KAAA4wB,yBAAA,EAAA5wB,KAAAwwB,OAAAxwB,KAAAksB,SAEAlsB,KAAA2wB,kBAAA3wB,KAAAiN,cAEA,OAAAjN,KAAA4wB,0BAOAlf,EAAAhR,UAAAkvB,8BAAA,SAAAC,GACA,IAAAC,KACA4C,KACA5C,EAAAjpB,OAAAypB,EAAA,EAAAqC,WACA3yB,KAAAurB,gBAAA,EAAAvrB,KAAAwwB,OAAAxwB,KAAAksB,OACAnpB,KAAAE,KAAA4sB,GACAC,EAAA,EAAA4C,GACA,IAAAE,EAAA,IAAAlhB,EAAA,MAGA,OAFAkhB,EAAAhH,mBACAgB,EAAA,QAAAC,GAAAiD,EAAA4C,GACAE,GAUAlhB,EAAAhR,UAAAmyB,WAAA,SAAAne,GACA,GAAAA,EAAA,GAAA1U,KAAAwwB,OAAA3pB,QAAA6N,EACA,YAEA,IAAA6a,EACA,OAAA7a,EACA6a,EAAA,MACG,CACH,IAAAuD,EAAA9yB,KAAAwwB,OAAA9b,EAAA,GACA6a,EAAAuD,IAAAjsB,OAAA,GAEA,IAGAoN,EAAAM,EAHA8a,EAAArvB,KAAAwwB,OAAA9b,GAAAlP,QACAgqB,EAAAH,IAAAxoB,OAAA,GACA,OAAA0oB,EAEA,IAAAtb,EAAA,EAAAM,EAAA8a,EAAAxoB,OAAiCoN,EAAAM,IAAQN,EACzCob,EAAApb,IAAAsb,EAGA,IAAAuB,EAAA,IAAAiC,EAAA,cAGA,OAFAjC,EAAAlF,mBACA5rB,KAAA6rB,OAAA7rB,KAAAurB,gBAAA/lB,MAAA+pB,EAAAC,GAAAH,GACAyB,GASApf,EAAAhR,UAAAsyB,YAAA,WACA,IAKA/e,EAAAM,EAAAI,EAAAC,EALAiX,EAAA7rB,KAAA6rB,OACAN,EAAAvrB,KAAAurB,gBACA0H,EAAAjzB,KAAAwwB,OACAvb,KACAsa,EAAA,EAEA,IAAAtb,EAAA,EAAAM,EAAA0e,EAAApsB,OAAgCoN,EAAAM,IAAQN,EAAA,CACxC,IAAAob,EAAA4D,EAAAhf,GAAAzO,QACAgqB,EAAAH,IAAAxoB,OAAA,GACA,OAAA0oB,EACA,IAAA5a,EAAA,EAAAC,EAAAya,EAAAxoB,OAAmC8N,EAAAC,IAAQD,EAC3C0a,EAAA1a,IAAA4a,EAGA,IAAAuB,EAAA,IAAAiC,EAAA,cACAjC,EAAAlF,mBACAC,EAAAN,EAAA/lB,MAAA+pB,EAAAC,GAAAH,GACApa,EAAAlP,KAAA+qB,GACAvB,EAAAC,EAEA,OAAAva,GAQAvD,EAAAhR,UAAA0S,QAAA,WACA,OAAAoZ,EAAA,QAAAlV,eAQA5F,EAAAhR,UAAA+rB,iBAAA,SAAA/kB,GACA,OAAAwrB,EAAA,EAAAvB,aACA3xB,KAAAqxB,6BAAA,EAAArxB,KAAAwwB,OAAAxwB,KAAAksB,OAAAxkB,IAWAgK,EAAAhR,UAAAmF,eAAA,SAAAP,EAAA4lB,GACA,GAAA5lB,EAEG,CACHtF,KAAA0sB,UAAAxB,EAAA5lB,EAAA,GACAtF,KAAAurB,kBACAvrB,KAAAurB,oBAEA,IAAA0H,EAAAE,EAAA,EAAAnB,cACAhyB,KAAAurB,gBAAA,EAAAjmB,EAAAtF,KAAAksB,OAAAlsB,KAAAwwB,QACA,OAAAyC,EAAApsB,OACA7G,KAAAurB,gBAAA1kB,OAAA,MACK,CACL,IAAAusB,EAAAH,IAAApsB,OAAA,GACA7G,KAAAurB,gBAAA1kB,OAAA,IAAAusB,EAAAvsB,OACA,EAAAusB,IAAAvsB,OAAA,GAEA7G,KAAA8I,eAfA9I,KAAA4rB,mBAAAgB,EAAA,QAAAC,GAAA,KAAA7sB,KAAAwwB,SAyBA9e,EAAAhR,UAAAkrB,mBAAA,SAAAC,EAAAN,EAAA0H,GACAjzB,KAAA8sB,2BAAAjB,EAAAN,GACAvrB,KAAAwwB,OAAAyC,EACAjzB,KAAA8I,WAOA4I,EAAAhR,UAAA2yB,YAAA,SAAApe,GACA,IAGAhB,EAAAM,EAAA8a,EAHAxD,EAAA7rB,KAAAqwB,YACA9E,KACA0H,KAEA,IAAAhf,EAAA,EAAAM,EAAAU,EAAApO,OAAmCoN,EAAAM,IAAQN,EAAA,CAC3C,IAAA6c,EAAA7b,EAAAhB,GACA,IAAAA,IACA4X,EAAAiF,EAAAT,aAEA,IAEA1b,EAAAC,EAFA2a,EAAAhE,EAAA1kB,OAGA,IAAA8N,EAAA,EAAAC,GAFAya,EAAAyB,EAAA7B,WAEApoB,OAAiC8N,EAAAC,IAAQD,EACzC0a,EAAA1a,IAAA4a,EAEA9mB,OAAA+iB,EAAA,OAAA/iB,CAAA8iB,EAAAuF,EAAArF,sBACAwH,EAAAltB,KAAAspB,GAEArvB,KAAA4rB,mBAAAC,EAAAN,EAAA0H,IAEA/zB,EAAA,4ICraAo0B,EAAAt0B,EAAA,GAoBA8S,EAAA,SAAAyhB,GAEAC,EAAA,EAAAzzB,KAAAC,MAMAA,KAAAyzB,YAAAF,GAAA,KAEAvzB,KAAA0zB,2BAGAjrB,OAAA2iB,EAAA,SAAA3iB,CAAAqJ,EAAA0hB,EAAA,GAQA1hB,EAAA6hB,iBAAA,SAAAjtB,GACA,IACAuN,EAAAM,EADAqf,KAEA,IAAA3f,EAAA,EAAAM,EAAA7N,EAAAG,OAAqCoN,EAAAM,IAAQN,EAC7C2f,EAAA7tB,KAAAW,EAAAuN,GAAAyX,SAEA,OAAAkI,GAOA9hB,EAAApR,UAAAmzB,0BAAA,WACA,IAAA5f,EAAAM,EACA,GAAAvU,KAAAyzB,YAGA,IAAAxf,EAAA,EAAAM,EAAAvU,KAAAyzB,YAAA5sB,OAA2CoN,EAAAM,IAAQN,EACnD6f,EAAA,QAAAjgB,SACA7T,KAAAyzB,YAAAxf,GAAA8f,EAAA,EAAAzmB,OACAtN,KAAA8I,QAAA9I,OAQA8R,EAAApR,UAAAgzB,wBAAA,WACA,IAAAzf,EAAAM,EACA,GAAAvU,KAAAyzB,YAGA,IAAAxf,EAAA,EAAAM,EAAAvU,KAAAyzB,YAAA5sB,OAA2CoN,EAAAM,IAAQN,EACnD6f,EAAA,QAAAtvB,OACAxE,KAAAyzB,YAAAxf,GAAA8f,EAAA,EAAAzmB,OACAtN,KAAA8I,QAAA9I,OAWA8R,EAAApR,UAAAgrB,MAAA,WACA,IAAAsI,EAAA,IAAAliB,EAAA,MAEA,OADAkiB,EAAAC,cAAAj0B,KAAAyzB,aACAO,GAOAliB,EAAApR,UAAAorB,eAAA,SAAA7f,EAAAE,EAAA4f,EAAAC,GACA,GAAAA,EAAAvjB,OAAAyT,EAAA,yBAAAzT,CAAAzI,KAAAoN,YAAAnB,EAAAE,GACA,OAAA6f,EAEA,IACA/X,EAAAM,EADA7N,EAAA1G,KAAAyzB,YAEA,IAAAxf,EAAA,EAAAM,EAAA7N,EAAAG,OAAqCoN,EAAAM,IAAQN,EAC7C+X,EAAAtlB,EAAAuN,GAAA6X,eACA7f,EAAAE,EAAA4f,EAAAC,GAEA,OAAAA,GAOAla,EAAApR,UAAA4wB,WAAA,SAAArlB,EAAAE,GACA,IACA8H,EAAAM,EADA7N,EAAA1G,KAAAyzB,YAEA,IAAAxf,EAAA,EAAAM,EAAA7N,EAAAG,OAAqCoN,EAAAM,IAAQN,EAC7C,GAAAvN,EAAAuN,GAAAqd,WAAArlB,EAAAE,GACA,SAGA,UAOA2F,EAAApR,UAAAwzB,cAAA,SAAAxsB,GACAe,OAAAyT,EAAA,oBAAAzT,CAAAf,GAEA,IADA,IAAAhB,EAAA1G,KAAAyzB,YACAxf,EAAA,EAAAM,EAAA7N,EAAAG,OAAyCoN,EAAAM,IAAQN,EACjDxL,OAAAyT,EAAA,OAAAzT,CAAAf,EAAAhB,EAAAuN,GAAA7G,aAEA,OAAA1F,GASAoK,EAAApR,UAAAa,cAAA,WACA,OAAAuQ,EAAA6hB,iBAAA3zB,KAAAyzB,cAOA3hB,EAAApR,UAAAiG,mBAAA,WACA,OAAA3G,KAAAyzB,aAOA3hB,EAAApR,UAAAyzB,sBAAA,SAAAtE,GAMA,GALA7vB,KAAAo0B,4BAAAp0B,KAAAiN,gBACAqmB,EAAA,QAAArtB,MAAAjG,KAAAq0B,yBACAr0B,KAAAs0B,yCAAA,EACAt0B,KAAAo0B,2BAAAp0B,KAAAiN,eAEA4iB,EAAA,GACA,IAAA7vB,KAAAs0B,0CACAzE,EAAA7vB,KAAAs0B,yCACA,OAAAt0B,KAEA,IAAAie,EAAA4R,EAAAzP,WACA,GAAApgB,KAAAq0B,wBAAAE,eAAAtW,GACA,OAAAje,KAAAq0B,wBAAApW,GAEA,IAGAhK,EAAAM,EAHAigB,KACA9tB,EAAA1G,KAAAyzB,YACAgB,GAAA,EAEA,IAAAxgB,EAAA,EAAAM,EAAA7N,EAAAG,OAAuCoN,EAAAM,IAAQN,EAAA,CAC/C,IAAA3N,EAAAI,EAAAuN,GACAygB,EAAApuB,EAAA6tB,sBAAAtE,GACA2E,EAAAzuB,KAAA2uB,GACAA,IAAApuB,IACAmuB,GAAA,GAGA,GAAAA,EAAA,CACA,IAAAE,EAAA,IAAA7iB,EAAA,MAGA,OAFA6iB,EAAAC,mBAAAJ,GACAx0B,KAAAq0B,wBAAApW,GAAA0W,EACAA,EAGA,OADA30B,KAAAs0B,yCAAAzE,EACA7vB,MAUA8R,EAAApR,UAAA0S,QAAA,WACA,OAAAyhB,EAAA,QAAAC,qBAQAhjB,EAAApR,UAAA+rB,iBAAA,SAAA/kB,GACA,IACAuM,EAAAM,EADA7N,EAAA1G,KAAAyzB,YAEA,IAAAxf,EAAA,EAAAM,EAAA7N,EAAAG,OAAqCoN,EAAAM,IAAQN,EAC7C,GAAAvN,EAAAuN,GAAAwY,iBAAA/kB,GACA,SAGA,UAOAoK,EAAApR,UAAA6f,QAAA,WACA,WAAAvgB,KAAAyzB,YAAA5sB,QAQAiL,EAAApR,UAAAq0B,OAAA,SAAAC,EAAAC,GAEA,IADA,IAAAvuB,EAAA1G,KAAAyzB,YACAxf,EAAA,EAAAM,EAAA7N,EAAAG,OAAyCoN,EAAAM,IAAQN,EACjDvN,EAAAuN,GAAA8gB,OAAAC,EAAAC,GAEAj1B,KAAA8I,WAQAgJ,EAAApR,UAAAyd,MAAA,SAAA+W,EAAAC,EAAAC,GACA,IAAAH,EAAAG,EACAH,IACAA,EAAAxsB,OAAAyT,EAAA,UAAAzT,CAAAzI,KAAAoN,cAGA,IADA,IAAA1G,EAAA1G,KAAAyzB,YACAxf,EAAA,EAAAM,EAAA7N,EAAAG,OAAyCoN,EAAAM,IAAQN,EACjDvN,EAAAuN,GAAAkK,MAAA+W,EAAAC,EAAAF,GAEAj1B,KAAA8I,WASAgJ,EAAApR,UAAAuzB,cAAA,SAAAvtB,GACA1G,KAAA40B,mBACA9iB,EAAA6hB,iBAAAjtB,KAOAoL,EAAApR,UAAAk0B,mBAAA,SAAAluB,GACA1G,KAAA6zB,4BACA7zB,KAAAyzB,YAAA/sB,EACA1G,KAAA0zB,0BACA1zB,KAAA8I,WAQAgJ,EAAApR,UAAA20B,eAAA,SAAAC,GACA,IACArhB,EAAAM,EADA7N,EAAA1G,KAAAyzB,YAEA,IAAAxf,EAAA,EAAAM,EAAA7N,EAAAG,OAAqCoN,EAAAM,IAAQN,EAC7CvN,EAAAuN,GAAAohB,eAAAC,GAEAt1B,KAAA8I,WAWAgJ,EAAApR,UAAA60B,UAAA,SAAAC,EAAAC,GACA,IACAxhB,EAAAM,EADA7N,EAAA1G,KAAAyzB,YAEA,IAAAxf,EAAA,EAAAM,EAAA7N,EAAAG,OAAqCoN,EAAAM,IAAQN,EAC7CvN,EAAAuN,GAAAshB,UAAAC,EAAAC,GAEAz1B,KAAA8I,WAOAgJ,EAAApR,UAAAg1B,gBAAA,WACA11B,KAAA6zB,4BACAL,EAAA,EAAA9yB,UAAAg1B,gBAAA31B,KAAAC,OAEAd,EAAA,6OC9TAy2B,EAMA,YANAA,EAYA,mDCmBAC,EAAA,SAAAh2B,GAEAmP,EAAA,QAAAhP,KAAAC,MACAoD,gBAAAwyB,EAAAvyB,iBACAC,YAAAsyB,EAAAtyB,YACAE,cAAAoyB,EAAAnyB,iBAOAzD,KAAA61B,eAAA,EAMA71B,KAAA0D,QAAA,KAMA1D,KAAA81B,WAAA,EAOA91B,KAAA2D,QAAA/D,EAAAiB,OAAAjB,EAAAiB,OAAA,KAOAb,KAAAwS,UAAA5S,EAAAkP,SAAAlP,EAAAkP,SAAA,KAOA9O,KAAA+1B,eAAAn2B,EAAAo2B,cAAAp2B,EAAAo2B,cAAA,GAOAh2B,KAAAi2B,MAA+Cr2B,EAAA,KAO/CI,KAAAk2B,MAAAN,EAAAO,SAAAn2B,KAAAi2B,OAQAj2B,KAAAo2B,aAAAx2B,EAAAy2B,UASAr2B,KAAAs2B,WAAA12B,EAAA22B,UACA32B,EAAA22B,UACAv2B,KAAAk2B,QAAAN,EAAAY,MAAAnf,QAAA,IAQArX,KAAAy2B,WAAA72B,EAAA82B,UAAA92B,EAAA82B,UAAAC,IAOA32B,KAAA42B,iBAAAh3B,EAAAi3B,gBAAAj3B,EAAAi3B,gBAAAC,EAAA,KAEA,IAAAC,EAAAn3B,EAAAm3B,iBACA,IAAAA,EACA,GAAA/2B,KAAAi2B,QAAAzf,EAAA,QAAAC,OAOAsgB,EAAA,SAAAzxB,EAAA0xB,GACA,IAAA5wB,EAAA4wB,GACA,IAAAplB,EAAA,SAAAqlB,UACAC,EAAAC,EAAA,QAAAre,gBACAxT,EAAA,GAAAA,EAAA,IAEA,OADAc,EAAAgxB,mBAAA9xB,EAAA,GAAAvC,KAAAE,KAAAi0B,IACA9wB,OAEK,CACL,IAAAixB,EACAC,EAAAt3B,KAAAk2B,MACAoB,IAAA1B,EAAAY,MAAArf,MACAkgB,EAAAtmB,EAAA,QACOumB,IAAA1B,EAAAY,MAAA3f,YACPwgB,EAAApmB,EAAA,QACOqmB,IAAA1B,EAAAY,MAAAnf,UACPggB,EAAAjmB,EAAA,SAQA2lB,EAAA,SAAAzxB,EAAA0xB,GACA,IAAA1wB,EAAA0wB,EAeA,OAdA1wB,EACAgxB,IAAA1B,EAAAY,MAAAnf,QACA/R,EAAA,GAAAuB,OAEAP,EAAAT,gBAAAP,EAAA,GAAAiyB,QAAAjyB,EAAA,UAEAgB,EAAAT,mBAGAS,EAAAT,eAAAP,GAGAgB,EAAA,IAAA+wB,EAAA/xB,GAEAgB,GASAtG,KAAAw3B,kBAAAT,EAQA/2B,KAAAy3B,kBAAA,KAOAz3B,KAAA6D,eAAA,KAOA7D,KAAA8D,aAAA,KAOA9D,KAAA03B,cAAA,KAOA13B,KAAA23B,YAAA,KAOA33B,KAAA43B,kBAAA,KASA53B,KAAA+D,uBAAAnE,EAAAi4B,eACAj4B,EAAAi4B,eAAAj4B,EAAAi4B,eAAA,GAOA73B,KAAAyQ,SAAA,IAAAC,EAAA,SACA7P,OAAA,IAAA8P,EAAA,SACAxM,iBAAA,EACAC,QAAAxE,EAAAwE,OAAAxE,EAAAwE,QAEAxD,MAAAhB,EAAAgB,MAAAhB,EAAAgB,MACAg1B,EAAAtxB,4BAQAtE,KAAA83B,cAAAl4B,EAAAm4B,aAMA/3B,KAAAkP,WAAAtP,EAAAuP,UACAvP,EAAAuP,YAAA,QAAA6oB,eAMAh4B,KAAAi4B,mBACAr4B,EAAAs4B,SACAl4B,KAAAi4B,mBAAA9oB,EAAA,QAAAS,OAEA5P,KAAAi4B,mBAAAr4B,EAAAu4B,kBACAv4B,EAAAu4B,kBAAAhpB,EAAA,QAAAipB,aAGA/uB,EAAA,QAAA7E,OAAAxE,KACAq4B,EAAA,EAAAC,mBAAAC,EAAA,EAAAC,QACAx4B,KAAAyE,aAAAzE,OAIAyI,OAAAjI,EAAA,SAAAiI,CAAAmtB,EAAA7mB,EAAA,SAMA6mB,EAAAtxB,wBAAA,WACA,IAAAm0B,EAAA7d,EAAA,QAAAC,uBACA,gBAAA1H,EAAAxL,GACA,OAAA8wB,EAAAtlB,EAAA/R,cAAAgS,aAQAwiB,EAAAl1B,UAAA6G,OAAA,SAAAH,GACA2H,EAAA,QAAArO,UAAA6G,OAAAxH,KAAAC,KAAAoH,GACApH,KAAAyE,gBAYAmxB,EAAAtyB,YAAA,SAAAoB,GACA1E,KAAA81B,UAAA91B,KAAAk2B,QAAAN,EAAAY,MAAArf,OAAAnX,KAAAi4B,mBAAAvzB,GACA,IAAAI,GAAA,EAcA,OAbA9E,KAAA81B,WACApxB,EAAAS,OAAA0S,EAAA,EAAAiC,aACA,OAAA9Z,KAAA6D,gBACA7D,KAAA04B,cAAAh0B,GACAI,GAAA,GACG9E,KAAA81B,WACHpxB,EAAAS,OAAA0S,EAAA,EAAA8gB,YACA7zB,GAAA,EACGJ,EAAAS,OAAA0S,EAAA,EAAAC,YACHhT,EAAA9E,KAAA+E,mBAAAL,GACGA,EAAAS,OAAA0S,EAAA,EAAA+gB,WACH9zB,GAAA,GAEAiK,EAAA,QAAAzL,YAAAvD,KAAAC,KAAA0E,IAAAI,GAUA8wB,EAAAvyB,iBAAA,SAAAqB,GAGA,OAFA1E,KAAA61B,eAAA71B,KAAA81B,UAEA91B,KAAA81B,WACA91B,KAAA0D,QAAAgB,EAAAC,MACA3E,KAAAy3B,mBACAz3B,KAAAiF,cAAAP,IAEA,KACG1E,KAAAkP,WAAAxK,KACH1E,KAAA0D,QAAAgB,EAAAC,OACA,IAaAixB,EAAAnyB,eAAA,SAAAiB,GACA,IAAAI,GAAA,EAEA9E,KAAA+E,mBAAAL,GAEA,IAAAm0B,EAAA74B,KAAAk2B,QAAAN,EAAAY,MAAA/f,OAyBA,OAvBAzW,KAAA61B,eACA71B,KAAAy3B,kBAKKz3B,KAAA81B,WAAA+C,EACL74B,KAAA84B,gBACK94B,KAAA+4B,UAAAr0B,GACL1E,KAAA42B,iBAAAlyB,IACA1E,KAAA84B,gBAGA94B,KAAA04B,cAAAh0B,IAXA1E,KAAAiF,cAAAP,GACA1E,KAAAk2B,QAAAN,EAAAY,MAAArf,OACAnX,KAAA84B,iBAWAh0B,GAAA,GACG9E,KAAA81B,YACH91B,KAAAy3B,kBAAA,KACAz3B,KAAAgH,kBAEAlC,GAAA9E,KAAAo2B,YACA1xB,EAAAs0B,kBAEAl0B,GAUA8wB,EAAAl1B,UAAAqE,mBAAA,SAAAL,GACA,GAAA1E,KAAA0D,WACA1D,KAAA81B,WAAA91B,KAAA61B,eACA71B,KAAA81B,YAAA91B,KAAA61B,eAAA,CACA,IAAAjxB,EAAA5E,KAAA0D,QACAmB,EAAAH,EAAAC,MACA/B,EAAAgC,EAAA,GAAAC,EAAA,GACAhC,EAAA+B,EAAA,GAAAC,EAAA,GACAiU,EAAAlW,IAAAC,IACA7C,KAAA61B,cAAA71B,KAAA81B,UACAhd,EAAA9Y,KAAA+D,uBACA+U,GAAA9Y,KAAA+D,uBAQA,OALA/D,KAAAy3B,kBACAz3B,KAAAoF,eAAAV,GAEA1E,KAAAqF,2BAAAX,IAEA,GAUAkxB,EAAAl1B,UAAAq4B,UAAA,SAAAr0B,GACA,IAAAu0B,GAAA,EACA,GAAAj5B,KAAA6D,eAAA,CACA,IAAAq1B,GAAA,EACAC,GAAAn5B,KAAAy3B,mBASA,GARAz3B,KAAAk2B,QAAAN,EAAAY,MAAA3f,YACAqiB,EAAAl5B,KAAA03B,cAAA7wB,OAAA7G,KAAAs2B,WACKt2B,KAAAk2B,QAAAN,EAAAY,MAAAnf,UACL6hB,EAAAl5B,KAAA03B,cAAA,GAAA7wB,OACA7G,KAAAs2B,WACA6C,GAAAn5B,KAAA03B,cAAA,MACA13B,KAAA03B,cAAA,GAAA13B,KAAA03B,cAAA,GAAA7wB,OAAA,KAEAqyB,EAEA,IADA,IAAA9xB,EAAA1C,EAAA0C,IACA6M,EAAA,EAAAM,EAAA4kB,EAAAtyB,OAA+DoN,EAAAM,EAAQN,IAAA,CACvE,IAAAmlB,EAAAD,EAAAllB,GACAolB,EAAAjyB,EAAAoR,uBAAA4gB,GACAz0B,EAAAD,EAAAC,MACA/B,EAAA+B,EAAA,GAAA00B,EAAA,GACAx2B,EAAA8B,EAAA,GAAA00B,EAAA,GACArD,EAAAh2B,KAAA81B,UAAA,EAAA91B,KAAA+1B,eAEA,GADAkD,EAAAl2B,KAAAE,KAAAL,IAAAC,MAAAmzB,EACA,CACAh2B,KAAAy3B,kBAAA2B,EACA,QAKA,OAAAH,GAQArD,EAAAl1B,UAAA2E,2BAAA,SAAAX,GACA,IAAAY,EAAAZ,EAAAa,WAAAC,QACAxF,KAAA8D,aAImD9D,KAAA8D,aAAA1C,cACnDyE,eAAAP,IAJAtF,KAAA8D,aAAA,IAAA0R,EAAA,YAAAzE,EAAA,QAAAzL,IACAtF,KAAA2F,0BAaAiwB,EAAAl1B,UAAAuE,cAAA,SAAAP,GACA,IAAAyB,EAAAzB,EAAAa,WACAvF,KAAAy3B,kBAAAtxB,EACAnG,KAAAk2B,QAAAN,EAAAY,MAAArf,MACAnX,KAAA03B,cAAAvxB,EAAAX,QACGxF,KAAAk2B,QAAAN,EAAAY,MAAAnf,SACHrX,KAAA03B,gBAAAvxB,EAAAX,QAAAW,EAAAX,UACAxF,KAAA43B,kBAAA53B,KAAA03B,cAAA,KAEA13B,KAAA03B,eAAAvxB,EAAAX,QAAAW,EAAAX,SACAxF,KAAAk2B,QAAAN,EAAAY,MAAA/f,SACAzW,KAAA43B,kBAAA53B,KAAA03B,gBAGA13B,KAAA43B,oBACA53B,KAAA23B,YAAA,IAAAniB,EAAA,QACA,IAAAvE,EAAA,QAAAjR,KAAA43B,qBAEA,IAAAtxB,EAAAtG,KAAAw3B,kBAAAx3B,KAAA03B,eACA13B,KAAA6D,eAAA,IAAA2R,EAAA,QACAxV,KAAA83B,eACA93B,KAAA6D,eAAAy1B,gBAAAt5B,KAAA83B,eAEA93B,KAAA6D,eAAA0C,YAAAD,GACAtG,KAAA2F,wBACA3F,KAAAwG,cAAA,IAAAovB,EAAAnvB,MAAAkvB,EAAA31B,KAAA6D,kBASA+xB,EAAAl1B,UAAA0E,eAAA,SAAAV,GACA,IAEAY,EAAAsB,EAFArB,EAAAb,EAAAa,WACAe,EAAmDtG,KAAA6D,eAAAzC,eAEnDpB,KAAAk2B,QAAAN,EAAAY,MAAArf,MACAvQ,EAAA5G,KAAA03B,cACG13B,KAAAk2B,QAAAN,EAAAY,MAAAnf,SAEHzQ,GADAtB,EAAAtF,KAAA03B,cAAA,IACApyB,EAAAuB,OAAA,GACA7G,KAAA+4B,UAAAr0B,KAEAa,EAAAvF,KAAAy3B,kBAAAjyB,UAIAoB,GADAtB,EAAAtF,KAAA03B,eACApyB,EAAAuB,OAAA,GAEAD,EAAA,GAAArB,EAAA,GACAqB,EAAA,GAAArB,EAAA,GACAvF,KAAAw3B,kBAA2Dx3B,KAAA,cAAAsG,GAC3DtG,KAAA8D,eACmD9D,KAAA8D,aAAA1C,cACnDyE,eAAAN,GAGA,GAAAe,aAAA8K,EAAA,SACApR,KAAAk2B,QAAAN,EAAAY,MAAAnf,QAAA,CACArX,KAAA23B,cACA33B,KAAA23B,YAAA,IAAAniB,EAAA,YAAAvE,EAAA,gBAEA,IAAAsoB,EAAAjzB,EAAAkzB,cAAA,GACmDx5B,KAAA23B,YAAAv2B,cACnDwqB,mBACA2N,EAAAlJ,YAAAkJ,EAAA9N,2BACGzrB,KAAA43B,mBACgD53B,KAAA23B,YAAAv2B,cACnDyE,eAAA7F,KAAA43B,mBAEA53B,KAAA2F,yBASAiwB,EAAAl1B,UAAAg4B,cAAA,SAAAh0B,GACA,IAEA+0B,EACAn0B,EAHAC,EAAAb,EAAAa,WACAe,EAAmDtG,KAAA6D,eAAAzC,cAGnDpB,KAAAk2B,QAAAN,EAAAY,MAAA3f,aACA7W,KAAAy3B,kBAAAlyB,EAAAC,SACAF,EAAAtF,KAAA03B,eACA7wB,QAAA7G,KAAAy2B,aACAz2B,KAAA81B,UACAxwB,EAAAiV,MAEAkf,GAAA,GAGAn0B,EAAAS,KAAAR,EAAAC,SACAxF,KAAAw3B,kBAAAlyB,EAAAgB,IACGtG,KAAAk2B,QAAAN,EAAAY,MAAAnf,WACH/R,EAAAtF,KAAA03B,cAAA,IACA7wB,QAAA7G,KAAAy2B,aACAz2B,KAAA81B,UACAxwB,EAAAiV,MAEAkf,GAAA,GAGAn0B,EAAAS,KAAAR,EAAAC,SACAi0B,IACAz5B,KAAAy3B,kBAAAnyB,EAAA,IAEAtF,KAAAw3B,kBAAAx3B,KAAA03B,cAAApxB,IAEAtG,KAAA2F,wBACA8zB,GACAz5B,KAAA84B,iBASAlD,EAAAl1B,UAAAg5B,gBAAA,WACA,GAAA15B,KAAA6D,eAAA,CAGA,IACAyB,EADAgB,EAAmDtG,KAAA6D,eAAAzC,cAEnDpB,KAAAk2B,QAAAN,EAAAY,MAAA3f,cACAvR,EAAAtF,KAAA03B,eACAje,QAAA,KACAzZ,KAAAw3B,kBAAAlyB,EAAAgB,GACAhB,EAAAuB,QAAA,IACA7G,KAAAy3B,kBAAAnyB,IAAAuB,OAAA,GAAArB,UAEGxF,KAAAk2B,QAAAN,EAAAY,MAAAnf,WACH/R,EAAAtF,KAAA03B,cAAA,IACAje,QAAA,KACmDzZ,KAAA23B,YAAAv2B,cACnDyE,eAAAP,GACAtF,KAAAw3B,kBAAAx3B,KAAA03B,cAAApxB,IAGA,IAAAhB,EAAAuB,SACA7G,KAAAy3B,kBAAA,MAGAz3B,KAAA2F,0BAUAiwB,EAAAl1B,UAAAo4B,cAAA,WACA,IAAA33B,EAAAnB,KAAAgH,gBACA1B,EAAAtF,KAAA03B,cACApxB,EAAmDnF,EAAAC,cACnDpB,KAAAk2B,QAAAN,EAAAY,MAAA3f,aAEAvR,EAAAiV,MACAva,KAAAw3B,kBAAAlyB,EAAAgB,IACGtG,KAAAk2B,QAAAN,EAAAY,MAAAnf,UAEH/R,EAAA,GAAAiV,MACAva,KAAAw3B,kBAAAlyB,EAAAgB,GACAhB,EAAAgB,EAAA3D,kBAIA3C,KAAAi2B,QAAAzf,EAAA,QAAAY,YACAjW,EAAAoF,YAAA,IAAA+K,EAAA,SAAAhM,KACGtF,KAAAi2B,QAAAzf,EAAA,QAAAM,kBACH3V,EAAAoF,YAAA,IAAAiL,EAAA,SAAAlM,KACGtF,KAAAi2B,QAAAzf,EAAA,QAAAc,eACHnW,EAAAoF,YAAA,IAAAmL,EAAA,SAAApM,KAIAtF,KAAAwG,cAAA,IAAAovB,EAAAnvB,MAAAkvB,EAAAx0B,IAGAnB,KAAAwS,WACAxS,KAAAwS,UAAAzM,KAAA5E,GAEAnB,KAAA2D,SACA3D,KAAA2D,QAAA6D,WAAArG,IAUAy0B,EAAAl1B,UAAAsG,cAAA,WACAhH,KAAAy3B,kBAAA,KACA,IAAAt2B,EAAAnB,KAAA6D,eAOA,OANA1C,IACAnB,KAAA6D,eAAA,KACA7D,KAAA8D,aAAA,KACA9D,KAAA23B,YAAA,KACA33B,KAAAyQ,SAAAzK,YAAAC,OAAA,IAEA9E,GAWAy0B,EAAAl1B,UAAAi5B,OAAA,SAAAxmB,GACA,IACA6a,EADA7a,EAAA/R,cAEApB,KAAA6D,eAAAsP,EACAnT,KAAA03B,cAAA1J,EAAArrB,iBACA,IAAAiE,EAAA5G,KAAA03B,cAAA13B,KAAA03B,cAAA7wB,OAAA,GACA7G,KAAAy3B,kBAAA7wB,EAAApB,QACAxF,KAAA03B,cAAA3xB,KAAAa,EAAApB,SACAxF,KAAA2F,wBACA3F,KAAAwG,cAAA,IAAAovB,EAAAnvB,MAAAkvB,EAAA31B,KAAA6D,kBAOA+xB,EAAAl1B,UAAAuG,gBAAA6vB,EAAA,MAOAlB,EAAAl1B,UAAAiF,sBAAA,WACA,IAAAG,KACA9F,KAAA6D,gBACAiC,EAAAC,KAAA/F,KAAA6D,gBAEA7D,KAAA23B,aACA7xB,EAAAC,KAAA/F,KAAA23B,aAEA33B,KAAA8D,cACAgC,EAAAC,KAAA/F,KAAA8D,cAEA,IAAA81B,EAAA55B,KAAAyQ,SAAAzK,YACA4zB,EAAA3zB,OAAA,GACA2zB,EAAA1zB,YAAAJ,IAOA8vB,EAAAl1B,UAAA+D,aAAA,WACA,IAAA2C,EAAApH,KAAA0B,SACA2F,EAAArH,KAAAsH,YACAF,GAAAC,GACArH,KAAAgH,gBAEAhH,KAAAyQ,SAAAlJ,OAAAF,EAAAD,EAAA,OAiBAwuB,EAAAiE,qBAAA,SAAAC,EAAAC,GACA,gBAMAz0B,EAAA0xB,GACA,IAAAvqB,EAAAnH,EAAA,GACAkqB,EAAAlqB,EAAA,GACA00B,EAAAj3B,KAAAE,KACAk0B,EAAA,QAAAre,gBAAArM,EAAA+iB,IACAlpB,EAAA0wB,GACAvuB,OAAA2I,EAAA,WAAA3I,CAAA,IAAAmJ,EAAA,QAAAnF,GAAAqtB,GACA9E,EAAA+E,GACAh3B,KAAAk3B,MAAAzK,EAAA,GAAA/iB,EAAA,KAAA+iB,EAAA,GAAA/iB,EAAA,KAEA,OADAhE,OAAA2I,EAAA,YAAA3I,CAAAnC,EAAAmG,EAAAutB,EAAAhF,GACA1uB,IAaAsvB,EAAAsE,UAAA,WACA,gBAMA50B,EAAA0xB,GACA,IAAAtvB,EAAAe,OAAAO,EAAA,eAAAP,CAAAnD,GACAgB,EAAA0wB,GAAA,IAAA5lB,EAAA,cAQA,OAPA9K,EAAAT,iBACA4C,OAAAO,EAAA,cAAAP,CAAAf,GACAe,OAAAO,EAAA,eAAAP,CAAAf,GACAe,OAAAO,EAAA,YAAAP,CAAAf,GACAe,OAAAO,EAAA,WAAAP,CAAAf,GACAe,OAAAO,EAAA,cAAAP,CAAAf,MAEApB,IAaAsvB,EAAAO,SAAA,SAAAhxB,GACA,IAAAmyB,EAaA,OAZAnyB,IAAAqR,EAAA,QAAAW,OACAhS,IAAAqR,EAAA,QAAAY,YACAkgB,EAAA1B,EAAAY,MAAArf,MACGhS,IAAAqR,EAAA,QAAAK,aACH1R,IAAAqR,EAAA,QAAAM,kBACAwgB,EAAA1B,EAAAY,MAAA3f,YACG1R,IAAAqR,EAAA,QAAAa,SACHlS,IAAAqR,EAAA,QAAAc,cACAggB,EAAA1B,EAAAY,MAAAnf,QACGlS,IAAAqR,EAAA,QAAAC,SACH6gB,EAAA1B,EAAAY,MAAA/f,QAE+C,GAU/Cmf,EAAAY,OACArf,MAAA,QACAN,YAAA,aACAQ,QAAA,UACAZ,OAAA,UAcAmf,EAAAnvB,MAAA,SAAAtB,EAAAgO,GAEA1M,EAAA,QAAA1G,KAAAC,KAAAmF,GAOAnF,KAAAmT,WAGA1K,OAAAjI,EAAA,SAAAiI,CAAAmtB,EAAAnvB,QAAA,SAEAvH,EAAA,sICp4BAi7B,EAAAn7B,EAAA,IAqBA4S,EAAA,SAAAnF,EAAA2tB,EAAAlP,GACAmP,EAAA,EAAAt6B,KAAAC,MACA,IAAAg6B,EAAAI,GAAA,EACAp6B,KAAAo3B,mBAAA3qB,EAAAutB,EAAA9O,IAGAziB,OAAA2iB,EAAA,SAAA3iB,CAAAmJ,EAAAyoB,EAAA,GASAzoB,EAAAlR,UAAAgrB,MAAA,WACA,IAAAtlB,EAAA,IAAAwL,EAAA,MAEA,OADAxL,EAAAwlB,mBAAA5rB,KAAA6rB,OAAA7rB,KAAAurB,gBAAA/lB,SACAY,GAOAwL,EAAAlR,UAAAorB,eAAA,SAAA7f,EAAAE,EAAA4f,EAAAC,GACA,IAAAT,EAAAvrB,KAAAurB,gBACA3oB,EAAAqJ,EAAAsf,EAAA,GACA1oB,EAAAsJ,EAAAof,EAAA,GACAzS,EAAAlW,IAAAC,IACA,GAAAiW,EAAAkT,EAAA,CACA,IAAA/X,EACA,OAAA6E,EACA,IAAA7E,EAAA,EAAiBA,EAAAjU,KAAAksB,SAAiBjY,EAClC8X,EAAA9X,GAAAsX,EAAAtX,OAEK,CACL,IAAAwG,EAAAza,KAAAqZ,YAAAtW,KAAAE,KAAA6V,GAGA,IAFAiT,EAAA,GAAAR,EAAA,GAAA9Q,EAAA7X,EACAmpB,EAAA,GAAAR,EAAA,GAAA9Q,EAAA5X,EACAoR,EAAA,EAAiBA,EAAAjU,KAAAksB,SAAiBjY,EAClC8X,EAAA9X,GAAAsX,EAAAtX,GAIA,OADA8X,EAAAllB,OAAA7G,KAAAksB,OACApT,EAEA,OAAAkT,GAQApa,EAAAlR,UAAA4wB,WAAA,SAAArlB,EAAAE,GACA,IAAAof,EAAAvrB,KAAAurB,gBACA3oB,EAAAqJ,EAAAsf,EAAA,GACA1oB,EAAAsJ,EAAAof,EAAA,GACA,OAAA3oB,IAAAC,KAAA7C,KAAAs6B,qBASA1oB,EAAAlR,UAAAwU,UAAA,WACA,OAAAlV,KAAAurB,gBAAA/lB,MAAA,EAAAxF,KAAAksB,SAOAta,EAAAlR,UAAAwzB,cAAA,SAAAxsB,GACA,IAAA6jB,EAAAvrB,KAAAurB,gBACAyO,EAAAzO,EAAAvrB,KAAAksB,QAAAX,EAAA,GACA,OAAA9iB,OAAA8xB,EAAA,eAAA9xB,CACA8iB,EAAA,GAAAyO,EAAAzO,EAAA,GAAAyO,EACAzO,EAAA,GAAAyO,EAAAzO,EAAA,GAAAyO,EACAtyB,IASAkK,EAAAlR,UAAA2Y,UAAA,WACA,OAAAtW,KAAAE,KAAAjD,KAAAs6B,sBAQA1oB,EAAAlR,UAAA45B,kBAAA,WACA,IAAA13B,EAAA5C,KAAAurB,gBAAAvrB,KAAAksB,QAAAlsB,KAAAurB,gBAAA,GACA1oB,EAAA7C,KAAAurB,gBAAAvrB,KAAAksB,OAAA,GAAAlsB,KAAAurB,gBAAA,GACA,OAAA3oB,IAAAC,KAQA+O,EAAAlR,UAAA0S,QAAA,WACA,OAAAonB,EAAA,QAAA/jB,QAQA7E,EAAAlR,UAAA+rB,iBAAA,SAAA/kB,GACA,IAAA+yB,EAAAz6B,KAAAoN,YACA,GAAA3E,OAAA8xB,EAAA,WAAA9xB,CAAAf,EAAA+yB,GAAA,CACA,IAAAhuB,EAAAzM,KAAAkV,YAEA,OAAAxN,EAAA,IAAA+E,EAAA,IAAA/E,EAAA,IAAA+E,EAAA,KAGA/E,EAAA,IAAA+E,EAAA,IAAA/E,EAAA,IAAA+E,EAAA,IAIAhE,OAAA8xB,EAAA,cAAA9xB,CAAAf,EAAA1H,KAAA06B,qBAAA16B,OAEA,UAUA4R,EAAAlR,UAAA6W,UAAA,SAAA9K,GACA,IAIAwH,EAJAiY,EAAAlsB,KAAAksB,OACA8N,EAAAh6B,KAAAurB,gBAAAW,GAAAlsB,KAAAurB,gBAAA,GACAA,EAAA9e,EAAAjH,QAGA,IAFA+lB,EAAAW,GAAAX,EAAA,GAAAyO,EAEA/lB,EAAA,EAAaA,EAAAiY,IAAYjY,EACzBsX,EAAAW,EAAAjY,GAAAxH,EAAAwH,GAEAjU,KAAA4rB,mBAAA5rB,KAAA6rB,OAAAN,IAYA3Z,EAAAlR,UAAA02B,mBAAA,SAAA3qB,EAAAutB,EAAA9O,GACA,GAAAze,EAEG,CACHzM,KAAA0sB,UAAAxB,EAAAze,EAAA,GACAzM,KAAAurB,kBACAvrB,KAAAurB,oBAGA,IAIAtX,EAAAM,EAJAgX,EAAAvrB,KAAAurB,gBACAgE,EAAA4K,EAAA,EAAA50B,WACAgmB,EAAA,EAAA9e,EAAAzM,KAAAksB,QAGA,IAFAX,EAAAgE,KAAAhE,EAAA,GAAAyO,EAEA/lB,EAAA,EAAAM,EAAAvU,KAAAksB,OAAiCjY,EAAAM,IAAQN,EACzCsX,EAAAgE,KAAAhE,EAAAtX,GAEAsX,EAAA1kB,OAAA0oB,EACAvvB,KAAA8I,eAhBA9I,KAAA4rB,mBAAA+O,EAAA,QAAA9N,GAAA,OAwBAjb,EAAAlR,UAAAiC,eAAA,aAMAiP,EAAAlR,UAAAmF,eAAA,SAAAP,EAAA4lB,KAOAtZ,EAAAlR,UAAAkrB,mBAAA,SAAAC,EAAAN,GACAvrB,KAAA8sB,2BAAAjB,EAAAN,GACAvrB,KAAA8I,WASA8I,EAAAlR,UAAAoG,UAAA,SAAAkzB,GACAh6B,KAAAurB,gBAAAvrB,KAAAksB,QAAAlsB,KAAAurB,gBAAA,GAAAyO,EACAh6B,KAAA8I,WA0BA8I,EAAAlR,UAAAk6B,UACA17B,EAAA,4FCtQA,QAAAF,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,OACAA,EAAA,QACAA,EAAA,WACAA,EAAA,UACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,wDAcAmkB,KAAKmB,YAAYuW,mBAYjB,IAAMr7B,EAAU,SAAVA,EAAmBG,GAEvB,IAAMC,OAA0BM,IAAhBP,EAA4BA,KAE5Cm7B,EAAAh7B,QAAyBC,KAAKC,MAC5BsD,YAAa9D,EAAQ+D,eAQvBvD,KAAK+6B,oBAAsB,KAQ3B/6B,KAAKg7B,oBAAsB,KAQ3Bh7B,KAAKi7B,uBAAyB,KAQ9Bj7B,KAAKk7B,uBAAyB,KAQ9Bl7B,KAAKm7B,4BAA8B,KAQnCn7B,KAAKmB,cAAgB,KAMrBnB,KAAKC,YAAc,KAQnBD,KAAK+B,SAAWnC,EAAQmC,SAQxB/B,KAAKgC,UAAYpC,EAAQoC,UAOzBhC,KAAKo7B,yBAAqDl7B,IAA/BN,EAAQy7B,oBACjCz7B,EAAQy7B,mBAMVr7B,KAAKs7B,cACoBp7B,IAArBN,EAAQ07B,SACVt7B,KAAKs7B,SAAW17B,EAAQ07B,UAExBt7B,KAAKs7B,SAAWn7B,SAASC,cAAc,QACvCJ,KAAKs7B,SAASj7B,YAAe,2BAQ/BL,KAAKu7B,gBAAkB,KAOvBv7B,KAAKw7B,qBAAuB,KAE5B,IAAM56B,OAA0BV,IAAlBN,EAAQgB,MAAsBhB,EAAQgB,OAClD,IAAA+f,EAAA7gB,SACE27B,KAAM,IAAAC,EAAA57B,SACJikB,MAAO,+BAGX,IAAApD,EAAA7gB,SACEokB,OAAQ,IAAAyX,EAAA77B,SACNikB,MAAO,QACP6X,MAAO,MAGX,IAAAjb,EAAA7gB,SACEokB,OAAQ,IAAAyX,EAAA77B,SACNikB,MAAO,UACP6X,MAAO,OAUb57B,KAAK67B,aAAe,IAAA53B,EAAAnE,SAClBe,OAAQ,IAAAqD,EAAApE,QACRc,MAAOA,IAQTZ,KAAK87B,iBAAmB97B,KAAKW,sBAAsBf,EAAQm8B,YACzD/7B,KAAK67B,aAAa71B,aAMpBhG,KAAKg8B,0CAA2C,EAEhDz3B,EAAAzE,QAAS0E,OAAOxE,KAAK87B,iBAAkB,gBAAiB97B,KAAKi8B,mCAAoCj8B,MACjGuE,EAAAzE,QAAS0E,OAAOxE,KAAK87B,iBAAkB,YAAa97B,KAAKk8B,aAAcl8B,MACvEuE,EAAAzE,QAAS0E,OAAOxE,KAAK87B,iBAAkB,UAAW97B,KAAKm8B,WAAYn8B,MAEnEuE,EAAAzE,QAAS0E,OAAOxE,KAAM,gBAAiBA,KAAKyE,aAAczE,OAG5DQ,GAAGC,SAASjB,EAAZs7B,EAAAh7B,SAOAN,EAAQ48B,aAAe,IAAAC,EAAAv8B,QAAaw8B,EAAAx8B,QAAey8B,QAanD/8B,EAAQg9B,iBAAmB,SACzB1L,EAAS5uB,EAAYF,EAAWQ,GAChC,IAEM8C,EADJwrB,EAAQpF,QAAQkP,UAAU14B,EAAY,aACfs3B,cAAc,GAAG72B,iBAE1C,OAAOH,EADMO,KAAK05B,IAAIj9B,EAAQ48B,aAAaM,aAAap3B,IACpC,KAAM,SAAUtD,IAYtCxC,EAAQm9B,uBAAyB,SAC/Bv2B,EAAQpE,EAAWQ,GAEnB,OAAOA,EADMO,KAAKG,GAAKH,KAAK65B,IAAIx2B,EAAOiT,YAAa,GAChC,KAAM,SAAUrX,IAatCxC,EAAQ+C,mBAAqB,SAASyrB,EAAY9rB,EAChDF,EAAWQ,GAGX,IAFA,IAAIqE,EAAS,EACPvB,EAAc0oB,EAAWrrB,iBACtBsR,EAAI,EAAGM,EAAKjP,EAAYuB,OAAS,EAAGoN,EAAIM,IAAMN,EAAG,CACxD,IAAM4oB,EAAKr8B,GAAGqB,KAAK+4B,UAAUt1B,EAAY2O,GAAI/R,EAAY,aACnD46B,EAAKt8B,GAAGqB,KAAK+4B,UAAUt1B,EAAY2O,EAAI,GAAI/R,EAAY,aAC7D2E,GAAUrH,EAAQ48B,aAAaW,kBAAkBF,EAAIC,GAEvD,OAAOt6B,EAAOqE,EAAQ,IAAK,OAAQ7E,IAYrCxC,EAAQw9B,kBAAoB,SAC1B1R,EAAOvpB,EAAUS,EAAQy6B,GACzB,OAAOz6B,EAAO8oB,EAAM3oB,iBAAkBZ,EAAUk7B,IAWlDz9B,EAAQ+D,aAAe,SAASkQ,GAC9B,GAAgB,eAAZA,EAAItO,MAAyBsO,EAAIypB,SACnC,OAAO,EAGT,IAAIC,EAAUn9B,KAAKs7B,SAWnB,OAV2B,OAAvBt7B,KAAKmB,gBACPg8B,EAAUn9B,KAAKC,aAGbD,KAAKo7B,sBACPgC,EAAAt9B,QAAMu9B,eAAer9B,KAAK+6B,qBAC1B/6B,KAAK+6B,oBAAoBuC,YAAYH,GACrCn9B,KAAKg7B,oBAAoBuC,YAAY9pB,EAAIlO,cAGpC,GAOT/F,EAAQkB,UAAU88B,mBAAqB,WACrC,OAAOx9B,KAAK87B,kBAcdt8B,EAAQkB,UAAUC,sBAAwB,SAASC,EAAOC,KAM1DrB,EAAQkB,UAAU6G,OAAS,SAASH,GAElC0zB,EAAAh7B,QAAyBY,UAAU6G,OAAOxH,KAAKC,KAAMoH,GAErDpH,KAAK67B,aAAat0B,OAAOH,GAEzB,IAAMq2B,EAAUz9B,KAAK87B,iBAAiBp6B,SACtB,OAAZ+7B,GACFA,EAAQC,kBAAkB19B,KAAK87B,kBAGrB,OAAR10B,GACFA,EAAIod,eAAexkB,KAAK87B,mBAU5Bt8B,EAAQkB,UAAUw7B,aAAe,SAASzoB,GAAK,IAAA6T,EAAAtnB,KAC7CA,KAAKmB,cAAgBsS,EAAIN,QACzBnT,KAAK67B,aAAa71B,YAAYC,OAAM,GACpCjG,KAAK29B,wBAEL,IAAMr3B,EAAWtG,KAAKmB,cAAcC,cAEpCd,EAAAR,QAAYS,YAAoBL,IAAboG,GACnBtG,KAAKu7B,gBAAkBh3B,EAAAzE,QAAS0E,OAAO8B,EAAU,SAAU,WACzDghB,EAAKvmB,cAAc,SAAC68B,EAASC,GACb,OAAVA,IACFvW,EAAK2T,uBAAuB6C,UAAYF,EACxCtW,EAAK6T,4BAA8B0C,OAKzC79B,KAAKw7B,qBAAuBj3B,EAAAzE,QAAS0E,OAAOxE,KAAK0B,SAAU,cAAe,WACxE4lB,EAAK4T,uBAAuBqC,YAAYjW,EAAK6T,gCAUjD37B,EAAQkB,UAAUy7B,WAAa,SAAS1oB,GACtCzT,KAAKi7B,uBAAuB8C,UAAUC,IAAI,uBAC1Ch+B,KAAKk7B,uBAAuB+C,WAAW,GAAI,IAE3C,IAAMv5B,EAAQ,IAAA4d,EAAAxiB,QAAoB,cAAeqT,QAASnT,KAAKmB,gBAC/DnB,KAAKwG,cAAc9B,GACnB1E,KAAKmB,cAAgB,KACrBb,EAAAR,QAAYS,OAAgC,OAAzBP,KAAKu7B,iBACxBj7B,EAAAR,QAAYS,OAAqC,OAA9BP,KAAKw7B,sBACxBj3B,EAAAzE,QAAS8J,cAAc5J,KAAKu7B,iBAC5Bh3B,EAAAzE,QAAS8J,cAAc5J,KAAKw7B,sBAC5Bx7B,KAAKu7B,gBAAkB,KACvBv7B,KAAKw7B,qBAAuB,MAQ9Bh8B,EAAQkB,UAAUw9B,mBAAqB,WACrCl+B,KAAKm+B,qBACDn+B,KAAKo7B,sBACPp7B,KAAK+6B,oBAAsB56B,SAASC,cAAc,OAClDJ,KAAK+6B,oBAAoBgD,UAAUC,IAAI,WACvCh+B,KAAKg7B,oBAAsB,IAAAoD,EAAAt+B,SACzBklB,QAAShlB,KAAK+6B,oBACdxL,QAAS,GAAI,GACb8O,YAAa,gBAEfr+B,KAAK0B,SAAS48B,WAAWt+B,KAAKg7B,uBASlCx7B,EAAQkB,UAAUy9B,mBAAqB,WACjCn+B,KAAKo7B,sBACPp7B,KAAK0B,SAAS68B,cAAcv+B,KAAKg7B,qBACA,OAA7Bh7B,KAAK+6B,qBACP/6B,KAAK+6B,oBAAoByD,WAAWC,YAAYz+B,KAAK+6B,qBAEvD/6B,KAAK+6B,oBAAsB,KAC3B/6B,KAAKg7B,oBAAsB,OAS/Bx7B,EAAQkB,UAAUi9B,sBAAwB,WACxC39B,KAAK0+B,wBACL1+B,KAAKi7B,uBAAyB96B,SAASC,cAAc,OACrDJ,KAAKi7B,uBAAuB8C,UAAUC,IAAI,WAC1Ch+B,KAAKi7B,uBAAuB8C,UAAUC,IAAI,wBAC1Ch+B,KAAKk7B,uBAAyB,IAAAkD,EAAAt+B,SAC5BklB,QAAShlB,KAAKi7B,uBACd1L,QAAS,GAAI,IACb8O,YAAa,gBACbM,WAAW,IAEb3+B,KAAK0B,SAAS48B,WAAWt+B,KAAKk7B,yBAQhC17B,EAAQkB,UAAUg+B,sBAAwB,WACJ,OAAhC1+B,KAAKi7B,yBACPj7B,KAAKi7B,uBAAuBuD,WAAWC,YAAYz+B,KAAKi7B,wBACxDj7B,KAAKi7B,uBAAyB,KAC9Bj7B,KAAKk7B,uBAAyB,KAC9Bl7B,KAAKm7B,4BAA8B,OAQvC37B,EAAQkB,UAAU+D,aAAe,WAC/B,IAAM4C,EAASrH,KAAKsH,YACpBtH,KAAKg8B,0CAA2C,EAChDh8B,KAAK87B,iBAAiB3nB,UAAU9M,GAChCrH,KAAKg8B,0CAA2C,EAC3Ch8B,KAAK0B,WAGN2F,EACGrH,KAAKk7B,yBACRl7B,KAAK29B,wBACL39B,KAAKk+B,uBAGPl+B,KAAK67B,aAAa71B,YAAYC,OAAM,GACpCjG,KAAK0B,SAAS68B,cAAcv+B,KAAKk7B,wBACjCl7B,KAAK0+B,wBACL1+B,KAAKm+B,wBAcT3+B,EAAQkB,UAAUK,cAAgB,SAASC,KAO3CxB,EAAQkB,UAAUk+B,kBAAoB,WACpC,OAAO5+B,KAAKi7B,wBAWdz7B,EAAQkB,UAAUu7B,mCAAqC,WACjDj8B,KAAKg8B,0CACPh8B,KAAKmU,UAAUnU,KAAK87B,iBAAiBx0B,wBAK1B9H","file":"modifycircle.min.js","sourcesContent":["/**\n * @type {string} Default WMS version.\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.interaction.MeasureAzimut\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection';\nimport olGeomLineString from 'ol/geom/LineString';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, opt_options) {\n\n  const options = opt_options || {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nol.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), ol.proj.Projection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureAzimut.js","/**\n * @module ngeo.interaction.DrawAzimut\n*/\nimport googAsserts from 'goog/asserts';\nimport olFeature from 'ol/Feature';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent';\nimport olEvents from 'ol/events';\nimport olFunctions from 'ol/functions';\nimport olGeomCircle from 'ol/geom/Circle';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection';\nimport olGeomLineString from 'ol/geom/LineString';\nimport olGeomPoint from 'ol/geom/Point';\nimport olInteractionDraw from 'ol/interaction/Draw';\nimport olInteractionPointer from 'ol/interaction/Pointer';\nimport olLayerVector from 'ol/layer/Vector';\nimport olSourceVector from 'ol/source/Vector';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style !== undefined ?\n      options.style : olInteractionDraw.getDefaultStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nol.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), sketchFeature));\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/DrawAzimut.js","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nvar _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nvar ImageWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var extent = getForViewAndSize(coordinate, resolution, 0,\n      ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n      extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var imageResolution = resolution / pixelRatio;\n\n  var center = getCenter(extent);\n  var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n  var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n  var image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  var params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return _ol_uri_.appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n    imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/ModifyEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature modification start\n   * @event ol.interaction.Modify.Event#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ol.interaction.Modify.Event#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/ModifyEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Modify\n */\nimport {getUid, inherits} from '../index.js';\nimport _ol_Collection_ from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport _ol_interaction_ModifyEventType_ from '../interaction/ModifyEventType.js';\nimport _ol_interaction_Pointer_ from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport _ol_style_Style_ from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ol.interaction.Modify.Event\n * @api\n */\nvar _ol_interaction_Modify_ = function(options) {\n\n  _ol_interaction_Pointer_.call(this, {\n    handleDownEvent: _ol_interaction_Modify_.handleDownEvent_,\n    handleDragEvent: _ol_interaction_Modify_.handleDragEvent_,\n    handleEvent: _ol_interaction_Modify_.handleEvent,\n    handleUpEvent: _ol_interaction_Modify_.handleUpEvent_\n  });\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.primaryAction;\n\n\n  /**\n   * @private\n   * @param {ol.MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n    return _ol_events_condition_.altKeyOnly(mapBrowserEvent) &&\n      _ol_events_condition_.singleClick(mapBrowserEvent);\n  };\n\n  /**\n   * @type {ol.EventsConditionType}\n   * @private\n   */\n  this.deleteCondition_ = options.deleteCondition ?\n    options.deleteCondition : this.defaultDeleteCondition_;\n\n  /**\n   * @type {ol.EventsConditionType}\n   * @private\n   */\n  this.insertVertexCondition_ = options.insertVertexCondition ?\n    options.insertVertexCondition : _ol_events_condition_.always;\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * Segments intersecting {@link this.vertexFeature_} by segment uid.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.vertexSegments_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * Tracks if the next `singleclick` event should be ignored to prevent\n   * accidental deletion right after vertex creation.\n   * @type {boolean}\n   * @private\n   */\n  this.ignoreNextSingleClick_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new RBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = [];\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      _ol_interaction_Modify_.getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'Circle': this.writeCircleGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_\n  };\n\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = null;\n\n  var features;\n  if (options.source) {\n    this.source_ = options.source;\n    features = new _ol_Collection_(this.source_.getFeatures());\n    _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_, this);\n    _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_, this);\n  } else {\n    features = options.features;\n  }\n  if (!features) {\n    throw new Error('The modify interaction requires features or a source');\n  }\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = features;\n\n  this.features_.forEach(this.addFeature_.bind(this));\n  _ol_events_.listen(this.features_, CollectionEventType.ADD,\n      this.handleFeatureAdd_, this);\n  _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n      this.handleFeatureRemove_, this);\n\n  /**\n   * @type {ol.MapBrowserPointerEvent}\n   * @private\n   */\n  this.lastPointerEvent_ = null;\n\n};\n\ninherits(_ol_interaction_Modify_, _ol_interaction_Pointer_);\n\n\n/**\n * @define {number} The segment index assigned to a circle's center when\n * breaking up a cicrle into ModifySegmentDataType segments.\n */\n_ol_interaction_Modify_.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX = 0;\n\n/**\n * @define {number} The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n */\n_ol_interaction_Modify_.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\n_ol_interaction_Modify_.prototype.addFeature_ = function(feature) {\n  var geometry = feature.getGeometry();\n  if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n    this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n  }\n  var map = this.getMap();\n  if (map && map.isRendered() && this.getActive()) {\n    this.handlePointerAtPixel_(this.lastPixel_, map);\n  }\n  _ol_events_.listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\n_ol_interaction_Modify_.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new _ol_interaction_Modify_.Event(\n        _ol_interaction_ModifyEventType_.MODIFYSTART, this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\n_ol_interaction_Modify_.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  _ol_events_.unlisten(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\n_ol_interaction_Modify_.prototype.removeFeatureSegmentData_ = function(feature) {\n  var rBush = this.rBush_;\n  var /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n      /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n      function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n  for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_interaction_Modify_.prototype.setActive = function(active) {\n  if (this.vertexFeature_ && !active) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  _ol_interaction_Pointer_.prototype.setActive.call(this, active);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_interaction_Modify_.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  _ol_interaction_Pointer_.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.source.Vector.Event} event Event.\n * @private\n */\n_ol_interaction_Modify_.prototype.handleSourceAdd_ = function(event) {\n  if (event.feature) {\n    this.features_.push(event.feature);\n  }\n};\n\n\n/**\n * @param {ol.source.Vector.Event} event Event.\n * @private\n */\n_ol_interaction_Modify_.prototype.handleSourceRemove_ = function(event) {\n  if (event.feature) {\n    this.features_.remove(event.feature);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\n_ol_interaction_Modify_.prototype.handleFeatureAdd_ = function(evt) {\n  this.addFeature_(/** @type {ol.Feature} */ (evt.element));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\n_ol_interaction_Modify_.prototype.handleFeatureChange_ = function(evt) {\n  if (!this.changingFeature_) {\n    var feature = /** @type {ol.Feature} */ (evt.target);\n    this.removeFeature_(feature);\n    this.addFeature_(feature);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\n_ol_interaction_Modify_.prototype.handleFeatureRemove_ = function(evt) {\n  var feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\n_ol_interaction_Modify_.prototype.writePointGeometry_ = function(feature, geometry) {\n  var coordinates = geometry.getCoordinates();\n  var segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\n_ol_interaction_Modify_.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  var points = geometry.getCoordinates();\n  var coordinates, i, ii, segmentData;\n  for (i = 0, ii = points.length; i < ii; ++i) {\n    coordinates = points[i];\n    segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n      feature: feature,\n      geometry: geometry,\n      depth: [i],\n      index: i,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\n_ol_interaction_Modify_.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  var coordinates = geometry.getCoordinates();\n  var i, ii, segment, segmentData;\n  for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    segment = coordinates.slice(i, i + 2);\n    segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: i,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\n_ol_interaction_Modify_.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  var lines = geometry.getCoordinates();\n  var coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = lines.length; j < jj; ++j) {\n    coordinates = lines[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\n_ol_interaction_Modify_.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  var rings = geometry.getCoordinates();\n  var coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\n_ol_interaction_Modify_.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  var polygons = geometry.getCoordinates();\n  var coordinates, i, ii, j, jj, k, kk, rings, segment, segmentData;\n  for (k = 0, kk = polygons.length; k < kk; ++k) {\n    rings = polygons[k];\n    for (j = 0, jj = rings.length; j < jj; ++j) {\n      coordinates = rings[j];\n      for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segment = coordinates.slice(i, i + 2);\n        segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j, k],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * We convert a circle into two segments.  The segment at index\n * {@link ol.interaction.Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX} is the\n * circle's center (a point).  The segment at index\n * {@link ol.interaction.Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX} is\n * the circumference, and is not a line segment.\n *\n * @param {ol.Feature} feature Feature.\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\n_ol_interaction_Modify_.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  var coordinates = geometry.getCenter();\n  var centerSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: _ol_interaction_Modify_.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  var circumferenceSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: _ol_interaction_Modify_.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  var featureSegments = [centerSegmentData, circumferenceSegmentData];\n  centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n  this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n  this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\n_ol_interaction_Modify_.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  var i, geometries = geometry.getGeometriesArray();\n  for (i = 0; i < geometries.length; ++i) {\n    this.SEGMENT_WRITERS_[geometries[i].getType()].call(\n        this, feature, geometries[i]);\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\n_ol_interaction_Modify_.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  var vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    var geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\n_ol_interaction_Modify_.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Modify}\n * @private\n */\n_ol_interaction_Modify_.handleDownEvent_ = function(evt) {\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  var pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  var vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    var insertVertices = [];\n    var geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    var vertex = geometry.getCoordinates();\n    var vertexExtent = boundingExtent([vertex]);\n    var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    var componentSegments = {};\n    segmentDataMatches.sort(_ol_interaction_Modify_.compareIndexes_);\n    for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      var segmentDataMatch = segmentDataMatches[i];\n      var segment = segmentDataMatch.segment;\n      var uid = getUid(segmentDataMatch.feature);\n      var depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === _ol_interaction_Modify_.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        var closestVertex = _ol_interaction_Modify_.closestOnSegmentData_(pixelCoordinate, segmentDataMatch);\n        if (_ol_coordinate_.equals(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (_ol_coordinate_.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (_ol_coordinate_.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (var j = insertVertices.length - 1; j >= 0; --j) {\n      this.insertVertex_.apply(this, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ol.interaction.Modify}\n * @private\n */\n_ol_interaction_Modify_.handleDragEvent_ = function(evt) {\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  var vertex = evt.coordinate;\n  for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    var dragSegment = this.dragSegments_[i];\n    var segmentData = dragSegment[0];\n    var depth = segmentData.depth;\n    var geometry = segmentData.geometry;\n    var coordinates;\n    var segment = segmentData.segment;\n    var index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === _ol_interaction_Modify_.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX) {\n          this.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this.changingFeature_ = true;\n          geometry.setRadius(_ol_coordinate_.distance(geometry.getCenter(), vertex));\n          this.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Modify}\n * @private\n */\n_ol_interaction_Modify_.handleUpEvent_ = function(evt) {\n  var segmentData;\n  var geometry;\n  for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n    segmentData = this.dragSegments_[i][0];\n    geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      var coordinates = geometry.getCenter();\n      var centerSegmentData = segmentData.featureSegments[0];\n      var circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this.rBush_.update(boundingExtent(segmentData.segment),\n          segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new _ol_interaction_Modify_.Event(\n        _ol_interaction_ModifyEventType_.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Modify}\n * @api\n */\n_ol_interaction_Modify_.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  var handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return _ol_interaction_Pointer_.handleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\n_ol_interaction_Modify_.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\n_ol_interaction_Modify_.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  var sortByDistance = function(a, b) {\n    return _ol_interaction_Modify_.pointDistanceToSegmentDataSquared_(pixelCoordinate, a) -\n        _ol_interaction_Modify_.pointDistanceToSegmentDataSquared_(pixelCoordinate, b);\n  };\n\n  var box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n      map.getView().getResolution() * this.pixelTolerance_);\n\n  var rBush = this.rBush_;\n  var nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    var node = nodes[0];\n    var closestSegment = node.segment;\n    var vertex = _ol_interaction_Modify_.closestOnSegmentData_(pixelCoordinate, node);\n    var vertexPixel = map.getPixelFromCoordinate(vertex);\n    var dist = _ol_coordinate_.distance(pixel, vertexPixel);\n    if (dist <= this.pixelTolerance_) {\n      var vertexSegments = {};\n\n      if (node.geometry.getType() === GeometryType.CIRCLE &&\n      node.index === _ol_interaction_Modify_.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        this.snappedToVertex_ = true;\n        this.createOrUpdateVertexFeature_(vertex);\n      } else {\n        var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        var squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n        var squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n        var segment;\n        for (var i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((_ol_coordinate_.equals(closestSegment[0], segment[0]) &&\n              _ol_coordinate_.equals(closestSegment[1], segment[1]) ||\n              (_ol_coordinate_.equals(closestSegment[0], segment[1]) &&\n              _ol_coordinate_.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n      }\n\n      vertexSegments[getUid(closestSegment)] = true;\n      this.vertexSegments_ = vertexSegments;\n      return;\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {ol.Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {ol.ModifySegmentDataType} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\n_ol_interaction_Modify_.pointDistanceToSegmentDataSquared_ = function(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    var circleGeometry = /** @type {ol.geom.Circle} */ (geometry);\n\n    if (segmentData.index === _ol_interaction_Modify_.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n      var distanceToCenterSquared =\n            _ol_coordinate_.squaredDistance(circleGeometry.getCenter(), pointCoordinates);\n      var distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return _ol_coordinate_.squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n};\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {ol.Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {ol.ModifySegmentDataType} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {ol.Coordinate} The point closest to the specified line segment.\n */\n_ol_interaction_Modify_.closestOnSegmentData_ = function(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === _ol_interaction_Modify_.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return _ol_coordinate_.closestOnSegment(pointCoordinates, segmentData.segment);\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} segmentData Segment data.\n * @param {ol.Coordinate} vertex Vertex.\n * @private\n */\n_ol_interaction_Modify_.prototype.insertVertex_ = function(segmentData, vertex) {\n  var segment = segmentData.segment;\n  var feature = segmentData.feature;\n  var geometry = segmentData.geometry;\n  var depth = segmentData.depth;\n  var index = /** @type {number} */ (segmentData.index);\n  var coordinates;\n\n  while (vertex.length < geometry.getStride()) {\n    vertex.push(0);\n  }\n\n  switch (geometry.getType()) {\n    case GeometryType.MULTI_LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.MULTI_POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates.splice(index + 1, 0, vertex);\n      break;\n    default:\n      return;\n  }\n\n  this.setGeometryCoordinates_(geometry, coordinates);\n  var rTree = this.rBush_;\n  rTree.remove(segmentData);\n  this.updateSegmentIndices_(geometry, index, depth, 1);\n  var newSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    segment: [segment[0], vertex],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index\n  });\n  rTree.insert(boundingExtent(newSegmentData.segment),\n      newSegmentData);\n  this.dragSegments_.push([newSegmentData, 1]);\n\n  var newSegmentData2 = /** @type {ol.ModifySegmentDataType} */ ({\n    segment: [vertex, segment[1]],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index + 1\n  });\n  rTree.insert(boundingExtent(newSegmentData2.segment),\n      newSegmentData2);\n  this.dragSegments_.push([newSegmentData2, 0]);\n  this.ignoreNextSingleClick_ = true;\n};\n\n/**\n * Removes the vertex currently being pointed.\n * @return {boolean} True when a vertex was removed.\n * @api\n */\n_ol_interaction_Modify_.prototype.removePoint = function() {\n  if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n    var evt = this.lastPointerEvent_;\n    this.willModifyFeatures_(evt);\n    this.removeVertex_();\n    this.dispatchEvent(new _ol_interaction_Modify_.Event(\n        _ol_interaction_ModifyEventType_.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes a vertex from all matching features.\n * @return {boolean} True when a vertex was removed.\n * @private\n */\n_ol_interaction_Modify_.prototype.removeVertex_ = function() {\n  var dragSegments = this.dragSegments_;\n  var segmentsByFeature = {};\n  var deleted = false;\n  var component, coordinates, dragSegment, geometry, i, index, left;\n  var newIndex, right, segmentData, uid;\n  for (i = dragSegments.length - 1; i >= 0; --i) {\n    dragSegment = dragSegments[i];\n    segmentData = dragSegment[0];\n    uid = getUid(segmentData.feature);\n    if (segmentData.depth) {\n      // separate feature components\n      uid += '-' + segmentData.depth.join('-');\n    }\n    if (!(uid in segmentsByFeature)) {\n      segmentsByFeature[uid] = {};\n    }\n    if (dragSegment[1] === 0) {\n      segmentsByFeature[uid].right = segmentData;\n      segmentsByFeature[uid].index = segmentData.index;\n    } else if (dragSegment[1] == 1) {\n      segmentsByFeature[uid].left = segmentData;\n      segmentsByFeature[uid].index = segmentData.index + 1;\n    }\n\n  }\n  for (uid in segmentsByFeature) {\n    right = segmentsByFeature[uid].right;\n    left = segmentsByFeature[uid].left;\n    index = segmentsByFeature[uid].index;\n    newIndex = index - 1;\n    if (left !== undefined) {\n      segmentData = left;\n    } else {\n      segmentData = right;\n    }\n    if (newIndex < 0) {\n      newIndex = 0;\n    }\n    geometry = segmentData.geometry;\n    coordinates = geometry.getCoordinates();\n    component = coordinates;\n    deleted = false;\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        if (coordinates[segmentData.depth[0]].length > 2) {\n          coordinates[segmentData.depth[0]].splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.LINE_STRING:\n        if (coordinates.length > 2) {\n          coordinates.splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.MULTI_POLYGON:\n        component = component[segmentData.depth[1]];\n        /* falls through */\n      case GeometryType.POLYGON:\n        component = component[segmentData.depth[0]];\n        if (component.length > 4) {\n          if (index == component.length - 1) {\n            index = 0;\n          }\n          component.splice(index, 1);\n          deleted = true;\n          if (index === 0) {\n            // close the ring again\n            component.pop();\n            component.push(component[0]);\n            newIndex = component.length - 1;\n          }\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (deleted) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n      var segments = [];\n      if (left !== undefined) {\n        this.rBush_.remove(left);\n        segments.push(left.segment[0]);\n      }\n      if (right !== undefined) {\n        this.rBush_.remove(right);\n        segments.push(right.segment[1]);\n      }\n      if (left !== undefined && right !== undefined) {\n        var newSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n          depth: segmentData.depth,\n          feature: segmentData.feature,\n          geometry: segmentData.geometry,\n          index: newIndex,\n          segment: segments\n        });\n        this.rBush_.insert(boundingExtent(newSegmentData.segment),\n            newSegmentData);\n      }\n      this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n      if (this.vertexFeature_) {\n        this.overlay_.getSource().removeFeature(this.vertexFeature_);\n        this.vertexFeature_ = null;\n      }\n      dragSegments.length = 0;\n    }\n\n  }\n  return deleted;\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\n_ol_interaction_Modify_.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {number} index Index.\n * @param {Array.<number>|undefined} depth Depth.\n * @param {number} delta Delta (1 or -1).\n * @private\n */\n_ol_interaction_Modify_.prototype.updateSegmentIndices_ = function(\n    geometry, index, depth, delta) {\n  this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n    if (segmentDataMatch.geometry === geometry &&\n        (depth === undefined || segmentDataMatch.depth === undefined ||\n        equals(segmentDataMatch.depth, depth)) &&\n        segmentDataMatch.index > index) {\n      segmentDataMatch.index += delta;\n    }\n  });\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\n_ol_interaction_Modify_.getDefaultStyleFunction = function() {\n  var style = _ol_style_Style_.createDefaultEditing();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Modify} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.ModifyEvent}\n * @param {ol.interaction.ModifyEventType} type Type.\n * @param {ol.Collection.<ol.Feature>} features The features modified.\n * @param {ol.MapBrowserPointerEvent} mapBrowserPointerEvent Associated\n *     {@link ol.MapBrowserPointerEvent}.\n */\n_ol_interaction_Modify_.Event = function(type, features, mapBrowserPointerEvent) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being modified.\n   * @type {ol.Collection.<ol.Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * Associated {@link ol.MapBrowserEvent}.\n   * @type {ol.MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserPointerEvent;\n};\ninherits(_ol_interaction_Modify_.Event, Event);\nexport default _ol_interaction_Modify_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Modify.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.CustomEvent\n*/\nimport olBase from 'ol';\nimport olEventsEvent from 'ol/events/Event';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nvar TileWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var params = options.params || {};\n\n  var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, params) {\n\n  var urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    var tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  var url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    var index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return _ol_uri_.appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  var i = 0;\n  var res = [];\n  for (var key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo';\nimport olCollection from 'ol/Collection';\n\n\nngeoBase.module.value('ngeoDataSources', new olCollection());\n\n\n/**\n * @typedef {!ol.Collection.<!ngeo.datasource.DataSource>}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olLayerVector from 'ol/layer/Vector';\nimport olObj from 'ol/obj';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleStyle from 'ol/style/Style';\nimport googAsserts from 'goog/asserts';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {};\nexports.assertNumber = function(value, opt_message, var_args) {};\nexports.assertString = function(value, opt_message, var_args) {};\nexports.assertFunction = function(value, opt_message, var_args) {};\nexports.assertObject = function(value, opt_message, var_args) {};\nexports.assertArray = function(value, opt_message, var_args) {};\nexports.assertBoolean = function(value, opt_message, var_args) {};\nexports.assertElement = function(value, opt_message, var_args) {};\nexports.assertInstanceof = function(value, type, opt_message, var_args) {};\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.prod.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr';\nimport ngeoMapDirective from 'ngeo/map/directive';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr';\nimport ngeoMapRecenter from 'ngeo/map/recenter';\nimport ngeoMapResizemap from 'ngeo/map/resizemap';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport ngeoCustomEvent from 'ngeo/CustomEvent';\nimport olBase from 'ol';\nimport olObservable from 'ol/Observable';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerLayer from 'ol/layer/Layer';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\nimport olSourceTileWMS from 'ol/source/TileWMS';\nimport olSourceWMTS from 'ol/source/WMTS';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module app.modifycircle\n*/\nconst exports = {};\n\nimport 'examples/modifycircle.css';\nimport './common_dependencies.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle';\n\nimport olMap from 'ol/Map';\nimport olView from 'ol/View';\nimport olLayerTile from 'ol/layer/Tile';\nimport olLayerVector from 'ol/layer/Vector';\nimport olSourceOSM from 'ol/source/OSM';\nimport olSourceVector from 'ol/source/Vector';\nimport olGeomCircle from 'ol/geom/Circle';\nimport olCollection from 'ol/Collection';\nimport olFeature from 'ol/Feature';\nimport ngeoMapModule from 'ngeo/map/module';\n\n\n/** @type {!angular.Module} **/\nconst module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name\n]);\n\n\n/**\n * @constructor\n *//* @ngInject\n */\napp.MainController = function() {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [-10997148, 4569099],\n      zoom: 4\n    })\n  });\n\n  const map = this.map;\n\n  const circle = new olGeomCircle([-10691093, 4966327], 465000);\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.features = new olCollection();\n\n  const circleFeature = new olFeature({\n    geometry: ol.geom.Polygon.fromCircle(circle),\n    color: '#000000',\n    label: 'Circle 1',\n    opacity: '0.5',\n    stroke: '2'\n  });\n\n  circleFeature.set(ngeo.FeatureProperties.IS_CIRCLE, true);\n  this.features.push(circleFeature);\n\n  const vectorSource = new olSourceVector({\n    features: this.features\n  });\n  const vectorLayer = new olLayerVector({\n    source: vectorSource\n  });\n\n  // Use vectorLayer.setMap(map) rather than map.addLayer(vectorLayer). This\n  // makes the vector layer \"unmanaged\", meaning that it is always on top.\n  vectorLayer.setMap(map);\n\n  /**\n   * @type {ngeo.interaction.ModifyCircle}\n   * @export\n   */\n  this.interaction = new ngeoInteractionModifyCircle(\n    /** @type {olx.interaction.ModifyOptions} */({\n      features: this.features\n    }));\n\n  const interaction = this.interaction;\n  interaction.setActive(true);\n  map.addInteraction(interaction);\n\n};\n\n\nmodule.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/modifycircle.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap';\n\nimport olEvents from 'ol/events';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.interaction.ModifyCircle\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut';\nimport olBase from 'ol';\nimport olCollection from 'ol/Collection';\nimport olFeature from 'ol/Feature';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent';\nimport olCoordinate from 'ol/coordinate';\nimport olEvents from 'ol/events';\nimport olExtent from 'ol/extent';\nimport olGeomCircle from 'ol/geom/Circle';\nimport olGeomLineString from 'ol/geom/LineString';\nimport olGeomPoint from 'ol/geom/Point';\nimport olGeomPolygon from 'ol/geom/Polygon';\nimport olInteractionModify from 'ol/interaction/Modify';\nimport olInteractionPointer from 'ol/interaction/Pointer';\nimport olLayerVector from 'ol/layer/Vector';\nimport olSourceVector from 'ol/source/Vector';\nimport olStructsRBush from 'ol/structs/RBush';\nimport olStyleStyle from 'ol/style/Style';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      exports.getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(this.addFeature_, this);\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeo.FeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifystart'), this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry =\n      /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = olGeomPolygon.fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeo.FeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifyend'), this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultStyleFunction = function() {\n  const style = olStyleStyle.createDefaultEditing();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/ModifyCircle.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources';\n\nimport olEvents from 'ol/events';\nimport olObservable from 'ol/Observable';\nimport olView from 'ol/View';\nimport googAsserts from 'goog/asserts';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\nngeoBase.module.service(\n  'ngeoSyncDataSourcesMap', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olEvents from 'ol/events';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo';\nimport olArray from 'ol/array';\nimport olMap from 'ol/Map';\nimport olEvents from 'ol/events';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  var multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  var flatCoordinates = this.flatCoordinates;\n  var stride = this.stride;\n  var i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  var n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  var point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  var flatCoordinates = this.flatCoordinates;\n  var layout = this.layout;\n  var stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  var points = [];\n  var i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    var point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  var flatCoordinates = this.flatCoordinates;\n  var stride = this.stride;\n  var i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n        this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nvar OSM = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  var crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  var url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nvar XYZ = function(opt_options) {\n  var options = opt_options || {};\n  var projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  var multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  var lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  var flatCoordinates = this.flatCoordinates;\n  var ends = this.ends_;\n  var layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  var lineStrings = [];\n  var offset = 0;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  var midpoints = [];\n  var flatCoordinates = this.flatCoordinates;\n  var offset = 0;\n  var ends = this.ends_;\n  var stride = this.stride;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var midpoint = _ol_geom_flat_interpolate_.lineString(\n        flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n  var simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n      GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = _ol_geom_flat_deflate_.coordinatess(\n        this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var ends = [];\n  var i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    var lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  var ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    var offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  var multiPolygon = new MultiPolygon(null);\n\n  var len = this.endss_.length;\n  var newEndss = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  var flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n      flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    var flatCenters = _ol_geom_flat_center_.linearRingss(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  var interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n      this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    var flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n  var simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n      GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  var offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    var prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  var ends = this.endss_[index].slice();\n  var end = ends[ends.length - 1];\n  if (offset !== 0) {\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  var polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  var layout = this.layout;\n  var flatCoordinates = this.flatCoordinates;\n  var endss = this.endss_;\n  var polygons = [];\n  var offset = 0;\n  var i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    var polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n        layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = _ol_geom_flat_deflate_.coordinatesss(\n        this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var endss = [];\n  var i, ii, ends;\n  for (i = 0, ii = polygons.length; i < ii; ++i) {\n    var polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    var offset = flatCoordinates.length;\n    ends = polygon.getEnds();\n    var j, jj;\n    for (j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nvar GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  var clonedGeometries = [];\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  var i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  var i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  var geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    _ol_obj_.clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  var key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    var simplifiedGeometries = [];\n    var geometries = this.geometries_;\n    var simplified = false;\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      var geometry = geometries[i];\n      var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      var simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  var anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n      GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 72\n// module chunks = 0 1 2 3 4 5 7 9 10","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport _ol_interaction_Pointer_ from '../interaction/Pointer.js';\nimport _ol_interaction_Property_ from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport _ol_style_Style_ from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nvar Draw = function(options) {\n\n  _ol_interaction_Pointer_.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  var geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        var circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        var squaredLength = _ol_coordinate_.squaredDistance(\n            coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      var Constructor;\n      var mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        var geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction()\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n      BaseObject.getChangeEventType(_ol_interaction_Property_.ACTIVE),\n      this.updateState_, this);\n\n};\n\ninherits(Draw, _ol_interaction_Pointer_);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  var styles = _ol_style_Style_.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  _ol_interaction_Pointer_.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  var pass = true;\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (event.type === MapBrowserEventType.POINTERMOVE) {\n    pass = this.handlePointerMove_(event);\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n  return _ol_interaction_Pointer_.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  var pass = true;\n\n  this.handlePointerMove_(event);\n\n  var circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    var downPx = this.downPx_;\n    var clickPx = event.pixel;\n    var dx = downPx[0] - clickPx[0];\n    var dy = downPx[1] - clickPx[1];\n    var squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  var at = false;\n  if (this.sketchFeature_) {\n    var potentiallyDone = false;\n    var potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      var map = event.map;\n      for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        var finishCoordinate = potentiallyFinishCoordinates[i];\n        var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        var pixel = event.pixel;\n        var dx = pixel[0] - finishPixel[0];\n        var dy = pixel[1] - finishPixel[1];\n        var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  var coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    var sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  var start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n    if (this.mode_ === Draw.Mode_.CIRCLE) {\n      this.sketchLineCoords_ = this.sketchCoords_;\n    }\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n  }\n  var geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  var coordinate = event.coordinate;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    var sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  var sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    var ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  var coordinate = event.coordinate;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var done;\n  var coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  var sketchFeature = this.abortDrawing_();\n  var coordinates = this.sketchCoords_;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  var sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  var geometry = feature.getGeometry();\n  var lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  var sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  var overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  var map = this.getMap();\n  var active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      var center = coordinates[0];\n      var end = coordinates[1];\n      var radius = Math.sqrt(\n          _ol_coordinate_.squaredDistance(center, end));\n      var geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      var angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(coordinates);\n      var geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  var radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  var circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  var flatCoordinates = this.flatCoordinates;\n  var dx = x - flatCoordinates[0];\n  var dy = y - flatCoordinates[1];\n  var squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    var i;\n    if (squaredDistance === 0) {\n      for (i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      var delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  var flatCoordinates = this.flatCoordinates;\n  var dx = x - flatCoordinates[0];\n  var dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  var flatCoordinates = this.flatCoordinates;\n  var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  var circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    var center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  var stride = this.stride;\n  var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  var flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  var i;\n  for (i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = _ol_geom_flat_deflate_.coordinate(\n        flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    var i, ii;\n    for (i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 80\n// module chunks = 0 1 2 6 7 8 9 11 14","/**\n * @module ngeo.interaction.Measure\n*/\nimport ngeoCustomEvent from 'ngeo/CustomEvent';\nimport googAsserts from 'goog/asserts';\nimport olDom from 'ol/dom';\nimport olFeature from 'ol/Feature';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent';\nimport olOverlay from 'ol/Overlay';\nimport olSphere from 'ol/sphere';\nimport olEvents from 'ol/events';\nimport olInteractionInteraction from 'ol/interaction/Interaction';\nimport olLayerVector from 'ol/layer/Vector';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleFill from 'ol/style/Fill';\nimport olStyleStroke from 'ol/style/Stroke';\nimport olStyleStyle from 'ol/style/Style';\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nngeo.interaction.MeasureBaseOptions;\n\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ?\n    options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nol.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\nexports.SPHERE_WGS84 = new olSphere(olProjEPSG4326.RADIUS);\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(\n  polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (\n    polygon.clone().transform(projection, 'EPSG:4326'));\n  const coordinates = geom.getLinearRing(0).getCoordinates();\n  const area = Math.abs(exports.SPHERE_WGS84.geodesicArea(coordinates));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(\n  circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection,\n  precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = ol.proj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = ol.proj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += exports.SPHERE_WGS84.haversineDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(\n  point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  googAsserts.assert(this.changeEventKey_ !== null);\n  googAsserts.assert(this.postcomposeEventKey_ !== null);\n  olEvents.unlistenByKey(this.changeEventKey_);\n  olEvents.unlistenByKey(this.postcomposeEventKey_);\n  this.changeEventKey_ = null;\n  this.postcomposeEventKey_ = null;\n};\n\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js"],"sourceRoot":""}