{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.prod.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./examples/simple.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js"],"names":["__webpack_require__","d","__webpack_exports__","DEFAULT_WMS_VERSION","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","call","this","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","Object","ol","prototype","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","undefined","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","forEach","unlistenByKey","ol_Image","ImageWMS","opt_options","options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","assign","x","Math","floor","y","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","listen","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","bbox","axisOrientation","getAxisOrientation","substr","join","uri","appendParams","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","exports","type","detail","arguments","length","_Event2","default","_ol2","inherits","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","i","res","key","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","_ngeo","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","name","_createClass","value","get","set","_ngeo2","module","_Collection2","featureUidToGroupIndex_","groups_","source_","_Vector4","useSpatialIndex","layer_","_Vector2","source","style","styleFunction_","bind","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","_asserts2","assert","featureUid","getUid","toString","features","removeFeature","clear","group","_obj2","isEmpty","getLayer","getFeatureOverlay","push","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","map","setMap","setStyle","createFunction","angular","service","requires","condition","opt_message","var_args","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","getLayers","item","layer","mapUid","previous","setAt","removeAt","insertAt","event","_CustomEvent2","current","dispatchEvent","updateDimensions","dimensions","baseBgLayer","layers","getArray","assertInstanceof","_Layer2","hasUpdates","updatedDimensions","getSource","refresh","directive_","$window","ngeoSyncDataSourcesMap","restrict","link","scope","element","attrs","prop","$eval","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","_events2","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","view","getView","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","evt","target","_View2","_this","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","e","Error","code","app","_module2","MainController","_Tile2","_OSM2","zoom","controller","manager","index","manager_","features_","index_","setFeatures","unlisten","handleFeatureAdd_","handleFeatureRemove_","$scope","$element","$attrs","mapExpr","recenter","attr","getSize","fit","setZoom","on","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","$watch","newVal","oldVal","cancelAnimationFrame","templateUrl","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","goog","zoomLevels","keys","newLength","Number","sort","_array2","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","_this2","$applyAsync","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_0__index_js__","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction"],"mappings":"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","file":"simple.min.js","sourcesContent":["/**\n * @type {string} Default WMS version.\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nvar _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nvar ImageWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var extent = getForViewAndSize(coordinate, resolution, 0,\n      ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n      extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var imageResolution = resolution / pixelRatio;\n\n  var center = getCenter(extent);\n  var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n  var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n  var image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  var params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return _ol_uri_.appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n    imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.CustomEvent\n*/\nimport olBase from 'ol';\nimport olEventsEvent from 'ol/events/Event';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nvar TileWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var params = options.params || {};\n\n  var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, params) {\n\n  var urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    var tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  var url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    var index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return _ol_uri_.appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  var i = 0;\n  var res = [];\n  for (var key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo';\nimport olCollection from 'ol/Collection';\n\n\nngeoBase.module.value('ngeoDataSources', new olCollection());\n\n\n/**\n * @typedef {!ol.Collection.<!ngeo.datasource.DataSource>}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olLayerVector from 'ol/layer/Vector';\nimport olObj from 'ol/obj';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleStyle from 'ol/style/Style';\nimport googAsserts from 'goog/asserts';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {};\nexports.assertNumber = function(value, opt_message, var_args) {};\nexports.assertString = function(value, opt_message, var_args) {};\nexports.assertFunction = function(value, opt_message, var_args) {};\nexports.assertObject = function(value, opt_message, var_args) {};\nexports.assertArray = function(value, opt_message, var_args) {};\nexports.assertBoolean = function(value, opt_message, var_args) {};\nexports.assertElement = function(value, opt_message, var_args) {};\nexports.assertInstanceof = function(value, type, opt_message, var_args) {};\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.prod.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr';\nimport ngeoMapDirective from 'ngeo/map/directive';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr';\nimport ngeoMapRecenter from 'ngeo/map/recenter';\nimport ngeoMapResizemap from 'ngeo/map/resizemap';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport ngeoCustomEvent from 'ngeo/CustomEvent';\nimport olBase from 'ol';\nimport olObservable from 'ol/Observable';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerLayer from 'ol/layer/Layer';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\nimport olSourceTileWMS from 'ol/source/TileWMS';\nimport olSourceWMTS from 'ol/source/WMTS';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap';\n\nimport olEvents from 'ol/events';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources';\n\nimport olEvents from 'ol/events';\nimport olObservable from 'ol/Observable';\nimport olView from 'ol/View';\nimport googAsserts from 'goog/asserts';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\nngeoBase.module.service(\n  'ngeoSyncDataSourcesMap', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module app.simple\n*/\nconst exports = {};\n\nimport 'examples/simple.css';\nimport './common_dependencies.js';\nimport olMap from 'ol/Map';\n\nimport olView from 'ol/View';\nimport olLayerTile from 'ol/layer/Tile';\nimport olSourceOSM from 'ol/source/OSM';\nimport ngeoMapModule from 'ngeo/map/module';\n\n\n/** @type {!angular.Module} **/\napp.module = angular.module('app', [\n  ngeoMapModule.name\n]);\n\n\n/**\n * @constructor\n *//* @ngInject\n */\napp.MainController = function() {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [0, 0],\n      zoom: 4\n    })\n  });\n};\n\n\napp.module.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/simple.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olEvents from 'ol/events';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo';\nimport olArray from 'ol/array';\nimport olMap from 'ol/Map';\nimport olEvents from 'ol/events';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nvar OSM = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  var crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  var url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nvar XYZ = function(opt_options) {\n  var options = opt_options || {};\n  var projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30"],"sourceRoot":""}